<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classre_1_1_camera" kind="class" language="C++" prot="public">
    <compoundname>re::Camera</compoundname>
    <includes refid="camera_8h" local="no">camera.h</includes>
    <innerclass refid="unionre_1_1_camera_1_1_projection_value" prot="private">re::Camera::ProjectionValue</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classre_1_1_camera_1a5b11b8f8e08a54da964e88a4d9551de5" prot="private" static="no" strong="yes">
        <type></type>
        <name>ProjectionType</name>
        <qualifiedname>re::Camera::ProjectionType</qualifiedname>
        <enumvalue id="classre_1_1_camera_1a5b11b8f8e08a54da964e88a4d9551de5aa80420eef88d11f77532f1b9cb467fa3" prot="private">
          <name>Perspective</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_camera_1a5b11b8f8e08a54da964e88a4d9551de5a03424250432f2aa71de95579d2c0eaeb" prot="private">
          <name>Orthographic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_camera_1a5b11b8f8e08a54da964e88a4d9551de5abecf758bf94079dcbe8a7770928d2ce3" prot="private">
          <name>OrthographicWindow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_camera_1a5b11b8f8e08a54da964e88a4d9551de5a90589c47f06eb971d548591f23c285af" prot="private">
          <name>Custom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="44" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="45" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classre_1_1_camera_1a9a746e3741cdd75d51c5e5509ff48075" prot="private" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 re::Camera::m_viewTransform</definition>
        <argsstring></argsstring>
        <name>m_viewTransform</name>
        <qualifiedname>re::Camera::m_viewTransform</qualifiedname>
        <initializer>{ 1.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="70" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_camera_1aa5b2b01a6025cbc56141a7bd479e518d" prot="private" static="no" mutable="no">
        <type>ProjectionValue</type>
        <definition>ProjectionValue re::Camera::m_projectionValue</definition>
        <argsstring></argsstring>
        <name>m_projectionValue</name>
        <qualifiedname>re::Camera::m_projectionValue</qualifiedname>
        <initializer>{ 1.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="71" column="21" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_camera_1a86732f0482819c2c9ba3da15da2ecee1" prot="private" static="no" mutable="no">
        <type>ProjectionType</type>
        <definition>ProjectionType re::Camera::m_projectionType</definition>
        <argsstring></argsstring>
        <name>m_projectionType</name>
        <qualifiedname>re::Camera::m_projectionType</qualifiedname>
        <initializer>= ProjectionType::Orthographic</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="72" column="20" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_camera_1aa5afaf4ba9bbdc592c1c4159f69a24da" prot="private" static="no" mutable="no">
        <type>glm::vec2</type>
        <definition>glm::vec2 re::Camera::m_viewportOffset</definition>
        <argsstring></argsstring>
        <name>m_viewportOffset</name>
        <qualifiedname>re::Camera::m_viewportOffset</qualifiedname>
        <initializer>= glm::vec2{ 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="73" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_camera_1a39250e1b79d2d8571f9c12eae8f6cb61" prot="private" static="no" mutable="no">
        <type>glm::vec2</type>
        <definition>glm::vec2 re::Camera::m_viewportSize</definition>
        <argsstring></argsstring>
        <name>m_viewportSize</name>
        <qualifiedname>re::Camera::m_viewportSize</qualifiedname>
        <initializer>= glm::vec2{ 1, 1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="74" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classre_1_1_camera_1aa8ab806874e69ead344abef1c5e76aa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class RenderPass</definition>
        <argsstring></argsstring>
        <name>RenderPass</name>
        <qualifiedname>re::Camera::RenderPass</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_render_pass" kindref="compound">RenderPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="75" column="18" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classre_1_1_camera_1aa6dc5e0e6087fb3d61065ba07ca24bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::Camera::Camera</definition>
        <argsstring>()</argsstring>
        <name>Camera</name>
        <qualifiedname>re::Camera::Camera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>默认是正交投影：eye:(0,0,0)，看向z负轴，使用正交投影，[-1,1] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="22" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a9bc08ed43cfde53e64f532c5a2301c5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::Camera::~Camera</definition>
        <argsstring>()</argsstring>
        <name>~Camera</name>
        <qualifiedname>re::Camera::~Camera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a1174d6a9e1d822e169d8fc833de78e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setLookAt</definition>
        <argsstring>(glm::vec3 eye, glm::vec3 at, glm::vec3 up)</argsstring>
        <name>setLookAt</name>
        <qualifiedname>re::Camera::setLookAt</qualifiedname>
        <param>
          <type>glm::vec3</type>
          <declname>eye</declname>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>at</declname>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="25" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a875aa48c4e9127d56f98be208d278bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setPositionAndRotation</definition>
        <argsstring>(glm::vec3 position, glm::vec3 rotationEulersDegrees)</argsstring>
        <name>setPositionAndRotation</name>
        <qualifiedname>re::Camera::setPositionAndRotation</qualifiedname>
        <param>
          <type>glm::vec3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>rotationEulersDegrees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="27" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a52455def6a83e27fd5d17145422f5c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::vec3</type>
        <definition>glm::vec3 re::Camera::getPosition</definition>
        <argsstring>()</argsstring>
        <name>getPosition</name>
        <qualifiedname>re::Camera::getPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="29" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="103" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a3b97bf7e9ca1a316b0ef63281c47e675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::vec3</type>
        <definition>glm::vec3 re::Camera::getRotationEuler</definition>
        <argsstring>()</argsstring>
        <name>getRotationEuler</name>
        <qualifiedname>re::Camera::getRotationEuler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="30" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="119" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1ae5801e33fb27ef220b065fa7be42b43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structre_1_1_ray" kindref="compound">Ray</ref></type>
        <definition>Ray re::Camera::screenPointToRay</definition>
        <argsstring>(glm::vec2 position)</argsstring>
        <name>screenPointToRay</name>
        <qualifiedname>re::Camera::screenPointToRay</qualifiedname>
        <param>
          <type>glm::vec2</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>屏幕像素点转换成射线:屏幕坐标转世界坐标 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="32" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="136" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a6ba233b01c55eb3f5122ad49e19b9518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setPerspectiveProjection</definition>
        <argsstring>(float fieldOfViewY, float nearPlane, float farPlane)</argsstring>
        <name>setPerspectiveProjection</name>
        <qualifiedname>re::Camera::setPerspectiveProjection</qualifiedname>
        <param>
          <type>float</type>
          <declname>fieldOfViewY</declname>
        </param>
        <param>
          <type>float</type>
          <declname>nearPlane</declname>
        </param>
        <param>
          <type>float</type>
          <declname>farPlane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="33" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="39" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1ae6c0471917577cee8c961c0f9914dc8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setOrthographicProjection</definition>
        <argsstring>(float orthographicSize, float nearPlane, float farPlane)</argsstring>
        <name>setOrthographicProjection</name>
        <qualifiedname>re::Camera::setOrthographicProjection</qualifiedname>
        <param>
          <type>float</type>
          <declname>orthographicSize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>nearPlane</declname>
        </param>
        <param>
          <type>float</type>
          <declname>farPlane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="34" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a2d4ab5be9dfa59dae8bf21ecc5966553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setWindowCoordinates</definition>
        <argsstring>()</argsstring>
        <name>setWindowCoordinates</name>
        <qualifiedname>re::Camera::setWindowCoordinates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="35" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1abb7468eead54b780b3dc2672eb26adf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setViewTransform</definition>
        <argsstring>(const glm::mat4 &amp;viewTransform)</argsstring>
        <name>setViewTransform</name>
        <qualifiedname>re::Camera::setViewTransform</qualifiedname>
        <param>
          <type>const glm::mat4 &amp;</type>
          <declname>viewTransform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="36" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1ae619545d8712a6d5f63ba89ed4170bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setProjectionTransform</definition>
        <argsstring>(const glm::mat4 &amp;projectionTransform)</argsstring>
        <name>setProjectionTransform</name>
        <qualifiedname>re::Camera::setProjectionTransform</qualifiedname>
        <param>
          <type>const glm::mat4 &amp;</type>
          <declname>projectionTransform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="37" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1ad3df3ed22909d25827aaed1d8937f9a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>glm::mat4</type>
        <definition>glm::mat4 re::Camera::getViewTransform</definition>
        <argsstring>() const</argsstring>
        <name>getViewTransform</name>
        <qualifiedname>re::Camera::getViewTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="38" column="23" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1ac680c54f7e9262364b81a5f4f809ba23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::mat4</type>
        <definition>glm::mat4 re::Camera::getProjectionTransform</definition>
        <argsstring>(const glm::uvec2 &amp;viewportSize)</argsstring>
        <name>getProjectionTransform</name>
        <qualifiedname>re::Camera::getProjectionTransform</qualifiedname>
        <param>
          <type>const glm::uvec2 &amp;</type>
          <declname>viewportSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="39" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="72" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1acf6e1747f6da327e043ac61e35666843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::mat4</type>
        <definition>glm::mat4 re::Camera::getInfiniteProjectionTransform</definition>
        <argsstring>(glm::uvec2 viewportSize)</argsstring>
        <name>getInfiniteProjectionTransform</name>
        <qualifiedname>re::Camera::getInfiniteProjectionTransform</qualifiedname>
        <param>
          <type>glm::uvec2</type>
          <declname>viewportSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="40" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="166" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_camera_1a5b98d8dd27f40d9aa751b3ccc4112897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Camera::setViewport</definition>
        <argsstring>(const glm::vec2 &amp;offset, const glm::vec2 &amp;size)</argsstring>
        <name>setViewport</name>
        <qualifiedname>re::Camera::setViewport</qualifiedname>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="41" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>class <ref refid="classre_1_1_camera" kindref="compound">Camera</ref> </para>
    </detaileddescription>
    <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" line="16" column="1" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/camera.h" bodystart="17" bodyend="76"/>
    <listofallmembers>
      <member refid="classre_1_1_camera_1aa6dc5e0e6087fb3d61065ba07ca24bdd" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>Camera</name></member>
      <member refid="classre_1_1_camera_1acf6e1747f6da327e043ac61e35666843" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>getInfiniteProjectionTransform</name></member>
      <member refid="classre_1_1_camera_1a52455def6a83e27fd5d17145422f5c42" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>getPosition</name></member>
      <member refid="classre_1_1_camera_1ac680c54f7e9262364b81a5f4f809ba23" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>getProjectionTransform</name></member>
      <member refid="classre_1_1_camera_1a3b97bf7e9ca1a316b0ef63281c47e675" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>getRotationEuler</name></member>
      <member refid="classre_1_1_camera_1ad3df3ed22909d25827aaed1d8937f9a0" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>getViewTransform</name></member>
      <member refid="classre_1_1_camera_1a86732f0482819c2c9ba3da15da2ecee1" prot="private" virt="non-virtual"><scope>re::Camera</scope><name>m_projectionType</name></member>
      <member refid="classre_1_1_camera_1aa5b2b01a6025cbc56141a7bd479e518d" prot="private" virt="non-virtual"><scope>re::Camera</scope><name>m_projectionValue</name></member>
      <member refid="classre_1_1_camera_1aa5afaf4ba9bbdc592c1c4159f69a24da" prot="private" virt="non-virtual"><scope>re::Camera</scope><name>m_viewportOffset</name></member>
      <member refid="classre_1_1_camera_1a39250e1b79d2d8571f9c12eae8f6cb61" prot="private" virt="non-virtual"><scope>re::Camera</scope><name>m_viewportSize</name></member>
      <member refid="classre_1_1_camera_1a9a746e3741cdd75d51c5e5509ff48075" prot="private" virt="non-virtual"><scope>re::Camera</scope><name>m_viewTransform</name></member>
      <member refid="classre_1_1_camera_1a5b11b8f8e08a54da964e88a4d9551de5" prot="private" virt="non-virtual"><scope>re::Camera</scope><name>ProjectionType</name></member>
      <member refid="classre_1_1_camera_1aa8ab806874e69ead344abef1c5e76aa0" prot="private" virt="non-virtual"><scope>re::Camera</scope><name>RenderPass</name></member>
      <member refid="classre_1_1_camera_1ae5801e33fb27ef220b065fa7be42b43a" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>screenPointToRay</name></member>
      <member refid="classre_1_1_camera_1a1174d6a9e1d822e169d8fc833de78e0c" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setLookAt</name></member>
      <member refid="classre_1_1_camera_1ae6c0471917577cee8c961c0f9914dc8d" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setOrthographicProjection</name></member>
      <member refid="classre_1_1_camera_1a6ba233b01c55eb3f5122ad49e19b9518" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setPerspectiveProjection</name></member>
      <member refid="classre_1_1_camera_1a875aa48c4e9127d56f98be208d278bfe" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setPositionAndRotation</name></member>
      <member refid="classre_1_1_camera_1ae619545d8712a6d5f63ba89ed4170bdd" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setProjectionTransform</name></member>
      <member refid="classre_1_1_camera_1a5b98d8dd27f40d9aa751b3ccc4112897" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setViewport</name></member>
      <member refid="classre_1_1_camera_1abb7468eead54b780b3dc2672eb26adf6" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setViewTransform</name></member>
      <member refid="classre_1_1_camera_1a2d4ab5be9dfa59dae8bf21ecc5966553" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>setWindowCoordinates</name></member>
      <member refid="classre_1_1_camera_1a9bc08ed43cfde53e64f532c5a2301c5e" prot="public" virt="non-virtual"><scope>re::Camera</scope><name>~Camera</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
