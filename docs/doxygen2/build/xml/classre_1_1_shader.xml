<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classre_1_1_shader" kind="class" language="C++" prot="public">
    <compoundname>re::Shader</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; Shader &gt;</basecompoundref>
    <innerclass refid="structre_1_1_shader_1_1_resource" prot="public">re::Shader::Resource</innerclass>
    <innerclass refid="structre_1_1_shader_1_1_shader_attribute" prot="public">re::Shader::ShaderAttribute</innerclass>
    <innerclass refid="classre_1_1_shader_1_1_shader_builder" prot="public">re::Shader::ShaderBuilder</innerclass>
    <innerclass refid="structre_1_1_shader_1_1_stencil_descriptor" prot="public">re::Shader::StencilDescriptor</innerclass>
    <innerclass refid="structre_1_1_shader_1_1_uniform" prot="public">re::Shader::Uniform</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classre_1_1_shader_1ad7e7d5b4b13618a5fada33b15cc3f8e8" prot="public" static="no" strong="yes">
        <type></type>
        <name>BlendType</name>
        <qualifiedname>re::Shader::BlendType</qualifiedname>
        <enumvalue id="classre_1_1_shader_1ad7e7d5b4b13618a5fada33b15cc3f8e8ab9f5c797ebbf55adccdd8539a65a0241" prot="public">
          <name>Disabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1ad7e7d5b4b13618a5fada33b15cc3f8e8a8bb7dc17a08b6afa19cc4c18c6334eee" prot="public">
          <name>AlphaBlending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1ad7e7d5b4b13618a5fada33b15cc3f8e8a55b2009972903a90babbfccd52ab1ad8" prot="public">
          <name>AdditiveBlending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="28" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="enum" id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6" prot="public" static="no" strong="yes">
        <type></type>
        <name>UniformType</name>
        <qualifiedname>re::Shader::UniformType</qualifiedname>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6a1686a6c336b71b36d77354cea19a8b52" prot="public">
          <name>Int</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6a22ae0e2b89e5e3d477f988cc36d3272b" prot="public">
          <name>Float</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6a2495a7d9c1fab19af6441abbfed823e1" prot="public">
          <name>Mat3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6a80f7408b0a5b5d78c26adae9f6f420f9" prot="public">
          <name>Mat4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6af67402842935c0240e8109e7312def66" prot="public">
          <name>Vec4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6af561f51fe7403ddb3f8d7e2732cb4d65" prot="public">
          <name>IVec4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6a01b2dc1a2922d9be9e12ef0709600977" prot="public">
          <name>Vec3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6aa3e8ae43188ae76d38f414b2bdb0077b" prot="public">
          <name>Texture</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6a4bbb8f967da6d1a610596d7257179c2b" prot="public">
          <name>Invalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6a0a152d9f3e1df14068c5857fb3352505" prot="public">
          <name>TextureCube</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="35" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="36" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="classre_1_1_shader_1a8510f4a8ec041470a4b1df77a851570c" prot="public" static="no" strong="yes">
        <type></type>
        <name>CullFace</name>
        <qualifiedname>re::Shader::CullFace</qualifiedname>
        <enumvalue id="classre_1_1_shader_1a8510f4a8ec041470a4b1df77a851570ca5835bab1ade0060909e31a06af2e2cde" prot="public">
          <name>Front</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a8510f4a8ec041470a4b1df77a851570ca0557fa923dcee4d0f86b1409f5c2167f" prot="public">
          <name>Back</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a8510f4a8ec041470a4b1df77a851570ca6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="49" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="classre_1_1_shader_1af53769d819070120da87c34accc57160" prot="public" static="no" strong="yes">
        <type></type>
        <name>ShaderType</name>
        <qualifiedname>re::Shader::ShaderType</qualifiedname>
        <enumvalue id="classre_1_1_shader_1af53769d819070120da87c34accc57160ab22b929ba52471a02d18bb3a4e4472e6" prot="public">
          <name>Vertex</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1af53769d819070120da87c34accc57160a37d01b98065725fe3a1d30acf3a0064a" prot="public">
          <name>Fragment</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1af53769d819070120da87c34accc57160ad9c6333623e6357515fcbf17be806273" prot="public">
          <name>Geometry</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1af53769d819070120da87c34accc57160a91a08ad964ef35c89ae69cd4176cfb4a" prot="public">
          <name>TessellationControl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1af53769d819070120da87c34accc57160a85a5d743bd284736223e3c1e95c6b952" prot="public">
          <name>TessellationEvaluation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="75" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="classre_1_1_shader_1a52915b22a60f52a3eb9339889ac5f1e9" prot="public" static="no" strong="yes">
        <type></type>
        <name>ResourceType</name>
        <qualifiedname>re::Shader::ResourceType</qualifiedname>
        <enumvalue id="classre_1_1_shader_1a52915b22a60f52a3eb9339889ac5f1e9a0b27918290ff5323bea1e3b78a9cf04e" prot="public">
          <name>File</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a52915b22a60f52a3eb9339889ac5f1e9a4789f23283b3a61f858b641a1bef19a3" prot="public">
          <name>Memory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="84" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857ec" prot="public" static="no" strong="yes">
        <type></type>
        <name>StencilFunc</name>
        <qualifiedname>re::Shader::StencilFunc</qualifiedname>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857eca6e7b34fa59e1bd229b207892956dc41c" prot="public">
          <name>Never</name>
          <initializer>= GL_NEVER</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857eca1cfdf0e8d0c87a228c1f40d9bee7888b" prot="public">
          <name>Less</name>
          <initializer>= GL_LESS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857ecaf5f286e73bda105e538310b3190f75c5" prot="public">
          <name>Equal</name>
          <initializer>= GL_EQUAL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857eca9f2def3dbc3357543556d765e234a550" prot="public">
          <name>LEqual</name>
          <initializer>= GL_LEQUAL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857eca8768a6821cd735aea4f5b0df88c1fc6a" prot="public">
          <name>Greater</name>
          <initializer>= GL_GREATER</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857eca19bb0af2c3c530538cb41aff7f235b96" prot="public">
          <name>NotEqual</name>
          <initializer>= GL_NOTEQUAL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857eca6274a4f615e42c9894ded1bc221ceba6" prot="public">
          <name>GEqual</name>
          <initializer>= GL_GEQUAL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857eca68eec46437c384d8dad18d5464ebc35c" prot="public">
          <name>Always</name>
          <initializer>= GL_ALWAYS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a277525f90c9e0397c8243a98224857ecab9f5c797ebbf55adccdd8539a65a0241" prot="public">
          <name>Disabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="96" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="97" bodyend="107"/>
      </memberdef>
      <memberdef kind="enum" id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43" prot="public" static="no" strong="yes">
        <type></type>
        <name>StencilOp</name>
        <qualifiedname>re::Shader::StencilOp</qualifiedname>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43a02bce93bff905887ad2233110bf9c49e" prot="public">
          <name>Keep</name>
          <initializer>= GL_KEEP</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43ad7ed4ee1df437474d005188535f74875" prot="public">
          <name>Zero</name>
          <initializer>= GL_ZERO</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43a0ebe6df8a3ac338e0512acc741823fdb" prot="public">
          <name>Replace</name>
          <initializer>= GL_REPLACE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43a7dec2923eeed0835d6a0f5cd58eb3c61" prot="public">
          <name>Incr</name>
          <initializer>= GL_INCR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43a893d5395c39e90eca72ccb89e2e90312" prot="public">
          <name>IncrWrap</name>
          <initializer>= GL_INCR_WRAP</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43a8e0aa9abd1cf647fde90da660c638c1e" prot="public">
          <name>Decr</name>
          <initializer>= GL_DECR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43a705c1791598610083534bb820c98ad4b" prot="public">
          <name>DecrWrap</name>
          <initializer>= GL_DECR_WRAP</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43a9b8958acb7be504bb5f55f17c0eea366" prot="public">
          <name>Invert</name>
          <initializer>= GL_INVERT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="109" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="110" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classre_1_1_shader_1a5af507b3e34de22eb9849ff391578b0d" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_unlit</definition>
        <argsstring></argsstring>
        <name>s_unlit</name>
        <qualifiedname>re::Shader::s_unlit</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="220" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a1fcfafb33a175619d397c024cf15dadc" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_blit</definition>
        <argsstring></argsstring>
        <name>s_blit</name>
        <qualifiedname>re::Shader::s_blit</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="221" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a39c992445a9b0f1b365076a930c7e7f2" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_unlitSprite</definition>
        <argsstring></argsstring>
        <name>s_unlitSprite</name>
        <qualifiedname>re::Shader::s_unlitSprite</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="222" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a5b727d3118bad61d0926377690db3664" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_debugUV</definition>
        <argsstring></argsstring>
        <name>s_debugUV</name>
        <qualifiedname>re::Shader::s_debugUV</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="223" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a751934435dede5a090cbc5721aa3cbe2" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_debugNormals</definition>
        <argsstring></argsstring>
        <name>s_debugNormals</name>
        <qualifiedname>re::Shader::s_debugNormals</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="224" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a0fb69de2e2f592ba40d56e260f5f067e" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_font</definition>
        <argsstring></argsstring>
        <name>s_font</name>
        <qualifiedname>re::Shader::s_font</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="225" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1ad3c28f99263aaa358a3b6f9ac670438c" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_standardParticles</definition>
        <argsstring></argsstring>
        <name>s_standardParticles</name>
        <qualifiedname>re::Shader::s_standardParticles</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="226" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a175299ac91511a90f0d817d2a416cb2b" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_standardPBR</definition>
        <argsstring></argsstring>
        <name>s_standardPBR</name>
        <qualifiedname>re::Shader::s_standardPBR</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="227" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a0cfca929843eb18d2e41ef272884c764" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_standardPhong</definition>
        <argsstring></argsstring>
        <name>s_standardPhong</name>
        <qualifiedname>re::Shader::s_standardPhong</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="228" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a03651d7de74ba47753bd5abe39c662e3" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_standardBlinnPhong</definition>
        <argsstring></argsstring>
        <name>s_standardBlinnPhong</name>
        <qualifiedname>re::Shader::s_standardBlinnPhong</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="229" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1acdd2d7cb21363f5d00efbebf3a690dfe" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::s_skybox</definition>
        <argsstring></argsstring>
        <name>s_skybox</name>
        <qualifiedname>re::Shader::s_skybox</qualifiedname>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="230" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a26c693fc4efbd6d6d722288c7c2725a7" prot="private" static="yes" mutable="no">
        <type>long</type>
        <definition>long re::Shader::s_globalShaderCounter</definition>
        <argsstring></argsstring>
        <name>s_globalShaderCounter</name>
        <qualifiedname>re::Shader::s_globalShaderCounter</qualifiedname>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="231" column="24" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classre_1_1_shader_1a82eba10d461423b68e269dd7adc40538" prot="private" static="no" mutable="no">
        <type>BlendType</type>
        <definition>BlendType re::Shader::m_blendType</definition>
        <argsstring></argsstring>
        <name>m_blendType</name>
        <qualifiedname>re::Shader::m_blendType</qualifiedname>
        <initializer>{ BlendType::Disabled }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="234" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a963ed7b52c4df1c0cdd44906f16f3ff5" prot="private" static="no" mutable="no">
        <type>CullFace</type>
        <definition>CullFace re::Shader::m_cullFace</definition>
        <argsstring></argsstring>
        <name>m_cullFace</name>
        <qualifiedname>re::Shader::m_cullFace</qualifiedname>
        <initializer>{ CullFace::Back }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="235" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1ae1b0887a11b333e6782f5ec4c3e5f990" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structre_1_1_shader_1_1_uniform" kindref="compound">Uniform</ref> &gt;</type>
        <definition>std::vector&lt;Uniform&gt; re::Shader::m_uniforms</definition>
        <argsstring></argsstring>
        <name>m_uniforms</name>
        <qualifiedname>re::Shader::m_uniforms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="236" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a016e3f1b95e173e5328d1d761348f610" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structre_1_1_shader_1_1_shader_attribute" kindref="compound">ShaderAttribute</ref> &gt;</type>
        <definition>std::map&lt;std::string, ShaderAttribute&gt; re::Shader::m_attributes</definition>
        <argsstring></argsstring>
        <name>m_attributes</name>
        <qualifiedname>re::Shader::m_attributes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="237" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a6ade80eb0db36817f3bfc4ed6f70ee57" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; re::Shader::m_specializationConstants</definition>
        <argsstring></argsstring>
        <name>m_specializationConstants</name>
        <qualifiedname>re::Shader::m_specializationConstants</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="238" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1adbb9ce0370bad47c4108669cf33fcc46" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::weak_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::weak_ptr&lt;Shader&gt; &gt; re::Shader::m_specializations</definition>
        <argsstring></argsstring>
        <name>m_specializations</name>
        <qualifiedname>re::Shader::m_specializations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="239" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a63040e5e4fc80057e7b92d7f7cfcaeb1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Shader::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <qualifiedname>re::Shader::m_parent</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="240" column="21" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a0813ae228d11f85e52841b3f31568256" prot="private" static="no" mutable="no">
        <type>std::map&lt; ShaderType, <ref refid="structre_1_1_shader_1_1_resource" kindref="compound">Resource</ref> &gt;</type>
        <definition>std::map&lt;ShaderType, Resource&gt; re::Shader::m_shaderSources</definition>
        <argsstring></argsstring>
        <name>m_shaderSources</name>
        <qualifiedname>re::Shader::m_shaderSources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="241" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a078e32f39c0809d66d0f080e986d4e63" prot="private" static="no" mutable="no">
        <type>glm::vec2</type>
        <definition>glm::vec2 re::Shader::m_offset</definition>
        <argsstring></argsstring>
        <name>m_offset</name>
        <qualifiedname>re::Shader::m_offset</qualifiedname>
        <initializer>= glm::vec2(0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="242" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a41fdd995b4acfdddcfcc7a387f5c5278" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string re::Shader::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <qualifiedname>re::Shader::m_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="243" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1aadc9198b2ce845145b7ad0e3decb3f40" prot="private" static="no" mutable="no">
        <type><ref refid="structre_1_1_shader_1_1_stencil_descriptor" kindref="compound">StencilDescriptor</ref></type>
        <definition>StencilDescriptor re::Shader::m_stencil</definition>
        <argsstring></argsstring>
        <name>m_stencil</name>
        <qualifiedname>re::Shader::m_stencil</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="244" column="23" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a2c0b8f6049135d06328b8d09f85e2f15" prot="private" static="no" mutable="no">
        <type>glm::bvec4</type>
        <definition>glm::bvec4 re::Shader::m_colorWrite</definition>
        <argsstring></argsstring>
        <name>m_colorWrite</name>
        <qualifiedname>re::Shader::m_colorWrite</qualifiedname>
        <initializer>{ true, true, true, true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="245" column="16" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1aa761ee025f7cd7efe481f58a65c349bb" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int re::Shader::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <qualifiedname>re::Shader::m_id</qualifiedname>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="246" column="18" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a93e38a590fd270376c2f43a503cb9207" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool re::Shader::m_depthTest</definition>
        <argsstring></argsstring>
        <name>m_depthTest</name>
        <qualifiedname>re::Shader::m_depthTest</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="247" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a3e36e4c828d83b6e99668c2956393733" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool re::Shader::m_depthWrite</definition>
        <argsstring></argsstring>
        <name>m_depthWrite</name>
        <qualifiedname>re::Shader::m_depthWrite</qualifiedname>
        <initializer>{ true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="248" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1abab2df410853b974fc6bc9c804ebe90f" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long re::Shader::m_shaderUniqueId</definition>
        <argsstring></argsstring>
        <name>m_shaderUniqueId</name>
        <qualifiedname>re::Shader::m_shaderUniqueId</qualifiedname>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="249" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1aa3412295f04943bd6dc6a28cfebb9513" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationModel</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationModel</name>
        <qualifiedname>re::Shader::m_uniformLocationModel</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="250" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a644231d87059cf46c6f782f3080b9be7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationView</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationView</name>
        <qualifiedname>re::Shader::m_uniformLocationView</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="251" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1aa78977b17cd5ab4d68186bf4e819e1c4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationProjection</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationProjection</name>
        <qualifiedname>re::Shader::m_uniformLocationProjection</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="252" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a7282e3bbc0f74e63592c0aaafd3d6e76" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationModelViewInverseTranspose</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationModelViewInverseTranspose</name>
        <qualifiedname>re::Shader::m_uniformLocationModelViewInverseTranspose</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="253" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a99385cb686979bd9bee0f5de78aaa232" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationModelInverseTranspose</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationModelInverseTranspose</name>
        <qualifiedname>re::Shader::m_uniformLocationModelInverseTranspose</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="254" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a6da4900b3456915f66dcfaebdba0298f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationViewport</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationViewport</name>
        <qualifiedname>re::Shader::m_uniformLocationViewport</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="255" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a628c9e118b1fbe39e2a65072dc75ad98" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationCameraPosition</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationCameraPosition</name>
        <qualifiedname>re::Shader::m_uniformLocationCameraPosition</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="256" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1a063ffc16d30e359f61f798db3229fd09" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationAmbientLight</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationAmbientLight</name>
        <qualifiedname>re::Shader::m_uniformLocationAmbientLight</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="257" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1aa00cfc73621230801d51b1eb03f45856" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationLightPosType</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationLightPosType</name>
        <qualifiedname>re::Shader::m_uniformLocationLightPosType</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="258" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_shader_1af96ed3137cc115c2037c144ce54bf337" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int re::Shader::m_uniformLocationLightColorRange</definition>
        <argsstring></argsstring>
        <name>m_uniformLocationLightColorRange</name>
        <qualifiedname>re::Shader::m_uniformLocationLightColorRange</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="259" column="9" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classre_1_1_shader_1aa41a130f156b145bffb3f4b5172c4c93" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Mesh</definition>
        <argsstring></argsstring>
        <name>Mesh</name>
        <qualifiedname>re::Shader::Mesh</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_mesh" kindref="compound">Mesh</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="260" column="18" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classre_1_1_shader_1aa8ab806874e69ead344abef1c5e76aa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class RenderPass</definition>
        <argsstring></argsstring>
        <name>RenderPass</name>
        <qualifiedname>re::Shader::RenderPass</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_render_pass" kindref="compound">RenderPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="261" column="18" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classre_1_1_shader_1aa1212b6e372a0f45d2c01f3cd203af77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Material</definition>
        <argsstring></argsstring>
        <name>Material</name>
        <qualifiedname>re::Shader::Material</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_material" kindref="compound">Material</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="262" column="18" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classre_1_1_shader_1a5486a5ab1c546bf41e8da20dd0b01de1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Inspector</definition>
        <argsstring></argsstring>
        <name>Inspector</name>
        <qualifiedname>re::Shader::Inspector</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_inspector" kindref="compound">Inspector</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="263" column="18" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classre_1_1_shader_1afefa9fa54d39040a294c45f074ca2643" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classre_1_1_shader_1_1_shader_builder" kindref="compound">ShaderBuilder</ref></type>
        <definition>Shader::ShaderBuilder re::Shader::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <qualifiedname>re::Shader::create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="170" column="26" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="718" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a2be1f9f508bda528f0676042aa335b13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classre_1_1_shader_1_1_shader_builder" kindref="compound">ShaderBuilder</ref></type>
        <definition>Shader::ShaderBuilder re::Shader::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>re::Shader::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="172" column="26" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="940" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a0ddec97e61e4794a41bc9079387ab73c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getUnlit</definition>
        <argsstring>()</argsstring>
        <name>getUnlit</name>
        <qualifiedname>re::Shader::getUnlit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="173" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="302" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a4d2623776e41c221424f58cafa19dc8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getBlit</definition>
        <argsstring>()</argsstring>
        <name>getBlit</name>
        <qualifiedname>re::Shader::getBlit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="174" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="316" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a95eea79a22be06093ba919ee11323bf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getUnlitSprite</definition>
        <argsstring>()</argsstring>
        <name>getUnlitSprite</name>
        <qualifiedname>re::Shader::getUnlitSprite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="175" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="330" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1ab458a2aa14c0fca536835b5a82b17769" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getStandardParticles</definition>
        <argsstring>()</argsstring>
        <name>getStandardParticles</name>
        <qualifiedname>re::Shader::getStandardParticles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="176" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="347" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1ab799a0b71aad4923eb168f078514af3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getStandardPBR</definition>
        <argsstring>()</argsstring>
        <name>getStandardPBR</name>
        <qualifiedname>re::Shader::getStandardPBR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="177" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="945" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1aa0c515e81f4979fcb6fca2a9b023fbed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getStandardBlinnPhong</definition>
        <argsstring>()</argsstring>
        <name>getStandardBlinnPhong</name>
        <qualifiedname>re::Shader::getStandardBlinnPhong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="178" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="959" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1ac7b851965781096b3ccf1efb303c82b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getStandardPhong</definition>
        <argsstring>()</argsstring>
        <name>getStandardPhong</name>
        <qualifiedname>re::Shader::getStandardPhong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="179" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="973" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a7f097556344011a6d1b699e6f558ee1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Shader &gt; re::Shader::getSkybox</definition>
        <argsstring>()</argsstring>
        <name>getSkybox</name>
        <qualifiedname>re::Shader::getSkybox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="180" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="987" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a8dc115c9640a0bacb7a2d94afb74ad7d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t re::Shader::toId</definition>
        <argsstring>(ShaderType st)</argsstring>
        <name>toId</name>
        <qualifiedname>re::Shader::toId</qualifiedname>
        <param>
          <type>ShaderType</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="207" column="21" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="919" bodyend="938"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classre_1_1_shader_1a51ce432515af1a6a61f992c7d59652f7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string re::Shader::getSource</definition>
        <argsstring>(const Resource &amp;resource)</argsstring>
        <name>getSource</name>
        <qualifiedname>re::Shader::getSource</qualifiedname>
        <param>
          <type>const <ref refid="structre_1_1_shader_1_1_resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="183" column="24" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="276" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a0e3c2a24edc8c8e7a5827ebe3ef52c12" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string re::Shader::insertPreprocessorDefines</definition>
        <argsstring>(std::string source, std::map&lt; std::string, std::string &gt; &amp;specializationConstants, uint32_t shaderType)</argsstring>
        <name>insertPreprocessorDefines</name>
        <qualifiedname>re::Shader::insertPreprocessorDefines</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>specializationConstants</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>shaderType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="214" column="24" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="1038" bodyend="1105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classre_1_1_shader_1a91061e1870f9725644016db50b17198f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::Shader::~Shader</definition>
        <argsstring>()</argsstring>
        <name>~Shader</name>
        <qualifiedname>re::Shader::~Shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="186" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="374" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a0a80251c5e9c8029eba7ab0b622ff5bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structre_1_1_shader_1_1_uniform" kindref="compound">Uniform</ref></type>
        <definition>Shader::Uniform re::Shader::getUniformType</definition>
        <argsstring>(std::string_view name)</argsstring>
        <name>getUniformType</name>
        <qualifiedname>re::Shader::getUniformType</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="187" column="13" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="506" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a438a9ea38037dfdeda6ec0a48c84654c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt; int, int &gt; re::Shader::getAttributeType</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getAttributeType</name>
        <qualifiedname>re::Shader::getAttributeType</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="189" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="913" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a0d33747613c378ea0fdd43dfc18740b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Shader::isDepthTest</definition>
        <argsstring>() const</argsstring>
        <name>isDepthTest</name>
        <qualifiedname>re::Shader::isDepthTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="190" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a51d2d170beb9dca9f2958e3cc11b4c9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Shader::isDepthWrite</definition>
        <argsstring>() const</argsstring>
        <name>isDepthWrite</name>
        <qualifiedname>re::Shader::isDepthWrite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="191" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1af7cb6bb66674d309ef9fff9055c1fc90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BlendType</type>
        <definition>BlendType re::Shader::getBlend</definition>
        <argsstring>() const</argsstring>
        <name>getBlend</name>
        <qualifiedname>re::Shader::getBlend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="192" column="22" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1ae64fd30beef23ac94891361111676d19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec2 &amp;</type>
        <definition>const glm::vec2 &amp; re::Shader::getOffset</definition>
        <argsstring>() const</argsstring>
        <name>getOffset</name>
        <qualifiedname>re::Shader::getOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="193" column="28" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a35a33fd362c81d08a0bf1916cb329633" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; re::Shader::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>re::Shader::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="194" column="30" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1aab77a0646c3269fc1e6f5c11e774ce31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structre_1_1_shader_1_1_stencil_descriptor" kindref="compound">StencilDescriptor</ref> &amp;</type>
        <definition>const StencilDescriptor &amp; re::Shader::getStencil</definition>
        <argsstring>() const</argsstring>
        <name>getStencil</name>
        <qualifiedname>re::Shader::getStencil</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="195" column="36" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a789c51ef2212205f7eb4e3bd52f2bd3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::bvec4 &amp;</type>
        <definition>const glm::bvec4 &amp; re::Shader::colorWriteMask</definition>
        <argsstring>() const</argsstring>
        <name>colorWriteMask</name>
        <qualifiedname>re::Shader::colorWriteMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="196" column="29" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a2d95089156d12ed4fa57b9460a618265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; re::Shader::getAttributeNames</definition>
        <argsstring>()</argsstring>
        <name>getAttributeNames</name>
        <qualifiedname>re::Shader::getAttributeNames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="198" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="789" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1acbd14452c06ec6acb3c7ccd0c8d76c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; re::Shader::getUniformNames</definition>
        <argsstring>()</argsstring>
        <name>getUniformNames</name>
        <qualifiedname>re::Shader::getUniformNames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="199" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="799" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a30347e4f4fcddfcbd302349106c6166e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Shader::validateMesh</definition>
        <argsstring>(Mesh *mesh, std::string &amp;info)</argsstring>
        <name>validateMesh</name>
        <qualifiedname>re::Shader::validateMesh</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_mesh" kindref="compound">Mesh</ref> *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="202" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="809" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1aea46aeab95d74565352258f0dfd3afe6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; std::string, std::string &gt; &amp;</type>
        <definition>const std::map&lt; std::string, std::string &gt; &amp; re::Shader::getCurrentSpecializationConstants</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentSpecializationConstants</name>
        <qualifiedname>re::Shader::getCurrentSpecializationConstants</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="203" column="20" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="1002" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a2273d4a877806bd473808158d2cc9dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt; std::string &gt; re::Shader::getAllSpecializationConstants</definition>
        <argsstring>()</argsstring>
        <name>getAllSpecializationConstants</name>
        <qualifiedname>re::Shader::getAllSpecializationConstants</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="204" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="1007" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a47fb3b9d2482042211042b329a115f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_material" kindref="compound">Material</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Material &gt; re::Shader::createMaterial</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; specializationConstants={})</argsstring>
        <name>createMaterial</name>
        <qualifiedname>re::Shader::createMaterial</qualifiedname>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>specializationConstants</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="205" column="21" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="848" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a3e9f39a463eebe65237dd25a52e5d506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * re::Shader::toStr</definition>
        <argsstring>(UniformType u)</argsstring>
        <name>toStr</name>
        <qualifiedname>re::Shader::toStr</qualifiedname>
        <param>
          <type>UniformType</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="206" column="16" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="886" bodyend="911"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classre_1_1_shader_1ab1a7555fa9b9570d532e6d6a713d8523" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::Shader::Shader</definition>
        <argsstring>()</argsstring>
        <name>Shader</name>
        <qualifiedname>re::Shader::Shader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="210" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="363" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1aa6c6e57c83464726287a6c58a9b110b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Shader::bind</definition>
        <argsstring>()</argsstring>
        <name>bind</name>
        <qualifiedname>re::Shader::bind</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="211" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="435" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1af20403c23d2d9c6bf78ed5ecfee41594" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Shader::build</definition>
        <argsstring>(const std::map&lt; ShaderType, Resource &gt; &amp;shaderSources, std::vector&lt; std::string &gt; &amp;errors)</argsstring>
        <name>build</name>
        <qualifiedname>re::Shader::build</qualifiedname>
        <param>
          <type>const std::map&lt; ShaderType, <ref refid="structre_1_1_shader_1_1_resource" kindref="compound">Resource</ref> &gt; &amp;</type>
          <declname>shaderSources</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>errors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="212" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="723" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a0c0ae9e23e8b0acfbf6d0672a0b6b62f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string re::Shader::precompile</definition>
        <argsstring>(std::string source, std::vector&lt; std::string &gt; &amp;errors, uint32_t shaderType)</argsstring>
        <name>precompile</name>
        <qualifiedname>re::Shader::precompile</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>errors</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>shaderType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="213" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="1029" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a3b63805b6d6cdfe8e847c187e84614d4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Shader::setLights</definition>
        <argsstring>(WorldLights *worldLights) const</argsstring>
        <name>setLights</name>
        <qualifiedname>re::Shader::setLights</qualifiedname>
        <param>
          <type><ref refid="structre_1_1_world_lights" kindref="compound">WorldLights</ref> *</type>
          <declname>worldLights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="215" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="384" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1afbcb128942a9478004fb4b123114305b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Shader::updateUniformsAndAttributes</definition>
        <argsstring>()</argsstring>
        <name>updateUniformsAndAttributes</name>
        <qualifiedname>re::Shader::updateUniformsAndAttributes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="216" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="516" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_shader_1a8d25b07c050b37d639e714af14f4fed3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Shader::compileShader</definition>
        <argsstring>(const Resource &amp;resource, GLenum type, GLuint &amp;shader, std::vector&lt; std::string &gt; &amp;errors)</argsstring>
        <name>compileShader</name>
        <qualifiedname>re::Shader::compileShader</qualifiedname>
        <param>
          <type>const <ref refid="structre_1_1_shader_1_1_resource" kindref="compound">Resource</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLuint &amp;</type>
          <declname>shader</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>errors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="217" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.cpp" bodystart="286" bodyend="300"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>re::Shader</label>
        <link refid="classre_1_1_shader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::enable_shared_from_this&lt; Shader &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>re::Shader</label>
        <link refid="classre_1_1_shader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::enable_shared_from_this&lt; Shader &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" line="25" column="1" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/shader.h" bodystart="26" bodyend="264"/>
    <listofallmembers>
      <member refid="classre_1_1_shader_1aa6c6e57c83464726287a6c58a9b110b5" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>bind</name></member>
      <member refid="classre_1_1_shader_1ad7e7d5b4b13618a5fada33b15cc3f8e8" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>BlendType</name></member>
      <member refid="classre_1_1_shader_1af20403c23d2d9c6bf78ed5ecfee41594" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>build</name></member>
      <member refid="classre_1_1_shader_1a789c51ef2212205f7eb4e3bd52f2bd3c" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>colorWriteMask</name></member>
      <member refid="classre_1_1_shader_1a8d25b07c050b37d639e714af14f4fed3" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>compileShader</name></member>
      <member refid="classre_1_1_shader_1afefa9fa54d39040a294c45f074ca2643" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>create</name></member>
      <member refid="classre_1_1_shader_1a47fb3b9d2482042211042b329a115f5d" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>createMaterial</name></member>
      <member refid="classre_1_1_shader_1a8510f4a8ec041470a4b1df77a851570c" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>CullFace</name></member>
      <member refid="classre_1_1_shader_1a2273d4a877806bd473808158d2cc9dd0" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getAllSpecializationConstants</name></member>
      <member refid="classre_1_1_shader_1a2d95089156d12ed4fa57b9460a618265" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getAttributeNames</name></member>
      <member refid="classre_1_1_shader_1a438a9ea38037dfdeda6ec0a48c84654c" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getAttributeType</name></member>
      <member refid="classre_1_1_shader_1af7cb6bb66674d309ef9fff9055c1fc90" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getBlend</name></member>
      <member refid="classre_1_1_shader_1a4d2623776e41c221424f58cafa19dc8d" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getBlit</name></member>
      <member refid="classre_1_1_shader_1aea46aeab95d74565352258f0dfd3afe6" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getCurrentSpecializationConstants</name></member>
      <member refid="classre_1_1_shader_1ae64fd30beef23ac94891361111676d19" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getOffset</name></member>
      <member refid="classre_1_1_shader_1a7f097556344011a6d1b699e6f558ee1d" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getSkybox</name></member>
      <member refid="classre_1_1_shader_1a51ce432515af1a6a61f992c7d59652f7" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>getSource</name></member>
      <member refid="classre_1_1_shader_1aa0c515e81f4979fcb6fca2a9b023fbed" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getStandardBlinnPhong</name></member>
      <member refid="classre_1_1_shader_1ab458a2aa14c0fca536835b5a82b17769" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getStandardParticles</name></member>
      <member refid="classre_1_1_shader_1ab799a0b71aad4923eb168f078514af3a" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getStandardPBR</name></member>
      <member refid="classre_1_1_shader_1ac7b851965781096b3ccf1efb303c82b2" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getStandardPhong</name></member>
      <member refid="classre_1_1_shader_1aab77a0646c3269fc1e6f5c11e774ce31" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getStencil</name></member>
      <member refid="classre_1_1_shader_1acbd14452c06ec6acb3c7ccd0c8d76c30" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getUniformNames</name></member>
      <member refid="classre_1_1_shader_1a0a80251c5e9c8029eba7ab0b622ff5bd" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getUniformType</name></member>
      <member refid="classre_1_1_shader_1a0ddec97e61e4794a41bc9079387ab73c" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getUnlit</name></member>
      <member refid="classre_1_1_shader_1a95eea79a22be06093ba919ee11323bf7" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>getUnlitSprite</name></member>
      <member refid="classre_1_1_shader_1a0e3c2a24edc8c8e7a5827ebe3ef52c12" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>insertPreprocessorDefines</name></member>
      <member refid="classre_1_1_shader_1a5486a5ab1c546bf41e8da20dd0b01de1" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>Inspector</name></member>
      <member refid="classre_1_1_shader_1a0d33747613c378ea0fdd43dfc18740b5" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>isDepthTest</name></member>
      <member refid="classre_1_1_shader_1a51d2d170beb9dca9f2958e3cc11b4c9f" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>isDepthWrite</name></member>
      <member refid="classre_1_1_shader_1a016e3f1b95e173e5328d1d761348f610" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_attributes</name></member>
      <member refid="classre_1_1_shader_1a82eba10d461423b68e269dd7adc40538" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_blendType</name></member>
      <member refid="classre_1_1_shader_1a2c0b8f6049135d06328b8d09f85e2f15" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_colorWrite</name></member>
      <member refid="classre_1_1_shader_1a963ed7b52c4df1c0cdd44906f16f3ff5" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_cullFace</name></member>
      <member refid="classre_1_1_shader_1a93e38a590fd270376c2f43a503cb9207" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_depthTest</name></member>
      <member refid="classre_1_1_shader_1a3e36e4c828d83b6e99668c2956393733" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_depthWrite</name></member>
      <member refid="classre_1_1_shader_1aa761ee025f7cd7efe481f58a65c349bb" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_id</name></member>
      <member refid="classre_1_1_shader_1a41fdd995b4acfdddcfcc7a387f5c5278" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_name</name></member>
      <member refid="classre_1_1_shader_1a078e32f39c0809d66d0f080e986d4e63" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_offset</name></member>
      <member refid="classre_1_1_shader_1a63040e5e4fc80057e7b92d7f7cfcaeb1" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_parent</name></member>
      <member refid="classre_1_1_shader_1a0813ae228d11f85e52841b3f31568256" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_shaderSources</name></member>
      <member refid="classre_1_1_shader_1abab2df410853b974fc6bc9c804ebe90f" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_shaderUniqueId</name></member>
      <member refid="classre_1_1_shader_1a6ade80eb0db36817f3bfc4ed6f70ee57" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_specializationConstants</name></member>
      <member refid="classre_1_1_shader_1adbb9ce0370bad47c4108669cf33fcc46" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_specializations</name></member>
      <member refid="classre_1_1_shader_1aadc9198b2ce845145b7ad0e3decb3f40" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_stencil</name></member>
      <member refid="classre_1_1_shader_1a063ffc16d30e359f61f798db3229fd09" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationAmbientLight</name></member>
      <member refid="classre_1_1_shader_1a628c9e118b1fbe39e2a65072dc75ad98" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationCameraPosition</name></member>
      <member refid="classre_1_1_shader_1af96ed3137cc115c2037c144ce54bf337" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationLightColorRange</name></member>
      <member refid="classre_1_1_shader_1aa00cfc73621230801d51b1eb03f45856" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationLightPosType</name></member>
      <member refid="classre_1_1_shader_1aa3412295f04943bd6dc6a28cfebb9513" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationModel</name></member>
      <member refid="classre_1_1_shader_1a99385cb686979bd9bee0f5de78aaa232" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationModelInverseTranspose</name></member>
      <member refid="classre_1_1_shader_1a7282e3bbc0f74e63592c0aaafd3d6e76" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationModelViewInverseTranspose</name></member>
      <member refid="classre_1_1_shader_1aa78977b17cd5ab4d68186bf4e819e1c4" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationProjection</name></member>
      <member refid="classre_1_1_shader_1a644231d87059cf46c6f782f3080b9be7" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationView</name></member>
      <member refid="classre_1_1_shader_1a6da4900b3456915f66dcfaebdba0298f" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniformLocationViewport</name></member>
      <member refid="classre_1_1_shader_1ae1b0887a11b333e6782f5ec4c3e5f990" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>m_uniforms</name></member>
      <member refid="classre_1_1_shader_1aa1212b6e372a0f45d2c01f3cd203af77" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>Material</name></member>
      <member refid="classre_1_1_shader_1aa41a130f156b145bffb3f4b5172c4c93" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>Mesh</name></member>
      <member refid="classre_1_1_shader_1a35a33fd362c81d08a0bf1916cb329633" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>name</name></member>
      <member refid="classre_1_1_shader_1a0c0ae9e23e8b0acfbf6d0672a0b6b62f" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>precompile</name></member>
      <member refid="classre_1_1_shader_1aa8ab806874e69ead344abef1c5e76aa0" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>RenderPass</name></member>
      <member refid="classre_1_1_shader_1a52915b22a60f52a3eb9339889ac5f1e9" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>ResourceType</name></member>
      <member refid="classre_1_1_shader_1a1fcfafb33a175619d397c024cf15dadc" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_blit</name></member>
      <member refid="classre_1_1_shader_1a751934435dede5a090cbc5721aa3cbe2" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_debugNormals</name></member>
      <member refid="classre_1_1_shader_1a5b727d3118bad61d0926377690db3664" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_debugUV</name></member>
      <member refid="classre_1_1_shader_1a0fb69de2e2f592ba40d56e260f5f067e" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_font</name></member>
      <member refid="classre_1_1_shader_1a26c693fc4efbd6d6d722288c7c2725a7" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_globalShaderCounter</name></member>
      <member refid="classre_1_1_shader_1acdd2d7cb21363f5d00efbebf3a690dfe" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_skybox</name></member>
      <member refid="classre_1_1_shader_1a03651d7de74ba47753bd5abe39c662e3" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_standardBlinnPhong</name></member>
      <member refid="classre_1_1_shader_1ad3c28f99263aaa358a3b6f9ac670438c" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_standardParticles</name></member>
      <member refid="classre_1_1_shader_1a175299ac91511a90f0d817d2a416cb2b" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_standardPBR</name></member>
      <member refid="classre_1_1_shader_1a0cfca929843eb18d2e41ef272884c764" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_standardPhong</name></member>
      <member refid="classre_1_1_shader_1a5af507b3e34de22eb9849ff391578b0d" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_unlit</name></member>
      <member refid="classre_1_1_shader_1a39c992445a9b0f1b365076a930c7e7f2" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>s_unlitSprite</name></member>
      <member refid="classre_1_1_shader_1a3b63805b6d6cdfe8e847c187e84614d4" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>setLights</name></member>
      <member refid="classre_1_1_shader_1ab1a7555fa9b9570d532e6d6a713d8523" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>Shader</name></member>
      <member refid="classre_1_1_shader_1af53769d819070120da87c34accc57160" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>ShaderType</name></member>
      <member refid="classre_1_1_shader_1a277525f90c9e0397c8243a98224857ec" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>StencilFunc</name></member>
      <member refid="classre_1_1_shader_1a85b62d536c4d1fc523ad0ccff1cb5a43" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>StencilOp</name></member>
      <member refid="classre_1_1_shader_1a8dc115c9640a0bacb7a2d94afb74ad7d" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>toId</name></member>
      <member refid="classre_1_1_shader_1a3e9f39a463eebe65237dd25a52e5d506" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>toStr</name></member>
      <member refid="classre_1_1_shader_1a513f15a67af5739a91a375dce82c73c6" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>UniformType</name></member>
      <member refid="classre_1_1_shader_1a2be1f9f508bda528f0676042aa335b13" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>update</name></member>
      <member refid="classre_1_1_shader_1afbcb128942a9478004fb4b123114305b" prot="private" virt="non-virtual"><scope>re::Shader</scope><name>updateUniformsAndAttributes</name></member>
      <member refid="classre_1_1_shader_1a30347e4f4fcddfcbd302349106c6166e" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>validateMesh</name></member>
      <member refid="classre_1_1_shader_1a91061e1870f9725644016db50b17198f" prot="public" virt="non-virtual"><scope>re::Shader</scope><name>~Shader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
