<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classre_1_1_render_pass" kind="class" language="C++" prot="public">
    <compoundname>re::RenderPass</compoundname>
    <innerclass refid="structre_1_1_render_pass_1_1_global_uniforms" prot="private">re::RenderPass::GlobalUniforms</innerclass>
    <innerclass refid="classre_1_1_render_pass_1_1_render_pass_builder" prot="public">re::RenderPass::RenderPassBuilder</innerclass>
    <innerclass refid="structre_1_1_render_pass_1_1_render_queue_obj" prot="private">re::RenderPass::RenderQueueObj</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classre_1_1_render_pass_1a3ef3064c5bc80559628d0c4c49e26cc5" prot="private" static="no" mutable="no">
        <type><ref refid="classre_1_1_render_pass_1_1_render_pass_builder" kindref="compound">RenderPass::RenderPassBuilder</ref></type>
        <definition>RenderPass::RenderPassBuilder re::RenderPass::m_builder</definition>
        <argsstring></argsstring>
        <name>m_builder</name>
        <qualifiedname>re::RenderPass::m_builder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="119" column="35" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1a0c694bae880ae2a0ba451b078dd1e17b" prot="private" static="no" mutable="no">
        <type><ref refid="classre_1_1_shader" kindref="compound">Shader</ref> *</type>
        <definition>Shader* re::RenderPass::m_lastBoundShader</definition>
        <argsstring></argsstring>
        <name>m_lastBoundShader</name>
        <qualifiedname>re::RenderPass::m_lastBoundShader</qualifiedname>
        <initializer>= { nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="120" column="12" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1a76a297579c5416044379d53adf77566d" prot="private" static="no" mutable="no">
        <type><ref refid="classre_1_1_material" kindref="compound">Material</ref> *</type>
        <definition>Material* re::RenderPass::m_lastBoundMaterial</definition>
        <argsstring></argsstring>
        <name>m_lastBoundMaterial</name>
        <qualifiedname>re::RenderPass::m_lastBoundMaterial</qualifiedname>
        <initializer>= { nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="121" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1a373db68ffb9cff26705957396b7bc5cb" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t re::RenderPass::m_lastBoundMeshId</definition>
        <argsstring></argsstring>
        <name>m_lastBoundMeshId</name>
        <qualifiedname>re::RenderPass::m_lastBoundMeshId</qualifiedname>
        <initializer>= { -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="122" column="13" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1adeb10fa719a5a078ea697f64d566ea07" prot="private" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 re::RenderPass::m_projection</definition>
        <argsstring></argsstring>
        <name>m_projection</name>
        <qualifiedname>re::RenderPass::m_projection</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="123" column="15" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1a829c1250058521501d3887ac94c32094" prot="private" static="no" mutable="no">
        <type>glm::uvec2</type>
        <definition>glm::uvec2 re::RenderPass::m_viewportOffset</definition>
        <argsstring></argsstring>
        <name>m_viewportOffset</name>
        <qualifiedname>re::RenderPass::m_viewportOffset</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="124" column="16" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1a9b8565bb3eaa907aa152e185f7a563ef" prot="private" static="no" mutable="no">
        <type>glm::uvec2</type>
        <definition>glm::uvec2 re::RenderPass::m_viewportSize</definition>
        <argsstring></argsstring>
        <name>m_viewportSize</name>
        <qualifiedname>re::RenderPass::m_viewportSize</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="125" column="16" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1a77abb6999e788ceeb50f02e6c3dc0fd7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; RenderQueueObj &gt;</type>
        <definition>std::vector&lt;RenderQueueObj&gt; re::RenderPass::m_renderQueue</definition>
        <argsstring></argsstring>
        <name>m_renderQueue</name>
        <qualifiedname>re::RenderPass::m_renderQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="126" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1aa4a8aedff3b70abba04af4b50966aef9" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> * &gt;</type>
        <definition>std::set&lt;Shader*&gt; re::RenderPass::m_shaders</definition>
        <argsstring></argsstring>
        <name>m_shaders</name>
        <qualifiedname>re::RenderPass::m_shaders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="127" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_render_pass_1a087b56c4cd5deaaea39bac36a7fd61a3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool re::RenderPass::m_isFinished</definition>
        <argsstring></argsstring>
        <name>m_isFinished</name>
        <qualifiedname>re::RenderPass::m_isFinished</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="128" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classre_1_1_render_pass_1a70538530bc36e033e360880ef311df61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Renderer</definition>
        <argsstring></argsstring>
        <name>Renderer</name>
        <qualifiedname>re::RenderPass::Renderer</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_renderer" kindref="compound">Renderer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="129" column="18" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classre_1_1_render_pass_1aaa5847ffb01f40be8be6b117cd6f281e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::RenderPass::RenderPass</definition>
        <argsstring>()=default</argsstring>
        <name>RenderPass</name>
        <qualifiedname>re::RenderPass::RenderPass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="90" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a699cf9154a76d79121f63e480af60b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::RenderPass::RenderPass</definition>
        <argsstring>(const RenderPass &amp;)=delete</argsstring>
        <name>RenderPass</name>
        <qualifiedname>re::RenderPass::RenderPass</qualifiedname>
        <param>
          <type>const <ref refid="classre_1_1_render_pass" kindref="compound">RenderPass</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="92" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1aac5de79fada282beca7e9e70dbaaee07" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>re::RenderPass::RenderPass</definition>
        <argsstring>(RenderPass &amp;&amp;rp) noexcept</argsstring>
        <name>RenderPass</name>
        <qualifiedname>re::RenderPass::RenderPass</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_render_pass" kindref="compound">RenderPass</ref> &amp;&amp;</type>
          <declname>rp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="93" column="5" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="121" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a55b6e7448436d84615f78a83dbdff32f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classre_1_1_render_pass" kindref="compound">RenderPass</ref> &amp;</type>
        <definition>RenderPass &amp; re::RenderPass::operator=</definition>
        <argsstring>(RenderPass &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>re::RenderPass::operator=</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_render_pass" kindref="compound">RenderPass</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="94" column="16" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="133" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a1452eb68e60810330c26d50d1e2ba8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>re::RenderPass::~RenderPass</definition>
        <argsstring>()</argsstring>
        <name>~RenderPass</name>
        <qualifiedname>re::RenderPass::~RenderPass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="95" column="13" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a3758e025618aed28df649224b504e40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::drawLines</definition>
        <argsstring>(const std::vector&lt; glm::vec3 &gt; &amp;vertices, Color color={ 1.0f, 1.0f, 1.0f, 1.0f }, Mesh::Topology meshTopology=Mesh::Topology::Lines)</argsstring>
        <name>drawLines</name>
        <qualifiedname>re::RenderPass::drawLines</qualifiedname>
        <param>
          <type>const std::vector&lt; glm::vec3 &gt; &amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type><ref refid="classre_1_1_color" kindref="compound">Color</ref></type>
          <declname>color</declname>
          <defval>{ 1.0f, 1.0f, 1.0f, 1.0f }</defval>
        </param>
        <param>
          <type>Mesh::Topology</type>
          <declname>meshTopology</declname>
          <defval>Mesh::Topology::Lines</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="96" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="147" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1af4bfabd54f0f6e174451bc96b31de54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::draw</definition>
        <argsstring>(const std::shared_ptr&lt; Mesh &gt; &amp;mesh, glm::mat4 modelTransform, std::shared_ptr&lt; Material &gt; &amp;material)</argsstring>
        <name>draw</name>
        <qualifiedname>re::RenderPass::draw</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classre_1_1_mesh" kindref="compound">Mesh</ref> &gt; &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>glm::mat4</type>
          <declname>modelTransform</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classre_1_1_material" kindref="compound">Material</ref> &gt; &amp;</type>
          <declname>material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="97" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1ac99c8a32bda70d04b5b075e1b993809c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::draw</definition>
        <argsstring>(std::shared_ptr&lt; Mesh &gt; &amp;mesh, glm::mat4 modelTransform, std::vector&lt; std::shared_ptr&lt; Material &gt; &gt; &amp;materials)</argsstring>
        <name>draw</name>
        <qualifiedname>re::RenderPass::draw</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classre_1_1_mesh" kindref="compound">Mesh</ref> &gt; &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>glm::mat4</type>
          <declname>modelTransform</declname>
        </param>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classre_1_1_material" kindref="compound">Material</ref> &gt; &gt; &amp;</type>
          <declname>materials</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="98" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1ac666f883e99bb05dd293b8bc0d09c0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::draw</definition>
        <argsstring>(std::shared_ptr&lt; SpriteBatch &gt; &amp;spriteBatch, glm::mat4 modelTransform=glm::mat4(1))</argsstring>
        <name>draw</name>
        <qualifiedname>re::RenderPass::draw</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classre_1_1_sprite_batch" kindref="compound">SpriteBatch</ref> &gt; &amp;</type>
          <declname>spriteBatch</declname>
        </param>
        <param>
          <type>glm::mat4</type>
          <declname>modelTransform</declname>
          <defval>glm::mat4(1)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="99" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="177" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a84b1eb42e6d8113e01e6a8b4a120f093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::draw</definition>
        <argsstring>(std::shared_ptr&lt; SpriteBatch &gt; &amp;&amp;spriteBatch, glm::mat4 modelTransform=glm::mat4(1))</argsstring>
        <name>draw</name>
        <qualifiedname>re::RenderPass::draw</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classre_1_1_sprite_batch" kindref="compound">SpriteBatch</ref> &gt; &amp;&amp;</type>
          <declname>spriteBatch</declname>
        </param>
        <param>
          <type>glm::mat4</type>
          <declname>modelTransform</declname>
          <defval>glm::mat4(1)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="100" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="188" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a06156c851ccc5d3a94bda81f11144066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::blit</definition>
        <argsstring>(std::shared_ptr&lt; Texture &gt; texture, glm::mat4 transformation=glm::mat4(1.0f))</argsstring>
        <name>blit</name>
        <qualifiedname>re::RenderPass::blit</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classre_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>glm::mat4</type>
          <declname>transformation</declname>
          <defval>glm::mat4(1.0f)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="101" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="199" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a6634f5ea607ac116f24a5a5a2ced038c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::blit</definition>
        <argsstring>(std::shared_ptr&lt; Material &gt; material, glm::mat4 transformation=glm::mat4(1.0f))</argsstring>
        <name>blit</name>
        <qualifiedname>re::RenderPass::blit</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classre_1_1_material" kindref="compound">Material</ref> &gt;</type>
          <declname>material</declname>
        </param>
        <param>
          <type>glm::mat4</type>
          <declname>transformation</declname>
          <defval>glm::mat4(1.0f)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="102" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="206" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a2d0e7b8dfab4aa1f8064a1a8887cdaf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classre_1_1_color" kindref="compound">Color</ref> &gt;</type>
        <definition>std::vector&lt; Color &gt; re::RenderPass::readPixels</definition>
        <argsstring>(unsigned int x, unsigned int y, unsigned int width=1, unsigned int height=1)</argsstring>
        <name>readPixels</name>
        <qualifiedname>re::RenderPass::readPixels</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>width</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>height</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="104" column="17" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="328" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a717d257db5a53ee3134995435002ebf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::finishGPUCommandBuffer</definition>
        <argsstring>() const</argsstring>
        <name>finishGPUCommandBuffer</name>
        <qualifiedname>re::RenderPass::finishGPUCommandBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="106" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1ae6358ca5e435fedd120e56c0a0a3ddc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::finish</definition>
        <argsstring>()</argsstring>
        <name>finish</name>
        <qualifiedname>re::RenderPass::finish</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="107" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="249" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a80dbdd4040a3f19a9626e2c128e22b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::RenderPass::isFinished</definition>
        <argsstring>()</argsstring>
        <name>isFinished</name>
        <qualifiedname>re::RenderPass::isFinished</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="108" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="359" bodyend="362"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classre_1_1_render_pass_1a32e4ffa03bb517604fa319d546081308" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classre_1_1_render_pass_1_1_render_pass_builder" kindref="compound">RenderPassBuilder</ref></type>
        <definition>RenderPass::RenderPassBuilder re::RenderPass::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <qualifiedname>re::RenderPass::create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="91" column="30" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classre_1_1_render_pass_1a2ac806cb5f21e793705aa2e174e77203" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::RenderPass::RenderPass</definition>
        <argsstring>(RenderPass::RenderPassBuilder &amp;builder)</argsstring>
        <name>RenderPass</name>
        <qualifiedname>re::RenderPass::RenderPass</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_render_pass_1_1_render_pass_builder" kindref="compound">RenderPass::RenderPassBuilder</ref> &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="111" column="14" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="42" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a148a03d503d105134c6b344578066583" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::setupShaderRenderPass</definition>
        <argsstring>(Shader *shader)</argsstring>
        <name>setupShaderRenderPass</name>
        <qualifiedname>re::RenderPass::setupShaderRenderPass</qualifiedname>
        <param>
          <type><ref refid="classre_1_1_shader" kindref="compound">Shader</ref> *</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="112" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="398" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1afe5d600e91f994671fc8124fd9d22640" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::setupShaderRenderPass</definition>
        <argsstring>(const GlobalUniforms &amp;globalUniforms)</argsstring>
        <name>setupShaderRenderPass</name>
        <qualifiedname>re::RenderPass::setupShaderRenderPass</qualifiedname>
        <param>
          <type>const GlobalUniforms &amp;</type>
          <declname>globalUniforms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="113" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="415" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1af5ee8a7cc83793090621ccb6b28c84f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::setupGlobalShaderUniforms</definition>
        <argsstring>()</argsstring>
        <name>setupGlobalShaderUniforms</name>
        <qualifiedname>re::RenderPass::setupGlobalShaderUniforms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="114" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="452" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1a4348afdc0c2cf44eca5b461ebbadc210" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::setupShader</definition>
        <argsstring>(const glm::mat4 &amp;modelTransform, Shader *shader)</argsstring>
        <name>setupShader</name>
        <qualifiedname>re::RenderPass::setupShader</qualifiedname>
        <param>
          <type>const glm::mat4 &amp;</type>
          <declname>modelTransform</declname>
        </param>
        <param>
          <type><ref refid="classre_1_1_shader" kindref="compound">Shader</ref> *</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="115" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="223" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_render_pass_1aa1f0aaabc37910c18d1a54e141a9249d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::RenderPass::drawInstance</definition>
        <argsstring>(RenderQueueObj &amp;rqObj)</argsstring>
        <name>drawInstance</name>
        <qualifiedname>re::RenderPass::drawInstance</qualifiedname>
        <param>
          <type>RenderQueueObj &amp;</type>
          <declname>rqObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="116" column="10" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.cpp" bodystart="364" bodyend="396"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" line="26" column="1" bodyfile="/Users/william/Developer/demo/simpleRenderEngine/re/core/renderPass.h" bodystart="27" bodyend="130"/>
    <listofallmembers>
      <member refid="classre_1_1_render_pass_1a06156c851ccc5d3a94bda81f11144066" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>blit</name></member>
      <member refid="classre_1_1_render_pass_1a6634f5ea607ac116f24a5a5a2ced038c" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>blit</name></member>
      <member refid="classre_1_1_render_pass_1a32e4ffa03bb517604fa319d546081308" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>create</name></member>
      <member refid="classre_1_1_render_pass_1af4bfabd54f0f6e174451bc96b31de54e" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>draw</name></member>
      <member refid="classre_1_1_render_pass_1ac99c8a32bda70d04b5b075e1b993809c" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>draw</name></member>
      <member refid="classre_1_1_render_pass_1ac666f883e99bb05dd293b8bc0d09c0ba" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>draw</name></member>
      <member refid="classre_1_1_render_pass_1a84b1eb42e6d8113e01e6a8b4a120f093" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>draw</name></member>
      <member refid="classre_1_1_render_pass_1aa1f0aaabc37910c18d1a54e141a9249d" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>drawInstance</name></member>
      <member refid="classre_1_1_render_pass_1a3758e025618aed28df649224b504e40b" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>drawLines</name></member>
      <member refid="classre_1_1_render_pass_1ae6358ca5e435fedd120e56c0a0a3ddc2" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>finish</name></member>
      <member refid="classre_1_1_render_pass_1a717d257db5a53ee3134995435002ebf9" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>finishGPUCommandBuffer</name></member>
      <member refid="classre_1_1_render_pass_1a80dbdd4040a3f19a9626e2c128e22b5f" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>isFinished</name></member>
      <member refid="classre_1_1_render_pass_1a3ef3064c5bc80559628d0c4c49e26cc5" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_builder</name></member>
      <member refid="classre_1_1_render_pass_1a087b56c4cd5deaaea39bac36a7fd61a3" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_isFinished</name></member>
      <member refid="classre_1_1_render_pass_1a76a297579c5416044379d53adf77566d" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_lastBoundMaterial</name></member>
      <member refid="classre_1_1_render_pass_1a373db68ffb9cff26705957396b7bc5cb" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_lastBoundMeshId</name></member>
      <member refid="classre_1_1_render_pass_1a0c694bae880ae2a0ba451b078dd1e17b" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_lastBoundShader</name></member>
      <member refid="classre_1_1_render_pass_1adeb10fa719a5a078ea697f64d566ea07" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_projection</name></member>
      <member refid="classre_1_1_render_pass_1a77abb6999e788ceeb50f02e6c3dc0fd7" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_renderQueue</name></member>
      <member refid="classre_1_1_render_pass_1aa4a8aedff3b70abba04af4b50966aef9" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_shaders</name></member>
      <member refid="classre_1_1_render_pass_1a829c1250058521501d3887ac94c32094" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_viewportOffset</name></member>
      <member refid="classre_1_1_render_pass_1a9b8565bb3eaa907aa152e185f7a563ef" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>m_viewportSize</name></member>
      <member refid="classre_1_1_render_pass_1a55b6e7448436d84615f78a83dbdff32f" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>operator=</name></member>
      <member refid="classre_1_1_render_pass_1a2d0e7b8dfab4aa1f8064a1a8887cdaf1" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>readPixels</name></member>
      <member refid="classre_1_1_render_pass_1a70538530bc36e033e360880ef311df61" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>Renderer</name></member>
      <member refid="classre_1_1_render_pass_1aaa5847ffb01f40be8be6b117cd6f281e" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>RenderPass</name></member>
      <member refid="classre_1_1_render_pass_1a699cf9154a76d79121f63e480af60b06" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>RenderPass</name></member>
      <member refid="classre_1_1_render_pass_1aac5de79fada282beca7e9e70dbaaee07" prot="public" virt="non-virtual"><scope>re::RenderPass</scope><name>RenderPass</name></member>
      <member refid="classre_1_1_render_pass_1a2ac806cb5f21e793705aa2e174e77203" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>RenderPass</name></member>
      <member refid="classre_1_1_render_pass_1af5ee8a7cc83793090621ccb6b28c84f0" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>setupGlobalShaderUniforms</name></member>
      <member refid="classre_1_1_render_pass_1a4348afdc0c2cf44eca5b461ebbadc210" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>setupShader</name></member>
      <member refid="classre_1_1_render_pass_1a148a03d503d105134c6b344578066583" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>setupShaderRenderPass</name></member>
      <member refid="classre_1_1_render_pass_1afe5d600e91f994671fc8124fd9d22640" prot="private" virt="non-virtual"><scope>re::RenderPass</scope><name>setupShaderRenderPass</name></member>
      <member refid="classre_1_1_render_pass_1a1452eb68e60810330c26d50d1e2ba8bf" prot="public" virt="virtual"><scope>re::RenderPass</scope><name>~RenderPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
