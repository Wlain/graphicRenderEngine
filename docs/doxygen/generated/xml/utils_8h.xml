<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="utils_8h" kind="file" language="C++">
    <compoundname>utils.h</compoundname>
    <includes refid="common_macro_8h" local="yes">utils/commonMacro.h</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">fstream</includes>
    <includedby refid="model_importer_8cpp" local="yes">/Users/william/Developer/demo/graphicRenderEngine/ceres/core/modelImporter.cpp</includedby>
    <includedby refid="shader_8cpp" local="yes">/Users/william/Developer/demo/graphicRenderEngine/ceres/core/shader.cpp</includedby>
    <includedby refid="sprite_atlas_8cpp" local="yes">/Users/william/Developer/demo/graphicRenderEngine/ceres/core/spriteAtlas.cpp</includedby>
    <includedby refid="texture_8cpp" local="yes">/Users/william/Developer/demo/graphicRenderEngine/ceres/core/texture.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>utils/commonMacro.h</label>
        <link refid="common_macro_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>singleton.h</label>
        <link refid="singleton_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>cstdio</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="12">
        <label>filesystem</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="11">
        <label>thread</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/william/Developer/demo/graphicRenderEngine/ceres/core/modelImporter.cpp</label>
        <link refid="model_importer_8cpp_source"/>
      </node>
      <node id="3">
        <label>/Users/william/Developer/demo/graphicRenderEngine/ceres/core/shader.cpp</label>
        <link refid="shader_8cpp_source"/>
      </node>
      <node id="4">
        <label>/Users/william/Developer/demo/graphicRenderEngine/ceres/core/spriteAtlas.cpp</label>
        <link refid="sprite_atlas_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/william/Developer/demo/graphicRenderEngine/ceres/core/texture.cpp</label>
        <link refid="texture_8cpp_source"/>
      </node>
      <node id="1">
        <label>/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="utils_8h_1a66a76a987faf8b1f816da7083a100142" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string getFileContents</definition>
        <argsstring>(const std::filesystem::path &amp;filename)</argsstring>
        <name>getFileContents</name>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h" line="12" column="20" bodyfile="/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h" bodystart="12" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a6c6be07c912e8ea4dbe95daa39097e8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>static std::string_view getCurrentOperationSystem</definition>
        <argsstring>()</argsstring>
        <name>getCurrentOperationSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h" line="32" column="25" bodyfile="/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h" bodystart="32" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a2e36e351f99a635128b487e1de484c8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>static std::vector&lt; std::string &gt; getCurrentDirFiles</definition>
        <argsstring>(std::string_view fileDir)</argsstring>
        <name>getCurrentDirFiles</name>
        <param>
          <type>std::string_view</type>
          <declname>fileDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h" line="45" column="20" bodyfile="/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h" bodystart="45" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>william<sp/>on<sp/>2022/6/1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICRENDERENGINE_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRAPHICRENDERENGINE_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils/commonMacro.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>getFileContents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::filesystem::path&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>in{<sp/>filename,<sp/>std::ios::in<sp/>|<sp/>std::ios::binary<sp/>};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>contents;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in.seekg(0,<sp/>std::ios::end);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>in.tellg();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contents.resize((std::string::size_type)size);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in.seekg(0,<sp/>std::ios::beg);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in.read(&amp;contents[0],<sp/>contents.size());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in.close();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contents;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_ERROR(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>{}.<sp/>Error<sp/>code:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>filename.c_str(),<sp/>errno);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string_view<sp/>getCurrentOperationSystem()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Windows&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>IS_LINUX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Linux&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>IS_MACOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;macOS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>system!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>getCurrentDirFiles(std::string_view<sp/>fileDir)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>files;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::directory_iterator<sp/>lists(fileDir);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>file<sp/>:<sp/>lists)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files.emplace_back(file.path().filename().c_str());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>files;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>GRAPHICRENDERENGINE_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/william/Developer/demo/graphicRenderEngine/ceres/utils/utils.h"/>
  </compounddef>
</doxygen>
