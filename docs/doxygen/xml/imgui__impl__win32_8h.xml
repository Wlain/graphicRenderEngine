<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__impl__win32_8h" kind="file" language="C++">
    <compoundname>imgui_impl_win32.h</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includedby refid="imgui__impl__win32_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp</includedby>
    <includedby refid="imgui_2examples_2example__win32__directx10_2main_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx10/main.cpp</includedby>
    <includedby refid="imgui_2examples_2example__win32__directx11_2main_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx11/main.cpp</includedby>
    <includedby refid="imgui_2examples_2example__win32__directx12_2main_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx12/main.cpp</includedby>
    <includedby refid="imgui_2examples_2example__win32__directx9_2main_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx9/main.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h</label>
        <link refid="imgui__impl__win32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp</label>
        <link refid="imgui__impl__win32_8cpp_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h</label>
        <link refid="imgui__impl__win32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx10/main.cpp</label>
        <link refid="imgui_2examples_2example__win32__directx10_2main_8cpp_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx11/main.cpp</label>
        <link refid="imgui_2examples_2example__win32__directx11_2main_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx12/main.cpp</label>
        <link refid="imgui_2examples_2example__win32__directx12_2main_8cpp_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_win32_directx9/main.cpp</label>
        <link refid="imgui_2examples_2example__win32__directx9_2main_8cpp_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__win32_8h_1a9f752412a1f6dfdf6fc00dbbd90a8428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API bool</type>
        <definition>IMGUI_IMPL_API bool ImGui_ImplWin32_Init</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_Init</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" line="19" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="116" bodyend="170" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" declline="19" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8h_1a4a64d684eab1b6aed8c2f23aaa427d49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplWin32_Shutdown</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" line="20" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="172" bodyend="189" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" declline="20" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8h_1acfa678a90a3331b9e2d2214d190e0718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplWin32_NewFrame</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_NewFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" line="21" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="394" bodyend="429" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" declline="21" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8h_1a1dd8952480dd70d48de16334e5686dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplWin32_EnableDpiAwareness</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_EnableDpiAwareness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" line="36" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="762" bodyend="789" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" declline="36" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8h_1aac16bf93a00e545ac237b661b4824b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API float</type>
        <definition>IMGUI_IMPL_API float ImGui_ImplWin32_GetDpiScaleForHwnd</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_GetDpiScaleForHwnd</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" line="37" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="821" bodyend="825" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" declline="37" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8h_1a8cf9e14edd8ff4e36fa6331c5c0de0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API float</type>
        <definition>IMGUI_IMPL_API float ImGui_ImplWin32_GetDpiScaleForMonitor</definition>
        <argsstring>(void *monitor)</argsstring>
        <name>ImGui_ImplWin32_GetDpiScaleForMonitor</name>
        <param>
          <type>void *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" line="38" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="795" bodyend="819" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" declline="38" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8h_1abfca68b49882f693320d6cbd9ad839b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplWin32_EnableAlphaCompositing</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_EnableAlphaCompositing</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" line="43" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1158" bodyend="1185" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h" declline="43" declcolumn="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Platform<sp/>Backend<sp/>for<sp/>Windows<sp/>(standard<sp/>windows<sp/>API<sp/>for<sp/>32<sp/>and<sp/>64<sp/>bits<sp/>applications)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Renderer<sp/>(e.g.<sp/>DirectX11,<sp/>OpenGL3,<sp/>Vulkan..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Clipboard<sp/>support<sp/>(for<sp/>Win32<sp/>this<sp/>is<sp/>actually<sp/>part<sp/>of<sp/>core<sp/>dear<sp/>imgui)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Keyboard<sp/>support.<sp/>Since<sp/>1.87<sp/>we<sp/>are<sp/>using<sp/>the<sp/>io.AddKeyEvent()<sp/>function.<sp/>Pass<sp/>ImGuiKey<sp/>values<sp/>to<sp/>all<sp/>key<sp/>functions<sp/>e.g.<sp/>ImGui::IsKeyPressed(ImGuiKey_Space).<sp/>[Legacy<sp/>VK_*<sp/>values<sp/>will<sp/>also<sp/>be<sp/>supported<sp/>unless<sp/>IMGUI_DISABLE_OBSOLETE_KEYIO<sp/>is<sp/>set]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Gamepad<sp/>support.<sp/>Enabled<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NavEnableGamepad&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Mouse<sp/>cursor<sp/>shape<sp/>and<sp/>visibility.<sp/>Disable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NoMouseCursorChange&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Multi-viewport<sp/>support<sp/>(multiple<sp/>windows).<sp/>Enable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_ViewportsEnable&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>Dear<sp/>ImGui,<sp/>read<sp/>documentation<sp/>from<sp/>the<sp/>docs/<sp/>folder<sp/>+<sp/>read<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>online:<sp/>https://github.com/ocornut/imgui/tree/master/docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IMGUI_IMPL_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_Init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_Shutdown();</highlight></codeline>
<codeline lineno="21"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_NewFrame();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Win32<sp/>message<sp/>handler<sp/>your<sp/>application<sp/>need<sp/>to<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Intentionally<sp/>commented<sp/>out<sp/>in<sp/>a<sp/>&apos;#if<sp/>0&apos;<sp/>block<sp/>to<sp/>avoid<sp/>dragging<sp/>dependencies<sp/>on<sp/>&lt;windows.h&gt;<sp/>from<sp/>this<sp/>helper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>You<sp/>should<sp/>COPY<sp/>the<sp/>line<sp/>below<sp/>into<sp/>your<sp/>.cpp<sp/>code<sp/>to<sp/>forward<sp/>declare<sp/>the<sp/>function<sp/>and<sp/>then<sp/>you<sp/>can<sp/>call<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>IMGUI_IMPL_API<sp/>LRESULT<sp/>ImGui_ImplWin32_WndProcHandler(HWND<sp/>hWnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DPI-related<sp/>helpers<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Use<sp/>to<sp/>enable<sp/>DPI<sp/>awareness<sp/>without<sp/>having<sp/>to<sp/>create<sp/>an<sp/>application<sp/>manifest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Your<sp/>own<sp/>app<sp/>may<sp/>already<sp/>do<sp/>this<sp/>via<sp/>a<sp/>manifest<sp/>or<sp/>explicit<sp/>calls.<sp/>This<sp/>is<sp/>mostly<sp/>useful<sp/>for<sp/>our<sp/>examples/<sp/>apps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>In<sp/>theory<sp/>we<sp/>could<sp/>call<sp/>simple<sp/>functions<sp/>from<sp/>Windows<sp/>SDK<sp/>such<sp/>as<sp/>SetProcessDPIAware(),<sp/>SetProcessDpiAwareness(),<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>but<sp/>most<sp/>of<sp/>the<sp/>functions<sp/>provided<sp/>by<sp/>Microsoft<sp/>require<sp/>Windows<sp/>8.1/10+<sp/>SDK<sp/>at<sp/>compile<sp/>time<sp/>and<sp/>Windows<sp/>8/10+<sp/>at<sp/>runtime,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>neither<sp/>we<sp/>want<sp/>to<sp/>require<sp/>the<sp/>user<sp/>to<sp/>have.<sp/>So<sp/>we<sp/>dynamically<sp/>select<sp/>and<sp/>load<sp/>those<sp/>functions<sp/>to<sp/>avoid<sp/>dependencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_EnableDpiAwareness();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_GetDpiScaleForHwnd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HWND<sp/>hwnd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_GetDpiScaleForMonitor(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>monitor);<sp/></highlight><highlight class="comment">//<sp/>HMONITOR<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transparency<sp/>related<sp/>helpers<sp/>(optional)<sp/>[experimental]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Use<sp/>to<sp/>enable<sp/>alpha<sp/>compositing<sp/>transparency<sp/>with<sp/>the<sp/>desktop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Use<sp/>together<sp/>with<sp/>e.g.<sp/>clearing<sp/>your<sp/>framebuffer<sp/>with<sp/>zero-alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_EnableAlphaCompositing(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HWND<sp/>hwnd</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.h"/>
  </compounddef>
</doxygen>
