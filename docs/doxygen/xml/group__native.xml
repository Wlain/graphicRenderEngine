<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__native" kind="group">
    <compoundname>native</compoundname>
    <title>Native access</title>
    <briefdescription>
<para>Functions related to accessing native handles. </para>
    </briefdescription>
    <detaileddescription>
<para><bold>By using the native access functions you assert that you know what you&apos;re doing and how to fix problems caused by using them. If you don&apos;t, you shouldn&apos;t be using them.</bold></para>
<para>Before the inclusion of <ref refid="imgui_2examples_2libs_2glfw_2include_2_g_l_f_w_2glfw3native_8h" kindref="compound">glfw3native.h</ref>, you may define zero or more window system API macro and zero or more context creation API macros.</para>
<para>The chosen backends must match those the library was compiled for. Failure to do this will cause a link-time error.</para>
<para>The available window API macros are:<itemizedlist>
<listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_WIN32</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_COCOA</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_X11</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_WAYLAND</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>The available context API macros are:<itemizedlist>
<listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_WGL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_NSGL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_GLX</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_EGL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_OSMESA</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>These macros select which of the native access functions that are declared and which platform-specific headers to include. It is then up your (by definition platform-specific) code to handle which of these should be defined.</para>
<para><bold>By using the native access functions you assert that you know what you&apos;re doing and how to fix problems caused by using them. If you don&apos;t, you shouldn&apos;t be using them.</bold></para>
<para>Before the inclusion of <ref refid="imgui_2examples_2libs_2glfw_2include_2_g_l_f_w_2glfw3native_8h" kindref="compound">glfw3native.h</ref>, you may define exactly one window system API macro and zero or more context creation API macros.</para>
<para>The chosen backends must match those the library was compiled for. Failure to do this will cause a link-time error.</para>
<para>The available window API macros are:<itemizedlist>
<listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_WIN32</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_COCOA</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_X11</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_WAYLAND</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_MIR</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>The available context API macros are:<itemizedlist>
<listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_WGL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_NSGL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_GLX</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_EXPOSE_NATIVE_EGL</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>These macros select which of the native access functions that are declared and which platform-specific headers to include. It is then up your (by definition platform-specific) code to handle which of these should be defined. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
