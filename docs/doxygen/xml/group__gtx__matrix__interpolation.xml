<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__matrix__interpolation" kind="group">
    <compoundname>gtx_matrix_interpolation</compoundname>
    <title>GLM_GTX_matrix_interpolation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__matrix__interpolation_1ga97f160158906ea89676f56cc4697ec98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::axisAngle</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;mat, vec&lt; 3, T, Q &gt; &amp;axis, T &amp;angle)</argsstring>
        <name>axisAngle</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the axis and angle of the rotation from a matrix. From GLM_GTX_matrix_interpolation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" line="35" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.inl" bodystart="9" bodyend="89" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" declline="35" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__interpolation_1ga7e1be2174dd0466008270f8d406e208c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::axisAngleMatrix</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;axis, T const angle)</argsstring>
        <name>axisAngleMatrix</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>T const</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from axis and angle. From GLM_GTX_matrix_interpolation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" line="43" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.inl" bodystart="92" bodyend="104" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" declline="43" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__interpolation_1gac660022b8e9cc2a330bbb5bdae1eb8cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::extractMatrixRotation</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;mat)</argsstring>
        <name>extractMatrixRotation</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the rotation part of a matrix. From GLM_GTX_matrix_interpolation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" line="50" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.inl" bodystart="107" bodyend="114" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" declline="50" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__interpolation_1ga3441c9b579cf43c8e78645542937c4da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::interpolate</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m1, mat&lt; 4, 4, T, Q &gt; const &amp;m2, T const delta)</argsstring>
        <name>interpolate</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type>T const</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a interpolation of 4 * 4 matrixes. From GLM_GTX_matrix_interpolation extension. Warning! works only with rotation and/or translation matrixes, scale will generate unexpected results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" line="57" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.inl" bodystart="117" bodyend="129" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp" declline="57" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="matrix__interpolation_8hpp" kindref="compound">glm/gtx/matrix_interpolation.hpp</ref>&gt; to use the features of this extension.</para>
<para>Allows to directly interpolate two matrices. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
