<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="cave__mesher_8c" kind="file" language="C++">
    <compoundname>cave_mesher.c</compoundname>
    <includes refid="stb__gl_8h" local="yes">stb_gl.h</includes>
    <includes refid="stb__image_8h" local="yes">stb_image.h</includes>
    <includes refid="stb__glprog_8h" local="yes">stb_glprog.h</includes>
    <includes refid="caveview_8h" local="yes">caveview.h</includes>
    <includes refid="cave__parse_8h" local="yes">cave_parse.h</includes>
    <includes refid="stb_8h" local="yes">stb.h</includes>
    <includes local="yes">sdl.h</includes>
    <includes local="yes">sdl_thread.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="stb__voxel__render_8h" local="yes">stb_voxel_render.h</includes>
    <incdepgraph>
      <node id="11">
        <label>stb.h</label>
        <link refid="stb_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stb_image.h</label>
        <link refid="stb__image_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stb_voxel_render.h</label>
        <link refid="stb__voxel__render_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c</label>
        <link refid="cave__mesher_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cave_parse.h</label>
        <link refid="cave__parse_8h_source"/>
      </node>
      <node id="10">
        <label>caveview.h</label>
        <link refid="caveview_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stb_gl.h</label>
        <link refid="stb__gl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stb_glprog.h</label>
        <link refid="stb__glprog_8h_source"/>
      </node>
      <node id="4">
        <label>gl/gl.h</label>
      </node>
      <node id="5">
        <label>gl/glu.h</label>
      </node>
      <node id="19">
        <label>math.h</label>
      </node>
      <node id="17">
        <label>sdl.h</label>
      </node>
      <node id="18">
        <label>sdl_thread.h</label>
      </node>
      <node id="12">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="13">
        <label>string.h</label>
      </node>
      <node id="14">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcached__converted__chunk" prot="public">cached_converted_chunk</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cave__mesher_8c_1aae20e9fa62595e4621ebf19a38824f9f" prot="public" static="no">
        <name>STB_GLEXT_DECLARE</name>
        <initializer>&quot;glext_list.h&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="4" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a974b06da70220834204261702f3232bf" prot="public" static="no">
        <name>STBVOX_CONFIG_MODE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="19" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a81687755688954f9ef5707413c6d643c" prot="public" static="no">
        <name>STBVOX_CONFIG_OPENGL_MODELVIEW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="20" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a734835ebe7e96d37cf10a8cfb867f28e" prot="public" static="no">
        <name>STBVOX_CONFIG_PREFER_TEXBUFFER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="21" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1afbfd39d19102078d83c276346db11790" prot="public" static="no">
        <name>STBVOX_CONFIG_FOG_SMOOTHSTEP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="23" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a1216223b9bb3998115075e494d2f14e4" prot="public" static="no">
        <name>STBVOX_CONFIG_DISABLE_TEX2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="27" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a98386a77a0c5d01dacddbb177283a5cb" prot="public" static="no">
        <name>STBVOX_CONFIG_ROTATION_IN_LIGHTING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="29" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a2e3162139b42678f82424d8e2c2dc7ff" prot="public" static="no">
        <name>STB_VOXEL_RENDER_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="31" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a5d3aa76dea5c5fcbdee0e58ed42f2dfe" prot="public" static="no">
        <name>FAST_CHUNK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="37" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1acf9495e0af27842ed032cb05edcb9126" prot="public" static="no">
        <name>IN_PLACE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="38" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1af205db34cd0a183e5e3481c4f8baa716" prot="public" static="no">
        <name>SKIP_TERRAIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="40" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1af27f13c9b204e636f39b2ffa47096911" prot="public" static="no">
        <name>SUPERCHUNK_X</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="325" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1af2b8c9fb9e00cadb61f99d69b0dc71f4" prot="public" static="no">
        <name>SUPERCHUNK_Y</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="326" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__mesher_8c_1a3d38bc2fa620f958e39c87755218f173" prot="public" static="no">
        <name>CHUNK_CACHE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="479" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="479" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725" prot="public" static="no" strong="no">
        <type></type>
        <name>@139</name>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725a8e25f3fef8ddfd9ae47971d91958d83b" prot="public">
          <name>C_empty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725afff8826292ebae88305f433d13066894" prot="public">
          <name>C_solid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725a61eaada366b3b15525272abc143dbfd5" prot="public">
          <name>C_trans</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725af21da253d94bc582688921653c467895" prot="public">
          <name>C_cross</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725a0fcd3f1395447fcee9413f39c0687c76" prot="public">
          <name>C_water</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725a209b2a787a7b9ac2a8aa7cbf64df1b49" prot="public">
          <name>C_slab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725a184aff99562d1f8a4c2bb2886e6a88e6" prot="public">
          <name>C_stair</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__mesher_8c_1a1e06e534e565b0e44afdf96c77951725ad11d3d00256ac1a21a18239adfdc2de6" prot="public">
          <name>C_force</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="45" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="46" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cave__mesher_8c_1adbdd9089890d950d54cd125d4464eab7" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char geom_map[]</definition>
        <argsstring>[]</argsstring>
        <name>geom_map</name>
        <initializer>=
{
   STBVOX_GEOM_empty,
   STBVOX_GEOM_solid,
   STBVOX_GEOM_transp,
   STBVOX_GEOM_crossed_pair,
   STBVOX_GEOM_solid,
   STBVOX_GEOM_slab_lower,
   STBVOX_GEOM_floor_slope_north_is_top,
   STBVOX_GEOM_force,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="57" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a17dd80d3766327026eae4547eae231fd" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char minecraft_info[256][7]</definition>
        <argsstring>[256][7]</argsstring>
        <name>minecraft_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="69" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char minecraft_tex1_for_blocktype[256][6]</definition>
        <argsstring>[256][6]</argsstring>
        <name>minecraft_tex1_for_blocktype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="307" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1af38282980cc171915d4acfe5f3e03c90" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char effective_blocktype[256]</definition>
        <argsstring>[256]</argsstring>
        <name>effective_blocktype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="308" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char minecraft_color_for_blocktype[256][6]</definition>
        <argsstring>[256][6]</argsstring>
        <name>minecraft_color_for_blocktype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="309" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1ae01a977fd1f7c889f186baee1076b732" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char minecraft_geom_for_blocktype[256]</definition>
        <argsstring>[256]</argsstring>
        <name>minecraft_geom_for_blocktype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="310" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a165e793676d312d0c37aa23551127f48" prot="public" static="no" mutable="no">
        <type>uint8</type>
        <definition>uint8 build_buffer[BUILD_BUFFER_SIZE]</definition>
        <argsstring>[BUILD_BUFFER_SIZE]</argsstring>
        <name>build_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="312" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1aa27715cf788c95d0334051f4bfe7ade9" prot="public" static="no" mutable="no">
        <type>uint8</type>
        <definition>uint8 face_buffer[FACE_BUFFER_SIZE]</definition>
        <argsstring>[FACE_BUFFER_SIZE]</argsstring>
        <name>face_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="313" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a2015282d41ced055a462520de780e814" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char remap_data[16][16]</definition>
        <argsstring>[16][16]</argsstring>
        <name>remap_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="328" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char remap[256]</definition>
        <argsstring>[256]</argsstring>
        <name>remap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="329" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a1b58e7e250316c8d1a2fe21fafaa5fcd" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char rotate_data[4]</definition>
        <argsstring>[4]</argsstring>
        <name>rotate_data</name>
        <initializer>= { 1,3,2,0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="330" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1ab799c6e56a65a1a9a2c089c9d4b81de9" prot="public" static="no" mutable="no">
        <type><ref refid="structcached__converted__chunk" kindref="compound">cached_converted_chunk</ref></type>
        <definition>cached_converted_chunk chunk_cache[CHUNK_CACHE][CHUNK_CACHE]</definition>
        <argsstring>[CHUNK_CACHE][CHUNK_CACHE]</argsstring>
        <name>chunk_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="487" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1adc2cfac3a357c5424aafa9d351a2e6ea" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cache_size</definition>
        <argsstring></argsstring>
        <name>cache_size</name>
        <initializer>= CHUNK_CACHE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="488" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a784ba0617dbc4eec455188b9671295aa" prot="public" static="no" mutable="no">
        <type>SDL_mutex *</type>
        <definition>SDL_mutex* chunk_cache_mutex</definition>
        <argsstring></argsstring>
        <name>chunk_cache_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="522" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a9105640f64bd2fca823fa679f99fb62b" prot="public" static="no" mutable="no">
        <type>SDL_mutex *</type>
        <definition>SDL_mutex* chunk_get_mutex</definition>
        <argsstring></argsstring>
        <name>chunk_get_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="523" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1a209a4cb1b4169823bf527e2e1410d8a1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int next_blocktype</definition>
        <argsstring></argsstring>
        <name>next_blocktype</name>
        <initializer>= 255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="728" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__mesher_8c_1affec1534a3e53c768c48caac2475d930" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char mc_rot[4]</definition>
        <argsstring>[4]</argsstring>
        <name>mc_rot</name>
        <initializer>= { 1,3,2,0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="730" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="730" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cave__mesher_8c_1aefd62d461236c6e9ced738eac9d8042c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ods</definition>
        <argsstring>(char *fmt,...)</argsstring>
        <name>ods</name>
        <param>
          <type>char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="34" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_main.c" bodystart="311" bodyend="319" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" declline="34" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a147e37fcae806febbdaac22c776d5685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void convert_fastchunk_inplace</definition>
        <argsstring>(fast_chunk *fc)</argsstring>
        <name>convert_fastchunk_inplace</name>
        <param>
          <type><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref> *</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="332" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="332" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a7bea63cfeb0603fcda8860fe0355fb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_converted_fastchunk</definition>
        <argsstring>(fast_chunk *fc, int x, int y, int segment, uint8 *sv_blocktype, uint8 *sv_lighting)</argsstring>
        <name>make_converted_fastchunk</name>
        <param>
          <type><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>sv_blocktype</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>sv_lighting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="458" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="458" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1af74c70130c88949f4d2bac551594d41f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_cache_size</definition>
        <argsstring>(int size)</argsstring>
        <name>reset_cache_size</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="490" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="490" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a65286ae93fc1fc5e6e88af8d2f02a731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void deref_fastchunk</definition>
        <argsstring>(fast_chunk *fc)</argsstring>
        <name>deref_fastchunk</name>
        <param>
          <type><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref> *</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="510" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="510" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1af4e8c4c0c38242366db62d9936274079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lock_chunk_get_mutex</definition>
        <argsstring>(void)</argsstring>
        <name>lock_chunk_get_mutex</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="525" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="525" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1afaaad5f587e3275de99ae8ff61b2e18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unlock_chunk_get_mutex</definition>
        <argsstring>(void)</argsstring>
        <name>unlock_chunk_get_mutex</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="529" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a5e2133a8f3b157ab90945eb413a2c2b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref> *</type>
        <definition>fast_chunk * get_converted_fastchunk</definition>
        <argsstring>(int chunk_x, int chunk_y)</argsstring>
        <name>get_converted_fastchunk</name>
        <param>
          <type>int</type>
          <declname>chunk_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chunk_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="534" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="534" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a72869edd94d6159ab80497d6fcf71071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_map_segment_for_superchunk_preconvert</definition>
        <argsstring>(int chunk_x, int chunk_y, int segment, fast_chunk *fc_table[4][4], uint8 sv_blocktype[34][34][18], uint8 sv_lighting[34][34][18])</argsstring>
        <name>make_map_segment_for_superchunk_preconvert</name>
        <param>
          <type>int</type>
          <declname>chunk_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chunk_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segment</declname>
        </param>
        <param>
          <type><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref> *</type>
          <declname>fc_table</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>uint8</type>
          <declname>sv_blocktype</declname>
          <array>[34][34][18]</array>
        </param>
        <param>
          <type>uint8</type>
          <declname>sv_lighting</declname>
          <array>[34][34][18]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="582" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="582" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1ab4e47a2bc64f10cabe87c675e9b2bcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_chunk</definition>
        <argsstring>(int chunk_x, int chunk_y, fast_chunk *fc_table[4][4], raw_mesh *rm)</argsstring>
        <name>build_chunk</name>
        <param>
          <type>int</type>
          <declname>chunk_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chunk_y</declname>
        </param>
        <param>
          <type><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref> *</type>
          <declname>fc_table</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type><ref refid="structraw__mesh" kindref="compound">raw_mesh</ref> *</type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="602" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="602" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a626c17451761446962cffc9add2ed539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_stair_rotations</definition>
        <argsstring>(int blocktype, unsigned char *map)</argsstring>
        <name>build_stair_rotations</name>
        <param>
          <type>int</type>
          <declname>blocktype</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="735" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="735" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1addb3a71c75c33215207185a88be4bb62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_wool_variations</definition>
        <argsstring>(int bt, unsigned char *map)</argsstring>
        <name>build_wool_variations</name>
        <param>
          <type>int</type>
          <declname>bt</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="754" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="754" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1adcf4dda69d85bc49b9f4babc57587095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_wood_variations</definition>
        <argsstring>(int bt, unsigned char *map)</argsstring>
        <name>build_wood_variations</name>
        <param>
          <type>int</type>
          <declname>bt</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="772" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="772" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a16709242463cda7c163b826a5da978c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remap_in_place</definition>
        <argsstring>(int bt, int rm)</argsstring>
        <name>remap_in_place</name>
        <param>
          <type>int</type>
          <declname>bt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="794" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="794" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="cave__mesher_8c_1a24f0dbbfdca90a74902964396c137bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mesh_init</definition>
        <argsstring>(void)</argsstring>
        <name>mesh_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" line="803" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="803" bodyend="878"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>takes<sp/>minecraft<sp/>chunks<sp/>(decoded<sp/>by<sp/>cave_parse)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uses<sp/>stb_voxel_render<sp/>to<sp/>turn<sp/>them<sp/>into<sp/>vertex<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_GLEXT_DECLARE<sp/>&quot;glext_list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_gl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_glprog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;caveview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cave_parse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sdl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sdl_thread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>VHEIGHT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBVOX_OPTIMIZED_VHEIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_CONFIG_MODE<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_CONFIG_OPENGL_MODELVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBVOX_CONFIG_LIGHTING_SIMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_CONFIG_FOG_SMOOTHSTEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBVOX_CONFIG_PREMULTIPLIED_ALPHA<sp/><sp/>//<sp/>this<sp/>doesn&apos;t<sp/>work<sp/>properly<sp/>alpha<sp/>test<sp/>without<sp/>next<sp/>#define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBVOX_CONFIG_UNPREMULTIPLY<sp/><sp/>//<sp/>slower,<sp/>fixes<sp/>alpha<sp/>test<sp/>makes<sp/>windows<sp/>&amp;<sp/>fancy<sp/>leaves<sp/>look<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBVOX_CONFIG_TEX1_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBVOX_CONFIG_DOWN_TEXLERP_PACKED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_VOXEL_RENDER_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_voxel_render.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ods(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>FANCY_LEAVES<sp/><sp/>//<sp/>nearly<sp/>2x<sp/>the<sp/>triangles<sp/>when<sp/>enabled<sp/>(if<sp/>underground<sp/>is<sp/>filled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAST_CHUNK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SKIP_TERRAIN<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>SKIP_TERRAIN<sp/><sp/><sp/>48<sp/>//<sp/>use<sp/>to<sp/>avoid<sp/>building<sp/>underground<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allows<sp/>you<sp/>to<sp/>see<sp/>what<sp/>perf<sp/>would<sp/>be<sp/>like<sp/>if<sp/>underground<sp/>was<sp/>efficiently<sp/>culled,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>if<sp/>you<sp/>were<sp/>making<sp/>a<sp/>game<sp/>without<sp/>underground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>C_empty,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>C_solid,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>C_trans,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>C_cross,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>C_water,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>C_slab,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>C_stair,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>C_force,</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>geom_map[]<sp/>=</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_empty,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_solid,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_transp,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_crossed_pair,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_solid,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_slab_lower,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_floor_slope_north_is_top,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_force,</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>minecraft_info[256][7]<sp/>=</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty,<sp/>0,0,0,0,0,0<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>1,1,1,1,1,1<sp/>},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>3,3,3,3,40,2<sp/>},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>2,2,2,2,2,2<sp/>},</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>16,16,16,16,16,16<sp/>},</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>4,4,4,4,4,4<sp/>},</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>15,15,15,15<sp/>},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>17,17,17,17,17,17<sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_water,<sp/>223,223,223,223,223,223<sp/>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_water,<sp/>223,223,223,223,223,223<sp/>},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>255,255,255,255,255,255<sp/>},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>255,255,255,255,255,255<sp/>},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>18,18,18,18,18,18<sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>19,19,19,19,19,19<sp/>},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>32,32,32,32,32,32<sp/>},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>33,33,33,33,33,33<sp/>},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>34,34,34,34,34,34<sp/>},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>20,20,20,20,21,21<sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FANCY_LEAVES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_force,<sp/>52,52,52,52,52,52<sp/>},<sp/></highlight><highlight class="comment">//<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>53,53,53,53,53,53<sp/>},<sp/></highlight><highlight class="comment">//<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>24,24,24,24,24,24<sp/>},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_trans,<sp/>49,49,49,49,49,49<sp/>},<sp/></highlight><highlight class="comment">//<sp/>glass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>160,160,160,160,160,160<sp/>},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>144,144,144,144,144,144<sp/>},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>46,45,45,45,62,62<sp/>},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>192,192,192,192,<sp/>176,176<sp/>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>74,74,74,74,74,74<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>bed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>powered<sp/>rail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>detector<sp/>rail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>106,108,109,108,108,108<sp/>},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>cobweb=11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>39,39,39,39<sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>55,55,55,55,0,0<sp/>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>107,108,109,108,108,108<sp/>},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>piston<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>64,64,64,64,64,64<sp/>},<sp/></highlight><highlight class="comment">//<sp/>various<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>13,13,13,13,0,0<sp/>},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>12,12,12,12,0,0<sp/>},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>29,29,29,29,0,0<sp/>},</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>28,28,28,28,0,0<sp/>},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>23,23,23,23,23,23<sp/>},</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>22,22,22,22,22,22<sp/>},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>5,5,5,5,6,6,<sp/>},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_slab<sp/>,<sp/>5,5,5,5,6,6,<sp/>},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>7,7,7,7,7,7,<sp/>},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>8,8,8,8,9,10<sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>35,35,35,35,4,4,<sp/>},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>C_solid,<sp/>36,36,36,36,36,36<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_force,<sp/>36,36,36,36,36,36<sp/>},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>37,37,37,37,37,37<sp/>},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>80,80,80,80,80,80<sp/>},<sp/></highlight><highlight class="comment">//<sp/>torch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>fire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_trans,<sp/>65,65,65,65,65,65<sp/>},</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_stair,<sp/>4,4,4,4,4,4<sp/>},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>26,26,26,27,25,25<sp/>},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>redstone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>56</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>50,50,50,50,50,50<sp/>},</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>C_force,<sp/>50,50,50,50,50,50<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>26,26,26,26,26,26<sp/>},</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>60,59,59,59,43,43<sp/>},</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>95,95,95,95<sp/>},</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>2,2,2,2,86,2<sp/>},</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>44,45,45,45,62,62<sp/>},</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>61,45,45,45,62,62<sp/>},</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>door</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ladder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>rail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_stair,<sp/>16,16,16,16,16,16<sp/>},<sp/></highlight><highlight class="comment">//<sp/>cobblestone<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>lever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>stone<sp/>pressure<sp/>plate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>iron<sp/>door</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>72</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>wooden<sp/>pressure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>51,51,51,51,51,51<sp/>},</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>51,51,51,51,51,51<sp/>},</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>snow<sp/>on<sp/>block<sp/>below,<sp/>do<sp/>as<sp/>half<sp/>slab?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>67,67,67,67,67,67<sp/>},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>66,66,66,66,66,66<sp/>},</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>70,70,70,70,69,71<sp/>},</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>72,72,72,72,72,72<sp/>},</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_cross,<sp/>73,73,73,73,73,73<sp/>},</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>74,74,74,74,75,74<sp/>},</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>fence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,119,118,118,118,102,102<sp/>},</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,103,103,103,103,103,103<sp/>},</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>88</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>104,104,104,104,104,104<sp/>},</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>105,105,105,105,105,105<sp/>},</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>167,167,167,167,167,167<sp/>},</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>120,118,118,118,102,102<sp/>},</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>cake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>repeater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>repeater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>49,49,49,49,49,49<sp/>},<sp/></highlight><highlight class="comment">//<sp/>colored<sp/>glass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>96</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>54,54,54,54,54,54<sp/>},</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>125,125,125,125,125,125<sp/>},</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>126,126,126,126,126,126<sp/>},</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_trans,<sp/>49,49,49,49,49,49<sp/>},<sp/></highlight><highlight class="comment">//<sp/>glass<sp/>pane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>136,136,136,136,137,137<sp/>},<sp/></highlight><highlight class="comment">//<sp/>melon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>pumpkin<sp/>stem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>melon<sp/>stem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>vines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>gate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_stair,<sp/>7,7,7,7,7,7,<sp/>},<sp/></highlight><highlight class="comment">//<sp/>brick<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_stair,<sp/>54,54,54,54,54,54<sp/>},<sp/></highlight><highlight class="comment">//<sp/>stone<sp/>brick<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>mycelium</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>lily<sp/>pad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>224,224,224,224,224,224<sp/>},</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>nether<sp/>brick<sp/>fence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_stair,<sp/>224,224,224,224,224,224<sp/>},<sp/></highlight><highlight class="comment">//<sp/>nether<sp/>brick<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>nether<sp/>wart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>182,182,182,182,166,183<sp/>},</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>brewing<sp/>stand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>cauldron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>end<sp/>portal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>159,159,159,159,158,158<sp/>},</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>175,175,175,175,175,175<sp/>},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>dragon<sp/>egg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>211,211,211,211,211,211<sp/>},</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>212,212,212,212,212,212<sp/>},</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>4,4,4,4,4,4,<sp/>},<sp/></highlight><highlight class="comment">//<sp/>wood<sp/>double-slab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_slab<sp/>,<sp/>4,4,4,4,4,4,<sp/>},<sp/></highlight><highlight class="comment">//<sp/>wood<sp/>slab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>cocoa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>192,192,192,192,176,176<sp/>},<sp/></highlight><highlight class="comment">//<sp/>sandstone<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>32,32,32,32,32,32<sp/>},<sp/></highlight><highlight class="comment">//<sp/>emerald<sp/>ore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>26,26,26,27,25,25<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ender<sp/>chest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>23,23,23,23,23,23<sp/>},<sp/></highlight><highlight class="comment">//<sp/>emerald<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>198,198,198,198,198,198<sp/>},<sp/></highlight><highlight class="comment">//<sp/>spruce<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>214,214,214,214,214,214<sp/>},<sp/></highlight><highlight class="comment">//<sp/>birch<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_stair,<sp/>199,199,199,199,199,199<sp/>},<sp/></highlight><highlight class="comment">//<sp/>jungle<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>command<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>beacon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_slab,<sp/>16,16,16,16,16,16<sp/>},<sp/></highlight><highlight class="comment">//<sp/>cobblestone<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>flower<sp/>pot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>carrot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>potatoes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>wooden<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>144</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>mob<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>anvil</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>26,26,26,27,25,25<sp/>},<sp/></highlight><highlight class="comment">//<sp/>trapped<sp/>chest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>weighted<sp/>pressure<sp/>plate<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>weighted<sp/>pressure<sp/>plat<sp/>eheavy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>comparator<sp/>inactive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>comparator<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>daylight<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>152</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>135,135,135,135,135,135<sp/>},<sp/></highlight><highlight class="comment">//<sp/>redstone<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>0,0,0,0,0,0,<sp/>},<sp/></highlight><highlight class="comment">//<sp/>nether<sp/>quartz<sp/>ore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>hopper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>22,22,22,22,22,22<sp/>},<sp/></highlight><highlight class="comment">//<sp/>quartz<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_stair,<sp/>22,22,22,22,22,22<sp/>},<sp/></highlight><highlight class="comment">//<sp/>quartz<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},<sp/></highlight><highlight class="comment">//<sp/>activator<sp/>rail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>46,45,45,45,62,62<sp/>},<sp/></highlight><highlight class="comment">//<sp/>dropper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>72,72,72,72,72,72<sp/>},<sp/></highlight><highlight class="comment">//<sp/>stained<sp/>clay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>160</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_trans,<sp/>49,49,49,49,49,49<sp/>},<sp/></highlight><highlight class="comment">//<sp/>stained<sp/>glass<sp/>pane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>FANCY_LEAVES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_force,<sp/>52,52,52,52,52,52<sp/>},<sp/></highlight><highlight class="comment">//<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>53,53,53,53,53,53<sp/>},<sp/></highlight><highlight class="comment">//<sp/>acacia<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>20,20,20,20,21,21<sp/>},<sp/></highlight><highlight class="comment">//<sp/>acacia<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>199,199,199,199,199,199<sp/>},<sp/></highlight><highlight class="comment">//<sp/>acacia<sp/>wood<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>198,198,198,198,198,198<sp/>},<sp/></highlight><highlight class="comment">//<sp/>dark<sp/>oak<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>146,146,146,146,146,146<sp/>},<sp/></highlight><highlight class="comment">//<sp/>slime<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>176,176,176,176,176,176<sp/>},<sp/></highlight><highlight class="comment">//<sp/>red<sp/>sandstone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>176,176,176,176,176,176<sp/>},<sp/></highlight><highlight class="comment">//<sp/>red<sp/>sandstone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>168</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>72,72,72,72,72,72<sp/>},<sp/></highlight><highlight class="comment">//<sp/>hardened<sp/>clay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>176</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_empty<sp/>},</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>{<sp/>C_solid,<sp/>176,176,176,176,176,176<sp/>},<sp/></highlight><highlight class="comment">//<sp/>red<sp/>sandstone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>minecraft_tex1_for_blocktype[256][6];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>effective_blocktype[256];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>minecraft_color_for_blocktype[256][6];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>minecraft_geom_for_blocktype[256];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">uint8<sp/>build_buffer[BUILD_BUFFER_SIZE];</highlight></codeline>
<codeline lineno="313"><highlight class="normal">uint8<sp/>face_buffer[FACE_BUFFER_SIZE];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//GLuint<sp/>vbuf,<sp/>fbuf,<sp/>fbuf_tex;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//unsigned<sp/>char<sp/>tex1_for_blocktype[256][6];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//unsigned<sp/>char<sp/>blocktype[34][34][257];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//unsigned<sp/>char<sp/>lighting[34][34][257];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>superchunk<sp/>is<sp/>64x64x256,<sp/>with<sp/>the<sp/>border<sp/>blocks<sp/>computed<sp/>as<sp/>well,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>means<sp/>we<sp/>need<sp/>4x4<sp/>chunks<sp/>plus<sp/>16<sp/>border<sp/>chunks<sp/>plus<sp/>4<sp/>corner<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUPERCHUNK_X<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUPERCHUNK_Y<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>remap_data[16][16];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>remap[256];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rotate_data[4]<sp/>=<sp/>{<sp/>1,3,2,0<sp/>};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>convert_fastchunk_inplace(<ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_blocks=0,<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>=0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rot[4096];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*storage;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>memset(rot,<sp/>0,<sp/>4096);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_blocks<sp/>+=<sp/>fc-&gt;blockdata[i]<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>#ifndef<sp/>IN_PLACE</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>storage<sp/>=<sp/>malloc(16*16*16*2<sp/>*<sp/>num_blocks);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc-&gt;blockdata[i])<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o=0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bd,*dd,*lt,*sky;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/>*outb;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>ordering<sp/>allows<sp/>us<sp/>to<sp/>determine<sp/>which<sp/>data<sp/>we<sp/>can<sp/>safely<sp/>overwrite<sp/>for<sp/>in-place<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd<sp/>=<sp/>fc-&gt;blockdata[i];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>=<sp/>fc-&gt;data[i];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lt<sp/>=<sp/>fc-&gt;light[i];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sky<sp/>=<sp/>fc-&gt;skylight[i];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>bd;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>storage<sp/>+<sp/>16*16*16*2*<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bd<sp/>is<sp/>written<sp/>in<sp/>place,<sp/>but<sp/>also<sp/>reads<sp/>from<sp/>dd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(o=0;<sp/>o<sp/>&lt;<sp/>16*16*16/2;<sp/>o<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v1,v2;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>dd[o];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>bd[o*2+0];</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>bd[o*2+1];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remap[v1])</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>char<sp/>d<sp/>=<sp/>bd[o]<sp/>&amp;<sp/>15;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>remap_data[remap[v1]][d&amp;15];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot[o*2+0]<sp/>=<sp/>rotate_data[d&amp;3];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>effective_blocktype[v1];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remap[v2])</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>char<sp/>d<sp/>=<sp/>bd[o]<sp/>&gt;&gt;<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>remap_data[remap[v2]][d&gt;&gt;4];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot[o*2+1]<sp/>=<sp/>rotate_data[(d&gt;&gt;4)&amp;3];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>effective_blocktype[v2];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[o*2+0]<sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[o*2+1]<sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>reads<sp/>from<sp/>lt<sp/>&amp;<sp/>sky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outb<sp/>=<sp/>out<sp/>+<sp/>16*16*16;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MC<sp/>used<sp/>to<sp/>write<sp/>in<sp/>this<sp/>order<sp/>and<sp/>it<sp/>makes<sp/>it<sp/>possible<sp/>to<sp/>compute<sp/>in-place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd<sp/>&lt;<sp/>sky<sp/>&amp;&amp;<sp/>sky<sp/>&lt;<sp/>lt)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>go<sp/>this<sp/>path<sp/>always<sp/>if<sp/>!IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outb<sp/>=<sp/>dd;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(o=0;<sp/>o<sp/>&lt;<sp/>16*16*16/2;<sp/>++o)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bright;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bright<sp/>=<sp/>(lt[o]&amp;15)*12<sp/>+<sp/>15<sp/>+<sp/>(sky[o]&amp;15)*16;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&gt;<sp/>255)<sp/>bright<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&lt;<sp/><sp/>32)<sp/>bright<sp/>=<sp/><sp/>32;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outb[o*2+0]<sp/>=<sp/>STBVOX_MAKE_LIGHTING_EXT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>bright,<sp/>(rot[o*2+0]&amp;3));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bright<sp/>=<sp/>(lt[o]&gt;&gt;4)*12<sp/>+<sp/>15<sp/>+<sp/>(sky[o]&gt;&gt;4)*16;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&gt;<sp/>255)<sp/>bright<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&lt;<sp/><sp/>32)<sp/>bright<sp/>=<sp/><sp/>32;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outb[o*2+1]<sp/>=<sp/>STBVOX_MAKE_LIGHTING_EXT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>bright,<sp/>(rot[o*2+1]&amp;3));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>if<sp/>blocktype<sp/>is<sp/>in<sp/>between<sp/>others,<sp/>this<sp/>breaks;<sp/>need<sp/>to<sp/>find<sp/>which<sp/>side<sp/>has<sp/>two<sp/>pointers,<sp/>and<sp/>use<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwrite<sp/>rot[]<sp/>array,<sp/>then<sp/>copy<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outb<sp/>=<sp/>(dd<sp/>&lt;<sp/>sky)<sp/>?<sp/>dd<sp/>:<sp/>sky;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lt<sp/>&lt;<sp/>outb)<sp/>lt<sp/>=<sp/>outb;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(o=0;<sp/>o<sp/>&lt;<sp/>16*16*16/2;<sp/>++o)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bright;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bright<sp/>=<sp/>(lt[o]&amp;15)*12<sp/>+<sp/>15<sp/>+<sp/>(sky[o]&amp;15)*16;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&gt;<sp/>255)<sp/>bright<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&lt;<sp/><sp/>32)<sp/>bright<sp/>=<sp/><sp/>32;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot[o*2+0]<sp/>=<sp/>STBVOX_MAKE_LIGHTING_EXT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>bright,<sp/>(rot[o*2+0]&amp;3));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bright<sp/>=<sp/>(lt[o]&gt;&gt;4)*12<sp/>+<sp/>15<sp/>+<sp/>(sky[o]&gt;&gt;4)*16;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&gt;<sp/>255)<sp/>bright<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bright<sp/>&lt;<sp/><sp/>32)<sp/>bright<sp/>=<sp/><sp/>32;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot[o*2+1]<sp/>=<sp/>STBVOX_MAKE_LIGHTING_EXT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>bright,<sp/>(rot[o*2+1]&amp;3));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(outb,<sp/>rot,<sp/>4096);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc-&gt;data[i]<sp/>=<sp/>outb;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc-&gt;blockdata[i]<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc-&gt;data[i]<sp/>=<sp/>outb;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>IN_PLACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>free(fc-&gt;pointer_to_free);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>fc-&gt;pointer_to_free<sp/>=<sp/>storage;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_converted_fastchunk(<ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsegment" kindref="compound">segment</ref>,<sp/>uint8<sp/>*sv_blocktype,<sp/>uint8<sp/>*sv_lighting)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>assert(fc<sp/>==<sp/>NULL<sp/>||<sp/>(fc-&gt;refcount<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fc-&gt;refcount<sp/>&lt;<sp/>64));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc<sp/>==<sp/>NULL<sp/>||<sp/>fc-&gt;blockdata[<ref refid="structsegment" kindref="compound">segment</ref>]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=0;<sp/>z<sp/>&lt;<sp/>16;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv_blocktype[z]<sp/>=<sp/>C_empty;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv_lighting[z]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block<sp/>=<sp/>fc-&gt;blockdata[<ref refid="structsegment" kindref="compound">segment</ref>];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data<sp/><sp/>=<sp/>fc-&gt;data[<ref refid="structsegment" kindref="compound">segment</ref>];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>15-y;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=0;<sp/>z<sp/>&lt;<sp/>16;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv_blocktype[z]<sp/>=<sp/>block[z*256<sp/>+<sp/>y*16<sp/>+<sp/>x];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv_lighting<sp/>[z]<sp/>=<sp/>data<sp/>[z*256<sp/>+<sp/>y*16<sp/>+<sp/>x];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHUNK_CACHE<sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="structcached__converted__chunk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valid;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_x,<sp/>chunk_y;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}<sp/><ref refid="structcached__converted__chunk" kindref="compound">cached_converted_chunk</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><ref refid="structcached__converted__chunk" kindref="compound">cached_converted_chunk</ref><sp/>chunk_cache[CHUNK_CACHE][CHUNK_CACHE];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_size<sp/>=<sp/>CHUNK_CACHE;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_cache_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=size;<sp/>j<sp/>&lt;<sp/>cache_size;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=size;<sp/>i<sp/>&lt;<sp/>cache_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcached__converted__chunk" kindref="compound">cached_converted_chunk</ref><sp/>*ccc<sp/>=<sp/>&amp;chunk_cache[j][i];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ccc-&gt;valid)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ccc-&gt;fc)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ccc-&gt;fc-&gt;pointer_to_free);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ccc-&gt;fc);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccc-&gt;fc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccc-&gt;valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>cache_size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>must<sp/>be<sp/>called<sp/>inside<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deref_fastchunk(<ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(fc-&gt;refcount<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--fc-&gt;refcount;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc-&gt;refcount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(fc-&gt;pointer_to_free);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(fc);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">SDL_mutex<sp/>*<sp/>chunk_cache_mutex;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">SDL_mutex<sp/>*<sp/>chunk_get_mutex;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock_chunk_get_mutex(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/>SDL_LockMutex(chunk_get_mutex);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock_chunk_get_mutex(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/>SDL_UnlockMutex(chunk_get_mutex);</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*get_converted_fastchunk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_y)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_x<sp/>=<sp/>(chunk_x<sp/>&amp;<sp/>(cache_size-1));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_y<sp/>=<sp/>(chunk_y<sp/>&amp;<sp/>(cache_size-1));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><ref refid="structcached__converted__chunk" kindref="compound">cached_converted_chunk</ref><sp/>*ccc;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>SDL_LockMutex(chunk_cache_mutex);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>ccc<sp/>=<sp/>&amp;chunk_cache[slot_y][slot_x];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ccc-&gt;valid)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ccc-&gt;chunk_x<sp/>==<sp/>chunk_x<sp/>&amp;&amp;<sp/>ccc-&gt;chunk_y<sp/>==<sp/>chunk_y)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc<sp/>=<sp/>ccc-&gt;fc;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++fc-&gt;refcount;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_UnlockMutex(chunk_cache_mutex);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ccc-&gt;fc)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deref_fastchunk(ccc-&gt;fc);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccc-&gt;fc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccc-&gt;valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>SDL_UnlockMutex(chunk_cache_mutex);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>fc<sp/>=<sp/>get_decoded_fastchunk_uncached(chunk_x,<sp/>-chunk_y);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>convert_fastchunk_inplace(fc);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/>SDL_LockMutex(chunk_cache_mutex);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>another<sp/>thread<sp/>might<sp/>have<sp/>updated<sp/>it,<sp/>so<sp/>before<sp/>we<sp/>overwrite<sp/>it...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ccc-&gt;fc)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deref_fastchunk(ccc-&gt;fc);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ccc-&gt;fc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc-&gt;refcount<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>in<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/>ccc-&gt;chunk_x<sp/>=<sp/>chunk_x;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/>ccc-&gt;chunk_y<sp/>=<sp/>chunk_y;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>ccc-&gt;valid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++fc-&gt;refcount;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>ccc-&gt;fc<sp/>=<sp/>fc;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/>SDL_UnlockMutex(chunk_cache_mutex);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_map_segment_for_superchunk_preconvert(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsegment" kindref="compound">segment</ref>,<sp/><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc_table[4][4],<sp/>uint8<sp/>sv_blocktype[34][34][18],<sp/>uint8<sp/>sv_lighting[34][34][18])</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,b;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>assert((chunk_x<sp/>&amp;<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/>assert((chunk_y<sp/>&amp;<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b=-1;<sp/>b<sp/>&lt;<sp/>3;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a=-1;<sp/>a<sp/>&lt;<sp/>3;<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xo<sp/>=<sp/>a*16+1;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yo<sp/>=<sp/>b*16+1;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc<sp/>=<sp/>fc_table[b+1][a+1];</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;<sp/>y<sp/>&lt;<sp/>16;<sp/>++y)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;<sp/>x<sp/>&lt;<sp/>16;<sp/>++x)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xo+x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>xo+x<sp/>&lt;<sp/>34<sp/>&amp;&amp;<sp/>yo+y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>yo+y<sp/>&lt;<sp/>34)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_converted_fastchunk(fc,x,y,<sp/><ref refid="structsegment" kindref="compound">segment</ref>,<sp/>sv_blocktype[xo+x][yo+y],<sp/>sv_lighting[xo+x][yo+y]);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">//<sp/>build<sp/>1<sp/>mesh<sp/>covering<sp/>2x2<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_chunk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_y,<sp/><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*fc_table[4][4],<sp/><ref refid="structraw__mesh" kindref="compound">raw_mesh</ref><sp/>*rm)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,b,z;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref><sp/>*map;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>VHEIGHT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>vheight[34][34][18];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tex2_choice[34][34][18];</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>assert((chunk_x<sp/>&amp;<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/>assert((chunk_y<sp/>&amp;<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/>rm-&gt;cx<sp/>=<sp/>chunk_x;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>rm-&gt;cy<sp/>=<sp/>chunk_y;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>stbvox_set_input_stride(&amp;rm-&gt;mm,<sp/>34*18,<sp/>18);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/>assert(rm-&gt;mm.input.geometry<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/>map<sp/>=<sp/>stbvox_get_input_description(&amp;rm-&gt;mm);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/>map-&gt;block_tex1_face<sp/>=<sp/>minecraft_tex1_for_blocktype;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>map-&gt;block_color_face<sp/>=<sp/>minecraft_color_for_blocktype;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>map-&gt;block_geometry<sp/>=<sp/>minecraft_geom_for_blocktype;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/>stbvox_reset_buffers(&amp;rm-&gt;mm);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>stbvox_set_buffer(&amp;rm-&gt;mm,<sp/>0,<sp/>0,<sp/>rm-&gt;build_buffer,<sp/>BUILD_BUFFER_SIZE);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/>stbvox_set_buffer(&amp;rm-&gt;mm,<sp/>0,<sp/>1,<sp/>rm-&gt;face_buffer<sp/>,<sp/>FACE_BUFFER_SIZE);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>map-&gt;blocktype<sp/>=<sp/>&amp;rm-&gt;sv_blocktype[1][1][1];<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>(0,0,0),<sp/>but<sp/>we<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>query<sp/>off<sp/>the<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/>map-&gt;lighting<sp/>=<sp/>&amp;rm-&gt;sv_lighting[1][1][1];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>in<sp/>the<sp/>top<sp/>two<sp/>rows<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a=0;<sp/>a<sp/>&lt;<sp/>34;<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b=0;<sp/>b<sp/>&lt;<sp/>34;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_blocktype[a][b][16]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_lighting<sp/>[a][b][16]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_blocktype[a][b][17]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_lighting<sp/>[a][b][17]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a=0;<sp/>a<sp/>&lt;<sp/>34;<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b=0;<sp/>b<sp/>&lt;<sp/>34;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px<sp/>=<sp/>chunk_x*16<sp/>+<sp/>a<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py<sp/>=<sp/>chunk_y*16<sp/>+<sp/>b<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>(float)<sp/><ref refid="group__core__func__exponential_1ga1f904e09827e939a56e4158f45ca8ede" kindref="member">sqrt</ref>(px*px<sp/>+<sp/>py*py);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/>(float)<sp/><ref refid="group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414" kindref="member">sin</ref>(dist<sp/>/<sp/>16),<sp/>s2,<sp/>s3;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>(float)<sp/><ref refid="group__core__func__exponential_1ga1f904e09827e939a56e4158f45ca8ede" kindref="member">sqrt</ref>((px-80)*(px-80)<sp/>+<sp/>(py-50)*(py-50));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>(float)<sp/><ref refid="group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414" kindref="member">sin</ref>(dist<sp/>/<sp/>11);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=0;<sp/>z<sp/>&lt;<sp/>18;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>(float)<sp/><ref refid="group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414" kindref="member">sin</ref>(z<sp/>*<sp/>3.141592<sp/>/<sp/>8);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>s1*s2*s3;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex2_choice[a][b][z]<sp/>=<sp/>63<sp/>&amp;<sp/>(int)<sp/>stb_linear_remap(s3,-1,1,<sp/>-20,83);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=256-16;<sp/>z<sp/>&gt;=<sp/>SKIP_TERRAIN;<sp/>z<sp/>-=<sp/>16)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z0<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z1<sp/>=<sp/>z+16;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z1<sp/>==<sp/>256)<sp/>z1<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>make_map_segment_for_superchunk_preconvert(chunk_x,<sp/>chunk_y,<sp/>z<sp/>&gt;&gt;<sp/>4,<sp/>fc_table,<sp/>rm-&gt;sv_blocktype,<sp/>rm-&gt;sv_lighting);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;blocktype<sp/>=<sp/>&amp;rm-&gt;sv_blocktype[1][1][1-z];<sp/></highlight><highlight class="comment">//<sp/>specify<sp/>location<sp/>of<sp/>0,0,0<sp/>so<sp/>that<sp/>accessing<sp/>z0..z1<sp/>gets<sp/>right<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;lighting<sp/>=<sp/>&amp;rm-&gt;sv_lighting[1][1][1-z];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;tex2<sp/>=<sp/>&amp;tex2_choice[1][1][1-z];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>VHEIGHT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hacky<sp/>test<sp/>of<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a=0;<sp/>a<sp/>&lt;<sp/>34;<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b=0;<sp/>b<sp/>&lt;<sp/>34;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c=0;<sp/>c<sp/>&lt;<sp/>17;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rm-&gt;sv_blocktype[a][b][c]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>rm-&gt;sv_blocktype[a][b][c+1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>topmost<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vheight[a][b][c]<sp/>=<sp/>rand()<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_blocktype[a][b][c]<sp/>=<sp/>168;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>rm-&gt;sv_blocktype[a][b][c]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>rm-&gt;sv_blocktype[a][b][c-1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottommost<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vheight[a][b][c]<sp/>=<sp/>((rand()<sp/>%<sp/>3)<sp/>&lt;&lt;<sp/>6)<sp/>+<sp/>((rand()<sp/>%<sp/>3)<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>((rand()<sp/>%<sp/>3)<sp/>&lt;&lt;<sp/>2)<sp/>+<sp/>(rand()<sp/>%<sp/>3);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_blocktype[a][b][c]<sp/>=<sp/>169;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vheight[a][b][c]<sp/>=<sp/>STBVOX_MAKE_VHEIGHT(2,2,2,2);<sp/></highlight><highlight class="comment">//<sp/>flat<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;vheight<sp/>=<sp/>&amp;vheight[1][1][1-z];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_set_input_range(&amp;rm-&gt;mm,<sp/>0,0,z0,<sp/>32,32,z1);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_set_default_mesh(&amp;rm-&gt;mm,<sp/>0);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh(&amp;rm-&gt;mm);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>bottom<sp/>two<sp/>rows<sp/>of<sp/>data<sp/>up<sp/>to<sp/>the<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a=0;<sp/>a<sp/>&lt;<sp/>34;<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b=0;<sp/>b<sp/>&lt;<sp/>34;<sp/>++b)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_blocktype[a][b][16]<sp/>=<sp/>rm-&gt;sv_blocktype[a][b][0];</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_blocktype[a][b][17]<sp/>=<sp/>rm-&gt;sv_blocktype[a][b][1];</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_lighting<sp/>[a][b][16]<sp/>=<sp/>rm-&gt;sv_lighting<sp/>[a][b][0];</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm-&gt;sv_lighting<sp/>[a][b][17]<sp/>=<sp/>rm-&gt;sv_lighting<sp/>[a][b][1];</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/>stbvox_set_mesh_coordinates(&amp;rm-&gt;mm,<sp/>chunk_x*16,<sp/>chunk_y*16,<sp/>0);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/>stbvox_get_transform(&amp;rm-&gt;mm,<sp/>rm-&gt;transform);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/>stbvox_set_input_range(&amp;rm-&gt;mm,<sp/>0,0,0,<sp/>32,32,255);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/>stbvox_get_bounds(&amp;rm-&gt;mm,<sp/>rm-&gt;bounds);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/>rm-&gt;num_quads<sp/>=<sp/>stbvox_get_quad_count(&amp;rm-&gt;mm,<sp/>0);</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_blocktype<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mc_rot[4]<sp/>=<sp/>{<sp/>1,3,2,0<sp/>};</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>blocktypes<sp/>with<sp/>rotation<sp/>baked<sp/>into<sp/>type...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO<sp/>we<sp/>no<sp/>longer<sp/>need<sp/>this<sp/>now<sp/>that<sp/>we<sp/>store<sp/>rotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>lighting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_stair_rotations(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocktype,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*map)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>existing<sp/>block<sp/>type<sp/>for<sp/>floor<sp/>stairs;<sp/>allocate<sp/>a<sp/>new<sp/>type<sp/>for<sp/>ceil<sp/>stairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[next_blocktype][i]<sp/>=<sp/>minecraft_color_for_blocktype[blocktype][i];</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_tex1_for_blocktype<sp/>[next_blocktype][i]<sp/>=<sp/>minecraft_tex1_for_blocktype<sp/>[blocktype][i];</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/>minecraft_geom_for_blocktype[next_blocktype]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>STBVOX_MAKE_GEOMETRY(STBVOX_GEOM_ceil_slope_north_is_bottom,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/>minecraft_geom_for_blocktype[<sp/><sp/><sp/><sp/><sp/>blocktype]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>STBVOX_MAKE_GEOMETRY(STBVOX_GEOM_floor_slope_north_is_top,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map[0+i+8]<sp/>=<sp/>map[0+i]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/>blocktype;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map[4+i+8]<sp/>=<sp/>map[4+i]<sp/>=<sp/>next_blocktype;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/>--next_blocktype;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_wool_variations(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bt,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*map)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,k;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tex[16]<sp/>=<sp/>{<sp/>64,<sp/>210,<sp/>194,<sp/>178,<sp/><sp/>162,<sp/>146,<sp/>130,<sp/>114,<sp/><sp/>225,<sp/>209,<sp/>193,<sp/>177,<sp/><sp/>161,<sp/>145,<sp/>129,<sp/>113<sp/>};</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[i]<sp/>=<sp/>bt;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[i]<sp/>=<sp/>next_blocktype;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>6;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_tex1_for_blocktype[next_blocktype][k]<sp/>=<sp/>tex[i];</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_geom_for_blocktype[next_blocktype]<sp/>=<sp/>minecraft_geom_for_blocktype[bt];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--next_blocktype;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_wood_variations(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bt,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*map)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,k;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tex[4]<sp/>=<sp/>{<sp/>5,<sp/>198,<sp/>214,<sp/>199<sp/>};</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[i]<sp/>=<sp/>bt;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[i]<sp/>=<sp/>next_blocktype;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>6;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_tex1_for_blocktype[next_blocktype][k]<sp/>=<sp/>tex[i];</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_geom_for_blocktype[next_blocktype]<sp/>=<sp/>minecraft_geom_for_blocktype[bt];</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--next_blocktype;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/>map[i]<sp/>=<sp/>map[i-1];</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map[i]<sp/>=<sp/>bt;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>remap_in_place(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rm)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/>remap[bt]<sp/>=<sp/>rm;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remap_data[rm][i]<sp/>=<sp/>bt;</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mesh_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>chunk_cache_mutex<sp/>=<sp/>SDL_CreateMutex();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/>chunk_get_mutex<sp/><sp/><sp/>=<sp/>SDL_CreateMutex();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(minecraft_tex1_for_blocktype[i],<sp/>minecraft_info[i]+1,<sp/>6);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>effective_blocktype[i]<sp/>=<sp/>(minecraft_info[i][0]<sp/>==<sp/>C_empty<sp/>?<sp/>0<sp/>:<sp/>i);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_geom_for_blocktype[i]<sp/>=<sp/>geom_map[minecraft_info[i][0]];</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//effective_blocktype[50]<sp/>=<sp/>0;<sp/>//<sp/>delete<sp/>torches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6*256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minecraft_tex1_for_blocktype[0][i]<sp/>==<sp/>40)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[0][i]<sp/>=<sp/>38<sp/>|<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>apply<sp/>to<sp/>tex1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minecraft_tex1_for_blocktype[0][i]<sp/>==<sp/>39)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[0][i]<sp/>=<sp/>39<sp/>|<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>apply<sp/>to<sp/>tex1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minecraft_tex1_for_blocktype[0][i]<sp/>==<sp/>105)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[0][i]<sp/>=<sp/>63;<sp/></highlight><highlight class="comment">//<sp/>emissive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minecraft_tex1_for_blocktype[0][i]<sp/>==<sp/>212)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[0][i]<sp/>=<sp/>63;<sp/></highlight><highlight class="comment">//<sp/>emissive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minecraft_tex1_for_blocktype[0][i]<sp/>==<sp/>80)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[0][i]<sp/>=<sp/>63;<sp/></highlight><highlight class="comment">//<sp/>emissive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[172][i]<sp/>=<sp/>47<sp/>|<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>apply<sp/>to<sp/>tex1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[178][i]<sp/>=<sp/>47<sp/>|<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>apply<sp/>to<sp/>tex1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[18][i]<sp/>=<sp/>39<sp/>|<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[161][i]<sp/>=<sp/>37<sp/>|<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[10][i]<sp/>=<sp/>63;<sp/></highlight><highlight class="comment">//<sp/>emissive<sp/>lava</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[11][i]<sp/>=<sp/>63;<sp/></highlight><highlight class="comment">//<sp/>emissive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//minecraft_color_for_blocktype[56][i]<sp/>=<sp/>63;<sp/>//<sp/>emissive<sp/>diamond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minecraft_color_for_blocktype[48][i]<sp/>=<sp/>63;<sp/></highlight><highlight class="comment">//<sp/>emissive<sp/>dungeon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>VHEIGHT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/>effective_blocktype[168]<sp/>=<sp/>168;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[168][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[168][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[168][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[168][3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[168][4]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[168][5]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/>minecraft_geom_for_blocktype[168]<sp/>=<sp/>STBVOX_GEOM_floor_vheight_12;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/>effective_blocktype[169]<sp/>=<sp/>169;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[169][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[169][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[169][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[169][3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[169][4]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/>minecraft_tex1_for_blocktype[169][5]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/>minecraft_geom_for_blocktype[169]<sp/>=<sp/>STBVOX_GEOM_ceil_vheight_03;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>remap[53]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/>remap[67]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/>remap[108]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/>remap[109]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/>remap[114]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>remap[136]<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/>remap[156]<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remap[i])</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_stair_rotations(i,<sp/>remap_data[remap[i]]);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/>remap[35]<sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/>build_wool_variations(35,<sp/>remap_data[remap[35]]);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/>remap[5]<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/>build_wood_variations(5,<sp/>remap_data[remap[5]]);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>remap<sp/>flags<sp/>for<sp/>these<sp/>so<sp/>they<sp/>write<sp/>the<sp/>rotation<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/>remap_in_place(54,<sp/>9);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/>remap_in_place(146,<sp/>10);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Timing<sp/>stats<sp/>while<sp/>optimizing<sp/>the<sp/>single-threaded<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>32..-32,<sp/>32..-32,<sp/>SKIP_TERRAIN=0,<sp/>!FANCY_LEAVES<sp/>on<sp/>&apos;mcrealm&apos;<sp/>data<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.27s<sp/><sp/>-<sp/>reblocked<sp/>to<sp/>do<sp/>16<sp/>z<sp/>at<sp/>a<sp/>time<sp/>instead<sp/>of<sp/>256<sp/>(still<sp/>using<sp/>66x66x258),<sp/>4<sp/>meshes<sp/>in<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.96s<sp/><sp/>-<sp/>reblocked<sp/>to<sp/>use<sp/>FAST_CHUNK<sp/>(no<sp/>intermediate<sp/>data<sp/>structure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.45s<sp/><sp/>-<sp/>unknown<sp/>change,<sp/>or<sp/>previous<sp/>measurement<sp/>was<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.12s<sp/><sp/>-<sp/>use<sp/>preconverted<sp/>data,<sp/>not<sp/>in-place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.91s<sp/><sp/>-<sp/>use<sp/>preconverted,<sp/>in-place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.34s<sp/><sp/>-<sp/>preconvert,<sp/>in-place,<sp/>avoid<sp/>dependency<sp/>chain<sp/>(suggested<sp/>by<sp/>ryg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.34s<sp/><sp/>-<sp/>preconvert,<sp/>in-place,<sp/>avoid<sp/>dependency<sp/>chain,<sp/>use<sp/>bit-table<sp/>instead<sp/>of<sp/>byte-table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.50s<sp/><sp/>-<sp/>preconvert,<sp/>in-place,<sp/>branchless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.42s<sp/><sp/>-<sp/>non-preconvert,<sp/>avoid<sp/>dependency<sp/>chain<sp/>(not<sp/>an<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.40s<sp/><sp/>-<sp/>non-preconvert,<sp/>w/dependency<sp/>chain<sp/>(same<sp/>as<sp/>earlier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.50s<sp/><sp/>-<sp/>non-FAST_CHUNK,<sp/>reblocked<sp/>outer<sp/>loop<sp/>for<sp/>better<sp/>cache<sp/>reuse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.73s<sp/><sp/>-<sp/>FAST_CHUNK<sp/>non-preconvert,<sp/>reblocked<sp/>outer<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.25s<sp/><sp/>-<sp/>preconvert,<sp/>in-place,<sp/>reblocked<sp/>outer<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.18s<sp/><sp/>-<sp/>preconvert,<sp/>in-place,<sp/>unrolled<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.10s<sp/><sp/>-<sp/>34x34<sp/>1<sp/>mesh<sp/>instead<sp/>of<sp/>66x66<sp/>and<sp/>4<sp/>meshes<sp/>(will<sp/>make<sp/>it<sp/>easier<sp/>to<sp/>do<sp/>multiple<sp/>threads)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.83s<sp/><sp/>-<sp/>building<sp/>bitmasks<sp/>but<sp/>not<sp/>using<sp/>them<sp/>(2<sp/>bits<sp/>per<sp/>block,<sp/>one<sp/>if<sp/>empty,<sp/>one<sp/>if<sp/>solid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.16s<sp/><sp/>-<sp/>using<sp/>empty<sp/>bitmasks<sp/>to<sp/>early<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5.01s<sp/><sp/>-<sp/>using<sp/>solid<sp/>&amp;<sp/>empty<sp/>bitmasks<sp/>to<sp/>early<sp/>out<sp/>-<sp/>&quot;foo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.64s<sp/><sp/>-<sp/>empty<sp/>bitmask<sp/>only,<sp/>test<sp/>8<sp/>at<sp/>a<sp/>time,<sp/>then<sp/>test<sp/>geom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.72s<sp/><sp/>-<sp/>empty<sp/>bitmask<sp/>only,<sp/>8<sp/>at<sp/>a<sp/>time,<sp/>then<sp/>test<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.46s<sp/><sp/>-<sp/>split<sp/>bitmask<sp/>building<sp/>into<sp/>three<sp/>loops<sp/>(each<sp/>byte<sp/>is<sp/>separate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.42s<sp/><sp/>-<sp/>further<sp/>optimize<sp/>computing<sp/>bitmask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.58s<sp/><sp/>-<sp/>using<sp/>solid<sp/>&amp;<sp/>empty<sp/>bitmasks<sp/>to<sp/>early<sp/>out,<sp/>same<sp/>as<sp/>&quot;foo&quot;<sp/>but<sp/>faster<sp/>bitmask<sp/>building</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.12s<sp/><sp/>-<sp/>using<sp/>solid<sp/>&amp;<sp/>empty<sp/>bitmasks<sp/>to<sp/>efficiently<sp/>test<sp/>neighbors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.04s<sp/><sp/>-<sp/>using<sp/>16-bit<sp/>fetches<sp/>(not<sp/>endian-independent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>note<sp/>this<sp/>is<sp/>first<sp/>place<sp/>that<sp/>beats<sp/>previous<sp/>best<sp/>&apos;4.10s<sp/>-<sp/>34x34<sp/>1<sp/>mesh&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.30s<sp/><sp/>-<sp/>current<sp/>time<sp/>with<sp/>bitmasks<sp/>disabled<sp/>again<sp/>(note<sp/>was<sp/>4.10s<sp/>earlier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.95s<sp/><sp/>-<sp/>bitmasks<sp/>enabled<sp/>again,<sp/>no<sp/>other<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.00s<sp/><sp/>-<sp/>current<sp/>time<sp/>with<sp/>bitmasks<sp/>disabled<sp/>again,<sp/>no<sp/>other<sp/>changes<sp/>--<sp/>wide<sp/>variation<sp/>that<sp/>is<sp/>time<sp/>dependent?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(note<sp/>that<sp/>most<sp/>of<sp/>the<sp/>numbers<sp/>listed<sp/>here<sp/>are<sp/>median<sp/>of<sp/>3<sp/>values<sp/>already)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.98s<sp/><sp/>-<sp/>bitmasks<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bitmasks<sp/>removed<sp/>from<sp/>the<sp/>code<sp/>as<sp/>not<sp/>worth<sp/>the<sp/>complexity<sp/>increase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Raw<sp/>data<sp/>for<sp/>Q&amp;A:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>26%<sp/>parsing<sp/>&amp;<sp/>loading<sp/>minecraft<sp/>files<sp/>(4/5ths<sp/>of<sp/>which<sp/>is<sp/>zlib<sp/>decode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>39%<sp/>building<sp/>mesh<sp/>from<sp/>stb<sp/>input<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>18%<sp/>converting<sp/>from<sp/>minecraft<sp/>blocks<sp/>to<sp/>stb<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>9%<sp/>reordering<sp/>from<sp/>minecraft<sp/>axis<sp/>order<sp/>to<sp/>stb<sp/>axis<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>7%<sp/>uploading<sp/>vertex<sp/>buffer<sp/>to<sp/>OpenGL</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c"/>
  </compounddef>
</doxygen>
