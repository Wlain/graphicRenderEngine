<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtc__matrix__transform" kind="group">
    <compoundname>gtc_matrix_transform</compoundname>
    <title>GLM_GTC_matrix_transform</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga67d8473d6b293d1bb2b4eaf249795cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::translate</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m, vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>translate</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a translation 4 * 4 matrix created from a vector of 3 components.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix multiplied by this translation matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates of a translation vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="glm_8hpp" kindref="compound">glm/glm.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="matrix__transform_8hpp" kindref="compound">glm/gtc/matrix_transform.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">glm::mat4<sp/>m<sp/>=<sp/><ref refid="group__gtc__matrix__transform_1ga67d8473d6b293d1bb2b4eaf249795cab" kindref="member">glm::translate</ref>(<ref refid="structglm_1_1mat" kindref="compound">glm::mat4</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0f));</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>m[0][0]<sp/>==<sp/>1.0f,<sp/>m[0][1]<sp/>==<sp/>0.0f,<sp/>m[0][2]<sp/>==<sp/>0.0f,<sp/>m[0][3]<sp/>==<sp/>0.0f</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>m[1][0]<sp/>==<sp/>0.0f,<sp/>m[1][1]<sp/>==<sp/>1.0f,<sp/>m[1][2]<sp/>==<sp/>0.0f,<sp/>m[1][3]<sp/>==<sp/>0.0f</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>m[2][0]<sp/>==<sp/>0.0f,<sp/>m[2][1]<sp/>==<sp/>0.0f,<sp/>m[2][2]<sp/>==<sp/>1.0f,<sp/>m[2][3]<sp/>==<sp/>0.0f</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>m[3][0]<sp/>==<sp/>1.0f,<sp/>m[3][1]<sp/>==<sp/>1.0f,<sp/>m[3][2]<sp/>==<sp/>1.0f,<sp/>m[3][3]<sp/>==<sp/>1.0f</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- translate(mat&lt;4, 4, T, Q&gt; const&amp; m, T x, T y, T z) </para>
</simplesect>
<simplesect kind="see"><para>- translate(vec&lt;3, T, Q&gt; const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTranslate.xml">glTranslate man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="59" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="11" bodyend="16" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="59" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::rotate</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m, T angle, vec&lt; 3, T, Q &gt; const &amp;axis)</argsstring>
        <name>rotate</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a rotation 4 * 4 matrix created from an axis vector and an angle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix multiplied by this rotation matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation angle expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation axis, recommended to be normalized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Supported: half, float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- rotate(mat&lt;4, 4, T, Q&gt; const&amp; m, T angle, T x, T y, T z) </para>
</simplesect>
<simplesect kind="see"><para>- rotate(T angle, vec&lt;3, T, Q&gt; const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glRotate.xml">glRotate man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="73" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="19" bodyend="47" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="73" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::scale</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m, vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>scale</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a scale 4 * 4 matrix created from 3 scalars.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix multiplied by this scale matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Ratio of scaling for each axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- scale(mat&lt;4, 4, T, Q&gt; const&amp; m, T x, T y, T z) </para>
</simplesect>
<simplesect kind="see"><para>- scale(vec&lt;3, T, Q&gt; const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glScale.xml">glScale man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="86" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="79" bodyend="87" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="86" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaa8568ef1d14d6654becb860ed6163817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::ortho</definition>
        <argsstring>(T left, T right, T bottom, T top)</argsstring>
        <name>ortho</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for projecting two-dimensional coordinates onto the screen.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; zNear, T const&amp; zFar) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluOrtho2D.xml">gluOrtho2D man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="96" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="100" bodyend="108" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="96" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gad889c03e019e5f3dbe17ffc46b3d2224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoLH_ZO</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoLH_ZO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="106" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="111" bodyend="121" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="106" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga6483b1c6f456214b172870d4302067f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoLH_NO</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoLH_NO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume using right-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="116" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="124" bodyend="134" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="116" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gab74a81b31fdf79b83780190ed01058b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoRH_ZO</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoRH_ZO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="126" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="137" bodyend="147" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="126" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga612cba4d8b1ffb8abf0968b4daf1461e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoRH_NO</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoRH_NO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using right-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="136" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="150" bodyend="160" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="136" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga8079772d895a0d75d705a611d521fd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoZO</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoZO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="146" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="163" bodyend="170" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="146" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaaf196eb7ed62a815932e4f55a76fdbbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoNO</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoNO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="156" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="173" bodyend="180" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="156" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga8dd6ed0963b92e610448163d12f20dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoLH</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoLH</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="167" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="183" bodyend="190" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="167" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gafb9a54c12086283da25e5e4b48b755a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::orthoRH</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>orthoRH</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using right-handed coordinates. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="178" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="193" bodyend="200" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="178" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga9f2fb5616010518c43894fe934f6f914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::ortho</definition>
        <argsstring>(T left, T right, T bottom, T top, T zNear, T zFar)</argsstring>
        <name>ortho</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for an orthographic parallel viewing volume, using the default handedness and default near and far clip planes definition. To change default handedness use GLM_FORCE_LEFT_HANDED. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- glm::ortho(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glOrtho.xml">glOrtho man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="189" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="203" bodyend="214" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="189" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gacb5c1add5780bdb8fb5c18259f88c59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumLH_ZO</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumLH_ZO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a left handed frustum matrix. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="198" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="217" bodyend="228" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="198" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga268c2e08a8531e5aca32181e5ed49aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumLH_NO</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumLH_NO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a left handed frustum matrix. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="207" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="231" bodyend="242" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="207" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga2a0614c8f5bc13c5f9f4b0cf9c39278a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumRH_ZO</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumRH_ZO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a right handed frustum matrix. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="216" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="245" bodyend="256" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="216" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaf83f2f11c373982d3fdbf138be7d7c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumRH_NO</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumRH_NO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a right handed frustum matrix. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="225" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="259" bodyend="270" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="225" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga5c91ea8845dbaad8f8ab47103866459e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumZO</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumZO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a frustum matrix using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="234" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="273" bodyend="280" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="234" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga3c50f09a1f20ab527a6f99b6f36be23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumNO</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumNO</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a frustum matrix using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="243" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="283" bodyend="290" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="243" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaf040a59a5112c06be7579fee2b05bc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumLH</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumLH</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a left handed frustum matrix. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="253" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="293" bodyend="300" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="253" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaa881f9ebd1a43e2d032c9a524faf0e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustumRH</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustumRH</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a right handed frustum matrix. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="263" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="303" bodyend="310" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="263" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::frustum</definition>
        <argsstring>(T left, T right, T bottom, T top, T near, T far)</argsstring>
        <name>frustum</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <param>
          <type>T</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>T</type>
          <declname>top</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a frustum matrix with default handedness, using the default handedness and default near and far clip planes definition. To change default handedness use GLM_FORCE_LEFT_HANDED. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glFrustum.xml">glFrustum man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="273" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="313" bodyend="324" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="273" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga703204a33716e0eefc1a6ff383ab62ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveRH_ZO</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveRH_ZO</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a right handed, symetric perspective-view frustum. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="287" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="327" bodyend="340" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="287" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga68eacfaf3cbfbc7a5465a9a0e4701ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveRH_NO</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveRH_NO</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a right handed, symetric perspective-view frustum. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="300" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="343" bodyend="356" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="300" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga947bfc6e136d0a6bc75b8a0fa10f568d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveLH_ZO</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveLH_ZO</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a left handed, symetric perspective-view frustum. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="313" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="359" bodyend="372" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="313" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaaf666c22f31e443004f2192706ef4fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveLH_NO</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveLH_NO</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a left handed, symetric perspective-view frustum. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="326" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="375" bodyend="388" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="326" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga32430648d1b0aecd30c08943ce33a1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveZO</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveZO</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a symetric perspective-view frustum using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="339" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="391" bodyend="398" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="339" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga7c2215fd8b8b9f37e29c548d0e48bd91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveNO</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveNO</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a symetric perspective-view frustum using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="352" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="401" bodyend="408" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="352" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga0786f78f02365fc789c6a4cd809bd441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveRH</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveRH</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a right handed, symetric perspective-view frustum. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="366" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="421" bodyend="428" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="366" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga8b7f443c7e30e879fc98fcf1b922d958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveLH</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspectiveLH</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a left handed, symetric perspective-view frustum. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="380" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="411" bodyend="418" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="380" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga9e13be491fd69a438c8fda440cf0156e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspective</definition>
        <argsstring>(T fovy, T aspect, T near, T far)</argsstring>
        <name>perspective</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a symetric perspective-view frustum based on the default handedness and default near and far clip planes definition. To change default handedness use GLM_FORCE_LEFT_HANDED. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluPerspective.xml">gluPerspective man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="394" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="431" bodyend="442" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="394" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga19141a2882d584872baf2bed83acad68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovRH_ZO</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovRH_ZO</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a perspective projection matrix based on a field of view using right-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>todo max(width , Height) / min(width , Height)?</para>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="408" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="445" bodyend="462" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="408" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga80b35c54ebe2c39b72773a729cbb0ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovRH_NO</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovRH_NO</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a perspective projection matrix based on a field of view using right-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>todo max(width , Height) / min(width , Height)?</para>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="422" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="465" bodyend="482" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="422" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaa4b4aa571d1b9e77878183ef37b487fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovLH_ZO</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovLH_ZO</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a perspective projection matrix based on a field of view using left-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>todo max(width , Height) / min(width , Height)?</para>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="436" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="485" bodyend="502" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="436" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga2a6ec32dc6b2b9ef545f9809129b134d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovLH_NO</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovLH_NO</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a perspective projection matrix based on a field of view using left-handed coordinates. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>todo max(width , Height) / min(width , Height)?</para>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="450" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="505" bodyend="522" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="450" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga39f32367d8778de4fe4ad55d65af9b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovZO</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovZO</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a perspective projection matrix based on a field of view using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="464" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="525" bodyend="532" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="464" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gabbcd95c47d3b565f89795f4ff558361c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovNO</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovNO</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a perspective projection matrix based on a field of view using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="478" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="535" bodyend="542" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="478" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gab6c38e30fff812659e1486322f78535f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovRH</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovRH</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a right handed perspective projection matrix based on a field of view. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="493" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="555" bodyend="562" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="493" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaf1e5e6d8303f1462e892e0884b66f9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFovLH</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFovLH</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a left handed perspective projection matrix based on a field of view. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="508" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="545" bodyend="552" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="508" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga44ce1914c556baee3db105b3867bd46a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::perspectiveFov</definition>
        <argsstring>(T fov, T width, T height, T near, T far)</argsstring>
        <name>perspectiveFov</name>
        <param>
          <type>T</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a perspective projection matrix based on a field of view and the default handedness and default near and far clip planes definition. To change default handedness use GLM_FORCE_LEFT_HANDED. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the viewport </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the far clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="522" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="565" bodyend="576" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="522" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaddd559a69ffbcffde8e7a54a9dc3afc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::infinitePerspectiveLH</definition>
        <argsstring>(T fovy, T aspect, T near)</argsstring>
        <name>infinitePerspectiveLH</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a left handed, symmetric perspective-view frustum with far plane at infinite.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="533" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="597" bodyend="612" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="533" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gadacc69d138327905cd73554e3d75377c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::infinitePerspectiveRH</definition>
        <argsstring>(T fovy, T aspect, T near)</argsstring>
        <name>infinitePerspectiveRH</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a right handed, symmetric perspective-view frustum with far plane at infinite.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="544" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="579" bodyend="594" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="544" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga8f955f37bab966fa8d6a5375da30860b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::infinitePerspective</definition>
        <argsstring>(T fovy, T aspect, T near)</argsstring>
        <name>infinitePerspective</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a symmetric perspective-view frustum with far plane at infinite with default handedness.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="555" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="615" bodyend="622" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="555" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gad608a11980b3a1311dcde0cdda5a28da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::tweakedInfinitePerspective</definition>
        <argsstring>(T fovy, T aspect, T near)</argsstring>
        <name>tweakedInfinitePerspective</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a symmetric perspective-view frustum with far plane at infinite for graphics hardware that doesn&apos;t support depth clamping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="566" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="644" bodyend="647" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="566" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga386ddc482b372d899d7141f553418878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::tweakedInfinitePerspective</definition>
        <argsstring>(T fovy, T aspect, T near, T ep)</argsstring>
        <name>tweakedInfinitePerspective</name>
        <param>
          <type>T</type>
          <declname>fovy</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a matrix for a symmetric perspective-view frustum with far plane at infinite for graphics hardware that doesn&apos;t support depth clamping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fovy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the field of view angle, in degrees, in the y direction. Expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the aspect ratio that determines the field of view in the x direction. The aspect ratio is the ratio of x (width) to y (height). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>near</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the distance from the viewer to the near clipping plane (always positive). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Epsilon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="578" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="626" bodyend="641" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="578" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaf98ec0fecd3a5d07592e01750927599f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::projectZO</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;obj, mat&lt; 4, 4, T, Q &gt; const &amp;model, mat&lt; 4, 4, T, Q &gt; const &amp;proj, vec&lt; 4, U, Q &gt; const &amp;viewport)</argsstring>
        <name>projectZO</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, U, Q &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map the specified object coordinates (obj.x, obj.y, obj.z) into window coordinates. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the object coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current modelview matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current projection matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return the computed window coordinates. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Native type used for the computation. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently supported: Floating-point types and integer types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluProject.xml">gluProject man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="594" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="650" bodyend="664" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="594" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga7f81da150745ac8f4af75d6ce29ab81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::projectNO</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;obj, mat&lt; 4, 4, T, Q &gt; const &amp;model, mat&lt; 4, 4, T, Q &gt; const &amp;proj, vec&lt; 4, U, Q &gt; const &amp;viewport)</argsstring>
        <name>projectNO</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, U, Q &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map the specified object coordinates (obj.x, obj.y, obj.z) into window coordinates. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the object coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current modelview matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current projection matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return the computed window coordinates. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Native type used for the computation. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently supported: Floating-point types and integer types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluProject.xml">gluProject man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="610" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="667" bodyend="679" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="610" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga478b351626e39c8e33e042ea8d1f418e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::project</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;obj, mat&lt; 4, 4, T, Q &gt; const &amp;model, mat&lt; 4, 4, T, Q &gt; const &amp;proj, vec&lt; 4, U, Q &gt; const &amp;viewport)</argsstring>
        <name>project</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, U, Q &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map the specified object coordinates (obj.x, obj.y, obj.z) into window coordinates using default near and far clip planes definition. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the object coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current modelview matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current projection matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the current viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return the computed window coordinates. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Native type used for the computation. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently supported: Floating-point types and integer types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluProject.xml">gluProject man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="626" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="682" bodyend="689" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="626" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga9b3ec0d9aeea52bbcc8c1fc3fc9830e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::unProjectZO</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;win, mat&lt; 4, 4, T, Q &gt; const &amp;model, mat&lt; 4, 4, T, Q &gt; const &amp;proj, vec&lt; 4, U, Q &gt; const &amp;viewport)</argsstring>
        <name>unProjectZO</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>win</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, U, Q &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map the specified window coordinates (win.x, win.y, win.z) into object coordinates. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively. (Direct3D clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the window coordinates to be mapped. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the modelview matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the projection matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the computed object coordinates. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Native type used for the computation. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently supported: Floating-point types and integer types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluUnProject.xml">gluUnProject man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="642" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="692" bodyend="706" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="642" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga6214935f32f38e1dc13ba66135eb5784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::unProjectNO</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;win, mat&lt; 4, 4, T, Q &gt; const &amp;model, mat&lt; 4, 4, T, Q &gt; const &amp;proj, vec&lt; 4, U, Q &gt; const &amp;viewport)</argsstring>
        <name>unProjectNO</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>win</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, U, Q &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map the specified window coordinates (win.x, win.y, win.z) into object coordinates. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively. (OpenGL clip volume definition)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the window coordinates to be mapped. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the modelview matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the projection matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the computed object coordinates. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Native type used for the computation. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently supported: Floating-point types and integer types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluUnProject.xml">gluUnProject man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="658" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="709" bodyend="722" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="658" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gaefa35b1dbf52941052a5a3aadc298106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::unProject</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;win, mat&lt; 4, 4, T, Q &gt; const &amp;model, mat&lt; 4, 4, T, Q &gt; const &amp;proj, vec&lt; 4, U, Q &gt; const &amp;viewport)</argsstring>
        <name>unProject</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>win</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, U, Q &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map the specified window coordinates (win.x, win.y, win.z) into object coordinates using default near and far clip planes definition. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the window coordinates to be mapped. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the modelview matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proj</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the projection matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the computed object coordinates. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Native type used for the computation. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently supported: Floating-point types and integer types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluUnProject.xml">gluUnProject man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="674" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="725" bodyend="732" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="674" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga0f93e1b7ea6887f31b643ce5099b1173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::pickMatrix</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;center, vec&lt; 2, T, Q &gt; const &amp;delta, vec&lt; 4, U, Q &gt; const &amp;viewport)</argsstring>
        <name>pickMatrix</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, U, Q &gt; const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a picking region</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the center of a picking region in window coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the width and height, respectively, of the picking region in window coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Rendering viewport </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Native type used for the computation. Currently supported: half (not recommended), float or double. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently supported: Floating-point types and integer types. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluPickMatrix.xml">gluPickMatrix man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="687" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="735" bodyend="751" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="687" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga55e33da75ea7e0f877059cc6f181cd2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::lookAtRH</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;eye, vec&lt; 3, T, Q &gt; const &amp;center, vec&lt; 3, T, Q &gt; const &amp;up)</argsstring>
        <name>lookAtRH</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>eye</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a right handed look at view matrix.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eye</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of the camera </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Position where the camera is looking at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>up</parametername>
</parameternamelist>
<parameterdescription>
<para>Normalized up vector, how the camera is oriented. Typically (0, 0, 1) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="698" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="754" bodyend="774" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="698" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1gab2850421652778eeef6830e4fb1ea346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::lookAtLH</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;eye, vec&lt; 3, T, Q &gt; const &amp;center, vec&lt; 3, T, Q &gt; const &amp;up)</argsstring>
        <name>lookAtLH</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>eye</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a left handed look at view matrix.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eye</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of the camera </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Position where the camera is looking at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>up</parametername>
</parameternamelist>
<parameterdescription>
<para>Normalized up vector, how the camera is oriented. Typically (0, 0, 1) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="709" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="777" bodyend="797" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="709" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__matrix__transform_1ga894735fbf8f3d25628c127712d0285f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::lookAt</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;eye, vec&lt; 3, T, Q &gt; const &amp;center, vec&lt; 3, T, Q &gt; const &amp;up)</argsstring>
        <name>lookAt</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>eye</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a look at view matrix based on the default handedness.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eye</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of the camera </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Position where the camera is looking at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>up</parametername>
</parameternamelist>
<parameterdescription>
<para>Normalized up vector, how the camera is oriented. Typically (0, 0, 1) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__matrix__transform" kindref="compound">GLM_GTC_matrix_transform</ref> </para>
</simplesect>
<simplesect kind="see"><para>- frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) frustum(T const&amp; left, T const&amp; right, T const&amp; bottom, T const&amp; top, T const&amp; nearVal, T const&amp; farVal) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluLookAt.xml">gluLookAt man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" line="721" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.inl" bodystart="800" bodyend="807" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/matrix_transform.hpp" declline="721" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="matrix__transform_8hpp" kindref="compound">glm/gtc/matrix_transform.hpp</ref>&gt; to use the features of this extension.</para>
<para>Defines functions that generate common transformation matrices.</para>
<para>The matrices generated by this extension use standard OpenGL fixed-function conventions. For example, the setLookAt function generates a transform from world space into the specific eye space that the projective matrix functions (perspective, ortho, etc) are designed to expect. The OpenGL compatibility specifications defines the particular layout of this eye space. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
