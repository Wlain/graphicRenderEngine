<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__core__func__exponential" kind="group">
    <compoundname>core_func_exponential</compoundname>
    <title>Exponential functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::pow</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;base, vec&lt; L, T, Q &gt; const &amp;exponent)</argsstring>
        <name>pow</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns &apos;base&apos; raised to the power &apos;exponent&apos;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point value. pow function is defined for input values of &apos;base&apos; defined in the range (inf-, inf+) in the limit of the type qualifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exponent</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point value representing the &apos;exponent&apos;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/pow.xml">GLSL pow man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.2 Exponential Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" line="34" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_exponential.inl" bodystart="72" bodyend="75" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" declline="34" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::exp</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>exp</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the natural exponentiation of x, i.e., e^x.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>exp function is defined for input values of v defined in the range (inf-, inf+) in the limit of the type qualifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer between 1 and 4 included that qualify the dimension of the vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/exp.xml">GLSL exp man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.2 Exponential Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" line="45" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_exponential.inl" bodystart="80" bodyend="83" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" declline="45" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::log</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the natural logarithm of v, i.e., returns the value y which satisfies the equation x = e^y. Results are undefined if v &lt;= 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>log function is defined for input values of v defined in the range (0, inf+) in the limit of the type qualifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer between 1 and 4 included that qualify the dimension of the vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/log.xml">GLSL log man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.2 Exponential Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" line="58" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_exponential.inl" bodystart="88" bodyend="91" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" declline="58" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__exponential_1ga846320088ef029c37c3c139e53841fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::exp2</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>exp2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 2 raised to the v power.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>exp2 function is defined for input values of v defined in the range (inf-, inf+) in the limit of the type qualifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer between 1 and 4 included that qualify the dimension of the vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/exp2.xml">GLSL exp2 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.2 Exponential Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" line="69" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_exponential.inl" bodystart="107" bodyend="110" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" declline="69" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__exponential_1gadccb78a5779e391b297401a9bfc33a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::log2</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>log2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the base 2 log of x, i.e., returns the value y, which satisfies the equation x = 2 ^ y.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>log2 function is defined for input values of v defined in the range (0, inf+) in the limit of the type qualifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer between 1 and 4 included that qualify the dimension of the vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/log2.xml">GLSL log2 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.2 Exponential Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" line="81" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_exponential.inl" bodystart="120" bodyend="123" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" declline="81" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__exponential_1ga1f904e09827e939a56e4158f45ca8ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::sqrt</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>sqrt</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the positive square root of v.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>sqrt function is defined for input values of v defined in the range [0, inf+) in the limit of the type qualifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer between 1 and 4 included that qualify the dimension of the vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/sqrt.xml">GLSL sqrt man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.2 Exponential Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" line="92" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_exponential.inl" bodystart="128" bodyend="132" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" declline="92" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__exponential_1gaf71f71b66d0f437a05d704f29583c480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::inversesqrt</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>inversesqrt</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the reciprocal of the positive square root of v.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>inversesqrt function is defined for input values of v defined in the range [0, inf+) in the limit of the type qualifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer between 1 and 4 included that qualify the dimension of the vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/inversesqrt.xml">GLSL inversesqrt man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.2 Exponential Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" line="103" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_exponential.inl" bodystart="142" bodyend="146" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/exponential.hpp" declline="103" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="exponential_8hpp" kindref="compound">glm/exponential.hpp</ref>&gt; to use these core features.</para>
<para>These all operate component-wise. The description is per component. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
