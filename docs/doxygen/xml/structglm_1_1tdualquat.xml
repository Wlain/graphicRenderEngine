<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structglm_1_1tdualquat" kind="struct" language="C++" prot="public">
    <compoundname>glm::tdualquat</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type><ref refid="qualifier_8hpp_1a36ed105b07c7746804d7fdc7cc90ff25" kindref="member">qualifier</ref></type>
        <declname>Q</declname>
        <defname>Q</defname>
        <defval>defaultp</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structglm_1_1tdualquat_1ab9028885c8de069ef8a61ebab77f7ccc" prot="public" static="no">
        <type>T</type>
        <definition>typedef T glm::tdualquat&lt; T, Q &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="41" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structglm_1_1tdualquat_1ab18b8665bbd568f9bc93ef93ed475a47" prot="public" static="no">
        <type><ref refid="structglm_1_1tquat" kindref="compound">glm::tquat</ref>&lt; T, Q &gt;</type>
        <definition>typedef glm::tquat&lt;T, Q&gt; glm::tdualquat&lt; T, Q &gt;::part_type</definition>
        <argsstring></argsstring>
        <name>part_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="42" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structglm_1_1tdualquat_1ad9fa4fd7f84d17bebd3efed6b5455d80" prot="public" static="no">
        <type>length_t</type>
        <definition>typedef length_t glm::tdualquat&lt; T, Q &gt;::length_type</definition>
        <argsstring></argsstring>
        <name>length_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="50" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structglm_1_1tdualquat_1a25909f92feb14a77756d2e83f9ec0b20" prot="public" static="no" mutable="no">
        <type><ref refid="structglm_1_1tquat" kindref="compound">glm::tquat</ref>&lt; T, Q &gt;</type>
        <definition>glm::tquat&lt;T, Q&gt; glm::tdualquat&lt; T, Q &gt;::real</definition>
        <argsstring></argsstring>
        <name>real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="46" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structglm_1_1tdualquat_1a6e9bac4577ea5ff7e47104c183f3955a" prot="public" static="no" mutable="no">
        <type><ref refid="structglm_1_1tquat" kindref="compound">glm::tquat</ref>&lt; T, Q &gt;</type>
        <definition>glm::tquat&lt;T, Q&gt; glm::tdualquat&lt; T, Q &gt;::dual</definition>
        <argsstring></argsstring>
        <name>dual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="46" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structglm_1_1tdualquat_1a79fe24c72a3f26d906b080de34b92b4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_CONSTEXPR length_type</type>
        <definition>static GLM_FUNC_DECL GLM_CONSTEXPR length_type glm::tdualquat&lt; T, Q &gt;::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <briefdescription>
<para>Return the count of components of a dual quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="52" column="48" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structglm_1_1tdualquat_1a3ee9d16c280994cbf002e91a72985100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL <ref refid="structglm_1_1tquat" kindref="compound">part_type</ref> &amp;</type>
        <definition>GLM_FUNC_DECL part_type &amp; glm::tdualquat&lt; T, Q &gt;::operator[]</definition>
        <argsstring>(length_type i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>length_type</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="54" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a96757fe178e80b5549ea737d669e107e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL <ref refid="structglm_1_1tquat" kindref="compound">part_type</ref> const &amp;</type>
        <definition>GLM_FUNC_DECL part_type const  &amp; glm::tdualquat&lt; T, Q &gt;::operator[]</definition>
        <argsstring>(length_type i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>length_type</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="55" column="31"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1ab2b5e57b73a6f79c56e9bcdc7d5e1607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_QUALIFIER GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>() GLM_DEFAULT_CTOR</argsstring>
        <name>tdualquat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="59" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1ad6099c663113c443a9efeeabbd321bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_QUALIFIER GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tdualquat&lt; T, Q &gt; const &amp;d) GLM_DEFAULT</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; const &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="60" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a23b9100d907a648204929a4c3392a56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="qualifier_8hpp_1a36ed105b07c7746804d7fdc7cc90ff25" kindref="member">qualifier</ref></type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_DECL GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tdualquat&lt; T, P &gt; const &amp;d)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, P &gt; const &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="62" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1aca6bbe930bd0b26c217b535fe06df688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_QUALIFIER GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tquat&lt; T, Q &gt; const &amp;real)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tquat" kindref="compound">tquat</ref>&lt; T, Q &gt; const &amp;</type>
          <declname>real</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="66" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1aedfbe6fe7039943ccbf7d178731fa9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_QUALIFIER GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tquat&lt; T, Q &gt; const &amp;orientation, vec&lt; 3, T, Q &gt; const &amp;translation)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tquat" kindref="compound">tquat</ref>&lt; T, Q &gt; const &amp;</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type><ref refid="structglm_1_1vec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="67" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1ab86d3cf3f902945d1d774505b32f9f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_QUALIFIER GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tquat&lt; T, Q &gt; const &amp;real, tquat&lt; T, Q &gt; const &amp;dual)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tquat" kindref="compound">tquat</ref>&lt; T, Q &gt; const &amp;</type>
          <declname>real</declname>
        </param>
        <param>
          <type><ref refid="structglm_1_1tquat" kindref="compound">tquat</ref>&lt; T, Q &gt; const &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="68" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a1fbee84d447e37ac7542412dab82cbcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type><ref refid="qualifier_8hpp_1a36ed105b07c7746804d7fdc7cc90ff25" kindref="member">qualifier</ref></type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL GLM_CONSTEXPR GLM_EXPLICIT</type>
        <definition>GLM_FUNC_DECL GLM_CONSTEXPR GLM_EXPLICIT glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tdualquat&lt; U, P &gt; const &amp;q)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; U, P &gt; const &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="73" column="42"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1aaf58d434e56496978c027c3b7c021cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_EXPLICIT</type>
        <definition>GLM_FUNC_QUALIFIER glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(mat&lt; 2, 4, T, Q &gt; const &amp;holder_mat)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1mat" kindref="compound">mat</ref>&lt; 2, 4, T, Q &gt; const &amp;</type>
          <declname>holder_mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="75" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a3f557639a4737d4852919fdbbb39e133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL GLM_EXPLICIT</type>
        <definition>GLM_FUNC_QUALIFIER glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(mat&lt; 3, 4, T, Q &gt; const &amp;aug_mat)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1mat" kindref="compound">mat</ref>&lt; 3, 4, T, Q &gt; const &amp;</type>
          <declname>aug_mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="76" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a87cbf5213f512c3b14d9fb53e3314aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL <ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; &amp;</type>
        <definition>GLM_FUNC_QUALIFIER tdualquat&lt; T, Q &gt; &amp; glm::tdualquat&lt; T, Q &gt;::operator=</definition>
        <argsstring>(tdualquat&lt; T, Q &gt; const &amp;m) GLM_DEFAULT</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="80" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a1cef9c468697c91e15256b2021cfff68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; &amp;</type>
        <definition>GLM_FUNC_DECL tdualquat&lt; T, Q &gt; &amp; glm::tdualquat&lt; T, Q &gt;::operator=</definition>
        <argsstring>(tdualquat&lt; U, Q &gt; const &amp;m)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; U, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="83" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1ad54a1a9af814917399b6f8f4a3ecbb3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; &amp;</type>
        <definition>GLM_FUNC_DECL tdualquat&lt; T, Q &gt; &amp; glm::tdualquat&lt; T, Q &gt;::operator*=</definition>
        <argsstring>(U s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>U</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="85" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1ae8f3f03028d7c32407ae79b5f11ee956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; &amp;</type>
        <definition>GLM_FUNC_DECL tdualquat&lt; T, Q &gt; &amp; glm::tdualquat&lt; T, Q &gt;::operator/=</definition>
        <argsstring>(U s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>U</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="87" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a9dbf71289809c7b43527c0e881601fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="qualifier_8hpp_1a36ed105b07c7746804d7fdc7cc90ff25" kindref="member">qualifier</ref></type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_QUALIFIER GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tdualquat&lt; T, P &gt; const &amp;d)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, P &gt; const &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>GLM_HAS_DEFAULTED_FUNCTIONS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" line="47" column="44" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a00f0899c1213aa991a65dfaf8d15fba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type><ref refid="qualifier_8hpp_1a36ed105b07c7746804d7fdc7cc90ff25" kindref="member">qualifier</ref></type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER GLM_CONSTEXPR</type>
        <definition>GLM_FUNC_QUALIFIER GLM_CONSTEXPR glm::tdualquat&lt; T, Q &gt;::tdualquat</definition>
        <argsstring>(tdualquat&lt; U, P &gt; const &amp;q)</argsstring>
        <name>tdualquat</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; U, P &gt; const &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" line="77" column="44" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a62dc40b258f3bffcf8c183a64e1ed56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; &amp;</type>
        <definition>GLM_FUNC_QUALIFIER tdualquat&lt; T, Q &gt; &amp; glm::tdualquat&lt; T, Q &gt;::operator=</definition>
        <argsstring>(tdualquat&lt; U, Q &gt; const &amp;q)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; U, Q &gt; const &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>GLM_HAS_DEFAULTED_FUNCTIONS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" line="108" column="41" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1aece3d7993a997f0c063a410cc46de7e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; &amp;</type>
        <definition>GLM_FUNC_QUALIFIER tdualquat&lt; T, Q &gt; &amp; glm::tdualquat&lt; T, Q &gt;::operator*=</definition>
        <argsstring>(U s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>U</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" line="117" column="41" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structglm_1_1tdualquat_1a72dbb0cbc46b5cc4c5d8824e14916eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structglm_1_1tdualquat" kindref="compound">tdualquat</ref>&lt; T, Q &gt; &amp;</type>
        <definition>GLM_FUNC_QUALIFIER tdualquat&lt; T, Q &gt; &amp; glm::tdualquat&lt; T, Q &gt;::operator/=</definition>
        <argsstring>(U s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>U</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" line="126" column="41" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.inl" bodystart="126" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" line="37" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp" bodystart="38" bodyend="88"/>
    <listofallmembers>
      <member refid="structglm_1_1tdualquat_1a6e9bac4577ea5ff7e47104c183f3955a" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>dual</name></member>
      <member refid="structglm_1_1tdualquat_1a79fe24c72a3f26d906b080de34b92b4e" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>length</name></member>
      <member refid="structglm_1_1tdualquat_1ad9fa4fd7f84d17bebd3efed6b5455d80" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>length_type</name></member>
      <member refid="structglm_1_1tdualquat_1ad54a1a9af814917399b6f8f4a3ecbb3a" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator*=</name></member>
      <member refid="structglm_1_1tdualquat_1aece3d7993a997f0c063a410cc46de7e3" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator*=</name></member>
      <member refid="structglm_1_1tdualquat_1ae8f3f03028d7c32407ae79b5f11ee956" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator/=</name></member>
      <member refid="structglm_1_1tdualquat_1a72dbb0cbc46b5cc4c5d8824e14916eb8" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator/=</name></member>
      <member refid="structglm_1_1tdualquat_1a87cbf5213f512c3b14d9fb53e3314aa8" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator=</name></member>
      <member refid="structglm_1_1tdualquat_1a1cef9c468697c91e15256b2021cfff68" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator=</name></member>
      <member refid="structglm_1_1tdualquat_1a62dc40b258f3bffcf8c183a64e1ed56a" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator=</name></member>
      <member refid="structglm_1_1tdualquat_1a3ee9d16c280994cbf002e91a72985100" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator[]</name></member>
      <member refid="structglm_1_1tdualquat_1a96757fe178e80b5549ea737d669e107e" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>operator[]</name></member>
      <member refid="structglm_1_1tdualquat_1ab18b8665bbd568f9bc93ef93ed475a47" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>part_type</name></member>
      <member refid="structglm_1_1tdualquat_1a25909f92feb14a77756d2e83f9ec0b20" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>real</name></member>
      <member refid="structglm_1_1tdualquat_1ab2b5e57b73a6f79c56e9bcdc7d5e1607" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1ad6099c663113c443a9efeeabbd321bd1" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1a23b9100d907a648204929a4c3392a56a" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1aca6bbe930bd0b26c217b535fe06df688" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1aedfbe6fe7039943ccbf7d178731fa9b7" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1ab86d3cf3f902945d1d774505b32f9f56" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1a1fbee84d447e37ac7542412dab82cbcf" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1aaf58d434e56496978c027c3b7c021cfb" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1a3f557639a4737d4852919fdbbb39e133" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1a9dbf71289809c7b43527c0e881601fbb" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1a00f0899c1213aa991a65dfaf8d15fba5" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>tdualquat</name></member>
      <member refid="structglm_1_1tdualquat_1ab9028885c8de069ef8a61ebab77f7ccc" prot="public" virt="non-virtual"><scope>glm::tdualquat</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
