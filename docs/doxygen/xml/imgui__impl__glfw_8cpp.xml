<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__impl__glfw_8cpp" kind="file" language="C++">
    <compoundname>imgui_impl_glfw.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__impl__glfw_8h" local="yes">imgui_impl_glfw.h</includes>
    <includes local="no">GLFW/glfw3.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp</label>
        <link refid="imgui__impl__glfw_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_impl_glfw.h</label>
        <link refid="imgui__impl__glfw_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_im_gui___impl_glfw___data" prot="public">ImGui_ImplGlfw_Data</innerclass>
    <innerclass refid="struct_im_gui___impl_glfw___viewport_data" prot="public">ImGui_ImplGlfw_ViewportData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1af81f1903ed3f6ea6f2182e856b87a6b2" prot="public" static="no">
        <name>GLFW_HAS_WINDOW_TOPMOST</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="74" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1a962141962262d1961f4189f70a505a29" prot="public" static="no">
        <name>GLFW_HAS_WINDOW_HOVERED</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="75" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1ae64ad564e536847807e36c670c8ac9fc" prot="public" static="no">
        <name>GLFW_HAS_WINDOW_ALPHA</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="76" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1ac70b8597a58988c599e0f0a80b4a28e1" prot="public" static="no">
        <name>GLFW_HAS_PER_MONITOR_DPI</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="77" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1aaf81690ad26c92c85a6acdd7f1d3a3bc" prot="public" static="no">
        <name>GLFW_HAS_VULKAN</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="78" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1ac4efe87b7e4ee1ae23e923a71e994864" prot="public" static="no">
        <name>GLFW_HAS_FOCUS_WINDOW</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="79" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1a7f40dd59f893b49baf121d1b9641f764" prot="public" static="no">
        <name>GLFW_HAS_FOCUS_ON_SHOW</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="80" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1ab929270f100e46e21b24c84e9a4ac300" prot="public" static="no">
        <name>GLFW_HAS_MONITOR_WORK_AREA</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="81" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1aabae7554d4c6fde2a28c969b3d4db942" prot="public" static="no">
        <name>GLFW_HAS_OSX_WINDOW_POS_FIX</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 + <ref refid="group__init_1gab72ae2e2035d9ea461abc3495eac0502" kindref="member">GLFW_VERSION_REVISION</ref> * 10 &gt;= 3310)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="82" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1a58ac1869ab11654688bc0ea77bf224fe" prot="public" static="no">
        <name>GLFW_HAS_NEW_CURSORS</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="86" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1ab73091e86863ff6a79e14edc7ad85c58" prot="public" static="no">
        <name>GLFW_HAS_MOUSE_PASSTHROUGH</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="91" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1ab38b852b769d12086a038b4e7b5da59b" prot="public" static="no">
        <name>GLFW_HAS_GET_KEY_NAME</name>
        <initializer>(<ref refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" kindref="member">GLFW_VERSION_MAJOR</ref> * 1000 + <ref refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" kindref="member">GLFW_VERSION_MINOR</ref> * 100 &gt;= 3200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="93" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1a0720760ecc7d8768f926a5b2ba4af07d" prot="public" static="no">
        <name>MAP_BUTTON</name>
        <param><defname>NAV_NO</defname></param>
        <param><defname>BUTTON_NO</defname></param>
        <initializer>do { if (buttons_count &gt; BUTTON_NO &amp;&amp; buttons[BUTTON_NO] == <ref refid="group__input_1ga2485743d0b59df3791c45951c4195265" kindref="member">GLFW_PRESS</ref>) io.NavInputs[NAV_NO] = 1.0f; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="634" column="13"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__glfw_8cpp_1ad181101ed89f4155bbc97eccffea135b" prot="public" static="no">
        <name>MAP_ANALOG</name>
        <param><defname>NAV_NO</defname></param>
        <param><defname>AXIS_NO</defname></param>
        <param><defname>V0</defname></param>
        <param><defname>V1</defname></param>
        <initializer>do { float v = (axes_count &gt; AXIS_NO) ? axes[AXIS_NO] : V0; v = (v - V0) / (V1 - V0); if (v &gt; 1.0f) v = 1.0f; if (io.NavInputs[NAV_NO] &lt; v) io.NavInputs[NAV_NO] = v; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="635" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="imgui__impl__glfw_8cpp_1abfd5392e93ee3c4e7f86cc5515e2d413" prot="public" static="no" strong="no">
        <type></type>
        <name>GlfwClientApi</name>
        <enumvalue id="imgui__impl__glfw_8cpp_1abfd5392e93ee3c4e7f86cc5515e2d413a64b18e86183bf2f895418038ae86fd97" prot="public">
          <name>GlfwClientApi_Unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__glfw_8cpp_1abfd5392e93ee3c4e7f86cc5515e2d413a4bdb1206a80d2fecbccc1ba13a194189" prot="public">
          <name>GlfwClientApi_OpenGL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__glfw_8cpp_1abfd5392e93ee3c4e7f86cc5515e2d413aea35a390f6542022f5704637f7cbefb5" prot="public">
          <name>GlfwClientApi_Vulkan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="96" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="97" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a42131482f4e35e879c2d58d5c1c9eb8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref> *</type>
        <definition>static ImGui_ImplGlfw_Data * ImGui_ImplGlfw_GetBackendData</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_GetBackendData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="134" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a5d18d4c51ba5df712307bc84efd3275f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_UpdateMonitors</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_UpdateMonitors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="663" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="663" bodyend="696" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" declline="140" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ad8cc10fd8b8d957e86736fbcacf61580" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_InitPlatformInterface</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_InitPlatformInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="1042" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="1042" bodyend="1075" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" declline="141" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1af87dcbdd956ea3eb7ff27761f1a2f53a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_ShutdownPlatformInterface</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_ShutdownPlatformInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="1077" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="1077" bodyend="1080" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" declline="142" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a58c12049e0c316f3f11e3219fc1ff278" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * ImGui_ImplGlfw_GetClipboardText</definition>
        <argsstring>(void *user_data)</argsstring>
        <name>ImGui_ImplGlfw_GetClipboardText</name>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="145" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1abd5ac7368a6c59615369da9a02a22e15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_SetClipboardText</definition>
        <argsstring>(void *user_data, const char *text)</argsstring>
        <name>ImGui_ImplGlfw_SetClipboardText</name>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="150" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a8552dcd74b12e1db67a302e613af636d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ImGuiKey</type>
        <definition>static ImGuiKey ImGui_ImplGlfw_KeyToImGuiKey</definition>
        <argsstring>(int key)</argsstring>
        <name>ImGui_ImplGlfw_KeyToImGuiKey</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="155" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="155" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a341188acfd4e9143d2f97a8b707e7308" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_UpdateKeyModifiers</definition>
        <argsstring>(int mods)</argsstring>
        <name>ImGui_ImplGlfw_UpdateKeyModifiers</name>
        <param>
          <type>int</type>
          <declname>mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="268" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="268" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a075e351f00b5c13086cacb05b5b6ee08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_MouseButtonCallback</definition>
        <argsstring>(GLFWwindow *window, int button, int action, int mods)</argsstring>
        <name>ImGui_ImplGlfw_MouseButtonCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="279" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="279" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a59c26c674cfd04975ac49c7d83339113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_ScrollCallback</definition>
        <argsstring>(GLFWwindow *window, double xoffset, double yoffset)</argsstring>
        <name>ImGui_ImplGlfw_ScrollCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="292" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="292" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a3ae7f8f778b832fb94c3863be111b247" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ImGui_ImplGlfw_TranslateUntranslatedKey</definition>
        <argsstring>(int key, int scancode)</argsstring>
        <name>ImGui_ImplGlfw_TranslateUntranslatedKey</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="302" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="302" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a66afe6468f3645befeb50a75f82b5efc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_KeyCallback</definition>
        <argsstring>(GLFWwindow *window, int keycode, int scancode, int action, int mods)</argsstring>
        <name>ImGui_ImplGlfw_KeyCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keycode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="327" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="327" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a64954a853e7f22592743e177b29780d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_WindowFocusCallback</definition>
        <argsstring>(GLFWwindow *window, int focused)</argsstring>
        <name>ImGui_ImplGlfw_WindowFocusCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>focused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="349" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="349" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1aff2e41a5905ff393a8c6a458809f8c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_CursorPosCallback</definition>
        <argsstring>(GLFWwindow *window, double x, double y)</argsstring>
        <name>ImGui_ImplGlfw_CursorPosCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="359" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="359" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a36cddf1dc9af69c03ea52450a32d3818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_CursorEnterCallback</definition>
        <argsstring>(GLFWwindow *window, int entered)</argsstring>
        <name>ImGui_ImplGlfw_CursorEnterCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>entered</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="376" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="376" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1afe604d459cc5c4a173ce9e331af6735b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_CharCallback</definition>
        <argsstring>(GLFWwindow *window, unsigned int c)</argsstring>
        <name>ImGui_ImplGlfw_CharCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="392" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="392" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a9acaa23c8338d1ef4ba82b48142ee895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_MonitorCallback</definition>
        <argsstring>(GLFWmonitor *, int)</argsstring>
        <name>ImGui_ImplGlfw_MonitorCallback</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <defname>monitor</defname>
        </param>
        <param>
          <type>int</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="402" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="402" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a637facc7eff897ef4512026ea1afaf0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplGlfw_Init</definition>
        <argsstring>(GLFWwindow *window, bool install_callbacks, GlfwClientApi client_api)</argsstring>
        <name>ImGui_ImplGlfw_Init</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>install_callbacks</declname>
        </param>
        <param>
          <type>GlfwClientApi</type>
          <declname>client_api</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="408" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="408" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a3d472e598f8e218a0bd994e840b865ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplGlfw_InitForOpenGL</definition>
        <argsstring>(GLFWwindow *window, bool install_callbacks)</argsstring>
        <name>ImGui_ImplGlfw_InitForOpenGL</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>install_callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="493" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="493" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ac7cab00e5027bccc3b536afb0e07bc8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplGlfw_InitForVulkan</definition>
        <argsstring>(GLFWwindow *window, bool install_callbacks)</argsstring>
        <name>ImGui_ImplGlfw_InitForVulkan</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>install_callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="498" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="498" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ab1ec1d0dc53754ef893e6ab23ec564e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplGlfw_InitForOther</definition>
        <argsstring>(GLFWwindow *window, bool install_callbacks)</argsstring>
        <name>ImGui_ImplGlfw_InitForOther</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>install_callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="503" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="503" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a983c2903ccb938fea5ecdd4d53e54704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_Shutdown</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="508" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="508" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ad0da3a1b2955f768fa933dd4edba33b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_UpdateMouseData</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_UpdateMouseData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="536" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="536" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a876edf1a44dd8b6358feba912702a860" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_UpdateMouseCursor</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_UpdateMouseCursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="599" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="599" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a676d90dabe6acb909f287625118e999d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_UpdateGamepads</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_UpdateGamepads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="626" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="626" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a206e99434f63c4b8e24e8a4208c11b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplGlfw_NewFrame</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplGlfw_NewFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="698" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="698" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a878179c4f34513281e97f31800940e0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_WindowCloseCallback</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>ImGui_ImplGlfw_WindowCloseCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="745" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="745" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a94a9c4f9bf2563258c19278b0f85935f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_WindowPosCallback</definition>
        <argsstring>(GLFWwindow *window, int, int)</argsstring>
        <name>ImGui_ImplGlfw_WindowPosCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="757" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="757" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a047d5b36092503e45c9ea56f7064e577" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_WindowSizeCallback</definition>
        <argsstring>(GLFWwindow *window, int, int)</argsstring>
        <name>ImGui_ImplGlfw_WindowSizeCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="772" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="772" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a99d0a8bd036902b5e3be1d7a62a9faa3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_CreateWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_CreateWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="787" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="787" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a391d5f74587f2f0ef91bbdf5a9f175bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_DestroyWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_DestroyWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="831" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="831" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1af8a4b0fa4961e4408d7f010c51a076e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_ShowWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_ShowWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="877" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="877" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a892f556f5f1ae006db33e4969db34c2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImGui_ImplGlfw_GetWindowPos</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_GetWindowPos</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="916" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="916" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a2b8ade5b83e80fc75fd43b6a75754f7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_SetWindowPos</definition>
        <argsstring>(ImGuiViewport *viewport, ImVec2 pos)</argsstring>
        <name>ImGui_ImplGlfw_SetWindowPos</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="924" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="924" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ace904de74abbf3d8ec0065f4f0c2728b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImGui_ImplGlfw_GetWindowSize</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_GetWindowSize</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="931" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="931" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a1913c93038f06d9339e8bcb3eded8b78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_SetWindowSize</definition>
        <argsstring>(ImGuiViewport *viewport, ImVec2 size)</argsstring>
        <name>ImGui_ImplGlfw_SetWindowSize</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="939" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="939" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ac9f34a7711fdf271d2319ee0db897468" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_SetWindowTitle</definition>
        <argsstring>(ImGuiViewport *viewport, const char *title)</argsstring>
        <name>ImGui_ImplGlfw_SetWindowTitle</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="956" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="956" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ae0ae57d4455bda09d8ed2a4c1ed3bbea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_SetWindowFocus</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_SetWindowFocus</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="962" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="962" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a00326a65168e7d3c618be818f5e56557" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplGlfw_GetWindowFocus</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_GetWindowFocus</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="973" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="973" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a960fe33da45b42005b96e516e6cfa4ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplGlfw_GetWindowMinimized</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplGlfw_GetWindowMinimized</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="979" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="979" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1ab98ebdd587b41b04df5d3ee69608fbef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_RenderWindow</definition>
        <argsstring>(ImGuiViewport *viewport, void *)</argsstring>
        <name>ImGui_ImplGlfw_RenderWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="993" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="993" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__glfw_8cpp_1a70e260b45792df18373f3447c104721e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplGlfw_SwapBuffers</definition>
        <argsstring>(ImGuiViewport *viewport, void *)</argsstring>
        <name>ImGui_ImplGlfw_SwapBuffers</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" line="1001" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp" bodystart="1001" bodyend="1010"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Platform<sp/>Backend<sp/>for<sp/>GLFW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Renderer<sp/>(e.g.<sp/>OpenGL3,<sp/>Vulkan,<sp/>WebGPU..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Info:<sp/>GLFW<sp/>is<sp/>a<sp/>cross-platform<sp/>general<sp/>purpose<sp/>library<sp/>for<sp/>handling<sp/>windows,<sp/>inputs,<sp/>OpenGL/Vulkan<sp/>graphics<sp/>context<sp/>creation,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Requires:<sp/>GLFW<sp/>3.1+.<sp/>Prefer<sp/>GLFW<sp/>3.3+<sp/>for<sp/>full<sp/>feature<sp/>support.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Clipboard<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Keyboard<sp/>support.<sp/>Since<sp/>1.87<sp/>we<sp/>are<sp/>using<sp/>the<sp/>io.AddKeyEvent()<sp/>function.<sp/>Pass<sp/>ImGuiKey<sp/>values<sp/>to<sp/>all<sp/>key<sp/>functions<sp/>e.g.<sp/>ImGui::IsKeyPressed(ImGuiKey_Space).<sp/>[Legacy<sp/>GLFW_KEY_*<sp/>values<sp/>will<sp/>also<sp/>be<sp/>supported<sp/>unless<sp/>IMGUI_DISABLE_OBSOLETE_KEYIO<sp/>is<sp/>set]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Gamepad<sp/>support.<sp/>Enable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NavEnableGamepad&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Mouse<sp/>cursor<sp/>shape<sp/>and<sp/>visibility.<sp/>Disable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NoMouseCursorChange&apos;<sp/>(note:<sp/>the<sp/>resizing<sp/>cursors<sp/>requires<sp/>GLFW<sp/>3.4+).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Multi-viewport<sp/>support<sp/>(multiple<sp/>windows).<sp/>Enable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_ViewportsEnable&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Issues:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[<sp/>]<sp/>Platform:<sp/>Multi-viewport<sp/>support:<sp/>ParentViewportID<sp/>not<sp/>honored,<sp/>and<sp/>so<sp/>io.ConfigViewportsNoDefaultParent<sp/>has<sp/>no<sp/>effect<sp/>(minor).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>Dear<sp/>ImGui,<sp/>read<sp/>documentation<sp/>from<sp/>the<sp/>docs/<sp/>folder<sp/>+<sp/>read<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>online:<sp/>https://github.com/ocornut/imgui/tree/master/docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANGELOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(minor<sp/>and<sp/>older<sp/>changes<sp/>stripped<sp/>away,<sp/>please<sp/>see<sp/>git<sp/>history<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-XX-XX:<sp/>Platform:<sp/>Added<sp/>support<sp/>for<sp/>multiple<sp/>windows<sp/>via<sp/>the<sp/>ImGuiPlatformIO<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddMousePosEvent(),<sp/>io.AddMouseButtonEvent(),<sp/>io.AddMouseWheelEvent()<sp/>API<sp/>(1.87+).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>always<sp/>calling<sp/>io.AddKeyModsEvent()<sp/>next<sp/>and<sp/>before<sp/>key<sp/>event<sp/>(not<sp/>in<sp/>NewFrame)<sp/>to<sp/>fix<sp/>input<sp/>queue<sp/>with<sp/>very<sp/>low<sp/>framerates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-12:<sp/>*BREAKING<sp/>CHANGE*:<sp/>Now<sp/>using<sp/>glfwSetCursorPosCallback().<sp/>If<sp/>you<sp/>called<sp/>ImGui_ImplGlfw_InitXXX()<sp/>with<sp/>install_callbacks<sp/>=<sp/>false,<sp/>you<sp/>MUST<sp/>install<sp/>glfwSetCursorPosCallback()<sp/>and<sp/>forward<sp/>it<sp/>to<sp/>the<sp/>backend<sp/>via<sp/>ImGui_ImplGlfw_CursorPosCallback().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-10:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddKeyEvent(),<sp/>io.AddKeyModsEvent()<sp/>+<sp/>io.SetKeyEventNativeData()<sp/>API<sp/>(1.87+).<sp/>Support<sp/>for<sp/>full<sp/>ImGuiKey<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-05:<sp/>Inputs:<sp/>Converting<sp/>GLFW<sp/>untranslated<sp/>keycodes<sp/>back<sp/>to<sp/>translated<sp/>keycodes<sp/>(in<sp/>the<sp/>ImGui_ImplGlfw_KeyCallback()<sp/>function)<sp/>in<sp/>order<sp/>to<sp/>match<sp/>the<sp/>behavior<sp/>of<sp/>every<sp/>other<sp/>backend,<sp/>and<sp/>facilitate<sp/>the<sp/>use<sp/>of<sp/>GLFW<sp/>with<sp/>lettered-shortcuts<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-08-17:<sp/>*BREAKING<sp/>CHANGE*:<sp/>Now<sp/>using<sp/>glfwSetWindowFocusCallback()<sp/>to<sp/>calling<sp/>io.AddFocusEvent().<sp/>If<sp/>you<sp/>called<sp/>ImGui_ImplGlfw_InitXXX()<sp/>with<sp/>install_callbacks<sp/>=<sp/>false,<sp/>you<sp/>MUST<sp/>install<sp/>glfwSetWindowFocusCallback()<sp/>and<sp/>forward<sp/>it<sp/>to<sp/>the<sp/>backend<sp/>via<sp/>ImGui_ImplGlfw_WindowFocusCallback().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-07-29:<sp/>*BREAKING<sp/>CHANGE*:<sp/>Now<sp/>using<sp/>glfwSetCursorEnterCallback().<sp/>MousePos<sp/>is<sp/>correctly<sp/>reported<sp/>when<sp/>the<sp/>host<sp/>platform<sp/>window<sp/>is<sp/>hovered<sp/>but<sp/>not<sp/>focused.<sp/>If<sp/>you<sp/>called<sp/>ImGui_ImplGlfw_InitXXX()<sp/>with<sp/>install_callbacks<sp/>=<sp/>false,<sp/>you<sp/>MUST<sp/>install<sp/>glfwSetWindowFocusCallback()<sp/>callback<sp/>and<sp/>forward<sp/>it<sp/>to<sp/>the<sp/>backend<sp/>via<sp/>ImGui_ImplGlfw_CursorEnterCallback().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06-29:<sp/>Reorganized<sp/>backend<sp/>to<sp/>pull<sp/>data<sp/>from<sp/>a<sp/>single<sp/>structure<sp/>to<sp/>facilitate<sp/>usage<sp/>with<sp/>multiple-contexts<sp/>(all<sp/>g_XXXX<sp/>access<sp/>changed<sp/>to<sp/>bd-&gt;XXXX).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-01-17:<sp/>Inputs:<sp/>Disable<sp/>error<sp/>callback<sp/>while<sp/>assigning<sp/>mouse<sp/>cursors<sp/>because<sp/>some<sp/>X11<sp/>setup<sp/>don&apos;t<sp/>have<sp/>them<sp/>and<sp/>it<sp/>generates<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-12-05:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>new<sp/>mouse<sp/>cursors<sp/>added<sp/>in<sp/>GLFW<sp/>3.4+<sp/>(resizing<sp/>cursors,<sp/>not<sp/>allowed<sp/>cursor).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-10-18:<sp/>Misc:<sp/>Previously<sp/>installed<sp/>user<sp/>callbacks<sp/>are<sp/>now<sp/>restored<sp/>on<sp/>shutdown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-07-21:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_KeyPadEnter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-05-11:<sp/>Inputs:<sp/>Don&apos;t<sp/>filter<sp/>value<sp/>from<sp/>character<sp/>callback<sp/>before<sp/>calling<sp/>AddInputCharacter().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-03-12:<sp/>Misc:<sp/>Preserve<sp/>DisplayFramebufferScale<sp/>when<sp/>main<sp/>window<sp/>is<sp/>minimized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-11-30:<sp/>Misc:<sp/>Setting<sp/>up<sp/>io.BackendPlatformName<sp/>so<sp/>it<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>About<sp/>Window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-11-07:<sp/>Inputs:<sp/>When<sp/>installing<sp/>our<sp/>GLFW<sp/>callbacks,<sp/>we<sp/>save<sp/>user&apos;s<sp/>previously<sp/>installed<sp/>ones<sp/>-<sp/>if<sp/>any<sp/>-<sp/>and<sp/>chain<sp/>call<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-08-01:<sp/>Inputs:<sp/>Workaround<sp/>for<sp/>Emscripten<sp/>which<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>handle<sp/>focus<sp/>related<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-29:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>the<sp/>ImGuiMouseCursor_Hand<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-08:<sp/>Misc:<sp/>Extracted<sp/>imgui_impl_glfw.cpp/.h<sp/>away<sp/>from<sp/>the<sp/>old<sp/>combined<sp/>GLFW+OpenGL/Vulkan<sp/>examples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-03-20:<sp/>Misc:<sp/>Setup<sp/>io.BackendFlags<sp/>ImGuiBackendFlags_HasMouseCursors<sp/>flag<sp/>+<sp/>honor<sp/>ImGuiConfigFlags_NoMouseCursorChange<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-20:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>mouse<sp/>cursors<sp/>(ImGui::GetMouseCursor()<sp/>value,<sp/>passed<sp/>to<sp/>glfwSetCursor()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Misc:<sp/>Removed<sp/>call<sp/>to<sp/>ImGui::Shutdown()<sp/>which<sp/>is<sp/>not<sp/>available<sp/>from<sp/>1.60<sp/>WIP,<sp/>user<sp/>needs<sp/>to<sp/>call<sp/>CreateContext/DestroyContext<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-25:<sp/>Inputs:<sp/>Added<sp/>gamepad<sp/>support<sp/>if<sp/>ImGuiConfigFlags_NavEnableGamepad<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-25:<sp/>Inputs:<sp/>Honoring<sp/>the<sp/>io.WantSetMousePos<sp/>by<sp/>repositioning<sp/>the<sp/>mouse<sp/>(when<sp/>using<sp/>navigation<sp/>and<sp/>ImGuiConfigFlags_NavMoveMouse<sp/>is<sp/>set).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-20:<sp/>Inputs:<sp/>Added<sp/>Horizontal<sp/>Mouse<sp/>Wheel<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-18:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Insert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2017-08-25:<sp/>Inputs:<sp/>MousePos<sp/>set<sp/>to<sp/>-FLT_MAX,-FLT_MAX<sp/>when<sp/>mouse<sp/>is<sp/>unavailable/missing<sp/>(instead<sp/>of<sp/>-1,-1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2016-10-15:<sp/>Misc:<sp/>Added<sp/>a<sp/>void*<sp/>user_data<sp/>parameter<sp/>to<sp/>Clipboard<sp/>function<sp/>handlers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_impl_glfw.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang<sp/>warnings<sp/>with<sp/>-Weverything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wold-style-cast&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>use<sp/>of<sp/>old-style<sp/>cast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsign-conversion&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>changes<sp/>signedness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__has_warning(&quot;-Wzero-as-null-pointer-constant&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wzero-as-null-pointer-constant&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GLFW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW/glfw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>APIENTRY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_EXPOSE_NATIVE_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW/glfw3native.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>glfwGetWin32Window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_WINDOW_TOPMOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3200)<sp/></highlight><highlight class="comment">//<sp/>3.2+<sp/>GLFW_FLOATING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_WINDOW_HOVERED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3300)<sp/></highlight><highlight class="comment">//<sp/>3.3+<sp/>GLFW_HOVERED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_WINDOW_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3300)<sp/></highlight><highlight class="comment">//<sp/>3.3+<sp/>glfwSetWindowOpacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_PER_MONITOR_DPI<sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3300)<sp/></highlight><highlight class="comment">//<sp/>3.3+<sp/>glfwGetMonitorContentScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_VULKAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3200)<sp/></highlight><highlight class="comment">//<sp/>3.2+<sp/>glfwCreateWindowSurface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_FOCUS_WINDOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3200)<sp/></highlight><highlight class="comment">//<sp/>3.2+<sp/>glfwFocusWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_FOCUS_ON_SHOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3300)<sp/></highlight><highlight class="comment">//<sp/>3.3+<sp/>GLFW_FOCUS_ON_SHOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_MONITOR_WORK_AREA<sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3300)<sp/></highlight><highlight class="comment">//<sp/>3.3+<sp/>glfwGetMonitorWorkarea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_OSX_WINDOW_POS_FIX<sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>+<sp/>GLFW_VERSION_REVISION<sp/>*<sp/>10<sp/>&gt;=<sp/>3310)<sp/></highlight><highlight class="comment">//<sp/>3.3.1+<sp/>Fixed:<sp/>Resizing<sp/>window<sp/>repositions<sp/>it<sp/>on<sp/>MacOS<sp/>#1553</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLFW_RESIZE_NESW_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>be<sp/>nice<sp/>to<sp/>people<sp/>who<sp/>pulled<sp/>GLFW<sp/>between<sp/>2019-04-16<sp/>(3.4<sp/>define)<sp/>and<sp/>2019-11-29<sp/>(cursors<sp/>defines)<sp/>//<sp/>FIXME:<sp/>Remove<sp/>when<sp/>GLFW<sp/>3.4<sp/>is<sp/>released?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_NEW_CURSORS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3400)<sp/></highlight><highlight class="comment">//<sp/>3.4+<sp/>GLFW_RESIZE_ALL_CURSOR,<sp/>GLFW_RESIZE_NESW_CURSOR,<sp/>GLFW_RESIZE_NWSE_CURSOR,<sp/>GLFW_NOT_ALLOWED_CURSOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_NEW_CURSORS<sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLFW_MOUSE_PASSTHROUGH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>be<sp/>nice<sp/>to<sp/>people<sp/>who<sp/>pulled<sp/>GLFW<sp/>between<sp/>2019-04-16<sp/>(3.4<sp/>define)<sp/>and<sp/>2020-07-17<sp/>(passthrough)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_MOUSE_PASSTHROUGH<sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3400)<sp/></highlight><highlight class="comment">//<sp/>3.4+<sp/>GLFW_MOUSE_PASSTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_MOUSE_PASSTHROUGH<sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAS_GET_KEY_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_VERSION_MAJOR<sp/>*<sp/>1000<sp/>+<sp/>GLFW_VERSION_MINOR<sp/>*<sp/>100<sp/>&gt;=<sp/>3200)<sp/></highlight><highlight class="comment">//<sp/>3.2+<sp/>glfwGetKeyName()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GLFW<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>GlfwClientApi</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>GlfwClientApi_Unknown,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>GlfwClientApi_OpenGL,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>GlfwClientApi_Vulkan</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="struct_im_gui___impl_glfw___data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref></highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>GlfwClientApi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientApi;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseWindow;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseCursors[ImGuiMouseCursor_COUNT];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeyOwnerWindows[GLFW_KEY_LAST];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InstalledCallbacks;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantUpdateMonitors;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chain<sp/>GLFW<sp/>callbacks:<sp/>our<sp/>callbacks<sp/>will<sp/>call<sp/>the<sp/>user&apos;s<sp/>previously<sp/>installed<sp/>callbacks,<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" kindref="member">GLFWwindowfocusfun</ref><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackWindowFocus;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" kindref="member">GLFWcursorposfun</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackCursorPos;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga945bb284410b64c49ecc50195692720a" kindref="member">GLFWcursorenterfun</ref><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackCursorEnter;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1gac4312f2199caa15988cebb59ec530373" kindref="member">GLFWmousebuttonfun</ref><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackMousebutton;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" kindref="member">GLFWscrollfun</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackScroll;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" kindref="member">GLFWkeyfun</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackKey;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" kindref="member">GLFWcharfun</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackChar;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" kindref="member">GLFWmonitorfun</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevUserCallbackMonitor;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>()<sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backend<sp/>data<sp/>stored<sp/>in<sp/>io.BackendPlatformUserData<sp/>to<sp/>allow<sp/>support<sp/>for<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>STRONGLY<sp/>preferred<sp/>that<sp/>you<sp/>use<sp/>docking<sp/>branch<sp/>with<sp/>multi-viewports<sp/>(==<sp/>single<sp/>Dear<sp/>ImGui<sp/>context<sp/>+<sp/>multiple<sp/>windows)<sp/>instead<sp/>of<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>multi-context<sp/>support<sp/>is<sp/>not<sp/>well<sp/>tested<sp/>and<sp/>probably<sp/>dysfunctional<sp/>in<sp/>this<sp/>backend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Because<sp/>glfwPollEvents()<sp/>process<sp/>all<sp/>windows<sp/>and<sp/>some<sp/>events<sp/>may<sp/>be<sp/>called<sp/>outside<sp/>of<sp/>it,<sp/>you<sp/>will<sp/>need<sp/>to<sp/>register<sp/>your<sp/>own<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(passing<sp/>install_callbacks=false<sp/>in<sp/>ImGui_ImplGlfw_InitXXX<sp/>functions),<sp/>set<sp/>the<sp/>current<sp/>dear<sp/>imgui<sp/>context<sp/>and<sp/>then<sp/>call<sp/>our<sp/>callbacks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Otherwise<sp/>we<sp/>may<sp/>need<sp/>to<sp/>store<sp/>a<sp/>GLFWWindow*<sp/>-&gt;<sp/>ImGuiContext*<sp/>map<sp/>and<sp/>handle<sp/>this<sp/>in<sp/>the<sp/>backend,<sp/>adding<sp/>a<sp/>little<sp/>bit<sp/>of<sp/>extra<sp/>complexity<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>some<sp/>shared<sp/>resources<sp/>(mouse<sp/>cursor<sp/>shape,<sp/>gamepad)<sp/>are<sp/>mishandled<sp/>when<sp/>using<sp/>multi-context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>ImGui_ImplGlfw_GetBackendData()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui::GetCurrentContext()<sp/>?<sp/>(<ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*)ImGui::GetIO().BackendPlatformUserData<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_UpdateMonitors();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_InitPlatformInterface();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_ShutdownPlatformInterface();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ImGui_ImplGlfw_GetClipboardText(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga315b28b05797d00fe7cdf1ecfdc638dc" kindref="member">glfwGetClipboardString</ref>((<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*)user_data);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_SetClipboardText(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref>((<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*)user_data,<sp/>text);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ImGuiKey<sp/>ImGui_ImplGlfw_KeyToImGuiKey(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(key)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_TAB:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Tab;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_LEFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftArrow;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_RIGHT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightArrow;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_UP:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_UpArrow;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_DOWN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_DownArrow;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_PAGE_UP:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PageUp;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_PAGE_DOWN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PageDown;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_HOME:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Home;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_END:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_End;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_INSERT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Insert;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_DELETE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Delete;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_BACKSPACE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Backspace;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_SPACE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Space;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_ENTER:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Enter;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_ESCAPE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Escape;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_APOSTROPHE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Apostrophe;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_COMMA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Comma;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_MINUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Minus;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_PERIOD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Period;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_SLASH:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Slash;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_SEMICOLON:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Semicolon;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_EQUAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Equal;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_LEFT_BRACKET:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftBracket;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_BACKSLASH:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Backslash;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_RIGHT_BRACKET:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightBracket;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_GRAVE_ACCENT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_GraveAccent;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_CAPS_LOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_CapsLock;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_SCROLL_LOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_ScrollLock;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_NUM_LOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_NumLock;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_PRINT_SCREEN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PrintScreen;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_PAUSE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Pause;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad2;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad3;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad4;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad5;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad6;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad7;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad8;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad9;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_DECIMAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadDecimal;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_DIVIDE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadDivide;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_MULTIPLY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadMultiply;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_SUBTRACT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadSubtract;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_ADD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadAdd;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_ENTER:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadEnter;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_KP_EQUAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadEqual;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_LEFT_SHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftShift;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_LEFT_CONTROL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftCtrl;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_LEFT_ALT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftAlt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_LEFT_SUPER:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftSuper;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_RIGHT_SHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightShift;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_RIGHT_CONTROL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightCtrl;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_RIGHT_ALT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightAlt;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_RIGHT_SUPER:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightSuper;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_MENU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Menu;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_2;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_3;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_4;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_5;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_6;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_7;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_8;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_9;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_A:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_A;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_B:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_B;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_C:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_C;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_D:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_D;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_E:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_E;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_G:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_G;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_H:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_H;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_I:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_I;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_J:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_J;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_K:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_K;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_L:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_L;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_M:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_M;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_N:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_N;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_O:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_O;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_P:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_P;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_Q:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Q;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_R:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_R;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_S:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_S;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_T:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_T;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_U:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_U;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_V:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_V;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_W:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_W;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_X:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_X;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_Y:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Y;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_Z:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Z;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F2;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F3;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F4;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F5;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F6;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F7;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F8;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F9;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F10:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F10;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F11:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F11;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GLFW_KEY_F12:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F12;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_None;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_UpdateKeyModifiers(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiKeyModFlags<sp/>key_mods<sp/>=</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mods<sp/>&amp;<sp/><ref refid="group__mods_1ga6ed94871c3208eefd85713fa929d45aa" kindref="member">GLFW_MOD_CONTROL</ref>)<sp/>?<sp/>ImGuiKeyModFlags_Ctrl<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mods<sp/>&amp;<sp/><ref refid="group__mods_1ga14994d3196c290aaa347248e51740274" kindref="member">GLFW_MOD_SHIFT</ref>)<sp/>?<sp/>ImGuiKeyModFlags_Shift<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mods<sp/>&amp;<sp/><ref refid="group__mods_1gad2acd5633463c29e07008687ea73c0f4" kindref="member">GLFW_MOD_ALT</ref>)<sp/>?<sp/>ImGuiKeyModFlags_Alt<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mods<sp/>&amp;<sp/><ref refid="group__mods_1ga6b64ba10ea0227cf6f42efd0a220aba1" kindref="member">GLFW_MOD_SUPER</ref>)<sp/>?<sp/>ImGuiKeyModFlags_Super<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddKeyModsEvent(key_mods);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_MouseButtonCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;PrevUserCallbackMousebutton<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>bd-&gt;Window)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackMousebutton(window,<sp/>button,<sp/>action,<sp/>mods);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_UpdateKeyModifiers(mods);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(button<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>button<sp/>&lt;<sp/>ImGuiMouseButton_COUNT)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMouseButtonEvent(button,<sp/>action<sp/>==<sp/><ref refid="group__input_1ga2485743d0b59df3791c45951c4195265" kindref="member">GLFW_PRESS</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_ScrollCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xoffset,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yoffset)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;PrevUserCallbackScroll<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>bd-&gt;Window)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackScroll(window,<sp/>xoffset,<sp/>yoffset);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddMouseWheelEvent((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)xoffset,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)yoffset);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_TranslateUntranslatedKey(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_GET_KEY_NAME<sp/>&amp;&amp;<sp/>!defined(__EMSCRIPTEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GLFW<sp/>3.1+<sp/>attempts<sp/>to<sp/>&quot;untranslate&quot;<sp/>keys,<sp/>which<sp/>goes<sp/>the<sp/>opposite<sp/>of<sp/>what<sp/>every<sp/>other<sp/>framework<sp/>does,<sp/>making<sp/>using<sp/>lettered<sp/>shortcuts<sp/>difficult.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(It<sp/>had<sp/>reasons<sp/>to<sp/>do<sp/>so:<sp/>namely<sp/>GLFW<sp/>is/was<sp/>more<sp/>likely<sp/>to<sp/>be<sp/>used<sp/>for<sp/>WASD-type<sp/>game<sp/>controls<sp/>rather<sp/>than<sp/>lettered<sp/>shortcuts,<sp/>but<sp/>IHMO<sp/>the<sp/>3.1<sp/>change<sp/>could<sp/>have<sp/>been<sp/>done<sp/>differently)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/glfw/glfw/issues/1502<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>workaround<sp/>to<sp/>undo<sp/>this<sp/>(so<sp/>our<sp/>keys<sp/>are<sp/>translated-&gt;untranslated-&gt;translated,<sp/>likely<sp/>a<sp/>lossy<sp/>process).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>won&apos;t<sp/>cover<sp/>edge<sp/>cases<sp/>but<sp/>this<sp/>is<sp/>at<sp/>least<sp/>going<sp/>to<sp/>cover<sp/>common<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key_name<sp/>=<sp/><ref refid="group__input_1ga98293ec4493cfe8e7df8ff22ee402b46" kindref="member">glfwGetKeyName</ref>(key,<sp/>scancode);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_name<sp/>&amp;&amp;<sp/>key_name[0]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>key_name[1]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>char_names[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&apos;-=[]\\,;\&apos;./&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_keys[]<sp/>=<sp/>{<sp/>GLFW_KEY_GRAVE_ACCENT,<sp/>GLFW_KEY_MINUS,<sp/>GLFW_KEY_EQUAL,<sp/>GLFW_KEY_LEFT_BRACKET,<sp/>GLFW_KEY_RIGHT_BRACKET,<sp/>GLFW_KEY_BACKSLASH,<sp/>GLFW_KEY_COMMA,<sp/>GLFW_KEY_SEMICOLON,<sp/>GLFW_KEY_APOSTROPHE,<sp/>GLFW_KEY_PERIOD,<sp/>GLFW_KEY_SLASH,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(IM_ARRAYSIZE(char_names)<sp/>==<sp/>IM_ARRAYSIZE(char_keys));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_name[0]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>key_name[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>key<sp/>=<sp/>GLFW_KEY_0<sp/>+<sp/>(key_name[0]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_name[0]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>key_name[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>key<sp/>=<sp/>GLFW_KEY_A<sp/>+<sp/>(key_name[0]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>strchr(char_names,<sp/>key_name[0]))<sp/><sp/><sp/>{<sp/>key<sp/>=<sp/>char_keys[p<sp/>-<sp/>char_names];<sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(action<sp/>==<sp/>GLFW_PRESS)<sp/>printf(&quot;key<sp/>%d<sp/>scancode<sp/>%d<sp/>name<sp/>&apos;%s&apos;\n&quot;,<sp/>key,<sp/>scancode,<sp/>key_name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(scancode);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_KeyCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keycode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;PrevUserCallbackKey<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>bd-&gt;Window)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackKey(window,<sp/>keycode,<sp/>scancode,<sp/>action,<sp/>mods);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>!=<sp/><ref refid="group__input_1ga2485743d0b59df3791c45951c4195265" kindref="member">GLFW_PRESS</ref><sp/>&amp;&amp;<sp/>action<sp/>!=<sp/><ref refid="group__input_1gada11d965c4da13090ad336e030e4d11f" kindref="member">GLFW_RELEASE</ref>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_UpdateKeyModifiers(mods);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keycode<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>keycode<sp/>&lt;<sp/>IM_ARRAYSIZE(bd-&gt;KeyOwnerWindows))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;KeyOwnerWindows[keycode]<sp/>=<sp/>(action<sp/>==<sp/><ref refid="group__input_1ga2485743d0b59df3791c45951c4195265" kindref="member">GLFW_PRESS</ref>)<sp/>?<sp/>window<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>keycode<sp/>=<sp/>ImGui_ImplGlfw_TranslateUntranslatedKey(keycode,<sp/>scancode);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiKey<sp/>imgui_key<sp/>=<sp/>ImGui_ImplGlfw_KeyToImGuiKey(keycode);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddKeyEvent(imgui_key,<sp/>(action<sp/>==<sp/><ref refid="group__input_1ga2485743d0b59df3791c45951c4195265" kindref="member">GLFW_PRESS</ref>));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>io.SetKeyEventNativeData(imgui_key,<sp/>keycode,<sp/>scancode);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>support<sp/>legacy<sp/>indexing<sp/>(&lt;1.87<sp/>user<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_WindowFocusCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>focused)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;PrevUserCallbackWindowFocus<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>bd-&gt;Window)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackWindowFocus(window,<sp/>focused);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddFocusEvent(focused<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_CursorPosCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;PrevUserCallbackCursorPos<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>bd-&gt;Window)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackCursorPos(window,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_x,<sp/>window_y;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref>(window,<sp/>&amp;window_x,<sp/>&amp;window_y);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>window_x;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>window_y;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddMousePosEvent((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)y);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_CursorEnterCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entered)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;PrevUserCallbackCursorEnter<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>bd-&gt;Window)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackCursorEnter(window,<sp/>entered);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entered)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseWindow<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entered<sp/>&amp;&amp;<sp/>bd-&gt;MouseWindow<sp/>==<sp/>window)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent(-FLT_MAX,<sp/>-FLT_MAX);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_CharCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;PrevUserCallbackChar<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>window<sp/>==<sp/>bd-&gt;Window)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackChar(window,<sp/>c);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddInputCharacter(c);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_MonitorCallback(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateMonitors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_Init(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>install_callbacks,<sp/>GlfwClientApi<sp/>client_api)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(io.BackendPlatformUserData<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>initialized<sp/>a<sp/>platform<sp/>backend!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>backend<sp/>capabilities<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>)();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformUserData<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;imgui_impl_glfw&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasMouseCursors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>GetMouseCursor()<sp/>values<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasSetMousePos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>io.WantSetMousePos<sp/>requests<sp/>(optional,<sp/>rarely<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_PlatformHasViewports;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>create<sp/>multi-viewports<sp/>on<sp/>the<sp/>Platform<sp/>side<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_MOUSE_PASSTHROUGH<sp/>||<sp/>(GLFW_HAS_WINDOW_HOVERED<sp/>&amp;&amp;<sp/>defined(_WIN32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasMouseHoveredViewport;<sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>io.MouseHoveredViewport<sp/>correctly<sp/>(optional,<sp/>not<sp/>easy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;Window<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;Time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateMonitors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>io.SetClipboardTextFn<sp/>=<sp/>ImGui_ImplGlfw_SetClipboardText;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>io.GetClipboardTextFn<sp/>=<sp/>ImGui_ImplGlfw_GetClipboardText;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>io.ClipboardUserData<sp/>=<sp/>bd-&gt;Window;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>mouse<sp/>cursors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(By<sp/>design,<sp/>on<sp/>X11<sp/>cursors<sp/>are<sp/>user<sp/>configurable<sp/>and<sp/>some<sp/>cursors<sp/>may<sp/>be<sp/>missing.<sp/>When<sp/>a<sp/>cursor<sp/>doesn&apos;t<sp/>exist,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GLFW<sp/>will<sp/>emit<sp/>an<sp/>error<sp/>which<sp/>will<sp/>often<sp/>be<sp/>printed<sp/>by<sp/>the<sp/>app,<sp/>so<sp/>we<sp/>temporarily<sp/>disable<sp/>error<sp/>reporting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>cursors<sp/>will<sp/>return<sp/>NULL<sp/>and<sp/>our<sp/>_UpdateMouseCursor()<sp/>function<sp/>will<sp/>use<sp/>the<sp/>Arrow<sp/>cursor<sp/>instead.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" kindref="member">GLFWerrorfun</ref><sp/>prev_error_callback<sp/>=<sp/><ref refid="group__init_1ga746e2757d069eaea423349aca6ae097a" kindref="member">glfwSetErrorCallback</ref>(NULL);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_Arrow]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" kindref="member">GLFW_ARROW_CURSOR</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_TextInput]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga36185f4375eaada1b04e431244774c86" kindref="member">GLFW_IBEAM_CURSOR</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNS]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1gaf024f0e1ff8366fb2b5c260509a1fce5" kindref="member">GLFW_VRESIZE_CURSOR</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeEW]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1gabb3eb0109f11bb808fc34659177ca962" kindref="member">GLFW_HRESIZE_CURSOR</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_Hand]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga1db35e20849e0837c82e3dc1fd797263" kindref="member">GLFW_HAND_CURSOR</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_NEW_CURSORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeAll]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d" kindref="member">GLFW_RESIZE_ALL_CURSOR</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNESW]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1gab06bba3b407f92807ba9b48de667a323" kindref="member">GLFW_RESIZE_NESW_CURSOR</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNWSE]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da" kindref="member">GLFW_RESIZE_NWSE_CURSOR</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_NotAllowed]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga297c503095b034bc8891393b637844b1" kindref="member">GLFW_NOT_ALLOWED_CURSOR</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeAll]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" kindref="member">GLFW_ARROW_CURSOR</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNESW]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" kindref="member">GLFW_ARROW_CURSOR</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNWSE]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" kindref="member">GLFW_ARROW_CURSOR</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_NotAllowed]<sp/>=<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(<ref refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" kindref="member">GLFW_ARROW_CURSOR</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__init_1ga746e2757d069eaea423349aca6ae097a" kindref="member">glfwSetErrorCallback</ref>(prev_error_callback);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chain<sp/>GLFW<sp/>callbacks:<sp/>our<sp/>callbacks<sp/>will<sp/>call<sp/>the<sp/>user&apos;s<sp/>previously<sp/>installed<sp/>callbacks,<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackWindowFocus<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackCursorEnter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackMousebutton<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackScroll<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackChar<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackMonitor<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(install_callbacks)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;InstalledCallbacks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackWindowFocus<sp/>=<sp/><ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">glfwSetWindowFocusCallback</ref>(window,<sp/>ImGui_ImplGlfw_WindowFocusCallback);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackCursorEnter<sp/>=<sp/><ref refid="group__input_1gacdb3490e374c8bc08549c6f173ffa7c2" kindref="member">glfwSetCursorEnterCallback</ref>(window,<sp/>ImGui_ImplGlfw_CursorEnterCallback);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackCursorPos<sp/>=<sp/><ref refid="group__input_1ga74124d0eff27040fd10e4df9e17d129c" kindref="member">glfwSetCursorPosCallback</ref>(window,<sp/>ImGui_ImplGlfw_CursorPosCallback);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackMousebutton<sp/>=<sp/><ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref>(window,<sp/>ImGui_ImplGlfw_MouseButtonCallback);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackScroll<sp/>=<sp/><ref refid="group__input_1gaa786b59f19ad8525d251cda8e0d7d29b" kindref="member">glfwSetScrollCallback</ref>(window,<sp/>ImGui_ImplGlfw_ScrollCallback);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackKey<sp/>=<sp/><ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref>(window,<sp/>ImGui_ImplGlfw_KeyCallback);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackChar<sp/>=<sp/><ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">glfwSetCharCallback</ref>(window,<sp/>ImGui_ImplGlfw_CharCallback);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;PrevUserCallbackMonitor<sp/>=<sp/><ref refid="group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1" kindref="member">glfwSetMonitorCallback</ref>(ImGui_ImplGlfw_MonitorCallback);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>monitors<sp/>the<sp/>first<sp/>time<sp/>(note:<sp/>monitor<sp/>callback<sp/>are<sp/>broken<sp/>in<sp/>GLFW<sp/>3.2<sp/>and<sp/>earlier,<sp/>see<sp/>github.com/glfw/glfw/issues/784)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_UpdateMonitors();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1" kindref="member">glfwSetMonitorCallback</ref>(ImGui_ImplGlfw_MonitorCallback);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>mouse<sp/>update<sp/>function<sp/>expect<sp/>PlatformHandle<sp/>to<sp/>be<sp/>filled<sp/>for<sp/>the<sp/>main<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>main_viewport<sp/>=<sp/>ImGui::GetMainViewport();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandle<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd-&gt;Window;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandleRaw<sp/>=<sp/>glfwGetWin32Window(bd-&gt;Window);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_InitPlatformInterface();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;ClientApi<sp/>=<sp/>client_api;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_InitForOpenGL(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>install_callbacks)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_Init(window,<sp/>install_callbacks,<sp/>GlfwClientApi_OpenGL);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_InitForVulkan(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>install_callbacks)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_Init(window,<sp/>install_callbacks,<sp/>GlfwClientApi_Vulkan);</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_InitForOther(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>install_callbacks)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_Init(window,<sp/>install_callbacks,<sp/>GlfwClientApi_Unknown);</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_Shutdown()</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>platform<sp/>backend<sp/>to<sp/>shutdown,<sp/>or<sp/>already<sp/>shutdown?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_ShutdownPlatformInterface();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;InstalledCallbacks)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">glfwSetWindowFocusCallback</ref>(bd-&gt;Window,<sp/>bd-&gt;PrevUserCallbackWindowFocus);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gacdb3490e374c8bc08549c6f173ffa7c2" kindref="member">glfwSetCursorEnterCallback</ref>(bd-&gt;Window,<sp/>bd-&gt;PrevUserCallbackCursorEnter);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1ga74124d0eff27040fd10e4df9e17d129c" kindref="member">glfwSetCursorPosCallback</ref>(bd-&gt;Window,<sp/>bd-&gt;PrevUserCallbackCursorPos);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref>(bd-&gt;Window,<sp/>bd-&gt;PrevUserCallbackMousebutton);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gaa786b59f19ad8525d251cda8e0d7d29b" kindref="member">glfwSetScrollCallback</ref>(bd-&gt;Window,<sp/>bd-&gt;PrevUserCallbackScroll);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref>(bd-&gt;Window,<sp/>bd-&gt;PrevUserCallbackKey);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">glfwSetCharCallback</ref>(bd-&gt;Window,<sp/>bd-&gt;PrevUserCallbackChar);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1" kindref="member">glfwSetMonitorCallback</ref>(bd-&gt;PrevUserCallbackMonitor);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImGuiMouseCursor<sp/>cursor_n<sp/>=<sp/>0;<sp/>cursor_n<sp/>&lt;<sp/>ImGuiMouseCursor_COUNT;<sp/>cursor_n++)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref>(bd-&gt;MouseCursors[cursor_n]);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformUserData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_DELETE(bd);</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_UpdateMouseData()</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>platform_io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>io.MouseHoveredViewport<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>mouse_pos_prev<sp/>=<sp/>io.MousePos;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>platform_io.Viewports.Size;<sp/>n++)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>platform_io.Viewports[n];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window<sp/>=<sp/>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*)viewport-&gt;PlatformHandle;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">#ifdef<sp/>__EMSCRIPTEN__</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_window_focused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_window_focused<sp/>=<sp/><ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>(window,<sp/><ref refid="group__window_1ga54ddb14825a1541a56e22afb5f832a9e" kindref="member">GLFW_FOCUSED</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_window_focused)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Set<sp/>OS<sp/>mouse<sp/>position<sp/>from<sp/>Dear<sp/>ImGui<sp/>if<sp/>requested<sp/>(rarely<sp/>used,<sp/>only<sp/>when<sp/>ImGuiConfigFlags_NavEnableSetMousePos<sp/>is<sp/>enabled<sp/>by<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>multi-viewports<sp/>are<sp/>enabled,<sp/>all<sp/>Dear<sp/>ImGui<sp/>positions<sp/>are<sp/>same<sp/>as<sp/>OS<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.WantSetMousePos)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" kindref="member">glfwSetCursorPos</ref>(window,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(mouse_pos_prev.x<sp/>-<sp/>viewport-&gt;Pos.x),<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(mouse_pos_prev.y<sp/>-<sp/>viewport-&gt;Pos.y));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Fallback<sp/>to<sp/>provide<sp/>mouse<sp/>position<sp/>when<sp/>focused<sp/>(ImGui_ImplGlfw_CursorPosCallback<sp/>already<sp/>provides<sp/>this<sp/>when<sp/>hovered<sp/>or<sp/>captured)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;MouseWindow<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mouse_x,<sp/>mouse_y;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gad289438eb7cf53d11eca685373f44105" kindref="member">glfwGetCursorPos</ref>(window,<sp/>&amp;mouse_x,<sp/>&amp;mouse_y);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single<sp/>viewport<sp/>mode:<sp/>mouse<sp/>position<sp/>in<sp/>client<sp/>window<sp/>coordinates<sp/>(io.MousePos<sp/>is<sp/>(0,0)<sp/>when<sp/>the<sp/>mouse<sp/>is<sp/>on<sp/>the<sp/>upper-left<sp/>corner<sp/>of<sp/>the<sp/>app<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multi-viewport<sp/>mode:<sp/>mouse<sp/>position<sp/>in<sp/>OS<sp/>absolute<sp/>coordinates<sp/>(io.MousePos<sp/>is<sp/>(0,0)<sp/>when<sp/>the<sp/>mouse<sp/>is<sp/>on<sp/>the<sp/>upper-left<sp/>of<sp/>the<sp/>primary<sp/>monitor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_x,<sp/>window_y;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref>(window,<sp/>&amp;window_x,<sp/>&amp;window_y);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_x<sp/>+=<sp/>window_x;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_y<sp/>+=<sp/>window_y;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_y);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>When<sp/>using<sp/>multiple<sp/>viewports:<sp/>set<sp/>io.MouseHoveredViewport<sp/>to<sp/>the<sp/>viewport<sp/>the<sp/>OS<sp/>mouse<sp/>cursor<sp/>is<sp/>hovering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>this<sp/>information<sp/>is<sp/>not<sp/>easy<sp/>to<sp/>provide<sp/>and<sp/>many<sp/>high-level<sp/>windowing<sp/>library<sp/>won&apos;t<sp/>be<sp/>able<sp/>to<sp/>provide<sp/>it<sp/>correctly,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>_ignoring_<sp/>viewports<sp/>with<sp/>the<sp/>ImGuiViewportFlags_NoInputs<sp/>flag<sp/>(pass-through<sp/>windows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>_regardless_<sp/>of<sp/>whether<sp/>another<sp/>viewport<sp/>is<sp/>focused<sp/>or<sp/>being<sp/>dragged<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>ImGuiBackendFlags_HasMouseHoveredViewport<sp/>is<sp/>not<sp/>set<sp/>by<sp/>the<sp/>backend,<sp/>imgui<sp/>will<sp/>ignore<sp/>this<sp/>field<sp/>and<sp/>infer<sp/>the<sp/>information<sp/>by<sp/>relying<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rectangles<sp/>and<sp/>last<sp/>focused<sp/>time<sp/>of<sp/>every<sp/>viewports<sp/>it<sp/>knows<sp/>about.<sp/>It<sp/>will<sp/>be<sp/>unaware<sp/>of<sp/>other<sp/>windows<sp/>that<sp/>may<sp/>be<sp/>sitting<sp/>between<sp/>or<sp/>over<sp/>your<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[GLFW]<sp/>FIXME:<sp/>This<sp/>is<sp/>currently<sp/>only<sp/>correct<sp/>on<sp/>Win32.<sp/>See<sp/>what<sp/>we<sp/>do<sp/>below<sp/>with<sp/>the<sp/>WM_NCHITTEST,<sp/>missing<sp/>an<sp/>equivalent<sp/>for<sp/>other<sp/>systems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/glfw/glfw/issues/1236<sp/>if<sp/>you<sp/>want<sp/>to<sp/>help<sp/>in<sp/>making<sp/>this<sp/>a<sp/>GLFW<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_MOUSE_PASSTHROUGH<sp/>||<sp/>(GLFW_HAS_WINDOW_HOVERED<sp/>&amp;&amp;<sp/>defined(_WIN32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>window_no_input<sp/>=<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoInputs)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_MOUSE_PASSTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1gad39f43f07856efcf3d656426a9284c75" kindref="member">glfwSetWindowAttrib</ref>(window,<sp/><ref refid="group__window_1ga88981797d29800808ec242274ab5c03a" kindref="member">GLFW_MOUSE_PASSTHROUGH</ref>,<sp/>window_no_input);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>(window,<sp/><ref refid="group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a" kindref="member">GLFW_HOVERED</ref>)<sp/>&amp;&amp;<sp/>!window_no_input)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.MouseHoveredViewport<sp/>=<sp/>viewport-&gt;ID;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_UpdateMouseCursor()</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NoMouseCursorChange)<sp/>||<sp/><ref refid="group__input_1ga1248dd5b1e566b2817e71547564d6af9" kindref="member">glfwGetInputMode</ref>(bd-&gt;Window,<sp/>GLFW_CURSOR)<sp/>==<sp/>GLFW_CURSOR_DISABLED)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiMouseCursor<sp/>imgui_cursor<sp/>=<sp/>ImGui::GetMouseCursor();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>platform_io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>platform_io.Viewports.Size;<sp/>n++)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window<sp/>=<sp/>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*)platform_io.Viewports[n]-&gt;PlatformHandle;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(imgui_cursor<sp/>==<sp/>ImGuiMouseCursor_None<sp/>||<sp/>io.MouseDrawCursor)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>OS<sp/>mouse<sp/>cursor<sp/>if<sp/>imgui<sp/>is<sp/>drawing<sp/>it<sp/>or<sp/>if<sp/>it<sp/>wants<sp/>no<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref>(window,<sp/>GLFW_CURSOR,<sp/>GLFW_CURSOR_HIDDEN);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>OS<sp/>mouse<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-PLATFORM:<sp/>Unfocused<sp/>windows<sp/>seems<sp/>to<sp/>fail<sp/>changing<sp/>the<sp/>mouse<sp/>cursor<sp/>with<sp/>GLFW<sp/>3.2,<sp/>but<sp/>3.3<sp/>works<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>(window,<sp/>bd-&gt;MouseCursors[imgui_cursor]<sp/>?<sp/>bd-&gt;MouseCursors[imgui_cursor]<sp/>:<sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_Arrow]);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref>(window,<sp/>GLFW_CURSOR,<sp/>GLFW_CURSOR_NORMAL);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_UpdateGamepads()</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(io.NavInputs,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(io.NavInputs));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NavEnableGamepad)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>gamepad<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAP_BUTTON(NAV_NO,<sp/>BUTTON_NO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>if<sp/>(buttons_count<sp/>&gt;<sp/>BUTTON_NO<sp/>&amp;&amp;<sp/>buttons[BUTTON_NO]<sp/>==<sp/>GLFW_PRESS)<sp/>io.NavInputs[NAV_NO]<sp/>=<sp/>1.0f;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAP_ANALOG(NAV_NO,<sp/>AXIS_NO,<sp/>V0,<sp/>V1)<sp/>do<sp/>{<sp/>float<sp/>v<sp/>=<sp/>(axes_count<sp/>&gt;<sp/>AXIS_NO)<sp/>?<sp/>axes[AXIS_NO]<sp/>:<sp/>V0;<sp/>v<sp/>=<sp/>(v<sp/>-<sp/>V0)<sp/>/<sp/>(V1<sp/>-<sp/>V0);<sp/>if<sp/>(v<sp/>&gt;<sp/>1.0f)<sp/>v<sp/>=<sp/>1.0f;<sp/>if<sp/>(io.NavInputs[NAV_NO]<sp/>&lt;<sp/>v)<sp/>io.NavInputs[NAV_NO]<sp/>=<sp/>v;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axes_count<sp/>=<sp/>0,<sp/>buttons_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>axes<sp/>=<sp/><ref refid="group__input_1gacd46b9f8d9d12dc50e45d7fe0ad32b23" kindref="member">glfwGetJoystickAxes</ref>(GLFW_JOYSTICK_1,<sp/>&amp;axes_count);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buttons<sp/>=<sp/><ref refid="group__input_1ga91cdcb462a3e17c647a55496eff7d0ee" kindref="member">glfwGetJoystickButtons</ref>(GLFW_JOYSTICK_1,<sp/>&amp;buttons_count);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Activate,<sp/><sp/><sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cross<sp/>/<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Cancel,<sp/><sp/><sp/><sp/><sp/>1);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Circle<sp/>/<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Menu,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Square<sp/>/<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Input,<sp/><sp/><sp/><sp/><sp/><sp/>3);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Triangle<sp/>/<sp/>Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadLeft,<sp/><sp/><sp/>13);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadRight,<sp/><sp/>11);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadUp,<sp/><sp/><sp/><sp/><sp/>10);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadDown,<sp/><sp/><sp/>12);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_FocusPrev,<sp/><sp/>4);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L1<sp/>/<sp/>LB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_FocusNext,<sp/><sp/>5);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R1<sp/>/<sp/>RB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_TweakSlow,<sp/><sp/>4);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L1<sp/>/<sp/>LB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_TweakFast,<sp/><sp/>5);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R1<sp/>/<sp/>RB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickLeft,<sp/>0,<sp/><sp/>-0.3f,<sp/><sp/>-0.9f);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickRight,0,<sp/><sp/>+0.3f,<sp/><sp/>+0.9f);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickUp,<sp/><sp/><sp/>1,<sp/><sp/>+0.3f,<sp/><sp/>+0.9f);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickDown,<sp/>1,<sp/><sp/>-0.3f,<sp/><sp/>-0.9f);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MAP_BUTTON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MAP_ANALOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axes_count<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>buttons_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasGamepad;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>&amp;=<sp/>~ImGuiBackendFlags_HasGamepad;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_UpdateMonitors()</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>platform_io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>monitors_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>**<sp/>glfw_monitors<sp/>=<sp/><ref refid="group__monitor_1ga8c78e5db186ee10d00c053faf81998af" kindref="member">glfwGetMonitors</ref>(&amp;monitors_count);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Monitors.resize(0);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>monitors_count;<sp/>n++)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_monitor" kindref="compound">ImGuiPlatformMonitor</ref><sp/>monitor;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__monitor_1ga45b5481a614ad7beb2aade9746d07563" kindref="member">glfwGetMonitorPos</ref>(glfw_monitors[n],<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/>vid_mode<sp/>=<sp/><ref refid="group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e" kindref="member">glfwGetVideoMode</ref>(glfw_monitors[n]);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.MainPos<sp/>=<sp/>monitor.WorkPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)y);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.MainSize<sp/>=<sp/>monitor.WorkSize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)vid_mode-&gt;<ref refid="struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d" kindref="member">width</ref>,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)vid_mode-&gt;<ref refid="struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_MONITOR_WORK_AREA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__monitor_1ga5a3ac0f6e3786df47aabccfb5760b31d" kindref="member">glfwGetMonitorWorkarea</ref>(glfw_monitors[n],<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;w,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>h<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>a<sp/>small<sp/>GLFW<sp/>issue<sp/>reporting<sp/>zero<sp/>on<sp/>monitor<sp/>changes:<sp/>https://github.com/glfw/glfw/pull/1761</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.WorkPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)y);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.WorkSize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)h);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_PER_MONITOR_DPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>the<sp/>validity<sp/>of<sp/>monitor<sp/>DPI<sp/>information<sp/>on<sp/>Windows<sp/>depends<sp/>on<sp/>the<sp/>application<sp/>DPI<sp/>awareness<sp/>settings,<sp/>which<sp/>generally<sp/>needs<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>manifest<sp/>or<sp/>at<sp/>runtime.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_scale,<sp/>y_scale;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff" kindref="member">glfwGetMonitorContentScale</ref>(glfw_monitors[n],<sp/>&amp;x_scale,<sp/>&amp;y_scale);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.DpiScale<sp/>=<sp/>x_scale;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>platform_io.Monitors.push_back(monitor);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateMonitors<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_NewFrame()</highlight></codeline>
<codeline lineno="699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>you<sp/>call<sp/>ImGui_ImplGlfw_InitForXXX()?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>display<sp/>size<sp/>(every<sp/>frame<sp/>to<sp/>accommodate<sp/>for<sp/>window<sp/>resizing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_w,<sp/>display_h;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>(bd-&gt;Window,<sp/>&amp;w,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>(bd-&gt;Window,<sp/>&amp;display_w,<sp/>&amp;display_h);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>io.DisplaySize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)h);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>h<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.DisplayFramebufferScale<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)display_w<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)display_h<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)h);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;WantUpdateMonitors)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_UpdateMonitors();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time<sp/>=<sp/><ref refid="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" kindref="member">glfwGetTime</ref>();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>io.DeltaTime<sp/>=<sp/>bd-&gt;Time<sp/>&gt;<sp/>0.0<sp/>?<sp/>(float)(current_time<sp/>-<sp/>bd-&gt;Time)<sp/>:<sp/>(float)(1.0f<sp/>/<sp/>60.0f);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;Time<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_UpdateMouseData();</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_UpdateMouseCursor();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>game<sp/>controllers<sp/>(if<sp/>enabled<sp/>and<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_UpdateGamepads();</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MULTI-VIEWPORT<sp/>/<sp/>PLATFORM<sp/>INTERFACE<sp/>SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>_advanced_<sp/>and<sp/>_optional_<sp/>feature,<sp/>allowing<sp/>the<sp/>backend<sp/>to<sp/>create<sp/>and<sp/>handle<sp/>multiple<sp/>viewports<sp/>simultaneously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>dear<sp/>imgui<sp/>or<sp/>creating<sp/>a<sp/>new<sp/>binding<sp/>for<sp/>dear<sp/>imgui,<sp/>it<sp/>is<sp/>recommended<sp/>that<sp/>you<sp/>completely<sp/>ignore<sp/>this<sp/>section<sp/>first..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>structure<sp/>we<sp/>store<sp/>in<sp/>the<sp/>void*<sp/>RenderUserData<sp/>field<sp/>of<sp/>each<sp/>ImGuiViewport<sp/>to<sp/>easily<sp/>retrieve<sp/>our<sp/>backend<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="struct_im_gui___impl_glfw___viewport_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref></highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>Window;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowOwned;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IgnoreWindowPosEventFrame;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IgnoreWindowSizeEventFrame;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>()<sp/><sp/>{<sp/>Window<sp/>=<sp/>NULL;<sp/>WindowOwned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>IgnoreWindowSizeEventFrame<sp/>=<sp/>IgnoreWindowPosEventFrame<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">~ImGui_ImplGlfw_ViewportData</ref>()<sp/>{<sp/>IM_ASSERT(Window<sp/>==<sp/>NULL);<sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal">};</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_WindowCloseCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>ImGui::FindViewportByPlatformHandle(window))</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GLFW<sp/>may<sp/>dispatch<sp/>window<sp/>pos/size<sp/>events<sp/>after<sp/>calling<sp/>glfwSetWindowPos()/glfwSetWindowSize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>However:<sp/>depending<sp/>on<sp/>the<sp/>platform<sp/>the<sp/>callback<sp/>may<sp/>be<sp/>invoked<sp/>at<sp/>different<sp/>time:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>on<sp/>Windows<sp/>it<sp/>appears<sp/>to<sp/>be<sp/>called<sp/>within<sp/>the<sp/>glfwSetWindowPos()/glfwSetWindowSize()<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>on<sp/>Linux<sp/>it<sp/>is<sp/>queued<sp/>and<sp/>invoked<sp/>during<sp/>glfwPollEvents()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Because<sp/>the<sp/>event<sp/>doesn&apos;t<sp/>always<sp/>fire<sp/>on<sp/>glfwSetWindowXXX()<sp/>we<sp/>use<sp/>a<sp/>frame<sp/>counter<sp/>tag<sp/>to<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ignore<sp/>recent<sp/>glfwSetWindowXXX()<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_WindowPosCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>ImGui::FindViewportByPlatformHandle(window))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_event<sp/>=<sp/>(ImGui::GetFrameCount()<sp/>&lt;=<sp/>vd-&gt;IgnoreWindowPosEventFrame<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//data-&gt;IgnoreWindowPosEventFrame<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ignore_event)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestMove<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_WindowSizeCallback(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>ImGui::FindViewportByPlatformHandle(window))</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_event<sp/>=<sp/>(ImGui::GetFrameCount()<sp/>&lt;=<sp/>vd-&gt;IgnoreWindowSizeEventFrame<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//data-&gt;IgnoreWindowSizeEventFrame<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ignore_event)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestResize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_CreateWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>)();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformUserData<sp/>=<sp/>vd;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GLFW<sp/>3.2<sp/>unfortunately<sp/>always<sp/>set<sp/>focus<sp/>on<sp/>glfwCreateWindow()<sp/>if<sp/>GLFW_VISIBLE<sp/>is<sp/>set,<sp/>regardless<sp/>of<sp/>GLFW_FOCUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>GLFW<sp/>3.3,<sp/>the<sp/>hint<sp/>GLFW_FOCUS_ON_SHOW<sp/>fixes<sp/>this<sp/>problem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4" kindref="member">GLFW_VISIBLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1ga54ddb14825a1541a56e22afb5f832a9e" kindref="member">GLFW_FOCUSED</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_FOCUS_ON_SHOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1gafa94b1da34bfd6488c0d709761504dfc" kindref="member">GLFW_FOCUS_ON_SHOW</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1ga21b854d36314c94d65aed84405b2f25e" kindref="member">GLFW_DECORATED</ref>,<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoDecoration)<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_WINDOW_TOPMOST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1ga7fb0be51407783b41adbf5bec0b09d80" kindref="member">GLFW_FLOATING</ref>,<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_TopMost)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>share_window<sp/>=<sp/>(bd-&gt;ClientApi<sp/>==<sp/>GlfwClientApi_OpenGL)<sp/>?<sp/>bd-&gt;Window<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;Window<sp/>=<sp/><ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)viewport-&gt;Size.x,<sp/>(int)viewport-&gt;Size.y,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Title<sp/>Yet&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>share_window);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;WindowOwned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformHandle<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)vd-&gt;Window;</highlight></codeline>
<codeline lineno="808"><highlight class="normal">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformHandleRaw<sp/>=<sp/>glfwGetWin32Window(vd-&gt;Window);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref>(vd-&gt;Window,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)viewport-&gt;Pos.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)viewport-&gt;Pos.y);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Install<sp/>GLFW<sp/>callbacks<sp/>for<sp/>secondary<sp/>viewports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">glfwSetWindowFocusCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_WindowFocusCallback);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1gacdb3490e374c8bc08549c6f173ffa7c2" kindref="member">glfwSetCursorEnterCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_CursorEnterCallback);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1ga74124d0eff27040fd10e4df9e17d129c" kindref="member">glfwSetCursorPosCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_CursorPosCallback);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_MouseButtonCallback);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1gaa786b59f19ad8525d251cda8e0d7d29b" kindref="member">glfwSetScrollCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_ScrollCallback);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_KeyCallback);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">glfwSetCharCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_CharCallback);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga693d778815971a06e1a5a7bcdeff3d36" kindref="member">glfwSetWindowCloseCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_WindowCloseCallback);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6" kindref="member">glfwSetWindowPosCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_WindowPosCallback);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5" kindref="member">glfwSetWindowSizeCallback</ref>(vd-&gt;Window,<sp/>ImGui_ImplGlfw_WindowSizeCallback);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;ClientApi<sp/>==<sp/>GlfwClientApi_OpenGL)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref>(vd-&gt;Window);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref>(0);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_DestroyWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vd-&gt;WindowOwned)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!GLFW_HAS_MOUSE_PASSTHROUGH<sp/>&amp;&amp;<sp/>GLFW_HAS_WINDOW_HOVERED<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HWND<sp/>hwnd<sp/>=<sp/>(HWND)viewport-&gt;PlatformHandleRaw;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::RemovePropA(hwnd,<sp/></highlight><highlight class="stringliteral">&quot;IMGUI_VIEWPORT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>any<sp/>keys<sp/>that<sp/>were<sp/>pressed<sp/>in<sp/>the<sp/>window<sp/>being<sp/>destroyed<sp/>and<sp/>are<sp/>still<sp/>held<sp/>down,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>we<sp/>will<sp/>not<sp/>receive<sp/>any<sp/>release<sp/>events<sp/>after<sp/>window<sp/>is<sp/>destroyed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>IM_ARRAYSIZE(bd-&gt;KeyOwnerWindows);<sp/>i++)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;KeyOwnerWindows[i]<sp/>==<sp/>vd-&gt;Window)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_KeyCallback(vd-&gt;Window,<sp/>i,<sp/>0,<sp/><ref refid="group__input_1gada11d965c4da13090ad336e030e4d11f" kindref="member">GLFW_RELEASE</ref>,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Later<sp/>params<sp/>are<sp/>only<sp/>used<sp/>for<sp/>main<sp/>viewport,<sp/>on<sp/>which<sp/>this<sp/>function<sp/>is<sp/>never<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref>(vd-&gt;Window);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;Window<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_DELETE(vd);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformUserData<sp/>=<sp/>viewport-&gt;PlatformHandle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>submitted<sp/>https://github.com/glfw/glfw/pull/1568<sp/>to<sp/>allow<sp/>GLFW<sp/>to<sp/>support<sp/>&quot;transparent<sp/>inputs&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>meanwhile<sp/>we<sp/>implement<sp/>custom<sp/>per-platform<sp/>workarounds<sp/>here<sp/>(FIXME-VIEWPORT:<sp/>Implement<sp/>same<sp/>work-around<sp/>for<sp/>Linux/OSX!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!GLFW_HAS_MOUSE_PASSTHROUGH<sp/>&amp;&amp;<sp/>GLFW_HAS_WINDOW_HOVERED<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WNDPROC<sp/>g_GlfwWndProc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LRESULT<sp/>CALLBACK<sp/>WndProcNoInputs(HWND<sp/>hWnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_NCHITTEST)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>mouse<sp/>pass-through<sp/>the<sp/>window.<sp/>This<sp/>will<sp/>allow<sp/>the<sp/>backend<sp/>to<sp/>set<sp/>io.MouseHoveredViewport<sp/>properly<sp/>(which<sp/>is<sp/>OPTIONAL).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ImGuiViewportFlags_NoInputs<sp/>flag<sp/>is<sp/>set<sp/>while<sp/>dragging<sp/>a<sp/>viewport,<sp/>as<sp/>want<sp/>to<sp/>detect<sp/>the<sp/>window<sp/>behind<sp/>the<sp/>one<sp/>we<sp/>are<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>cannot<sp/>easily<sp/>access<sp/>those<sp/>viewport<sp/>flags<sp/>from<sp/>your<sp/>windowing/event<sp/>code:<sp/>you<sp/>may<sp/>manually<sp/>synchronize<sp/>its<sp/>state<sp/>e.g.<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>your<sp/>main<sp/>loop<sp/>after<sp/>calling<sp/>UpdatePlatformWindows().<sp/>Iterate<sp/>all<sp/>viewports/platform<sp/>windows<sp/>and<sp/>pass<sp/>the<sp/>flag<sp/>to<sp/>your<sp/>windowing<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*)::GetPropA(hWnd,<sp/></highlight><highlight class="stringliteral">&quot;IMGUI_VIEWPORT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoInputs)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HTTRANSPARENT;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::CallWindowProc(g_GlfwWndProc,<sp/>hWnd,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_ShowWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(_WIN32)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GLFW<sp/>hack:<sp/>Hide<sp/>icon<sp/>from<sp/>task<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>hwnd<sp/>=<sp/>(HWND)viewport-&gt;PlatformHandleRaw;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoTaskBarIcon)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LONG<sp/>ex_style<sp/>=<sp/>::GetWindowLong(hwnd,<sp/>GWL_EXSTYLE);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ex_style<sp/>&amp;=<sp/>~WS_EX_APPWINDOW;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ex_style<sp/>|=<sp/>WS_EX_TOOLWINDOW;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetWindowLong(hwnd,<sp/>GWL_EXSTYLE,<sp/>ex_style);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GLFW<sp/>hack:<sp/>install<sp/>hook<sp/>for<sp/>WM_NCHITTEST<sp/>message<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!GLFW_HAS_MOUSE_PASSTHROUGH<sp/>&amp;&amp;<sp/>GLFW_HAS_WINDOW_HOVERED<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetPropA(hwnd,<sp/></highlight><highlight class="stringliteral">&quot;IMGUI_VIEWPORT&quot;</highlight><highlight class="normal">,<sp/>viewport);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_GlfwWndProc<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_GlfwWndProc<sp/>=<sp/>(WNDPROC)::GetWindowLongPtr(hwnd,<sp/>GWLP_WNDPROC);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetWindowLongPtr(hwnd,<sp/>GWLP_WNDPROC,<sp/>(LONG_PTR)WndProcNoInputs);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!GLFW_HAS_FOCUS_ON_SHOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GLFW<sp/>hack:<sp/>GLFW<sp/>3.2<sp/>has<sp/>a<sp/>bug<sp/>where<sp/>glfwShowWindow()<sp/>also<sp/>activates/focus<sp/>the<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>fix<sp/>was<sp/>pushed<sp/>to<sp/>GLFW<sp/>repository<sp/>on<sp/>2018/01/09<sp/>and<sp/>should<sp/>be<sp/>included<sp/>in<sp/>GLFW<sp/>3.3<sp/>via<sp/>a<sp/>GLFW_FOCUS_ON_SHOW<sp/>window<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/glfw/glfw/issues/1189</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-VIEWPORT:<sp/>Implement<sp/>same<sp/>work-around<sp/>for<sp/>Linux/OSX<sp/>in<sp/>the<sp/>meanwhile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoFocusOnAppearing)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ShowWindow(hwnd,<sp/>SW_SHOWNA);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" kindref="member">glfwShowWindow</ref>(vd-&gt;Window);</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImGui_ImplGlfw_GetWindowPos(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0,<sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref>(vd-&gt;Window,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)y);</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_SetWindowPos(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos)</highlight></codeline>
<codeline lineno="925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;IgnoreWindowPosEventFrame<sp/>=<sp/>ImGui::GetFrameCount();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref>(vd-&gt;Window,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pos.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pos.y);</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImGui_ImplGlfw_GetWindowSize(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>0,<sp/>h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>(vd-&gt;Window,<sp/>&amp;w,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)h);</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_SetWindowSize(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size)</highlight></codeline>
<codeline lineno="940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="942"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__APPLE__<sp/>&amp;&amp;<sp/>!GLFW_HAS_OSX_WINDOW_POS_FIX</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Native<sp/>OS<sp/>windows<sp/>are<sp/>positioned<sp/>from<sp/>the<sp/>bottom-left<sp/>corner<sp/>on<sp/>macOS,<sp/>whereas<sp/>on<sp/>other<sp/>platforms<sp/>they<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positioned<sp/>from<sp/>the<sp/>upper-left<sp/>corner.<sp/>GLFW<sp/>makes<sp/>an<sp/>effort<sp/>to<sp/>convert<sp/>macOS<sp/>style<sp/>coordinates,<sp/>however<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>handle<sp/>it<sp/>when<sp/>changing<sp/>size.<sp/>We<sp/>are<sp/>manually<sp/>moving<sp/>the<sp/>window<sp/>in<sp/>order<sp/>for<sp/>changes<sp/>of<sp/>size<sp/>to<sp/>be<sp/>based</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>upper-left<sp/>corner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref>(vd-&gt;Window,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>(vd-&gt;Window,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref>(vd-&gt;Window,<sp/>x,<sp/>y<sp/>-<sp/>height<sp/>+<sp/>size.y);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;IgnoreWindowSizeEventFrame<sp/>=<sp/>ImGui::GetFrameCount();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref>(vd-&gt;Window,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)size.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)size.y);</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_SetWindowTitle(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title)</highlight></codeline>
<codeline lineno="957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga861ed3414ab8120e2f74151a666ed1dc" kindref="member">glfwSetWindowTitle</ref>(vd-&gt;Window,<sp/>title);</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_SetWindowFocus(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_FOCUS_WINDOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0da0e3daaa2d100f44a115c09077b510" kindref="member">glfwFocusWindow</ref>(vd-&gt;Window);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>What<sp/>are<sp/>the<sp/>effect<sp/>of<sp/>not<sp/>having<sp/>this<sp/>function?<sp/>At<sp/>the<sp/>moment<sp/>imgui<sp/>doesn&apos;t<sp/>actually<sp/>call<sp/>SetWindowFocus<sp/>-<sp/>we<sp/>set<sp/>that<sp/>up<sp/>ahead,<sp/>will<sp/>answer<sp/>that<sp/>question<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)viewport;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_GetWindowFocus(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>(vd-&gt;Window,<sp/><ref refid="group__window_1ga54ddb14825a1541a56e22afb5f832a9e" kindref="member">GLFW_FOCUSED</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_GetWindowMinimized(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>(vd-&gt;Window,<sp/><ref refid="group__window_1ga39d44b7c056e55e581355a92d240b58a" kindref="member">GLFW_ICONIFIED</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_WINDOW_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_SetWindowAlpha(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga62a784fe328f227727cbcd0d07480ff3" kindref="member">glfwSetWindowOpacity</ref>(vd-&gt;Window,<sp/>alpha);</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_RenderWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(bd-&gt;ClientApi<sp/>==<sp/>GlfwClientApi_OpenGL)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref>(vd-&gt;Window);</highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_SwapBuffers(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(bd-&gt;ClientApi<sp/>==<sp/>GlfwClientApi_OpenGL)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref>(vd-&gt;Window);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>(vd-&gt;Window);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vulkan<sp/>support<sp/>(the<sp/>Vulkan<sp/>renderer<sp/>needs<sp/>to<sp/>call<sp/>a<sp/>platform-side<sp/>support<sp/>function<sp/>to<sp/>create<sp/>the<sp/>surface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Avoid<sp/>including<sp/>&lt;vulkan.h&gt;<sp/>so<sp/>we<sp/>can<sp/>build<sp/>without<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VULKAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VK_DEFINE_HANDLE(object)<sp/>typedef<sp/>struct<sp/>object##_T*<sp/>object;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__LP64__)<sp/>||<sp/>defined(_WIN64)<sp/>||<sp/>defined(__x86_64__)<sp/>||<sp/>defined(_M_X64)<sp/>||<sp/>defined(__ia64)<sp/>||<sp/>defined<sp/>(_M_IA64)<sp/>||<sp/>defined(__aarch64__)<sp/>||<sp/>defined(__powerpc64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VK_DEFINE_NON_DISPATCHABLE_HANDLE(object)<sp/>typedef<sp/>struct<sp/>object##_T<sp/>*object;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VK_DEFINE_NON_DISPATCHABLE_HANDLE(object)<sp/>typedef<sp/>uint64_t<sp/>object;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal">VK_DEFINE_HANDLE(VkInstance)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">VK_DEFINE_NON_DISPATCHABLE_HANDLE(VkSurfaceKHR)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>VkResult<sp/>{<sp/>VK_RESULT_MAX_ENUM<sp/>=<sp/>0x7FFFFFFF<sp/>};</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>VULKAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>GLFWAPI<sp/>VkResult<sp/>glfwCreateWindowSurface(VkInstance<sp/>instance,<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref>*<sp/>allocator,<sp/>VkSurfaceKHR*<sp/>surface);<sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_CreateVkSurface(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/>ImU64<sp/>vk_instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vk_allocator,<sp/>ImU64*<sp/>out_vk_surface)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(bd);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd-&gt;ClientApi<sp/>==<sp/>GlfwClientApi_Vulkan);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>VkResult<sp/>err<sp/>=<sp/>glfwCreateWindowSurface((VkInstance)vk_instance,<sp/>vd-&gt;Window,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref>*)vk_allocator,<sp/>(VkSurfaceKHR*)out_vk_surface);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)err;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>GLFW_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_InitPlatformInterface()</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>platform<sp/>interface<sp/>(will<sp/>be<sp/>coupled<sp/>with<sp/>a<sp/>renderer<sp/>interface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___data" kindref="compound">ImGui_ImplGlfw_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplGlfw_GetBackendData();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>platform_io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_CreateWindow<sp/>=<sp/>ImGui_ImplGlfw_CreateWindow;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_DestroyWindow<sp/>=<sp/>ImGui_ImplGlfw_DestroyWindow;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_ShowWindow<sp/>=<sp/>ImGui_ImplGlfw_ShowWindow;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowPos<sp/>=<sp/>ImGui_ImplGlfw_SetWindowPos;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowPos<sp/>=<sp/>ImGui_ImplGlfw_GetWindowPos;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowSize<sp/>=<sp/>ImGui_ImplGlfw_SetWindowSize;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowSize<sp/>=<sp/>ImGui_ImplGlfw_GetWindowSize;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowFocus<sp/>=<sp/>ImGui_ImplGlfw_SetWindowFocus;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowFocus<sp/>=<sp/>ImGui_ImplGlfw_GetWindowFocus;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowMinimized<sp/>=<sp/>ImGui_ImplGlfw_GetWindowMinimized;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowTitle<sp/>=<sp/>ImGui_ImplGlfw_SetWindowTitle;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_RenderWindow<sp/>=<sp/>ImGui_ImplGlfw_RenderWindow;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SwapBuffers<sp/>=<sp/>ImGui_ImplGlfw_SwapBuffers;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_WINDOW_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowAlpha<sp/>=<sp/>ImGui_ImplGlfw_SetWindowAlpha;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLFW_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_CreateVkSurface<sp/>=<sp/>ImGui_ImplGlfw_CreateVkSurface;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>main<sp/>window<sp/>handle<sp/>(which<sp/>is<sp/>owned<sp/>by<sp/>the<sp/>main<sp/>application,<sp/>not<sp/>by<sp/>us)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>mostly<sp/>for<sp/>simplicity<sp/>and<sp/>consistency,<sp/>so<sp/>that<sp/>our<sp/>code<sp/>(e.g.<sp/>mouse<sp/>handling<sp/>etc.)<sp/>can<sp/>use<sp/>same<sp/>logic<sp/>for<sp/>main<sp/>and<sp/>secondary<sp/>viewports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>main_viewport<sp/>=<sp/>ImGui::GetMainViewport();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>*<sp/>vd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_glfw___viewport_data" kindref="compound">ImGui_ImplGlfw_ViewportData</ref>)();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;Window<sp/>=<sp/>bd-&gt;Window;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;WindowOwned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformUserData<sp/>=<sp/>vd;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandle<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd-&gt;Window;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplGlfw_ShutdownPlatformInterface()</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::DestroyPlatformWindows();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_glfw.cpp"/>
  </compounddef>
</doxygen>
