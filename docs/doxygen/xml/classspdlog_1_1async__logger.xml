<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classspdlog_1_1async__logger" kind="class" language="C++" prot="public" final="yes">
    <compoundname>spdlog::async_logger</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; async_logger &gt;</basecompoundref>
    <basecompoundref refid="classspdlog_1_1logger" prot="public" virt="non-virtual">spdlog::logger</basecompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classspdlog_1_1async__logger_1a67ce2a7de422d11203d66f1f6da4be03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class details::thread_pool</definition>
        <argsstring></argsstring>
        <name>details::thread_pool</name>
        <param>
          <type><ref refid="classspdlog_1_1details_1_1thread__pool" kindref="compound">details::thread_pool</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="35" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspdlog_1_1async__logger_1a5886796bb52a4ec9a76a9229ad514886" prot="private" static="no" mutable="no">
        <type>std::weak_ptr&lt; <ref refid="classspdlog_1_1details_1_1thread__pool" kindref="compound">details::thread_pool</ref> &gt;</type>
        <definition>std::weak_ptr&lt;details::thread_pool&gt; spdlog::async_logger::thread_pool_</definition>
        <argsstring></argsstring>
        <name>thread_pool_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="61" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1async__logger_1acda856f17834dbd0295271511c4fd64f" prot="private" static="no" mutable="no">
        <type>async_overflow_policy</type>
        <definition>async_overflow_policy spdlog::async_logger::overflow_policy_</definition>
        <argsstring></argsstring>
        <name>overflow_policy_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="62" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspdlog_1_1async__logger_1a2a74bf8d8d850ea760396ba8ae55d552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>spdlog::async_logger::async_logger</definition>
        <argsstring>(std::string logger_name, It begin, It end, std::weak_ptr&lt; details::thread_pool &gt; tp, async_overflow_policy overflow_policy=async_overflow_policy::block)</argsstring>
        <name>async_logger</name>
        <param>
          <type>std::string</type>
          <declname>logger_name</declname>
        </param>
        <param>
          <type>It</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>It</type>
          <declname>end</declname>
        </param>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classspdlog_1_1details_1_1thread__pool" kindref="compound">details::thread_pool</ref> &gt;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>async_overflow_policy</type>
          <declname>overflow_policy</declname>
          <defval>async_overflow_policy::block</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="39" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1async__logger_1a3164595d226473d551d36ae07fdcc11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPDLOG_INLINE spdlog::async_logger::async_logger</definition>
        <argsstring>(std::string logger_name, sinks_init_list sinks_list, std::weak_ptr&lt; details::thread_pool &gt; tp, async_overflow_policy overflow_policy=async_overflow_policy::block)</argsstring>
        <name>async_logger</name>
        <param>
          <type>std::string</type>
          <declname>logger_name</declname>
        </param>
        <param>
          <type>sinks_init_list</type>
          <declname>sinks_list</declname>
        </param>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classspdlog_1_1details_1_1thread__pool" kindref="compound">details::thread_pool</ref> &gt;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>async_overflow_policy</type>
          <declname>overflow_policy</declname>
          <defval>async_overflow_policy::block</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="46" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger-inl.h" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1async__logger_1a6f179d745c5618639bc5da8c40659b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPDLOG_INLINE spdlog::async_logger::async_logger</definition>
        <argsstring>(std::string logger_name, sink_ptr single_sink, std::weak_ptr&lt; details::thread_pool &gt; tp, async_overflow_policy overflow_policy=async_overflow_policy::block)</argsstring>
        <name>async_logger</name>
        <param>
          <type>std::string</type>
          <declname>logger_name</declname>
        </param>
        <param>
          <type>sink_ptr</type>
          <declname>single_sink</declname>
        </param>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classspdlog_1_1details_1_1thread__pool" kindref="compound">details::thread_pool</ref> &gt;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>async_overflow_policy</type>
          <declname>overflow_policy</declname>
          <defval>async_overflow_policy::block</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="49" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger-inl.h" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1async__logger_1a1ba06033da941175e6c3adf6cab0aeb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">logger</ref> &gt;</type>
        <definition>SPDLOG_INLINE std::shared_ptr&lt; spdlog::logger &gt; spdlog::async_logger::clone</definition>
        <argsstring>(std::string new_name) override</argsstring>
        <name>clone</name>
        <reimplements refid="classspdlog_1_1logger_1a953200cbe04c2e694d53781c2066a834">clone</reimplements>
        <param>
          <type>std::string</type>
          <declname>new_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="52" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger-inl.h" bodystart="87" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classspdlog_1_1async__logger_1ac28dab7d752dc73832bb08c408362cec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::async_logger::sink_it_</definition>
        <argsstring>(const details::log_msg &amp;msg) override</argsstring>
        <name>sink_it_</name>
        <reimplements refid="classspdlog_1_1logger_1a903938d3018e32dedcbd090e624ab5ee">sink_it_</reimplements>
        <param>
          <type>const <ref refid="structspdlog_1_1details_1_1log__msg" kindref="compound">details::log_msg</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="55" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger-inl.h" bodystart="27" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1async__logger_1a945adeb3652f3ffafa4532924a214773" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::async_logger::flush_</definition>
        <argsstring>() override</argsstring>
        <name>flush_</name>
        <reimplements refid="classspdlog_1_1logger_1a4410446ddde8880655f00729521e9718">flush_</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="56" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger-inl.h" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1async__logger_1ae7342ebd2fab33de3da401966b05a874" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::async_logger::backend_sink_it_</definition>
        <argsstring>(const details::log_msg &amp;incoming_log_msg)</argsstring>
        <name>backend_sink_it_</name>
        <param>
          <type>const <ref refid="structspdlog_1_1details_1_1log__msg" kindref="compound">details::log_msg</ref> &amp;</type>
          <declname>incoming_log_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="57" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger-inl.h" bodystart="55" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1async__logger_1aa99925726af79079783693c51542e413" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::async_logger::backend_flush_</definition>
        <argsstring>()</argsstring>
        <name>backend_flush_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="58" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger-inl.h" bodystart="75" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>spdlog::async_logger</label>
        <link refid="classspdlog_1_1async__logger"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>spdlog::logger</label>
        <link refid="classspdlog_1_1logger"/>
      </node>
      <node id="2">
        <label>std::enable_shared_from_this&lt; async_logger &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>spdlog::async_logger</label>
        <link refid="classspdlog_1_1async__logger"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>spdlog::details::backtracer</label>
        <link refid="classspdlog_1_1details_1_1backtracer"/>
      </node>
      <node id="3">
        <label>spdlog::logger</label>
        <link refid="classspdlog_1_1logger"/>
        <childnode refid="4" relation="usage">
          <edgelabel>tracer_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::enable_shared_from_this&lt; async_logger &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" line="33" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async_logger.h" bodystart="34" bodyend="63"/>
    <listofallmembers>
      <member refid="classspdlog_1_1async__logger_1a2a74bf8d8d850ea760396ba8ae55d552" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>async_logger</name></member>
      <member refid="classspdlog_1_1async__logger_1a3164595d226473d551d36ae07fdcc11a" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>async_logger</name></member>
      <member refid="classspdlog_1_1async__logger_1a6f179d745c5618639bc5da8c40659b70" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>async_logger</name></member>
      <member refid="classspdlog_1_1async__logger_1aa99925726af79079783693c51542e413" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>backend_flush_</name></member>
      <member refid="classspdlog_1_1async__logger_1ae7342ebd2fab33de3da401966b05a874" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>backend_sink_it_</name></member>
      <member refid="classspdlog_1_1async__logger_1a1ba06033da941175e6c3adf6cab0aeb9" prot="public" virt="virtual"><scope>spdlog::async_logger</scope><name>clone</name></member>
      <member refid="classspdlog_1_1logger_1a991506a6a08cb5706fef78d39dae537e" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>critical</name></member>
      <member refid="classspdlog_1_1logger_1a3c5140393ec153b2b8478361aac80eb6" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>critical</name></member>
      <member refid="classspdlog_1_1logger_1a30967665909689412dfdfc856fd6a291" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>custom_err_handler_</name></member>
      <member refid="classspdlog_1_1logger_1acfce06adba3320e14fa1ec3a601b5698" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>debug</name></member>
      <member refid="classspdlog_1_1logger_1aca96637e71ab459738ccc7287be28c2e" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>debug</name></member>
      <member refid="classspdlog_1_1async__logger_1a67ce2a7de422d11203d66f1f6da4be03" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>details::thread_pool</name></member>
      <member refid="classspdlog_1_1logger_1af3803316079e8e814a2f8460aee0dc63" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>disable_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1adc83cee10165291cd75b100c51e20f3f" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>dump_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1aec0da766a100f05af1926404d1ce975f" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>dump_backtrace_</name></member>
      <member refid="classspdlog_1_1logger_1a815292ea2223b77b86c39bb2e0a98462" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>enable_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1a6bd679195d6f128bc60750113608f65c" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>err_handler_</name></member>
      <member refid="classspdlog_1_1logger_1a7da7e1c975dc988d4700da46cfae0d52" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>error</name></member>
      <member refid="classspdlog_1_1logger_1a9ce73acaa12b7dbbecde6ac3bc7353e5" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>error</name></member>
      <member refid="classspdlog_1_1logger_1ae7dacca7ca1d6383d910d2a1c483b6da" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>flush</name></member>
      <member refid="classspdlog_1_1async__logger_1a945adeb3652f3ffafa4532924a214773" prot="protected" virt="virtual"><scope>spdlog::async_logger</scope><name>flush_</name></member>
      <member refid="classspdlog_1_1logger_1a531a5fdd8cc96405858bf64a272614d3" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>flush_level</name></member>
      <member refid="classspdlog_1_1logger_1a69f7cbb7e1b2d5204a409906a62c1e94" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>flush_level_</name></member>
      <member refid="classspdlog_1_1logger_1a57179a06ab8a21e4f16e7497302c47db" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>flush_on</name></member>
      <member refid="classspdlog_1_1logger_1aae08b1297464e3eb5ea8801862b005f0" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>info</name></member>
      <member refid="classspdlog_1_1logger_1a1e1dff0caa0d1bf072739dfcc1e331d8" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>info</name></member>
      <member refid="classspdlog_1_1logger_1a07de3c012b7f11d19ff1007e8aff6a31" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>level</name></member>
      <member refid="classspdlog_1_1logger_1af167b5b45a369b3cef019b40a87ed71d" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>level_</name></member>
      <member refid="classspdlog_1_1logger_1aa42720b5beb621a6bf3dad59c30f4bcc" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a20ce31430d3ac669aea7e5c5c6c9d551" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a1c9edb4ac399c6167c1a9c6ccef9dd74" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a044247975b854cb3812f245ffb08c818" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a247918cc345ba5133523d177c96eac33" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1ae25e7b37fd89b1c1dce80abc1c388469" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1ad7532e31ce265eb79a8c2957eba7ec95" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1ac04cfda09ada4084f65c52805ffb36ca" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log_</name></member>
      <member refid="classspdlog_1_1logger_1af4f4e7fef776a4443e8e691dca560aec" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>log_it_</name></member>
      <member refid="classspdlog_1_1logger_1a441b6358c8df8fdc2367c9977b3c6fc2" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a414da79baaad89ba6ffe0e738027d234" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a5d3b321a0319e9b8b27bf04f206a9900" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1af1f2f69f6bbbe9eb23cf428d66d20f70" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a67d32122668fb28ae79ef8bbc37d4762" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a6570c456c96f3898fb890336853c110b" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1ab1f5f63fcc8517b1105b4f640c1143ad" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>name</name></member>
      <member refid="classspdlog_1_1logger_1a75c1f8d46f532e221eb0ace35fdd0513" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>name_</name></member>
      <member refid="classspdlog_1_1logger_1ac600636cb690d41f6652ad1c9cc957cf" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>operator=</name></member>
      <member refid="classspdlog_1_1async__logger_1acda856f17834dbd0295271511c4fd64f" prot="private" virt="non-virtual"><scope>spdlog::async_logger</scope><name>overflow_policy_</name></member>
      <member refid="classspdlog_1_1logger_1ab855ed44bf4807a0441a5e053b5c1ac1" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>set_error_handler</name></member>
      <member refid="classspdlog_1_1logger_1a109da2030da643440092613cb100b5f0" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>set_formatter</name></member>
      <member refid="classspdlog_1_1logger_1aeaf7078135688ea4df96ea8c8e11e0e7" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>set_level</name></member>
      <member refid="classspdlog_1_1logger_1a12cd69af480fb8b4059821000a9afd20" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>set_pattern</name></member>
      <member refid="classspdlog_1_1logger_1a1a1bcc96a0ca719475685800a8802379" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>should_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1ad39bf7f0608d13e335dd19dfce484b36" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>should_flush_</name></member>
      <member refid="classspdlog_1_1logger_1a94c77395570c462953ded4188aaaf655" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>should_log</name></member>
      <member refid="classspdlog_1_1async__logger_1ac28dab7d752dc73832bb08c408362cec" prot="protected" virt="virtual"><scope>spdlog::async_logger</scope><name>sink_it_</name></member>
      <member refid="classspdlog_1_1logger_1a6d64051f87d3c1c9d01693e1f4d4982b" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>sinks</name></member>
      <member refid="classspdlog_1_1logger_1af119a1643b29610f0db52fb11ba713ba" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>sinks</name></member>
      <member refid="classspdlog_1_1logger_1a24a3b3250f3fe52fa7c3053e77076f07" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>sinks_</name></member>
      <member refid="classspdlog_1_1logger_1ae051dea63dc86dd5bb30106ee3b32404" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>swap</name></member>
      <member refid="classspdlog_1_1async__logger_1a5886796bb52a4ec9a76a9229ad514886" prot="private" virt="non-virtual"><scope>spdlog::async_logger</scope><name>thread_pool_</name></member>
      <member refid="classspdlog_1_1logger_1a328cff019939d2e1ba2545a2bdcd1cb2" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>trace</name></member>
      <member refid="classspdlog_1_1logger_1a66e008d30a46c33283c4546f3851a80a" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>trace</name></member>
      <member refid="classspdlog_1_1logger_1aa1e98497db9dadb18f7f1b5ac22570d1" prot="protected" virt="non-virtual"><scope>spdlog::async_logger</scope><name>tracer_</name></member>
      <member refid="classspdlog_1_1logger_1a1a48e00ae7eef7d07c77e4812c1fe007" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>warn</name></member>
      <member refid="classspdlog_1_1logger_1af9153fa3a0735a535ea56f684dc53256" prot="public" virt="non-virtual"><scope>spdlog::async_logger</scope><name>warn</name></member>
      <member refid="classspdlog_1_1logger_1a5dee08a3f5a645fc579ff0ff4341e826" prot="public" virt="virtual"><scope>spdlog::async_logger</scope><name>~logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
