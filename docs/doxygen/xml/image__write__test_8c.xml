<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="image__write__test_8c" kind="file" language="C++">
    <compoundname>image_write_test.c</compoundname>
    <includes local="yes">stb_image_write.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c</label>
        <link refid="image__write__test_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stb_image_write.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="image__write__test_8c_1af453f0874b279a4e019b538c84cc8587" prot="public" static="no">
        <name>STB_IMAGE_WRITE_STATIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" line="4" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="image__write__test_8c_1aefe397a94e8feddc652f92ef40ce9597" prot="public" static="no">
        <name>STB_IMAGE_WRITE_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" line="5" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="image__write__test_8c_1a10a6e14a0ec97e19b41aa3cc16742230" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char img6x5_template[]</definition>
        <argsstring>[]</argsstring>
        <name>img6x5_template</name>
        <initializer>=
   &quot;.****.&quot;
   &quot;.*....&quot;
   &quot;.***..&quot;
   &quot;.*....&quot;
   &quot;.*....&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" line="13" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="image__write__test_8c_1a4089b2e1b62709836196b7b2e2dd5d49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void image_write_test</definition>
        <argsstring>(void)</argsstring>
        <name>image_write_test</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" line="20" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c" bodystart="20" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBIWDEF<sp/>static<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_IMAGE_WRITE_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_IMAGE_WRITE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_image_write.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>an<sp/>&apos;F&apos;<sp/>since<sp/>it<sp/>has<sp/>no<sp/>rotational<sp/>symmetries,<sp/>and<sp/>6x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>because<sp/>it&apos;s<sp/>a<sp/>small,<sp/>atypical<sp/>size<sp/>likely<sp/>to<sp/>trigger<sp/>edge<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conveniently,<sp/>it&apos;s<sp/>also<sp/>small<sp/>enough<sp/>to<sp/>fully<sp/>fit<sp/>inside<sp/>a<sp/>typical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>directory<sp/>listing<sp/>thumbnail,<sp/>which<sp/>simplifies<sp/>checking<sp/>at<sp/>a<sp/>glance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>img6x5_template[]<sp/>=</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.****.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.*....&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.***..&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.*....&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.*....&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>image_write_test(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>RGB<sp/>version<sp/>of<sp/>the<sp/>template<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>red<sp/>on<sp/>blue<sp/>to<sp/>detect<sp/>R&lt;-&gt;B<sp/>swaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>img6x5_rgb[6*5*3];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>img6x5_rgbf[6*5*3];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6*5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>on<sp/>=<sp/>img6x5_template[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>img6x5_rgb[i*3<sp/>+<sp/>0]<sp/>=<sp/>on<sp/>?<sp/>255<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>img6x5_rgb[i*3<sp/>+<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>img6x5_rgb[i*3<sp/>+<sp/>2]<sp/>=<sp/>on<sp/>?<sp/>0<sp/>:<sp/>255;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>img6x5_rgbf[i*3<sp/>+<sp/>0]<sp/>=<sp/>on<sp/>?<sp/>1.0f<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>img6x5_rgbf[i*3<sp/>+<sp/>1]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>img6x5_rgbf[i*3<sp/>+<sp/>2]<sp/>=<sp/>on<sp/>?<sp/>0.0f<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>stbi_write_png(</highlight><highlight class="stringliteral">&quot;output/wr6x5_regular.png&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb,<sp/>6*3);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>stbi_write_bmp(</highlight><highlight class="stringliteral">&quot;output/wr6x5_regular.bmp&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>stbi_write_tga(</highlight><highlight class="stringliteral">&quot;output/wr6x5_regular.tga&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>stbi_write_jpg(</highlight><highlight class="stringliteral">&quot;output/wr6x5_regular.jpg&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb,<sp/>95);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>stbi_write_hdr(</highlight><highlight class="stringliteral">&quot;output/wr6x5_regular.hdr&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgbf);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>stbi_flip_vertically_on_write(1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>stbi_write_png(</highlight><highlight class="stringliteral">&quot;output/wr6x5_flip.png&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb,<sp/>6*3);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>stbi_write_bmp(</highlight><highlight class="stringliteral">&quot;output/wr6x5_flip.bmp&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>stbi_write_tga(</highlight><highlight class="stringliteral">&quot;output/wr6x5_flip.tga&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>stbi_write_jpg(</highlight><highlight class="stringliteral">&quot;output/wr6x5_flip.jpg&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgb,<sp/>95);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>stbi_write_hdr(</highlight><highlight class="stringliteral">&quot;output/wr6x5_flip.hdr&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>5,<sp/>3,<sp/>img6x5_rgbf);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IWT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>image_write_test();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/image_write_test.c"/>
  </compounddef>
</doxygen>
