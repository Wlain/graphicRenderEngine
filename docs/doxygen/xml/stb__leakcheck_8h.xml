<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stb__leakcheck_8h" kind="file" language="C++">
    <compoundname>stb_leakcheck.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includedby refid="test__cpp__compilation_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_cpp_compilation.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h</label>
        <link refid="stb__leakcheck_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h</label>
        <link refid="stb__leakcheck_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_cpp_compilation.cpp</label>
        <link refid="test__cpp__compilation_8cpp_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stb__leakcheck_8h_1a455ba467ddb89c45083b949dc6da3cb4" prot="public" static="no">
        <name>INCLUDE_STB_LEAKCHECK_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="138" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__leakcheck_8h_1ac71ce303a4b993665ae00f1e1293ba8b" prot="public" static="no">
        <name>malloc</name>
        <param><defname>sz</defname></param>
        <initializer>stb_leakcheck_malloc(sz, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="142" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc" prot="public" static="no">
        <name>free</name>
        <param><defname>p</defname></param>
        <initializer>stb_leakcheck_free(p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="143" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__leakcheck_8h_1a3110046d1aa9a56183099e72074bd982" prot="public" static="no">
        <name>realloc</name>
        <param><defname>p</defname></param>
        <param><defname>sz</defname></param>
        <initializer>stb_leakcheck_realloc(p,sz, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="144" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stb__leakcheck_8h_1ac7110ad818fcfb132f107b05d7f2a3ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stb_leakcheck_malloc</definition>
        <argsstring>(size_t sz, const char *file, int line)</argsstring>
        <name>stb_leakcheck_malloc</name>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="146" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" declline="146" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__leakcheck_8h_1a58a1d91d29d843ba5e94c8f288594318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stb_leakcheck_realloc</definition>
        <argsstring>(void *ptr, size_t sz, const char *file, int line)</argsstring>
        <name>stb_leakcheck_realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="147" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" declline="147" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__leakcheck_8h_1abfe615546c074884759d094db95f73a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stb_leakcheck_free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>stb_leakcheck_free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="148" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" declline="148" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__leakcheck_8h_1adbb2cac1266c72123f3bbd55dea570ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stb_leakcheck_dumpmem</definition>
        <argsstring>(void)</argsstring>
        <name>stb_leakcheck_dumpmem</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" line="149" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h" declline="149" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>stb_leakcheck.h<sp/>-<sp/>v0.6<sp/>-<sp/>quick<sp/>&amp;<sp/>dirty<sp/>malloc<sp/>leak-checking<sp/>-<sp/>public<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>See<sp/>end<sp/>of<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_LEAKCHECK_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STB_LEAKCHECK_IMPLEMENTATION<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>implement<sp/>more<sp/>than<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;ve<sp/>already<sp/>included<sp/>leakcheck<sp/>before,<sp/>undefine<sp/>the<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STB_LEAKCHECK_OUTPUT_PIPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_LEAKCHECK_OUTPUT_PIPE<sp/>stdout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">malloc_info<sp/>stb_leakcheck_malloc_info;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">malloc_info</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>stb_leakcheck_malloc_info<sp/>*next,*prev;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stb_leakcheck_malloc_info<sp/>*mi_head;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stb_leakcheck_malloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>stb_leakcheck_malloc_info<sp/>*mi<sp/>=<sp/>(stb_leakcheck_malloc_info<sp/>*)<sp/>malloc(sz<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mi));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mi;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>mi-&gt;file<sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>mi-&gt;line<sp/>=<sp/>line;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>mi-&gt;next<sp/>=<sp/>mi_head;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi_head)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mi-&gt;next-&gt;prev<sp/>=<sp/>mi;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>mi-&gt;prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>mi-&gt;size<sp/>=<sp/>(int)<sp/>sz;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>mi_head<sp/>=<sp/>mi;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mi+1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stb_leakcheck_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_leakcheck_malloc_info<sp/>*mi<sp/>=<sp/>(stb_leakcheck_malloc_info<sp/>*)<sp/>ptr<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mi-&gt;size<sp/>=<sp/>~mi-&gt;size;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STB_LEAKCHECK_SHOWALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi-&gt;prev<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mi_head<sp/>==<sp/>mi);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi_head<sp/>=<sp/>mi-&gt;next;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi-&gt;prev-&gt;next<sp/>=<sp/>mi-&gt;next;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi-&gt;next)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi-&gt;next-&gt;prev<sp/>=<sp/>mi-&gt;prev;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(mi);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stb_leakcheck_realloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stb_leakcheck_malloc(sz,<sp/>file,<sp/>line);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_leakcheck_free(ptr);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_leakcheck_malloc_info<sp/>*mi<sp/>=<sp/>(stb_leakcheck_malloc_info<sp/>*)<sp/>ptr<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;=<sp/>mi-&gt;size)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STB_LEAKCHECK_REALLOC_PRESERVE_MALLOC_FILELINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>stb_leakcheck_malloc(sz,<sp/>mi-&gt;file,<sp/>mi-&gt;line);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>stb_leakcheck_malloc(sz,<sp/>file,<sp/>line);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(q,<sp/>ptr,<sp/>mi-&gt;size);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_leakcheck_free(ptr);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stblkck_internal_print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reason,<sp/>stb_leakcheck_malloc_info<sp/>*mi)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&lt;<sp/>1900<sp/></highlight><highlight class="comment">//<sp/>1900=VS<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compilers<sp/>that<sp/>use<sp/>the<sp/>old<sp/>MS<sp/>C<sp/>runtime<sp/>library<sp/>don&apos;t<sp/>have<sp/>%zd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>older<sp/>ones<sp/>don&apos;t<sp/>even<sp/>have<sp/>%lld<sp/>either...<sp/>however,<sp/>the<sp/>old<sp/>compilers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>&quot;long<sp/>long&quot;<sp/>don&apos;t<sp/>support<sp/>64-bit<sp/>targets<sp/>either,<sp/>so<sp/>here&apos;s<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compromise:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>_MSC_VER<sp/>&lt;<sp/>1400<sp/></highlight><highlight class="comment">//<sp/>before<sp/>VS<sp/>2005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(STB_LEAKCHECK_OUTPUT_PIPE,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>(%4d):<sp/>%8d<sp/>bytes<sp/>at<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>reason,<sp/>mi-&gt;file,<sp/>mi-&gt;line,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mi-&gt;size,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(mi+1));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(STB_LEAKCHECK_OUTPUT_PIPE,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>(%4d):<sp/>%16lld<sp/>bytes<sp/>at<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>reason,<sp/>mi-&gt;file,<sp/>mi-&gt;line,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)mi-&gt;size,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(mi+1));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>we<sp/>have<sp/>%zd<sp/>on<sp/>other<sp/>targets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__MINGW32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__mingw_fprintf(STB_LEAKCHECK_OUTPUT_PIPE,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>(%4d):<sp/>%zd<sp/>bytes<sp/>at<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>reason,<sp/>mi-&gt;file,<sp/>mi-&gt;line,<sp/>mi-&gt;size,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(mi+1));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(STB_LEAKCHECK_OUTPUT_PIPE,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>(%4d):<sp/>%zd<sp/>bytes<sp/>at<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>reason,<sp/>mi-&gt;file,<sp/>mi-&gt;line,<sp/>mi-&gt;size,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(mi+1));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stb_leakcheck_dumpmem(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>stb_leakcheck_malloc_info<sp/>*mi<sp/>=<sp/>mi_head;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mi)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptrdiff_t)<sp/>mi-&gt;size<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stblkck_internal_print(</highlight><highlight class="stringliteral">&quot;LEAKED&quot;</highlight><highlight class="normal">,<sp/>mi);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>mi-&gt;next;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STB_LEAKCHECK_SHOWALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mi<sp/>=<sp/>mi_head;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mi)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptrdiff_t)<sp/>mi-&gt;size<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stblkck_internal_print(</highlight><highlight class="stringliteral">&quot;FREED<sp/>&quot;</highlight><highlight class="normal">,<sp/>mi);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>mi-&gt;next;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STB_LEAKCHECK_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(INCLUDE_STB_LEAKCHECK_H)<sp/>||<sp/>!defined(malloc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_STB_LEAKCHECK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>define<sp/>the<sp/>macros<sp/>*after*<sp/>stdlib<sp/>to<sp/>avoid<sp/>a<sp/>slew<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>malloc(sz)<sp/><sp/><sp/><sp/>stb_leakcheck_malloc(sz,<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>free(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_leakcheck_free(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>realloc(p,sz)<sp/>stb_leakcheck_realloc(p,sz,<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stb_leakcheck_malloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stb_leakcheck_realloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>stb_leakcheck_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>stb_leakcheck_dumpmem(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>INCLUDE_STB_LEAKCHECK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="156"><highlight class="comment">This<sp/>software<sp/>is<sp/>available<sp/>under<sp/>2<sp/>licenses<sp/>--<sp/>choose<sp/>whichever<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="157"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="158"><highlight class="comment">ALTERNATIVE<sp/>A<sp/>-<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="159"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>Sean<sp/>Barrett</highlight></codeline>
<codeline lineno="160"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="161"><highlight class="comment">this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="162"><highlight class="comment">the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="163"><highlight class="comment">use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="164"><highlight class="comment">of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="165"><highlight class="comment">so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="166"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="167"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="168"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="169"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="170"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="171"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="172"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="173"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="174"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="175"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="176"><highlight class="comment">ALTERNATIVE<sp/>B<sp/>-<sp/>Public<sp/>Domain<sp/>(www.unlicense.org)</highlight></codeline>
<codeline lineno="177"><highlight class="comment">This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="178"><highlight class="comment">Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or<sp/>distribute<sp/>this</highlight></codeline>
<codeline lineno="179"><highlight class="comment">software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled<sp/>binary,<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="180"><highlight class="comment">commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any<sp/>means.</highlight></codeline>
<codeline lineno="181"><highlight class="comment">In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="182"><highlight class="comment">software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the<sp/>software<sp/>to<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="183"><highlight class="comment">domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="184"><highlight class="comment">the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="185"><highlight class="comment">overt<sp/>act<sp/>of<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="186"><highlight class="comment">this<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight></codeline>
<codeline lineno="187"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="188"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="189"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="190"><highlight class="comment">AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="191"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="192"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="193"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_leakcheck.h"/>
  </compounddef>
</doxygen>
