<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="ext__vec1_8cpp" kind="file" language="C++">
    <compoundname>ext_vec1.cpp</compoundname>
    <includes refid="vector__relational_8hpp" local="no">glm/vector_relational.hpp</includes>
    <includes refid="ext_2vec1_8hpp" local="no">glm/ext/vec1.hpp</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="9">
        <label>compute_vector_relational.hpp</label>
        <link refid="compute__vector__relational_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>detail/func_vector_relational.inl</label>
        <link refid="func__vector__relational_8inl"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>detail/qualifier.hpp</label>
        <link refid="qualifier_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>setup.hpp</label>
        <link refid="setup_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>detail/type_float.hpp</label>
        <link refid="type__float_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>detail/type_int.hpp</label>
        <link refid="type__int_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>detail/type_mat.hpp</label>
        <link refid="type__mat_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>detail/type_vec.hpp</label>
        <link refid="type__vec_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>../detail/type_vec1.inl</label>
        <link refid="type__vec1_8inl"/>
      </node>
      <node id="12">
        <label>glm/ext/vec1.hpp</label>
        <link refid="ext_2vec1_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../fwd.hpp</label>
        <link refid="fwd_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../simd/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="2">
        <label>glm/vector_relational.hpp</label>
        <link refid="vector__relational_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp</label>
        <link refid="ext__vec1_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="10">
        <label>cstring</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ext__vec1_8cpp_1aa5c438b4af14167ea5efa0924575950b" prot="public" static="no">
        <name>GLM_FORCE_SWIZZLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="1" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ext__vec1_8cpp_1ae68e0362aeb3d4c000df5fa8942edce3" prot="public" static="yes" mutable="no">
        <type><ref refid="group__ext__vec1_1ga16030dae9029ed1eab1553a2183bbb79" kindref="member">glm::vec1</ref></type>
        <definition>glm::vec1 g1</definition>
        <argsstring></argsstring>
        <name>g1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="6" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ext__vec1_8cpp_1a87e7980dd5eb0b756271ad0c7530a243" prot="public" static="yes" mutable="no">
        <type><ref refid="group__ext__vec1_1ga16030dae9029ed1eab1553a2183bbb79" kindref="member">glm::vec1</ref></type>
        <definition>glm::vec1 g2(1)</definition>
        <argsstring>(1)</argsstring>
        <name>g2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="7" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ext__vec1_8cpp_1a3cc5a15d69d9ee3895ee0bb3952a46c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_vec1_operators</definition>
        <argsstring>()</argsstring>
        <name>test_vec1_operators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="9" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="9" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="ext__vec1_8cpp_1a6f8bbc4ac0cd5bcaa837bfb7fa048934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_vec1_ctor</definition>
        <argsstring>()</argsstring>
        <name>test_vec1_ctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="37" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="37" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="ext__vec1_8cpp_1acc38912a31cd52b1616a56eeef1a145c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_vec1_size</definition>
        <argsstring>()</argsstring>
        <name>test_vec1_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="66" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="66" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="ext__vec1_8cpp_1a88c353b325eac54a4827281f74e470a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_vec1_operator_increment</definition>
        <argsstring>()</argsstring>
        <name>test_vec1_operator_increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="87" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="87" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="ext__vec1_8cpp_1a0bc45f7f368f351b320b6a9a9524bee0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_bvec1_ctor</definition>
        <argsstring>()</argsstring>
        <name>test_bvec1_ctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="114" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="114" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="ext__vec1_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" line="137" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp" bodystart="137" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>GLM_FORCE_SWIZZLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vector__relational_8hpp" kindref="compound">glm/vector_relational.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ext_2vec1_8hpp" kindref="compound">glm/ext/vec1.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>g1;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>g2(1);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_vec1_operators()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>A(1.0f);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>B(1.0f);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R<sp/>=<sp/>A<sp/>!=<sp/>B;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>A<sp/>==<sp/>B;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>(S<sp/>&amp;&amp;<sp/>!R)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>*=<sp/>1.0f;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>*=<sp/>1.0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>+=<sp/>1.0f;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R<sp/>=<sp/>A<sp/>!=<sp/>B;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>A<sp/>==<sp/>B;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>(S<sp/>&amp;&amp;<sp/>!R)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_vec1_ctor()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_HAS_TRIVIAL_QUERIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Error<sp/>+=<sp/>std::is_trivially_default_constructible&lt;glm::vec1&gt;::value<sp/>?<sp/>0<sp/>:<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Error<sp/>+=<sp/>std::is_trivially_copy_assignable&lt;glm::vec1&gt;::value<sp/>?<sp/>0<sp/>:<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>std::is_trivially_copyable&lt;glm::vec1&gt;::value<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>std::is_trivially_copyable&lt;glm::dvec1&gt;::value<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>std::is_trivially_copyable&lt;glm::ivec1&gt;::value<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>std::is_trivially_copyable&lt;glm::uvec1&gt;::value<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>std::is_copy_constructible&lt;glm::vec1&gt;::value<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>A<sp/>=<sp/><ref refid="group__ext__vec1_1ga16030dae9029ed1eab1553a2183bbb79" kindref="member">glm::vec1</ref>(2.0f);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>E(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec1</ref>(2.0));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>A<sp/>==<sp/>E<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>F(<ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref>(2));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>A<sp/>==<sp/>F<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_vec1_size()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__ext__vec1_1ga16030dae9029ed1eab1553a2183bbb79" kindref="member">glm::vec1</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structglm_1_1vec" kindref="compound">glm::mediump_vec1</ref>)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>4<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__ext__vec1_1gab1c2ec8c0cbca8b1f2346f37926b77a7" kindref="member">glm::mediump_vec1</ref>)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__ext__vec1_1ga8d5252eec287cf34cc18a219a118f9f2" kindref="member">glm::dvec1</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structglm_1_1vec" kindref="compound">glm::highp_dvec1</ref>)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>8<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__ext__vec1_1ga51e54e6b2fe3962fc44a176eeb3e3fe6" kindref="member">glm::highp_dvec1</ref>)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__ext__vec1_1ga16030dae9029ed1eab1553a2183bbb79" kindref="member">glm::vec1</ref>().length()<sp/>==<sp/>1<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__ext__vec1_1ga8d5252eec287cf34cc18a219a118f9f2" kindref="member">glm::dvec1</ref>().length()<sp/>==<sp/>1<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>glm::vec1::length()<sp/>==<sp/>1<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>glm::dvec1::length()<sp/>==<sp/>1<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_HAS_CONSTEXPR_PARTIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::size_t<sp/>Length<sp/>=<sp/>glm::vec1::length();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>Length<sp/>==<sp/>1<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_vec1_operator_increment()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>v0(1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>v1(v0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>v2(v0);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>v3<sp/>=<sp/>++v1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/>v4<sp/>=<sp/>v2++;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(v0,<sp/>v4))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(v1,<sp/>v2))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(v1,<sp/>v3))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0(1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1(i0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2(i0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i3<sp/>=<sp/>++i1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i4<sp/>=<sp/>i2++;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>i0<sp/>==<sp/>i4<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>i1<sp/>==<sp/>i2<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>i1<sp/>==<sp/>i3<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_bvec1_ctor()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::bvec1</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::bvec1</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>B(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::bvec1</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::bvec1</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D<sp/>=<sp/>A<sp/>&amp;&amp;<sp/>B;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::bvec1</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>E<sp/>=<sp/>A<sp/>&amp;&amp;<sp/>C;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::bvec1</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F<sp/>=<sp/>A<sp/>||<sp/>C;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>D<sp/>==<sp/><ref refid="group__ext__vec1_1ga30260c045e085bb8d19eddca772cac61" kindref="member">glm::bvec1</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>E<sp/>==<sp/><ref refid="group__ext__vec1_1ga30260c045e085bb8d19eddca772cac61" kindref="member">glm::bvec1</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>F<sp/>==<sp/><ref refid="group__ext__vec1_1ga30260c045e085bb8d19eddca772cac61" kindref="member">glm::bvec1</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>=<sp/>A<sp/>==<sp/>C;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>H<sp/>=<sp/>A<sp/>!=<sp/>C;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>!G<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>H<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_vec1_size();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_vec1_ctor();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_bvec1_ctor();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_vec1_operators();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_vec1_operator_increment();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/ext/ext_vec1.cpp"/>
  </compounddef>
</doxygen>
