<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="func__integer_8inl" kind="file" language="C++">
    <compoundname>func_integer.inl</compoundname>
    <includes refid="ext_2vec1_8hpp" local="yes">../ext/vec1.hpp</includes>
    <includes refid="type__vec2_8hpp" local="yes">type_vec2.hpp</includes>
    <includes refid="type__vec3_8hpp" local="yes">type_vec3.hpp</includes>
    <includes refid="type__vec4_8hpp" local="yes">type_vec4.hpp</includes>
    <includes refid="type__int_8hpp" local="yes">type_int.hpp</includes>
    <includes refid="__vectorize_8hpp" local="yes">_vectorize.hpp</includes>
    <includes local="no">limits</includes>
    <includedby refid="integer_8hpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/integer.hpp</includedby>
    <incdepgraph>
      <node id="23">
        <label>_vectorize.hpp</label>
        <link refid="__vectorize_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>compute_vector_relational.hpp</label>
        <link refid="compute__vector__relational_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_integer.inl</label>
        <link refid="func__integer_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>qualifier.hpp</label>
        <link refid="qualifier_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>detail/setup.hpp</label>
        <link refid="setup_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>detail/type_float.hpp</label>
        <link refid="type__float_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>detail/type_int.hpp</label>
        <link refid="type__int_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>detail/type_mat.hpp</label>
        <link refid="type__mat_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>detail/type_vec.hpp</label>
        <link refid="type__vec_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>type_vec1.hpp</label>
        <link refid="type__vec1_8hpp_source"/>
      </node>
      <node id="16">
        <label>../detail/type_vec1.inl</label>
        <link refid="type__vec1_8inl"/>
      </node>
      <node id="17">
        <label>type_vec2.hpp</label>
        <link refid="type__vec2_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_vec2.inl</label>
        <link refid="type__vec2_8inl_source"/>
      </node>
      <node id="19">
        <label>type_vec3.hpp</label>
        <link refid="type__vec3_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>type_vec3.inl</label>
        <link refid="type__vec3_8inl_source"/>
      </node>
      <node id="21">
        <label>type_vec4.hpp</label>
        <link refid="type__vec4_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>type_vec4.inl</label>
        <link refid="type__vec4_8inl_source"/>
      </node>
      <node id="2">
        <label>../ext/vec1.hpp</label>
        <link refid="ext_2vec1_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../fwd.hpp</label>
        <link refid="fwd_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../simd/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="13">
        <label>cstring</label>
      </node>
      <node id="14">
        <label>limits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_integer.inl</label>
        <link refid="func__integer_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext.hpp</label>
        <link refid="ext_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/glm.hpp</label>
        <link refid="glm_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/integer.hpp</label>
        <link refid="gtc_2integer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp</label>
        <link refid="round_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl</label>
        <link refid="round_8inl"/>
        <childnode refid="162" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/associated_min_max.hpp</label>
        <link refid="associated__min__max_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/closest_point.hpp</label>
        <link refid="closest__point_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/color_space.hpp</label>
        <link refid="gtx_2color__space_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/color_space_YCoCg.hpp</label>
        <link refid="color__space___y_co_cg_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp</label>
        <link refid="compatibility_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/dual_quaternion.hpp</label>
        <link refid="dual__quaternion_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/easing.hpp</label>
        <link refid="easing_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp</label>
        <link refid="euler__angles_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl</label>
        <link refid="euler__angles_8inl"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/extend.hpp</label>
        <link refid="extend_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/extended_min_max.hpp</label>
        <link refid="extended__min__max_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/fast_exponential.hpp</label>
        <link refid="fast__exponential_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/gradient_paint.hpp</label>
        <link refid="gradient__paint_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/handed_coordinate_space.hpp</label>
        <link refid="handed__coordinate__space_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/hash.hpp</label>
        <link refid="hash_8hpp"/>
      </node>
      <node id="52">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/integer.hpp</label>
        <link refid="gtx_2integer_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/intersect.hpp</label>
        <link refid="intersect_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/io.inl</label>
        <link refid="io_8inl"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/log_base.hpp</label>
        <link refid="log__base_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_cross_product.hpp</label>
        <link refid="matrix__cross__product_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_factorisation.hpp</label>
        <link refid="matrix__factorisation_8hpp"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_interpolation.hpp</label>
        <link refid="matrix__interpolation_8hpp"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_major_storage.hpp</label>
        <link refid="matrix__major__storage_8hpp"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp</label>
        <link refid="matrix__operation_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp</label>
        <link refid="matrix__query_8hpp"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/mixed_product.hpp</label>
        <link refid="mixed__product_8hpp"/>
      </node>
      <node id="83">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp</label>
        <link refid="norm_8hpp"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/normal.hpp</label>
        <link refid="normal_8hpp"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/number_precision.hpp</label>
        <link refid="number__precision_8hpp"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/optimum_pow.hpp</label>
        <link refid="optimum__pow_8hpp"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/perpendicular.hpp</label>
        <link refid="perpendicular_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/polar_coordinates.hpp</label>
        <link refid="polar__coordinates_8hpp"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/quaternion.hpp</label>
        <link refid="gtx_2quaternion_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_normalized_axis.hpp</label>
        <link refid="rotate__normalized__axis_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp</label>
        <link refid="rotate__vector_8hpp"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/scalar_relational.hpp</label>
        <link refid="scalar__relational_8hpp"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/spline.hpp</label>
        <link refid="spline_8hpp"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp</label>
        <link refid="std__based__type_8hpp"/>
      </node>
      <node id="32">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/string_cast.hpp</label>
        <link refid="string__cast_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/texture.hpp</label>
        <link refid="texture_8hpp"/>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/transform2.hpp</label>
        <link refid="transform2_8hpp"/>
      </node>
      <node id="34">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/type_trait.hpp</label>
        <link refid="type__trait_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vec_swizzle.hpp</label>
        <link refid="vec__swizzle_8hpp"/>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.hpp</label>
        <link refid="vector__angle_8hpp"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_query.hpp</label>
        <link refid="vector__query_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/wrap.hpp</label>
        <link refid="wrap_8hpp"/>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/integer.hpp</label>
        <link refid="integer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/bug/bug_ms_vec_static.cpp</label>
        <link refid="bug__ms__vec__static_8cpp_source"/>
      </node>
      <node id="106">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_force_unrestricted_gentype.cpp</label>
        <link refid="core__force__unrestricted__gentype_8cpp_source"/>
      </node>
      <node id="164">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_integer.cpp</label>
        <link refid="core__func__integer_8cpp_source"/>
      </node>
      <node id="107">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_integer_find_lsb.cpp</label>
        <link refid="core__func__integer__find__lsb_8cpp_source"/>
      </node>
      <node id="108">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_integer_find_msb.cpp</label>
        <link refid="core__func__integer__find__msb_8cpp_source"/>
      </node>
      <node id="109">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_swizzle.cpp</label>
        <link refid="core__func__swizzle_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_setup_force_cxx98.cpp</label>
        <link refid="core__setup__force__cxx98_8cpp_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_setup_force_size_t_length.cpp</label>
        <link refid="core__setup__force__size__t__length_8cpp_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_setup_precision.cpp</label>
        <link refid="core__setup__precision_8cpp_source"/>
      </node>
      <node id="110">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_type_aligned.cpp</label>
        <link refid="core__type__aligned_8cpp_source"/>
      </node>
      <node id="111">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_type_cast.cpp</label>
        <link refid="core__type__cast_8cpp_source"/>
      </node>
      <node id="112">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_type_ctor.cpp</label>
        <link refid="core__type__ctor_8cpp_source"/>
      </node>
      <node id="113">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_type_float.cpp</label>
        <link refid="core__type__float_8cpp_source"/>
      </node>
      <node id="114">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_type_int.cpp</label>
        <link refid="core__type__int_8cpp_source"/>
      </node>
      <node id="115">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_type_length.cpp</label>
        <link refid="core__type__length_8cpp_source"/>
      </node>
      <node id="165">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtc/gtc_bitfield.cpp</label>
        <link refid="gtc__bitfield_8cpp_source"/>
      </node>
      <node id="159">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtc/gtc_integer.cpp</label>
        <link refid="gtc__integer_8cpp_source"/>
      </node>
      <node id="163">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtc/gtc_round.cpp</label>
        <link refid="gtc__round_8cpp_source"/>
      </node>
      <node id="116">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtc/gtc_type_aligned.cpp</label>
        <link refid="gtc__type__aligned_8cpp_source"/>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx.cpp</label>
        <link refid="gtx_8cpp_source"/>
      </node>
      <node id="11">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_associated_min_max.cpp</label>
        <link refid="gtx__associated__min__max_8cpp_source"/>
      </node>
      <node id="17">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_closest_point.cpp</label>
        <link refid="gtx__closest__point_8cpp_source"/>
      </node>
      <node id="19">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_color_space.cpp</label>
        <link refid="gtx__color__space_8cpp_source"/>
      </node>
      <node id="21">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_color_space_YCoCg.cpp</label>
        <link refid="gtx__color__space___y_co_cg_8cpp_source"/>
      </node>
      <node id="160">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_common.cpp</label>
        <link refid="gtx__common_8cpp_source"/>
      </node>
      <node id="29">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_compatibility.cpp</label>
        <link refid="gtx__compatibility_8cpp_source"/>
      </node>
      <node id="25">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_dual_quaternion.cpp</label>
        <link refid="gtx__dual__quaternion_8cpp_source"/>
      </node>
      <node id="40">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_easing.cpp</label>
        <link refid="gtx__easing_8cpp_source"/>
      </node>
      <node id="26">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_euler_angle.cpp</label>
        <link refid="gtx__euler__angle_8cpp_source"/>
      </node>
      <node id="42">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_extend.cpp</label>
        <link refid="gtx__extend_8cpp_source"/>
      </node>
      <node id="44">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_extended_min_max.cpp</label>
        <link refid="gtx__extended__min__max_8cpp_source"/>
      </node>
      <node id="45">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_extented_min_max.cpp</label>
        <link refid="gtx__extented__min__max_8cpp"/>
      </node>
      <node id="47">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_fast_exponential.cpp</label>
        <link refid="gtx__fast__exponential_8cpp_source"/>
      </node>
      <node id="53">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_fast_trigonometry.cpp</label>
        <link refid="gtx__fast__trigonometry_8cpp_source"/>
      </node>
      <node id="49">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_gradient_paint.cpp</label>
        <link refid="gtx__gradient__paint_8cpp_source"/>
      </node>
      <node id="51">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_handed_coordinate_space.cpp</label>
        <link refid="gtx__handed__coordinate__space_8cpp_source"/>
      </node>
      <node id="12">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_int_10_10_10_2.cpp</label>
        <link refid="gtx__int__10__10__10__2_8cpp_source"/>
      </node>
      <node id="54">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_integer.cpp</label>
        <link refid="gtx__integer_8cpp_source"/>
      </node>
      <node id="16">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_intersect.cpp</label>
        <link refid="gtx__intersect_8cpp_source"/>
      </node>
      <node id="37">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_io.cpp</label>
        <link refid="gtx__io_8cpp_source"/>
      </node>
      <node id="56">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_log_base.cpp</label>
        <link refid="gtx__log__base_8cpp_source"/>
      </node>
      <node id="58">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_matrix_cross_product.cpp</label>
        <link refid="gtx__matrix__cross__product_8cpp_source"/>
      </node>
      <node id="60">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_matrix_factorisation.cpp</label>
        <link refid="gtx__matrix__factorisation_8cpp_source"/>
      </node>
      <node id="62">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_matrix_interpolation.cpp</label>
        <link refid="gtx__matrix__interpolation_8cpp_source"/>
      </node>
      <node id="64">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_matrix_major_storage.cpp</label>
        <link refid="gtx__matrix__major__storage_8cpp_source"/>
      </node>
      <node id="66">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_matrix_operation.cpp</label>
        <link refid="gtx__matrix__operation_8cpp_source"/>
      </node>
      <node id="68">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_matrix_query.cpp</label>
        <link refid="gtx__matrix__query_8cpp_source"/>
      </node>
      <node id="13">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_mixed_product.cpp</label>
        <link refid="gtx__mixed__product_8cpp_source"/>
      </node>
      <node id="84">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_norm.cpp</label>
        <link refid="gtx__norm_8cpp_source"/>
      </node>
      <node id="71">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_normal.cpp</label>
        <link refid="gtx__normal_8cpp_source"/>
      </node>
      <node id="73">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_number_precision.cpp</label>
        <link refid="gtx__number__precision_8cpp_source"/>
      </node>
      <node id="77">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_optimum_pow.cpp</label>
        <link refid="gtx__optimum__pow_8cpp_source"/>
      </node>
      <node id="79">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_perpendicular.cpp</label>
        <link refid="gtx__perpendicular_8cpp_source"/>
      </node>
      <node id="81">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_polar_coordinates.cpp</label>
        <link refid="gtx__polar__coordinates_8cpp_source"/>
      </node>
      <node id="9">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_quaternion.cpp</label>
        <link refid="gtx__quaternion_8cpp_source"/>
      </node>
      <node id="117">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_random.cpp</label>
        <link refid="gtx__random_8cpp_source"/>
      </node>
      <node id="118">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_range.cpp</label>
        <link refid="gtx__range_8cpp_source"/>
      </node>
      <node id="88">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_rotate_normalized_axis.cpp</label>
        <link refid="gtx__rotate__normalized__axis_8cpp_source"/>
      </node>
      <node id="90">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_rotate_vector.cpp</label>
        <link refid="gtx__rotate__vector_8cpp_source"/>
      </node>
      <node id="119">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_scalar_multiplication.cpp</label>
        <link refid="gtx__scalar__multiplication_8cpp_source"/>
      </node>
      <node id="92">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_scalar_relational.cpp</label>
        <link refid="gtx__scalar__relational_8cpp_source"/>
      </node>
      <node id="120">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_simd_mat4.cpp</label>
        <link refid="gtx__simd__mat4_8cpp"/>
      </node>
      <node id="121">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_simd_vec4.cpp</label>
        <link refid="gtx__simd__vec4_8cpp"/>
      </node>
      <node id="76">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_spline.cpp</label>
        <link refid="gtx__spline_8cpp_source"/>
      </node>
      <node id="33">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_string_cast.cpp</label>
        <link refid="gtx__string__cast_8cpp_source"/>
      </node>
      <node id="95">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_texture.cpp</label>
        <link refid="gtx__texture_8cpp_source"/>
      </node>
      <node id="38">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_type_trait.cpp</label>
        <link refid="gtx__type__trait_8cpp_source"/>
      </node>
      <node id="100">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_vec_swizzle.cpp</label>
        <link refid="gtx__vec__swizzle_8cpp_source"/>
      </node>
      <node id="86">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_vector_angle.cpp</label>
        <link refid="gtx__vector__angle_8cpp_source"/>
      </node>
      <node id="102">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_vector_query.cpp</label>
        <link refid="gtx__vector__query_8cpp_source"/>
      </node>
      <node id="104">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_wrap.cpp</label>
        <link refid="gtx__wrap_8cpp_source"/>
      </node>
      <node id="27">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/camera.cpp</label>
        <link refid="camera_8cpp_source"/>
      </node>
      <node id="122">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/camera.h</label>
        <link refid="camera_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/color.cpp</label>
        <link refid="color_8cpp_source"/>
      </node>
      <node id="142">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/color.h</label>
        <link refid="core_2color_8h_source"/>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/framebuffer.cpp</label>
        <link refid="framebuffer_8cpp_source"/>
      </node>
      <node id="151">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/framebuffer.h</label>
        <link refid="framebuffer_8h_source"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.cpp</label>
        <link refid="glfw_renderer_8cpp_source"/>
      </node>
      <node id="152">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.h</label>
        <link refid="glfw_renderer_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/inspector.cpp</label>
        <link refid="inspector_8cpp_source"/>
      </node>
      <node id="147">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/inspector.h</label>
        <link refid="inspector_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/light.cpp</label>
        <link refid="light_8cpp_source"/>
      </node>
      <node id="144">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/light.h</label>
        <link refid="light_8h_source"/>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/material.cpp</label>
        <link refid="material_8cpp_source"/>
      </node>
      <node id="135">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/material.h</label>
        <link refid="material_8h_source"/>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.cpp</label>
        <link refid="mesh_8cpp_source"/>
      </node>
      <node id="153">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.h</label>
        <link refid="mesh_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/modelImporter.cpp</label>
        <link refid="model_importer_8cpp_source"/>
      </node>
      <node id="136">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/modelImporter.h</label>
        <link refid="model_importer_8h_source"/>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/particleEmitter.cpp</label>
        <link refid="particle_emitter_8cpp_source"/>
      </node>
      <node id="124">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/particleEmitter.h</label>
        <link refid="particle_emitter_8h_source"/>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/ray.h</label>
        <link refid="ray_8h_source"/>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderPass.cpp</label>
        <link refid="render_pass_8cpp_source"/>
      </node>
      <node id="123">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderer.cpp</label>
        <link refid="renderer_8cpp_source"/>
      </node>
      <node id="127">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderer.h</label>
        <link refid="renderer_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.cpp</label>
        <link refid="shader_8cpp_source"/>
      </node>
      <node id="134">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.h</label>
        <link refid="shader_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/skybox.cpp</label>
        <link refid="skybox_8cpp_source"/>
      </node>
      <node id="98">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/sprite.cpp</label>
        <link refid="sprite_8cpp_source"/>
      </node>
      <node id="156">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/sprite.h</label>
        <link refid="sprite_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteAtlas.cpp</label>
        <link refid="sprite_atlas_8cpp_source"/>
      </node>
      <node id="157">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteAtlas.h</label>
        <link refid="sprite_atlas_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteBatch.cpp</label>
        <link refid="sprite_batch_8cpp_source"/>
      </node>
      <node id="154">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteBatch.h</label>
        <link refid="sprite_batch_8h_source"/>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/texture.cpp</label>
        <link refid="texture_8cpp_source"/>
      </node>
      <node id="150">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/uniformSet.cpp</label>
        <link refid="uniform_set_8cpp_source"/>
      </node>
      <node id="149">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/uniformSet.h</label>
        <link refid="uniform_set_8h_source"/>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/worldLights.cpp</label>
        <link refid="world_lights_8cpp_source"/>
      </node>
      <node id="146">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/worldLights.h</label>
        <link refid="world_lights_8h_source"/>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" prot="public">glm::detail::compute_bitfieldReverseStep</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__bitfield_reverse_step_3_01_l_00_01_t_00_01_q_00_01_aligned_00_01true_01_4" prot="public">glm::detail::compute_bitfieldReverseStep&lt; L, T, Q, Aligned, true &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" prot="public">glm::detail::compute_bitfieldBitCountStep</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step_3_01_l_00_01_t_00_01_q_00_01_aligned_00_01true_01_4" prot="public">glm::detail::compute_bitfieldBitCountStep&lt; L, T, Q, Aligned, true &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__find_l_s_b" prot="public">glm::detail::compute_findLSB</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" prot="public">glm::detail::compute_findMSB_step_vec</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec_3_01_l_00_01_t_00_01_q_00_01false_01_4" prot="public">glm::detail::compute_findMSB_step_vec&lt; L, T, Q, false &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__find_m_s_b__vec" prot="public">glm::detail::compute_findMSB_vec</innerclass>
    <innernamespace refid="namespaceglm">glm</innernamespace>
    <innernamespace refid="namespaceglm_1_1detail">glm::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="group__core" kindref="compound">Core features</ref> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ext/vec1.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__vec2_8hpp" kindref="compound">type_vec2.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__vec3_8hpp" kindref="compound">type_vec3.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__vec4_8hpp" kindref="compound">type_vec4.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__int_8hpp" kindref="compound">type_int.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="__vectorize_8hpp" kindref="compound">_vectorize.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if(GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_X86<sp/>&amp;&amp;<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;intrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>pragma<sp/>intrinsic(_BitScanReverse)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//(GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_X86<sp/>&amp;&amp;<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!GLM_HAS_EXTENDED_INTEGER_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_GCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wlong-long&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>(GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_CLANG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wc++11-long-long&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">glm{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>T<sp/><ref refid="structmask" kindref="compound">mask</ref>(T<sp/>Bits)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Bits<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8)<sp/>?<sp/>~static_cast&lt;T&gt;(0)<sp/>:<sp/>(static_cast&lt;T&gt;(1)<sp/>&lt;&lt;<sp/>Bits)<sp/>-<sp/>static_cast&lt;T&gt;(1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EXEC&gt;</highlight></codeline>
<codeline lineno="35" refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">compute_bitfieldReverseStep</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T,<sp/>T)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned&gt;</highlight></codeline>
<codeline lineno="44" refid="structglm_1_1detail_1_1compute__bitfield_reverse_step_3_01_l_00_01_t_00_01_q_00_01_aligned_00_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">compute_bitfieldReverseStep</ref>&lt;L,<sp/>T,<sp/>Q,<sp/>Aligned,<sp/>true&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/>Mask,<sp/>T<sp/>Shift)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>&amp;<sp/>Mask)<sp/>&lt;&lt;<sp/>Shift<sp/>|<sp/>(v<sp/>&amp;<sp/>(~Mask))<sp/>&gt;&gt;<sp/>Shift;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EXEC&gt;</highlight></codeline>
<codeline lineno="53" refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">compute_bitfieldBitCountStep</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T,<sp/>T)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned&gt;</highlight></codeline>
<codeline lineno="62" refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step_3_01_l_00_01_t_00_01_q_00_01_aligned_00_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">compute_bitfieldBitCountStep</ref>&lt;L,<sp/>T,<sp/>Q,<sp/>Aligned,<sp/>true&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/>Mask,<sp/>T<sp/>Shift)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>&amp;<sp/>Mask)<sp/>+<sp/>((v<sp/>&gt;&gt;<sp/>Shift)<sp/>&amp;<sp/>Mask);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Bits&gt;</highlight></codeline>
<codeline lineno="71" refid="structglm_1_1detail_1_1compute__find_l_s_b" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__find_l_s_b" kindref="compound">compute_findLSB</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>call(genIUType<sp/>Value)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Value<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga137ebce004abfd2750df0eb3c7f9855f" kindref="member">glm::bitCount</ref>(~Value<sp/>&amp;<sp/>(Value<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIUType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_HAS_BITSCAN_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__find_l_s_b" kindref="compound">compute_findLSB</ref>&lt;genIUType,<sp/>32&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>call(genIUType<sp/>Value)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Result(0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>IsNotNull<sp/>=<sp/>_BitScanForward(&amp;Result,<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;Value));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsNotNull<sp/>?<sp/>int(Result)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>!((GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC)<sp/>&amp;&amp;<sp/>(GLM_MODEL<sp/>==<sp/>GLM_MODEL_32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">compute_findLSB&lt;genIUType,<sp/>64&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>call(genIUType<sp/>Value)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Result(0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>IsNotNull<sp/>=<sp/>_BitScanForward64(&amp;Result,<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;Value));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsNotNull<sp/>?<sp/>int(Result)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="comment">//GLM_HAS_BITSCAN_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EXEC<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="109" refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/>T<sp/>Shift)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>|<sp/>(x<sp/>&gt;&gt;<sp/>Shift);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="118" refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec_3_01_l_00_01_t_00_01_q_00_01false_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/>false&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/>T)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="127" refid="structglm_1_1detail_1_1compute__find_m_s_b__vec" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__vec" kindref="compound">compute_findMSB_vec</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>x(v);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8<sp/>&gt;=<sp/><sp/>8&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>1));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8<sp/>&gt;=<sp/><sp/>8&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>2));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8<sp/>&gt;=<sp/><sp/>8&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>4));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8<sp/>&gt;=<sp/>16&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>8));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8<sp/>&gt;=<sp/>32&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(16));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__step__vec" kindref="compound">compute_findMSB_step_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8<sp/>&gt;=<sp/>64&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8<sp/>-<sp/>1)<sp/>-<sp/><ref refid="group__core__func__integer_1ga137ebce004abfd2750df0eb3c7f9855f" kindref="member">glm::bitCount</ref>(~x);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_HAS_BITSCAN_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compute_findMSB_32(genIUType<sp/>Value)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Result(0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>IsNotNull<sp/>=<sp/>_BitScanReverse(&amp;Result,<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;Value));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsNotNull<sp/>?<sp/>int(Result)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">compute_findMSB_vec&lt;L,<sp/>T,<sp/>Q,<sp/>32&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1functor1" kindref="compound">detail::functor1&lt;L, int, T, Q&gt;::call</ref>(compute_findMSB_32,<sp/>x);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>!((GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC)<sp/>&amp;&amp;<sp/>(GLM_MODEL<sp/>==<sp/>GLM_MODEL_32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compute_findMSB_64(genIUType<sp/>Value)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Result(0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>IsNotNull<sp/>=<sp/>_BitScanReverse64(&amp;Result,<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;Value));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsNotNull<sp/>?<sp/>int(Result)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">compute_findMSB_vec&lt;L,<sp/>T,<sp/>Q,<sp/>64&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/>call(<ref refid="structvec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::functor1&lt;L,<sp/>int,<sp/>T,<sp/>Q&gt;::call(compute_findMSB_64,<sp/>x);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="comment">//GLM_HAS_BITSCAN_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uaddCarry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>uint<sp/><ref refid="group__core__func__integer_1ga69005cfca795a929dec5f08f952a6b54" kindref="member">uaddCarry</ref>(uint<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/>uint<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y,<sp/>uint<sp/>&amp;<sp/>Carry)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value64(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(y));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Max32((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32))<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Carry<sp/>=<sp/>Value64<sp/>&gt;<sp/>Max32<sp/>?<sp/>1u<sp/>:<sp/>0u;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Value64<sp/>%<sp/>(Max32<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="191" refid="group__core__func__integer_1ga69005cfca795a929dec5f08f952a6b54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1ga69005cfca795a929dec5f08f952a6b54" kindref="member">uaddCarry</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref>&amp;<sp/>Carry)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint64, Q&gt;</ref><sp/>Value64(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint64, Q&gt;</ref>(x)<sp/>+<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint64, Q&gt;</ref>(y));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint64, Q&gt;</ref><sp/>Max32((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32))<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Carry<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">mix</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint32, Q&gt;</ref>(0),<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint32, Q&gt;</ref>(1),<sp/><ref refid="group__core__func__vector__relational_1ga53c3d9755c8fbde7ba807db23908a7d6" kindref="member">greaterThan</ref>(Value64,<sp/>Max32));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint32, Q&gt;</ref>(Value64<sp/>%<sp/>(Max32<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>usubBorrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>uint<sp/><ref refid="group__core__func__integer_1gae369510d9076eb8b4cc1798299d3f520" kindref="member">usubBorrow</ref>(uint<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/>uint<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y,<sp/>uint<sp/>&amp;<sp/>Borrow)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32),<sp/></highlight><highlight class="stringliteral">&quot;uint<sp/>and<sp/>uint32<sp/>size<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Borrow<sp/>=<sp/>x<sp/>&gt;=<sp/>y<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0)<sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y<sp/>&gt;=<sp/>x)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32))<sp/>+<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(y)<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="212" refid="group__core__func__integer_1gae369510d9076eb8b4cc1798299d3f520" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1gae369510d9076eb8b4cc1798299d3f520" kindref="member">usubBorrow</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref>&amp;<sp/>Borrow)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Borrow<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">mix</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref>(0),<sp/><ref refid="group__core__func__vector__relational_1ga41e37f89010e15923ad714c830355684" kindref="member">greaterThanEqual</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YgeX(y<sp/>-<sp/>x);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XgeY(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint32, Q&gt;</ref>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32))<sp/>+<sp/>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int64, Q&gt;</ref>(y)<sp/>-<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int64, Q&gt;</ref>(x))));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">mix</ref>(XgeY,<sp/>YgeX,<sp/><ref refid="group__core__func__vector__relational_1ga41e37f89010e15923ad714c830355684" kindref="member">greaterThanEqual</ref>(y,<sp/>x));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>umulExtended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga732e2fb56db57ea541c7e5c92b7121be" kindref="member">umulExtended</ref>(uint<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/>uint<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y,<sp/>uint<sp/>&amp;<sp/>msb,<sp/>uint<sp/>&amp;<sp/>lsb)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32),<sp/></highlight><highlight class="stringliteral">&quot;uint<sp/>and<sp/>uint32<sp/>size<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/>Value64<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(y);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msb<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Value64<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsb<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Value64);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="231" refid="group__core__func__integer_1ga732e2fb56db57ea541c7e5c92b7121be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga732e2fb56db57ea541c7e5c92b7121be" kindref="member">umulExtended</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref>&amp;<sp/>msb,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint, Q&gt;</ref>&amp;<sp/>lsb)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__core__precision_1ga4fd29415871152bfb5abd588334147c8" kindref="member">uint</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref>),<sp/></highlight><highlight class="stringliteral">&quot;uint<sp/>and<sp/>uint32<sp/>size<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint64, Q&gt;</ref><sp/>Value64(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint64, Q&gt;</ref>(x)<sp/>*<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint64, Q&gt;</ref>(y));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msb<sp/>=<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint32, Q&gt;</ref>(Value64<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsb<sp/>=<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, uint32, Q&gt;</ref>(Value64);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>imulExtended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1gac0c510a70e852f57594a9141848642e3" kindref="member">imulExtended</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>msb,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>lsb)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32),<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>and<sp/>int32<sp/>size<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64<sp/>Value64<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(y);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msb<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Value64<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsb<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Value64);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="251" refid="group__core__func__integer_1gac0c510a70e852f57594a9141848642e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1gac0c510a70e852f57594a9141848642e3" kindref="member">imulExtended</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref>&amp;<sp/>msb,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref>&amp;<sp/>lsb)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref>),<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>and<sp/>int32<sp/>size<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int64, Q&gt;</ref><sp/>Value64(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int64, Q&gt;</ref>(x)<sp/>*<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int64, Q&gt;</ref>(y));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsb<sp/>=<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int32, Q&gt;</ref>(Value64<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0xFFFFFFFF));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msb<sp/>=<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int32, Q&gt;</ref>((Value64<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32))<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0xFFFFFFFF));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitfieldExtract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genIUType<sp/><ref refid="group__core__func__integer_1ga962cf1ace50c35be9366bbe44eeb712a" kindref="member">bitfieldExtract</ref>(genIUType<sp/>Value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bits)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga962cf1ace50c35be9366bbe44eeb712a" kindref="member">bitfieldExtract</ref>(<ref refid="structvec" kindref="compound">vec&lt;1, genIUType&gt;</ref>(Value),<sp/>Offset,<sp/>Bits).x;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="268" refid="group__core__func__integer_1ga962cf1ace50c35be9366bbe44eeb712a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1ga962cf1ace50c35be9366bbe44eeb712a" kindref="member">bitfieldExtract</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bits)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;bitfieldExtract&apos;<sp/>only<sp/>accept<sp/>integer<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Value<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Offset))<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(detail::mask(Bits));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitfieldInsert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genIUType<sp/><ref refid="group__core__func__integer_1gaf4333bc422e66cfddb3cdf33102ff41b" kindref="member">bitfieldInsert</ref>(genIUType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Base,<sp/>genIUType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Insert,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bits)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1gaf4333bc422e66cfddb3cdf33102ff41b" kindref="member">bitfieldInsert</ref>(<ref refid="structvec" kindref="compound">vec&lt;1, genIUType&gt;</ref>(Base),<sp/><ref refid="structvec" kindref="compound">vec&lt;1, genIUType&gt;</ref>(Insert),<sp/>Offset,<sp/>Bits).x;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="283" refid="group__core__func__integer_1gaf4333bc422e66cfddb3cdf33102ff41b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1gaf4333bc422e66cfddb3cdf33102ff41b" kindref="member">bitfieldInsert</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Base,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Insert,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bits)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;bitfieldInsert&apos;<sp/>only<sp/>accept<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(detail::mask(Bits)<sp/>&lt;&lt;<sp/>Offset);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Base<sp/>&amp;<sp/>~Mask)<sp/>|<sp/>(Insert<sp/>&amp;<sp/>Mask);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitfieldReverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genType&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genType<sp/><ref refid="group__core__func__integer_1ga738aa6cc864fcfcb43da438e93c2f162" kindref="member">bitfieldReverse</ref>(genType<sp/>x)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga738aa6cc864fcfcb43da438e93c2f162" kindref="member">bitfieldReverse</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec&lt;1, genType, glm::defaultp&gt;</ref>(x)).x;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="299" refid="group__core__func__integer_1ga738aa6cc864fcfcb43da438e93c2f162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1ga738aa6cc864fcfcb43da438e93c2f162" kindref="member">bitfieldReverse</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>x(v);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">detail::compute_bitfieldReverseStep&lt;L, T, Q, detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/><sp/>2&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x5555555555555555ull),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>1));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">detail::compute_bitfieldReverseStep&lt;L, T, Q, detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/><sp/>4&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x3333333333333333ull),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>2));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">detail::compute_bitfieldReverseStep&lt;L, T, Q, detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/><sp/>8&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x0F0F0F0F0F0F0F0Full),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>4));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">detail::compute_bitfieldReverseStep&lt;L, T, Q, detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/>16&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x00FF00FF00FF00FFull),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>8));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">detail::compute_bitfieldReverseStep&lt;L, T, Q, detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/>32&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x0000FFFF0000FFFFull),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(16));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_reverse_step" kindref="compound">detail::compute_bitfieldReverseStep&lt;L, T, Q, detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/>64&gt;::call(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x00000000FFFFFFFFull),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(32));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genType&gt;</highlight></codeline>
<codeline lineno="313" refid="group__core__func__integer_1ga44abfe3379e11cbd29425a843420d0d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga137ebce004abfd2750df0eb3c7f9855f" kindref="member">bitCount</ref>(genType<sp/>x)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga137ebce004abfd2750df0eb3c7f9855f" kindref="member">bitCount</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec&lt;1, genType, glm::defaultp&gt;</ref>(x)).x;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="319" refid="group__core__func__integer_1ga137ebce004abfd2750df0eb3c7f9855f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1ga137ebce004abfd2750df0eb3c7f9855f" kindref="member">bitCount</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(disable<sp/>:<sp/>4310)<sp/></highlight><highlight class="comment">//cast<sp/>truncates<sp/>constant<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q&gt;<sp/>x(*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*&gt;(&amp;v));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">detail::compute_bitfieldBitCountStep&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q,<sp/><ref refid="structglm_1_1detail_1_1is__aligned" kindref="compound">detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/><sp/>2&gt;::call(x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(0x5555555555555555ull),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(<sp/>1));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">detail::compute_bitfieldBitCountStep&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q,<sp/><ref refid="structglm_1_1detail_1_1is__aligned" kindref="compound">detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/><sp/>4&gt;::call(x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(0x3333333333333333ull),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(<sp/>2));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">detail::compute_bitfieldBitCountStep&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q,<sp/><ref refid="structglm_1_1detail_1_1is__aligned" kindref="compound">detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/><sp/>8&gt;::call(x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(0x0F0F0F0F0F0F0F0Full),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(<sp/>4));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">detail::compute_bitfieldBitCountStep&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q,<sp/><ref refid="structglm_1_1detail_1_1is__aligned" kindref="compound">detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/>16&gt;::call(x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(0x00FF00FF00FF00FFull),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(<sp/>8));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">detail::compute_bitfieldBitCountStep&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q,<sp/><ref refid="structglm_1_1detail_1_1is__aligned" kindref="compound">detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/>32&gt;::call(x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(0x0000FFFF0000FFFFull),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(16));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="structglm_1_1detail_1_1compute__bitfield_bit_count_step" kindref="compound">detail::compute_bitfieldBitCountStep&lt;L, typename detail::make_unsigned&lt;T&gt;::type</ref>,<sp/>Q,<sp/><ref refid="structglm_1_1detail_1_1is__aligned" kindref="compound">detail::is_aligned&lt;Q&gt;::value</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;=<sp/>64&gt;::call(x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(0x00000000FFFFFFFFull),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1make__unsigned" kindref="compound">detail::make_unsigned&lt;T&gt;::type</ref>(32));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref>(x);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>findLSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="342" refid="group__core__func__integer_1gaf74c4d969fa34ab8acb9d390f5ca5274" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1gaed9f546bbafdcb101a4727d8c1ebb24c" kindref="member">findLSB</ref>(genIUType<sp/>Value)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;genIUType&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;findLSB&apos;<sp/>only<sp/>accept<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1compute__find_l_s_b" kindref="compound">detail::compute_findLSB</ref>&lt;genIUType,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(genIUType)<sp/>*<sp/>8&gt;::call(Value);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="350" refid="group__core__func__integer_1gaed9f546bbafdcb101a4727d8c1ebb24c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1gaed9f546bbafdcb101a4727d8c1ebb24c" kindref="member">findLSB</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;findLSB&apos;<sp/>only<sp/>accept<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1functor1" kindref="compound">detail::functor1&lt;L, int, T, Q&gt;::call</ref>(<ref refid="group__core__func__integer_1gaed9f546bbafdcb101a4727d8c1ebb24c" kindref="member">findLSB</ref>,<sp/>x);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>findMSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="359" refid="group__core__func__integer_1ga7e4a794d766861c70bc961630f8ef621" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga97229b4c9d98b836108625d36561c5a4" kindref="member">findMSB</ref>(genIUType<sp/>v)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;genIUType&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;findMSB&apos;<sp/>only<sp/>accept<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__integer_1ga97229b4c9d98b836108625d36561c5a4" kindref="member">findMSB</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;1, genIUType&gt;</ref>(v)).x;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="367" refid="group__core__func__integer_1ga97229b4c9d98b836108625d36561c5a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, int, Q&gt;</ref><sp/><ref refid="group__core__func__integer_1ga97229b4c9d98b836108625d36561c5a4" kindref="member">findMSB</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;findMSB&apos;<sp/>only<sp/>accept<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1compute__find_m_s_b__vec" kindref="compound">detail::compute_findMSB_vec</ref>&lt;L,<sp/>T,<sp/>Q,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8&gt;::call(v);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>glm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLM_ARCH<sp/>!=<sp/>GLM_ARCH_PURE<sp/>&amp;&amp;<sp/>GLM_HAS_UNRESTRICTED_UNIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="func__integer__simd_8inl" kindref="compound">func_integer_simd.inl</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_integer.inl"/>
  </compounddef>
</doxygen>
