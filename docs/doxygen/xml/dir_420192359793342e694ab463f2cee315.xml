<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="dir_420192359793342e694ab463f2cee315" kind="dir">
    <compoundname>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx</compoundname>
    <innerfile refid="gtx_8cpp">gtx.cpp</innerfile>
    <innerfile refid="gtx__associated__min__max_8cpp">gtx_associated_min_max.cpp</innerfile>
    <innerfile refid="gtx__closest__point_8cpp">gtx_closest_point.cpp</innerfile>
    <innerfile refid="gtx__color__encoding_8cpp">gtx_color_encoding.cpp</innerfile>
    <innerfile refid="gtx__color__space_8cpp">gtx_color_space.cpp</innerfile>
    <innerfile refid="gtx__color__space___y_co_cg_8cpp">gtx_color_space_YCoCg.cpp</innerfile>
    <innerfile refid="gtx__common_8cpp">gtx_common.cpp</innerfile>
    <innerfile refid="gtx__compatibility_8cpp">gtx_compatibility.cpp</innerfile>
    <innerfile refid="gtx__component__wise_8cpp">gtx_component_wise.cpp</innerfile>
    <innerfile refid="gtx__dual__quaternion_8cpp">gtx_dual_quaternion.cpp</innerfile>
    <innerfile refid="gtx__easing_8cpp">gtx_easing.cpp</innerfile>
    <innerfile refid="gtx__euler__angle_8cpp">gtx_euler_angle.cpp</innerfile>
    <innerfile refid="gtx__extend_8cpp">gtx_extend.cpp</innerfile>
    <innerfile refid="gtx__extended__min__max_8cpp">gtx_extended_min_max.cpp</innerfile>
    <innerfile refid="gtx__extented__min__max_8cpp">gtx_extented_min_max.cpp</innerfile>
    <innerfile refid="gtx__exterior__product_8cpp">gtx_exterior_product.cpp</innerfile>
    <innerfile refid="gtx__fast__exponential_8cpp">gtx_fast_exponential.cpp</innerfile>
    <innerfile refid="gtx__fast__square__root_8cpp">gtx_fast_square_root.cpp</innerfile>
    <innerfile refid="gtx__fast__trigonometry_8cpp">gtx_fast_trigonometry.cpp</innerfile>
    <innerfile refid="gtx__functions_8cpp">gtx_functions.cpp</innerfile>
    <innerfile refid="gtx__gradient__paint_8cpp">gtx_gradient_paint.cpp</innerfile>
    <innerfile refid="gtx__handed__coordinate__space_8cpp">gtx_handed_coordinate_space.cpp</innerfile>
    <innerfile refid="gtx__int__10__10__10__2_8cpp">gtx_int_10_10_10_2.cpp</innerfile>
    <innerfile refid="gtx__integer_8cpp">gtx_integer.cpp</innerfile>
    <innerfile refid="gtx__intersect_8cpp">gtx_intersect.cpp</innerfile>
    <innerfile refid="gtx__io_8cpp">gtx_io.cpp</innerfile>
    <innerfile refid="gtx__log__base_8cpp">gtx_log_base.cpp</innerfile>
    <innerfile refid="gtx__matrix__cross__product_8cpp">gtx_matrix_cross_product.cpp</innerfile>
    <innerfile refid="gtx__matrix__decompose_8cpp">gtx_matrix_decompose.cpp</innerfile>
    <innerfile refid="gtx__matrix__factorisation_8cpp">gtx_matrix_factorisation.cpp</innerfile>
    <innerfile refid="gtx__matrix__interpolation_8cpp">gtx_matrix_interpolation.cpp</innerfile>
    <innerfile refid="gtx__matrix__major__storage_8cpp">gtx_matrix_major_storage.cpp</innerfile>
    <innerfile refid="gtx__matrix__operation_8cpp">gtx_matrix_operation.cpp</innerfile>
    <innerfile refid="gtx__matrix__query_8cpp">gtx_matrix_query.cpp</innerfile>
    <innerfile refid="gtx__matrix__transform__2d_8cpp">gtx_matrix_transform_2d.cpp</innerfile>
    <innerfile refid="gtx__mixed__product_8cpp">gtx_mixed_product.cpp</innerfile>
    <innerfile refid="gtx__norm_8cpp">gtx_norm.cpp</innerfile>
    <innerfile refid="gtx__normal_8cpp">gtx_normal.cpp</innerfile>
    <innerfile refid="gtx__normalize__dot_8cpp">gtx_normalize_dot.cpp</innerfile>
    <innerfile refid="gtx__number__precision_8cpp">gtx_number_precision.cpp</innerfile>
    <innerfile refid="gtx__optimum__pow_8cpp">gtx_optimum_pow.cpp</innerfile>
    <innerfile refid="gtx__orthonormalize_8cpp">gtx_orthonormalize.cpp</innerfile>
    <innerfile refid="gtx__perpendicular_8cpp">gtx_perpendicular.cpp</innerfile>
    <innerfile refid="gtx__polar__coordinates_8cpp">gtx_polar_coordinates.cpp</innerfile>
    <innerfile refid="gtx__projection_8cpp">gtx_projection.cpp</innerfile>
    <innerfile refid="gtx__quaternion_8cpp">gtx_quaternion.cpp</innerfile>
    <innerfile refid="gtx__random_8cpp">gtx_random.cpp</innerfile>
    <innerfile refid="gtx__range_8cpp">gtx_range.cpp</innerfile>
    <innerfile refid="gtx__rotate__normalized__axis_8cpp">gtx_rotate_normalized_axis.cpp</innerfile>
    <innerfile refid="gtx__rotate__vector_8cpp">gtx_rotate_vector.cpp</innerfile>
    <innerfile refid="gtx__scalar__multiplication_8cpp">gtx_scalar_multiplication.cpp</innerfile>
    <innerfile refid="gtx__scalar__relational_8cpp">gtx_scalar_relational.cpp</innerfile>
    <innerfile refid="gtx__simd__mat4_8cpp">gtx_simd_mat4.cpp</innerfile>
    <innerfile refid="gtx__simd__vec4_8cpp">gtx_simd_vec4.cpp</innerfile>
    <innerfile refid="gtx__spline_8cpp">gtx_spline.cpp</innerfile>
    <innerfile refid="gtx__string__cast_8cpp">gtx_string_cast.cpp</innerfile>
    <innerfile refid="gtx__texture_8cpp">gtx_texture.cpp</innerfile>
    <innerfile refid="gtx__type__aligned_8cpp">gtx_type_aligned.cpp</innerfile>
    <innerfile refid="gtx__type__trait_8cpp">gtx_type_trait.cpp</innerfile>
    <innerfile refid="gtx__vec__swizzle_8cpp">gtx_vec_swizzle.cpp</innerfile>
    <innerfile refid="gtx__vector__angle_8cpp">gtx_vector_angle.cpp</innerfile>
    <innerfile refid="gtx__vector__query_8cpp">gtx_vector_query.cpp</innerfile>
    <innerfile refid="gtx__wrap_8cpp">gtx_wrap.cpp</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/"/>
  </compounddef>
</doxygen>
