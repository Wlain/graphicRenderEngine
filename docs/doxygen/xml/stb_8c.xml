<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stb_8c" kind="file" language="C++">
    <compoundname>stb.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="stb_8h" local="yes">stb.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stb.h</label>
        <link refid="stb_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c</label>
        <link refid="stb_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structstruct1" prot="public">struct1</innerclass>
    <innerclass refid="structstruct2" prot="public">struct2</innerclass>
    <innerclass refid="struct_btest" prot="public">Btest</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="stb_8c_1af08ec37a8c99d747fb60fa15bc28678b" prot="public" static="no">
        <name>_CRT_SECURE_NO_WARNINGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="5" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1a27a83e7391798e636aaa87ae2f375fa5" prot="public" static="no">
        <name>STB_NPTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="22" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1a5640e9acc84db268e2628d4c5dad308c" prot="public" static="no">
        <name>STB_DEFINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="24" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1a96b72bd5a78b62209549d4c6ad8787c6" prot="public" static="no">
        <name>STR_x</name>
        <initializer>&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="389" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1a530d8f9bc78bab6418a0398300e20acf" prot="public" static="no">
        <name>STR_y</name>
        <initializer>&quot;yyyyyyyyyyyyyyyyyy&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="390" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1aa2c34b104b8e2618928620d9a86a8630" prot="public" static="no">
        <name>STR_xy</name>
        <initializer>STR_x STR_y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="392" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1a9c1a8654d8dbadb58709bdf16b699ce6" prot="public" static="no">
        <name>STR_xyyxy</name>
        <initializer>STR_xy STR_y STR_xy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="393" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1a508a89a6910532df0084ef4d3371e67c" prot="public" static="no">
        <name>STR_1</name>
        <initializer>&quot;testing&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="395" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1a1b68f3549385f3ed08aad91b0fe65e49" prot="public" static="no">
        <name>STR_2</name>
        <initializer>STR_xyyxy STR_xy STR_xyyxy STR_xyyxy STR_xy STR_xyyxy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="396" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb_8c_1aff58290b520a57822fde5326b9b715b2" prot="public" static="no">
        <name>STR_3</name>
        <initializer>&quot;buh&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="397" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="397" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stb_8c_1a52efe50cc32a78f7412d81132cb2e652" prot="public" static="no">
        <type>struct <ref refid="struct_btest" kindref="compound">Btest</ref></type>
        <definition>typedef struct Btest Btest</definition>
        <argsstring></argsstring>
        <name>Btest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="484" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stb_8c_1ad43c3812e6d13e0518d9f8b8f463ffcf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="39" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a88f407ae24da2ae54e9f1a0d5717e600" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char tc[]</definition>
        <argsstring>[]</argsstring>
        <name>tc</name>
        <initializer>= &quot;testing compression test quick test voila woohoo what the hell&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="358" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a89dea239728b7a1dbb1e9848e9bc5c68" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char storage1[1&lt;&lt; 23]</definition>
        <argsstring>[1&lt;&lt; 23]</argsstring>
        <name>storage1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="360" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a70a830d3039f37216dde9bcf2460aec2" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char buffer[]</definition>
        <argsstring>[]</argsstring>
        <name>buffer</name>
        <initializer>= STR_1 &quot;\r\n&quot; STR_2 STR_2 STR_2 &quot;\n&quot; STR_3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="399" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1aad4ec0bc0d0fa1bb47026a76d47b3a6b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char str1[]</definition>
        <argsstring>[]</argsstring>
        <name>str1</name>
        <initializer>= STR_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="400" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a227dbe091214b7717e1737290669f8cf" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char str2[]</definition>
        <argsstring>[]</argsstring>
        <name>str2</name>
        <initializer>= STR_2 STR_2 STR_2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="401" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a4676fbe778abd197cc1e1dc88d55f61c" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char str3[]</definition>
        <argsstring>[]</argsstring>
        <name>str3</name>
        <initializer>= STR_3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="402" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1ad163580a169a96545a53790c692d5902" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int sample_test[3][5]</definition>
        <argsstring>[3][5]</argsstring>
        <name>sample_test</name>
        <initializer>=
{
   { 1,2,3,4,5 },
   { 6,7,8,9,10, },
   { 11,12,13,14,15 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="425" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1ac45ff68dacf082872e75e4959b23dcd0" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* args_raw[]</definition>
        <argsstring>[]</argsstring>
        <name>args_raw</name>
        <initializer>= { &quot;foo&quot;, &quot;-dxrf&quot;, &quot;bar&quot;, &quot;-ts&quot; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="435" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1aa45b6cbf8b26f4ce33ac4757f2e7b5d9" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* args[8]</definition>
        <argsstring>[8]</argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="436" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a2fa971437629792fe4f58dd1f9424c52" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int alloc_num</definition>
        <argsstring></argsstring>
        <name>alloc_num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="441" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a43ab546b0fdc85de9d25d62dc4564e62" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int alloc_size</definition>
        <argsstring></argsstring>
        <name>alloc_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="441" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a9f59b34b1f25fe00023291b678246bcc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="1578" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="1578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1a0b2e8c7f76df48129f994ecc46d5c66c" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* message</definition>
        <argsstring></argsstring>
        <name>message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="1579" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="1579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1ab00750ddec0fbf9b0fb31185b520a740" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* digest</definition>
        <argsstring></argsstring>
        <name>digest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="1580" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="1580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stb_8c_1ae10816c12d25b503484d807b3a1078ca" prot="public" static="no" mutable="no">
        <type>struct @144</type>
        <definition>struct @144 sha1_tests[]</definition>
        <argsstring>[]</argsstring>
        <name>sha1_tests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="2154" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stb_8c_1a0ccacb6181bdb267fa9a7823f966c899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void c</definition>
        <argsstring>(int truth, char *error)</argsstring>
        <name>c</name>
        <param>
          <type>int</type>
          <declname>truth</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="40" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a421dc35aca081702a3052113d5fd0396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_classes</definition>
        <argsstring>(void)</argsstring>
        <name>test_classes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="60" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="60" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a84e0ee21acecd261bf984aa1a7c7d2c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_threads</definition>
        <argsstring>(void)</argsstring>
        <name>test_threads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="288" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a942538a68b137e89a4ea2ef8ec55ddd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * thread4</definition>
        <argsstring>(void *p)</argsstring>
        <name>thread4</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="293" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a0c447b59692c59ff6bd32822b40f2bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_threads2</definition>
        <argsstring>(void)</argsstring>
        <name>test_threads2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="353" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a7629539182b99b1cb0ed9194255880ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_compression</definition>
        <argsstring>(unsigned char *buffer, int length)</argsstring>
        <name>test_compression</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="361" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="361" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a433dba71804fa2ff4731ce2af71d8da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sum</definition>
        <argsstring>(short *s)</argsstring>
        <name>sum</name>
        <param>
          <type>short *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="404" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="404" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a0d4786aefcc8082f6416e873d32d5ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>stb_uint</type>
        <definition>stb_uint stb_adler32_old</definition>
        <argsstring>(stb_uint adler32, stb_uchar *buffer, stb_uint buflen)</argsstring>
        <name>stb_adler32_old</name>
        <param>
          <type>stb_uint</type>
          <declname>adler32</declname>
        </param>
        <param>
          <type>stb_uchar *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>stb_uint</type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="412" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="412" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1aafd5c0e682e6ca29d3e71fcfaabf6cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void do_compressor</definition>
        <argsstring>(int, char **)</argsstring>
        <name>do_compressor</name>
        <param>
          <type>int</type>
          <defname>argc</defname>
        </param>
        <param>
          <type>char **</type>
          <defname>argv</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="2258" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="2258" bodyend="2306" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" declline="438" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a400d88fc0a336028a8c00a71ab6d279d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sha1</definition>
        <argsstring>(void)</argsstring>
        <name>test_sha1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="2156" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="2156" bodyend="2199" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" declline="439" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a38ae9e7326e4f6dd44eeaa8f592cbf9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dumpfunc</definition>
        <argsstring>(void *ptr, int sz, char *file, int line)</argsstring>
        <name>dumpfunc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="442" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="442" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1ad12979f424b166ebed1b7a27e886a916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * expects</definition>
        <argsstring>(stb_matcher *m, char *s, int result, int len, char *str)</argsstring>
        <name>expects</name>
        <param>
          <type>stb_matcher *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="449" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="449" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a2b359e8a6d55502a515bcdda622c6a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lex</definition>
        <argsstring>(void)</argsstring>
        <name>test_lex</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="457" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="457" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1abedcd489bcfa107ded58d3c52502f08c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stb_bst</definition>
        <argsstring>(Btest, btest_, BT2, bt2, v, int, a - b) void bst_test(void)</argsstring>
        <name>stb_bst</name>
        <param>
          <type><ref refid="struct_btest" kindref="compound">Btest</ref></type>
        </param>
        <param>
          <type>btest_</type>
        </param>
        <param>
          <type>BT2</type>
        </param>
        <param>
          <type>bt2</type>
        </param>
        <param>
          <type>v</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>a -</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="486" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="486" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a039f409b5cad0ed4071be0b1f0b83526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stu_uninit</definition>
        <argsstring>(void)</argsstring>
        <name>stu_uninit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="558" column="13" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" declline="558" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="stb_8c_1a27c75387a05501eddafb1ea63ad0dfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stb_define_sort</definition>
        <argsstring>(sort_int, int)</argsstring>
        <name>stb_define_sort</name>
        <param>
          <type>sort_int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" line="560" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c" bodystart="560" bodyend="574"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Unit<sp/>tests<sp/>for<sp/>&quot;stb.h&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;crtdbg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STB_FASTMALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_MALLOC_WRAPPER_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_M_AMD64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_NPTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;stb_file.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;stb_pixel32.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUG_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;conio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_FASTMALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;can&apos;t<sp/>use<sp/>FASTMALLOC<sp/>with<sp/>threads&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>truth,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!truth)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>error);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>show(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>SYSTEM_INFO<sp/>x;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>GetSystemInfo(&amp;x);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>x.dwPageSize);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_classes(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>size_base[32],<sp/>size_shift[32];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_to_pages[256];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_to_size[256],<sp/>cl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lg,<sp/>size,<sp/>wasted_pages;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kAlignShift<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kAlignment<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>kAlignShift;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMaxSize<sp/>=<sp/>8<sp/>*<sp/>4096;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kPageShift<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kPageSize<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>kPageShift);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_class<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alignshift<sp/>=<sp/>kAlignShift;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_lg<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lg<sp/>=<sp/>0;<sp/>lg<sp/>&lt;<sp/>kAlignShift;<sp/>lg++)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>size_base[lg]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>size_shift[lg]<sp/>=<sp/>kAlignShift;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(size<sp/>=<sp/>kAlignment;<sp/>size<sp/>&lt;=<sp/>kMaxSize;<sp/>size<sp/>+=<sp/>(1<sp/>&lt;&lt;<sp/>alignshift))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lg<sp/>=<sp/>stb_log2_floor(size);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lg<sp/>&gt;<sp/>last_lg)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>alignment<sp/>every<sp/>so<sp/>often.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>double<sp/>the<sp/>alignment<sp/>every<sp/>time<sp/>size<sp/>doubles<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>&gt;=<sp/>128,<sp/>this<sp/>means<sp/>that<sp/>space<sp/>wasted<sp/>due<sp/>to<sp/>alignment<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>most<sp/>16/128<sp/>i.e.,<sp/>12.5%.<sp/><sp/>Plus<sp/>we<sp/>cap<sp/>the<sp/>alignment<sp/>at<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bytes,<sp/>so<sp/>the<sp/>space<sp/>wasted<sp/>as<sp/>a<sp/>percentage<sp/>starts<sp/>falling<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sizes<sp/>&gt;<sp/>2K.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lg<sp/>&gt;=<sp/>7)<sp/>&amp;&amp;<sp/>(alignshift<sp/>&lt;<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alignshift++;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_base[lg]<sp/>=<sp/>next_class<sp/>-<sp/>((size-1)<sp/>&gt;&gt;<sp/>alignshift);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_shift[lg]<sp/>=<sp/>alignshift;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>class_to_size[next_class]<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>last_lg<sp/>=<sp/>lg;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>next_class++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>number<sp/>of<sp/>pages<sp/>we<sp/>should<sp/>allocate<sp/>to<sp/>split<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>small<sp/>objects<sp/>for<sp/>a<sp/>given<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>wasted_pages<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cl<sp/>=<sp/>1;<sp/>cl<sp/>&lt;<sp/>next_class;<sp/>cl++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>enough<sp/>pages<sp/>so<sp/>leftover<sp/>is<sp/>less<sp/>than<sp/>1/8<sp/>of<sp/>total.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>bounds<sp/>wasted<sp/>space<sp/>to<sp/>at<sp/>most<sp/>12.5%.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>psize<sp/>=<sp/>kPageSize;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>class_to_size[cl];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((psize<sp/>%<sp/>s)<sp/>&gt;<sp/>(psize<sp/>&gt;&gt;<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>psize<sp/>+=<sp/>kPageSize;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>class_to_pages[cl]<sp/>=<sp/>(int)<sp/>(psize<sp/>&gt;&gt;<sp/>kPageShift);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>wasted_pages<sp/>+=<sp/>(int)<sp/>psize;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TCMalloc<sp/>can<sp/>waste<sp/>as<sp/>much<sp/>as<sp/>%d<sp/>memory<sp/>on<sp/>one-shot<sp/>allocations\n&quot;</highlight><highlight class="normal">,<sp/>wasted_pages);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_STUA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_script(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>stua_run_script(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>g<sp/>=<sp/>(2+3)*5<sp/>+<sp/>3*(2+1)<sp/>+<sp/>((7));<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;func<sp/>sprint(x)<sp/>_print(x)<sp/>_print(&apos;<sp/>&apos;)<sp/>x<sp/>end;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;func<sp/>foo(y)<sp/>var<sp/>q<sp/>=<sp/>func(x)<sp/>sprint(x)<sp/>end;<sp/>q<sp/>end;\n<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>z=foo(5);<sp/>z(77);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;func<sp/>counter(z)<sp/>func(x)<sp/>z=z+1<sp/>end<sp/>end\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>q=counter(0),<sp/>p=counter(5);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sprint(q())<sp/>sprint(p())<sp/>sprint(q())<sp/>sprint(p())<sp/>sprint(q())<sp/>sprint(p())\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x=2222;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;if<sp/>1<sp/>==<sp/>2<sp/>then<sp/>3333<sp/>else<sp/>4444<sp/>end;<sp/>=&gt;<sp/>x;<sp/>sprint(x);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x1<sp/>=<sp/>sprint(1.5e3);<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x2<sp/>=<sp/>sprint(.5);<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x3<sp/>=<sp/>sprint(1.);<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x4<sp/>=<sp/>sprint(1.e3);<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x5<sp/>=<sp/>sprint(1e3);<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x6<sp/>=<sp/>sprint(0.5e3);<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/>x7<sp/>=<sp/>sprint(.5e3);<sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>func<sp/>sum(x,y)<sp/>x+y<sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>func<sp/>sumfunc(a)<sp/>sum+{x=a}<sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>var<sp/>q<sp/>=<sp/>sumfunc(3)<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>var<sp/>p<sp/>=<sp/>sumfunc(20)<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>var<sp/>d<sp/>=<sp/>sprint(q(5))<sp/>-<sp/>sprint(q(8))<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>var<sp/>e<sp/>=<sp/>sprint(p(5))<sp/>-<sp/>sprint(p(8))<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>func<sp/>test3(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>sprint(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>x<sp/>=<sp/>x+3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>sprint(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>x+5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>var<sp/>y<sp/>=<sp/>test3(4);<sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>func<sp/>fib(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>if<sp/>x<sp/>&lt;<sp/>3<sp/>then<sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>fib(x-1)<sp/>+<sp/>fib(x-2);<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>func<sp/>fib2(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>var<sp/>a=1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>var<sp/>b=1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>sprint(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>sprint(b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>while<sp/>x<sp/>&gt;<sp/>2<sp/>do<sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>c=a+b<sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprint(b)<sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=x-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>func<sp/>assign(z)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>var<sp/>y<sp/>=<sp/>{<sp/>&apos;this&apos;,<sp/>&apos;is&apos;,<sp/>&apos;a&apos;,<sp/>&apos;lame&apos;,<sp/>&apos;day&apos;,<sp/>&apos;to&apos;,<sp/>&apos;die&apos;}<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>y[3]<sp/>=<sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>var<sp/>i<sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>while<sp/>y[i]<sp/>!=<sp/>nil<sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprint(y[i])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>sprint(fib(12));<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>assign(\&quot;good\&quot;);<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>fib2(20);<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>sprint(&apos;ok&apos;);<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>sprint(-5);<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>//<sp/>final<sp/>comment<sp/>with<sp/>no<sp/>newline&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_THREADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__stdcall<sp/>Sleep(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>thread_1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>Sleep(80);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;thread<sp/>1\n&quot;</highlight><highlight class="normal">);<sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>2;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>thread_2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*y)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_1,<sp/>NULL,<sp/>y);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>Sleep(50);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;thread<sp/>2\n&quot;</highlight><highlight class="normal">);<sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>3;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">stb_semaphore<sp/>stest;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">stb_mutex<sp/>mutex;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tc1,<sp/>tc2;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_3(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>stb_mutex_begin(mutex);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>++tc1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>stb_mutex_end(mutex);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>stb_sem_waitfor(stest);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>stb_mutex_begin(mutex);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>++tc2;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>stb_mutex_end(mutex);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_threads(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a=0,b=0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stb_work_numthreads(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_2,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;a,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;b);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(a==0<sp/>||<sp/>b==0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;a=%d<sp/>b=%d\n&quot;,<sp/>a,<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>c(a==2<sp/>&amp;&amp;<sp/>b<sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;stb_thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>stb_work_numthreads(4);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>stest<sp/>=<sp/>stb_sem_new(8);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>mutex<sp/>=<sp/>stb_mutex_new();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tc1<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>c(tc1<sp/>==<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;stb_work<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>Sleep(40);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tc1<sp/>!=<sp/>8<sp/>||<sp/>tc2<sp/>!=<sp/>8)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>c(tc1<sp/>==<sp/>8<sp/>&amp;&amp;<sp/>tc2<sp/>==<sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;stb_work<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>stb_work_numthreads(2);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>stb_work(thread_3,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tc1<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>c(tc1<sp/>==<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;stb_work<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>stb_sem_release(stest);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>stb_sem_delete(stest);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>stb_mutex_delete(mutex);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_threads(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread4(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_THREADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">stb_threadqueue<sp/>*tq;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">stb_sync<sp/>synch;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">stb_mutex<sp/>msum;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_sum;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*consume1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>p;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_threadq_get_block(tq,<sp/>&amp;z);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_mutex_begin(msum);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thread_sum<sp/>+=<sp/>z;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>+=<sp/>z;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_mutex_end(msum);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_sync_reach(synch);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_threads2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array[256],i,n=0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which[4];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>synch<sp/>=<sp/>stb_sync_new();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>stb_sync_set_target(synch,2);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>stb_work_reach(thread4,<sp/>NULL,<sp/>NULL,<sp/>synch);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>stb_sync_reach_and_wait(synch);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ok\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>tq<sp/>=<sp/>stb_threadq_new(4,<sp/>1,<sp/>TRUE,TRUE);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>msum<sp/>=<sp/>stb_mutex_new();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>thread_sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>stb_sync_set_target(synch,<sp/>65);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>which[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_create_thread(consume1,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>&amp;which[i]);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;=<sp/>64;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>i;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_threadq_add_block(tq,<sp/>&amp;array[i]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>stb_sync_reach_and_wait(synch);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>stb_barrier();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>c(thread_sum<sp/>==<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;stb_threadq<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>c(which[0]<sp/>+<sp/>which[1]<sp/>+<sp/>which[2]<sp/>+<sp/>which[3]<sp/>==<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;stb_threadq<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;(Distribution:<sp/>%d<sp/>%d<sp/>%d<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>which[0],<sp/>which[1],<sp/>which[2],<sp/>which[3]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>stb_sync_delete(synch);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>stb_threadq_delete(tq);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>stb_mutex_delete(msum);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_threads2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tc[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;testing<sp/>compression<sp/>test<sp/>quick<sp/>test<sp/>voila<sp/>woohoo<sp/>what<sp/>the<sp/>hell&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>storage1[1<sp/>&lt;&lt;<sp/>23];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_compression(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*storage2;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_len<sp/>=<sp/>stb_compress(storage1,<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>length);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dc_len;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Compressed<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>length,<sp/>c_len);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/>dc_len<sp/>=<sp/>stb_decompress_length(storage1);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>storage2<sp/>=<sp/>malloc(dc_len);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>dc_len<sp/>=<sp/>stb_decompress(storage2,<sp/>storage1,<sp/>c_len);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc_len<sp/>!=<sp/>length)<sp/>{<sp/>free(storage2);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>storage2,<sp/>length)<sp/>!=<sp/>0)<sp/>{<sp/>free(storage2);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>free(storage2);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_len;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_en_compression(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_len<sp/>=<sp/>stb_en_compress(storage1,<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>length);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dc_len;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Encompressed<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>length,<sp/>c_len);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>dc_len<sp/>=<sp/>stb_en_decompress(storage2,<sp/>storage1,<sp/>c_len);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc_len<sp/>!=<sp/>length)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>storage2,<sp/>length)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_len;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_x<sp/>&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_y<sp/>&quot;yyyyyyyyyyyyyyyyyy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_xy<sp/>STR_x<sp/>STR_y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_xyyxy<sp/>STR_xy<sp/>STR_y<sp/>STR_xy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_1<sp/>&quot;testing&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_2<sp/>STR_xyyxy<sp/>STR_xy<sp/>STR_xyyxy<sp/>STR_xyyxy<sp/>STR_xy<sp/>STR_xyyxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR_3<sp/>&quot;buh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[]<sp/>=<sp/>STR_1<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal"><sp/>STR_2<sp/>STR_2<sp/>STR_2<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>STR_3;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str1[]<sp/>=<sp/>STR_1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str2[]<sp/>=<sp/>STR_2<sp/>STR_2<sp/>STR_2;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str3[]<sp/>=<sp/>STR_3;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sum(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,total=0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(s);<sp/>++i)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>s[i];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">stb_uint<sp/>stb_adler32_old(stb_uint<sp/>adler32,<sp/>stb_uchar<sp/>*<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>stb_uint<sp/>buflen)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stb_uint<sp/>ADLER_MOD<sp/>=<sp/>65521;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>stb_uint<sp/>s1<sp/>=<sp/>adler32<sp/>&amp;<sp/>0xffff;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>stb_uint<sp/>s2<sp/>=<sp/>adler32<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buflen--<sp/>&gt;<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>much<sp/>faster<sp/>implementations<sp/>are<sp/>possible!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>*<ref refid="classbuffer" kindref="compound">buffer</ref>++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>&gt;<sp/>ADLER_MOD)<sp/>s1<sp/>-=<sp/>ADLER_MOD;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>+=<sp/>s1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/>&gt;<sp/>ADLER_MOD)<sp/>s2<sp/>-=<sp/>ADLER_MOD;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(s2<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>s1;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_test[3][5]<sp/>=</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>{<sp/>1,2,3,4,5<sp/>},</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>{<sp/>6,7,8,9,10,<sp/>},</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>{<sp/>11,12,13,14,15<sp/>},</highlight></codeline>
<codeline lineno="430"><highlight class="normal">};</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="structstruct1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>x,y,z;<sp/>}<sp/><ref refid="structstruct1" kindref="compound">struct1</ref>;</highlight></codeline>
<codeline lineno="433" refid="structstruct2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y,z;<sp/>}<sp/><ref refid="structstruct2" kindref="compound">struct2</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args_raw[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-dxrf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-ts&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args[8];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_compressor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_sha1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alloc_num,<sp/>alloc_size;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dumpfunc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%p<sp/>(%6d)<sp/><sp/>--<sp/>%3d:%s\n&quot;</highlight><highlight class="normal">,<sp/>ptr,<sp/>sz,<sp/>line,<sp/>file);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>alloc_size<sp/>+=<sp/>sz;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>alloc_num<sp/><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expects(stb_matcher<sp/>*m,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res2,len2=0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/>stb_lex(m,<sp/>s,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>c(<ref refid="structresult" kindref="compound">result</ref><sp/>==<sp/>res2<sp/>&amp;&amp;<sp/>len<sp/>==<sp/>len2,<sp/>str);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_lex(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>stb_matcher<sp/>*m<sp/>=<sp/>stb_lex_matcher();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok_en5<sp/>.3<sp/>20.1<sp/>20.<sp/>.20<sp/>.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tok_en5.3<sp/>20.1<sp/>20.<sp/>.20.1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>stb_lex_item(m,<sp/></highlight><highlight class="stringliteral">&quot;[a-zA-Z_][a-zA-Z0-9_]*&quot;</highlight><highlight class="normal">,<sp/>1<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/>stb_lex_item(m,<sp/></highlight><highlight class="stringliteral">&quot;[0-9]*\\.?[0-9]*&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>2<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/>stb_lex_item(m,<sp/></highlight><highlight class="stringliteral">&quot;[\r\n\t<sp/>]+&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>3<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>stb_lex_item(m,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>-99<sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,1,7,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,2,2,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,3,1,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,2,4,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,3,1,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,2,3,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,3,1,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,2,3,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,2,2,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>s=expects(m,s,0,0,<sp/></highlight><highlight class="stringliteral">&quot;stb_lex<sp/>10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>stb_matcher_free(m);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="struct_btest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_btest" kindref="compound">Btest</ref></highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_btest" kindref="compound">Btest</ref><sp/>stb_bst_fields(btest_);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}<sp/><ref refid="struct_btest" kindref="compound">Btest</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">stb_bst(<ref refid="struct_btest" kindref="compound">Btest</ref>,<sp/>btest_,<sp/>BT2,bt2,v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>a<sp/>-<sp/>b)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bst_test(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_btest" kindref="compound">Btest</ref><sp/>*root<sp/>=<sp/>NULL,<sp/>*t;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items[500],<sp/>sorted[500];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,z;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=0;<sp/>z<sp/>&lt;<sp/>10;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>500;<sp/>++i)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items[i]<sp/>=<sp/>stb_rand()<sp/>&amp;<sp/>0xfffffff;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>collisions,<sp/>and<sp/>retrry<sp/>if<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(sorted,<sp/>items,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sorted));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qsort(sorted,<sp/>500,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sorted[0]),<sp/>stb_intcmp(0));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>500;<sp/>++i)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sorted[i-1]<sp/>==<sp/>sorted[i])</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>500)<sp/>{<sp/>--z;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>500;<sp/>++i)<sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*t));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;v<sp/>=<sp/>items[i];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/>btest_insert(root,<sp/>t);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STB_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btest__validate(root,1);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;=<sp/>i;<sp/>++j)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(btest_find(root,<sp/>items[j])<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_bst<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/>;<sp/>j<sp/>&lt;<sp/>500;<sp/>++j)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(btest_find(root,<sp/>items[j])<sp/>==<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_bst<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>btest_first(root);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>500;<sp/>++i)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>btest_next(root,t);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(t<sp/>==<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_bst<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>btest_last(root);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>500;<sp/>++i)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>btest_prev(root,t);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(t<sp/>==<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_bst<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(sorted,<sp/>items,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sorted));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qsort(sorted,<sp/>500,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sorted[0]),<sp/>stb_intcmp(0));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>btest_first(root);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>500;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(t-&gt;v<sp/>==<sp/>sorted[i]);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>btest_next(root,<sp/>t);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(t<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z==1)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_reverse(items,<sp/>500,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(items[0]));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_shuffle(items,<sp/>500,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(items[0]),<sp/>stb_rand());</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>500;<sp/>++i)<sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>btest_find(root,<sp/>items[i]);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(t<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/>btest_remove(root,<sp/>t);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(btest_find(root,<sp/>items[i])<sp/>==<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_bst<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STB_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btest__validate(root,<sp/>1);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;=<sp/>i;<sp/>++j)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(btest_find(root,<sp/>items[j])<sp/>==<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_bst<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/>;<sp/>j<sp/>&lt;<sp/>500;<sp/>++j)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(btest_find(root,<sp/>items[j])<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_bst<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(t);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stu_uninit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">stb_define_sort(sort_int,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>*a<sp/>&lt;<sp/>*b)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal">stb_rand_define(prime_rand,<sp/>1)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">void<sp/>test_packed_floats(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_parser_generator(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rec_print(<ref refid="structstb__dirtree2" kindref="compound">stb_dirtree2</ref><sp/>*d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>depth;<sp/>++i)<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>d-&gt;relpath,<sp/>stb_arr_len(d-&gt;files));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(d-&gt;subdirs);<sp/>++i)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rec_print(d-&gt;subdirs[i],<sp/>depth+1);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/>d-&gt;weight<sp/>=<sp/>(float)<sp/>stb_arr_len(d-&gt;files);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAIN_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*z;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/>stb__wchar<sp/>buffer7[1024],buffer9[1024];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer8[4096];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*f;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo/bar\\baz/test.xyz&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo/.bar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p3<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo.bar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p4<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo/bar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wildcards[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;*foo*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*1*2*3*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*/CVS/repository&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*oof*&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**s;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256],<sp/>*p;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,len2,*q,i;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/>stb_matcher<sp/>*mt=NULL;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>do_compressor(argc,argv);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/>test_classes();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//show();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stb_malloc_check_counter(2,2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//_CrtSetBreakAlloc(10398);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/>stbprint(</highlight><highlight class="stringliteral">&quot;Checking<sp/>{!if}<sp/>the<sp/>{$fancy}<sp/>print<sp/>function<sp/>{#works}?<sp/><sp/>-<sp/>should\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/>stbprint(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>align\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/>stbprint(</highlight><highlight class="stringliteral">&quot;But<sp/>{#3this}}<sp/>{one}}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>shouldn&apos;t\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**s<sp/>=<sp/>stb_readdir_recursive(</highlight><highlight class="stringliteral">&quot;/sean&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_dirtree<sp/>*d<sp/>=<sp/>stb_dirtree_from_files_relative(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>stb_arr_len(s));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_dirtree<sp/>**<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rec_print(d,<sp/>0);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref><sp/>=<sp/>stb_summarize_tree(d,12,4);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>[i]-&gt;fullpath);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_free(<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/>stb_(</highlight><highlight class="stringliteral">&quot;Started<sp/>stb.c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/>test_threads2();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/>test_threads();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>1023<sp/>&amp;&amp;<sp/>5+77*i<sp/>&lt;<sp/>0xd800;<sp/>++i)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer7[i]<sp/>=<sp/>5+77*i;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/>buffer7[i++]<sp/>=<sp/>0xd801;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>buffer7[i++]<sp/>=<sp/>0xdc02;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/>buffer7[i++]<sp/>=<sp/>0xdbff;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/>buffer7[i++]<sp/>=<sp/>0xdfff;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>buffer7[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_to_utf8(buffer8,<sp/>buffer7,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer8));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/>c(p<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_to_utf8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_from_utf8(buffer9,<sp/>buffer8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer9)/2);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(!memcmp(buffer7,<sp/>buffer9,<sp/>i*2),<sp/></highlight><highlight class="stringliteral">&quot;stb_from_utf8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/>z<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo.*[bd]ak?r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_regex(z,<sp/></highlight><highlight class="stringliteral">&quot;muggle<sp/>man<sp/>food<sp/>is<sp/>barfy&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_regex<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_regex(</highlight><highlight class="stringliteral">&quot;foo.*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;muggle<sp/>man<sp/>food<sp/>is<sp/>farfy&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_regex<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_regex(</highlight><highlight class="stringliteral">&quot;[^a-zA-Z]foo[^a-zA-Z]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dfoobar<sp/>xfood&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_regex<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_regex(z,<sp/></highlight><highlight class="stringliteral">&quot;muman<sp/>foob<sp/>is<sp/>bakrfy&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_regex<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/>z<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo.*[bd]bk?r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_regex(z,<sp/></highlight><highlight class="stringliteral">&quot;muman<sp/>foob<sp/>is<sp/>bakrfy&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_regex<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_regex(z,<sp/></highlight><highlight class="stringliteral">&quot;muman<sp/>foob<sp/>is<sp/>bbkrfy&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_regex<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/>stb_regex(NULL,NULL);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/>test_parser_generator();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/>stb_wrapper_listall(dumpfunc);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alloc_num)<sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Memory<sp/>still<sp/>in<sp/>use:<sp/>%d<sp/>allocations<sp/>of<sp/>%d<sp/>bytes.\n&quot;</highlight><highlight class="normal">,<sp/>alloc_num,<sp/>alloc_size);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/>test_script();</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;sieve.stua&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stua_run_script(p);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/>stua_uninit();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stb_wrapper_listall(dumpfunc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Memory<sp/>still<sp/>in<sp/>use:<sp/>%d<sp/>allocations<sp/>of<sp/>%d<sp/>bytes.\n&quot;</highlight><highlight class="normal">,<sp/>alloc_num,<sp/>alloc_size);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/>c(stb_alloc_count_alloc<sp/>==<sp/>stb_alloc_count_free,<sp/></highlight><highlight class="stringliteral">&quot;stb_alloc<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>bst_test();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>c(stb_alloc_count_alloc<sp/>==<sp/>stb_alloc_count_free,<sp/></highlight><highlight class="stringliteral">&quot;stb_alloc<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stb_block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inuse=0,<sp/>freespace=0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x<sp/>=<sp/>malloc(10000*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*x));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_block<sp/>*b<sp/>=<sp/>stb_block_new(1,<sp/>10000);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>BLOCK_COUNT<sp/><sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p)<sp/>*<sp/>BLOCK_COUNT);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*l<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*l)<sp/>*<sp/>BLOCK_COUNT);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>n,<sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(x,<sp/>0,<sp/>10000<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*x));</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>BLOCK_COUNT<sp/>&amp;&amp;<sp/>k<sp/>&lt;<sp/>1000)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[n]<sp/>=<sp/>16<sp/>+<sp/>(rand()<sp/>&amp;<sp/>31);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[n]<sp/>=<sp/>stb_block_alloc(b,<sp/>l[n],<sp/>0);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p[n]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inuse<sp/>+=<sp/>l[n];</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freespace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>b-&gt;len;<sp/>++i)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freespace<sp/>+=<sp/>b-&gt;freelist[i].len;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(freespace<sp/>+<sp/>inuse<sp/>==<sp/>9999);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>l[n];<sp/>++i)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[<sp/>p[n]+i<sp/>]<sp/>=<sp/>p[n];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>(stb_rand()<sp/>%<sp/>n);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>l[i];</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_block_free(b,<sp/>p[i],<sp/>sz);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inuse<sp/>-=<sp/>sz;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>p[n-1];</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[i]<sp/>=<sp/>l[n-1];</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freespace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>b-&gt;len;<sp/>++i)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freespace<sp/>+=<sp/>b-&gt;freelist[i].len;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(freespace<sp/>+<sp/>inuse<sp/>==<sp/>9999);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((k<sp/>%<sp/>50)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>n;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>l[j];<sp/>++i)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(x[<sp/>p[j]+i<sp/>]<sp/>==<sp/>p[j]);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((k<sp/>%<sp/>200)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_block_compact_freelist(b);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_block_free(b,<sp/>p[i],<sp/>l[i]);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_block_destroy(b);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(l);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(x);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/>blockfile_test();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_lex_matcher();</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_lex_item_wild(mt,<sp/>wildcards[i],<sp/>i+1);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/>c(1==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>is<sp/>a<sp/>foo<sp/>in<sp/>the<sp/>middle&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/>c(0==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>is<sp/>a<sp/>bar<sp/>in<sp/>the<sp/>middle&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/>c(0==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>is<sp/>a<sp/>baz<sp/>in<sp/>the<sp/>middle&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/>c(2==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>is<sp/>a<sp/>bar&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/>c(0==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>is<sp/>a<sp/>baz&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>c(3==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/>c(4==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;1_2_3_4&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/>c(0==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/><sp/>3<sp/><sp/>3<sp/>3<sp/>3<sp/><sp/>2<sp/>&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/>c(4==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/><sp/>3<sp/><sp/>3<sp/>3<sp/>2<sp/><sp/>3<sp/>&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/>c(5==stb_lex(mt,<sp/></highlight><highlight class="stringliteral">&quot;C:/sean/prj/old/gdmag/mipmap/hqp/adol-c/CVS/Repository&quot;</highlight><highlight class="normal">,NULL),<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/>stb_matcher_free(mt);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>SSIZE<sp/><sp/>500000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arr[SSIZE],arr2[SSIZE];</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,good;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>SSIZE;<sp/>++i)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr2[i]<sp/>=<sp/>stb_rand();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(arr,arr2,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;stb_define_sort:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sort_int(arr,<sp/>SSIZE);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i+1<sp/>&lt;<sp/>SSIZE;<sp/>++i)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arr[i]<sp/>&gt;<sp/>arr[i+1])</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(good,<sp/></highlight><highlight class="stringliteral">&quot;stb_define_sort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;qsort:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qsort(arr2,<sp/>SSIZE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr2[0]),<sp/>stb_intcmp(0));</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;done\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>bugs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(arr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr[0])<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sort_int(arr,<sp/>1000);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/>c(stb_alloc_count_alloc<sp/>==<sp/>stb_alloc_count_free,<sp/></highlight><highlight class="stringliteral">&quot;stb_alloc<sp/>-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_is_prime(<sp/>2),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_is_prime(<sp/>3),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_is_prime(<sp/>5),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_is_prime(<sp/>7),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/>c(!stb_is_prime(<sp/>9),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_is_prime(11),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/>c(!stb_is_prime(25),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/>c(!stb_is_prime(27),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_is_prime(29),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_is_prime(31),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/>c(!stb_is_prime(33),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/>c(!stb_is_prime(35),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/>c(!stb_is_prime(36),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_prime<sp/>d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=7;<sp/>n<sp/>&lt;<sp/>64;<sp/>n<sp/>+=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_perfect<sp/>s;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>malloc(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>i*i;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_perfect_create(&amp;s,<sp/>p,<sp/>n),<sp/></highlight><highlight class="stringliteral">&quot;stb_perfect_hash<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_perfect_destroy(&amp;s);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>stb_rand();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_perfect_create(&amp;s,<sp/>p,<sp/>n),<sp/></highlight><highlight class="stringliteral">&quot;stb_perfect_hash<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_perfect_destroy(&amp;s);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>(0x80000000<sp/>&gt;&gt;<sp/>stb_log2_ceil(n&gt;&gt;1))<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_perfect_create(&amp;s,<sp/>p,<sp/>n),<sp/></highlight><highlight class="stringliteral">&quot;stb_perfect_hash<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_perfect_destroy(&amp;s);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>malloc(1024);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_perfect_create(&amp;s,<sp/>p,<sp/>n),<sp/></highlight><highlight class="stringliteral">&quot;stb_perfect_hash<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_perfect_destroy(&amp;s);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>p[i]);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>attempts<sp/>required<sp/>to<sp/>find<sp/>perfect<sp/>hash:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_perfect_hash_max_failures);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/>c(stb_ischar(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/>c(stb_ischar(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#####&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/>c(stb_ischar(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;xXyY&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/>c(stb_ischar(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/>c(!stb_ischar(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>g&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/>c(stb_ischar(</highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">,<sp/>p),<sp/></highlight><highlight class="stringliteral">&quot;stb_ischar<sp/>h&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/>c(stb_alloc_count_alloc<sp/>==<sp/>stb_alloc_count_free,<sp/></highlight><highlight class="stringliteral">&quot;stb_alloc<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/>q<sp/>=<sp/>stb_wordwrapalloc(15,<sp/></highlight><highlight class="stringliteral">&quot;How<sp/>now<sp/>brown<sp/>cow.<sp/>Testinglishously.<sp/>Okey<sp/>dokey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>now<sp/>brown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cow.<sp/>Testinglis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hously.<sp/>Okey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dokey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/>c(stb_arr_len(q)<sp/>==<sp/><sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/>c(q[2]<sp/>==<sp/>14<sp/>&amp;&amp;<sp/>q[3]<sp/>==<sp/>15,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/>c(q[4]<sp/>==<sp/>29<sp/>&amp;&amp;<sp/>q[5]<sp/>==<sp/>12,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(q);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/>q<sp/>=<sp/>stb_wordwrapalloc(20,<sp/></highlight><highlight class="stringliteral">&quot;How<sp/>now<sp/>brown<sp/>cow.<sp/>Testinglishously.<sp/>Okey<sp/>dokey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>now<sp/>brown<sp/>cow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Testinglishously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Okey<sp/>dokey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/>c(stb_arr_len(q)<sp/>==<sp/><sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/>c(q[0]<sp/>==<sp/><sp/>0<sp/>&amp;&amp;<sp/>q[1]<sp/>==<sp/>18,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/>c(q[2]<sp/>==<sp/>19<sp/>&amp;&amp;<sp/>q[3]<sp/>==<sp/>17,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/>c(q[4]<sp/>==<sp/>37<sp/>&amp;&amp;<sp/>q[5]<sp/>==<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(q);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/>q<sp/>=<sp/>stb_wordwrapalloc(12,<sp/></highlight><highlight class="stringliteral">&quot;How<sp/>now<sp/>brown<sp/>cow.<sp/>Testinglishously.<sp/>Okey<sp/>dokey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>brown<sp/>cow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Testinglisho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>usly.<sp/>Okey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dokey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/>c(stb_arr_len(q)<sp/>==<sp/><sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/>c(q[4]<sp/>==<sp/>19<sp/>&amp;&amp;<sp/>q[5]<sp/>==<sp/>12,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/>c(q[6]<sp/>==<sp/>31<sp/>&amp;&amp;<sp/>q[3]<sp/>==<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;stb_wordwrap<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(q);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//test_script();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//test_packed_floats();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/>c(stb_alloc_count_alloc<sp/>==<sp/>stb_alloc_count_free,<sp/></highlight><highlight class="stringliteral">&quot;stb_alloc<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_alloc_count_alloc<sp/>!=<sp/>stb_alloc_count_free)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/>allocs,<sp/>%d<sp/>frees\n&quot;</highlight><highlight class="normal">,<sp/>stb_alloc_count_alloc,<sp/>stb_alloc_count_free);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/>test_lex();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_regex_matcher(</highlight><highlight class="stringliteral">&quot;.*foo.*bar.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;foobarx&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>foo<sp/>ba<sp/>ba<sp/>bar<sp/>ba&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>oo<sp/>oo<sp/>ba<sp/>ba<sp/>bar<sp/>foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/>stb_free(mt);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_regex_matcher(</highlight><highlight class="stringliteral">&quot;.*foo.?bar.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfoobarx&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfoobar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfoo<sp/>bar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfoo<sp/><sp/>bar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfo<sp/>foo<sp/>ba<sp/>ba<sp/>bar<sp/>ba&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfo<sp/>oo<sp/>oo<sp/>ba<sp/>ba<sp/>bar<sp/>foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>11&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/>stb_free(mt);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_regex_matcher(</highlight><highlight class="stringliteral">&quot;.*m((foo|bar)*baz)m.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfoobarx&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>12&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mfoofoofoobazm<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>13&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mfoobarbazfoom<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>14&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mbarbarfoobarbazm<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>15&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mfoobarfoo<sp/>bazm<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>16&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mm<sp/>foobarfoobarfoobar<sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>17&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/>stb_free(mt);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_regex_matcher(</highlight><highlight class="stringliteral">&quot;f*|z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;fz&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;ff&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/>stb_free(mt);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_regex_matcher(</highlight><highlight class="stringliteral">&quot;m(f|z*)n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;mfzn&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;mffn&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;mzn&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;mn&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0g&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;mzfn&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>0f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;manmanmannnnnnnmmmmmmmmm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;manmanmannnnnnnmmmmmmmmm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;manmanmannnnnnnmmmmmmmmmffzzz<sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;manmanmannnnnnnmmmmmmmmmnfzzz<sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;mmmfn<sp/>aanmannnnnnnmmmmmm<sp/>fzzz<sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;mmmzzn<sp/>anmannnnnnnmmmmmm<sp/>fzzz<sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;mm<sp/>anmannnnnnnmmmmmm<sp/>fzmzznzz<sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;mm<sp/>anmannnnnnnmmmmmm<sp/>fzmzzfnzz<sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_find(mt,<sp/></highlight><highlight class="stringliteral">&quot;manmfnmannnnnnnmmmmmmmmmffzzz<sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_find<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/>stb_free(mt);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_regex_matcher(</highlight><highlight class="stringliteral">&quot;.*m((foo|bar)*|baz)m.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;abfoobarx&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mfoofoofoobazm<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>19&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mfoobarbazfoom<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>20&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mbazm<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>21&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mfoobarfoom<sp/>d&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>22&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>mm<sp/>foobarfoobarfoobar<sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>23&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/>stb_free(mt);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/>mt<sp/>=<sp/>stb_regex_matcher(</highlight><highlight class="stringliteral">&quot;[a-fA-F]..[^]a-zA-Z]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;Axx1&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>24&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;Fxx1&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>25&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;Bxx]&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>26&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;Cxxz&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>27&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;gxx[&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>28&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/>c(stb_matcher_match(mt,<sp/></highlight><highlight class="stringliteral">&quot;-xx0&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_matcher_match<sp/>29&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/>stb_free(mt);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobarx&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>0a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>1a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>2a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>foo<sp/>ba<sp/>ba<sp/>bar<sp/>ba&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>3a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>oo<sp/>oo<sp/>ba<sp/>ba<sp/>ar<sp/>foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>4a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>1b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>2b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>foo<sp/>ba<sp/>ba<sp/>bar<sp/>ba&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>3b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>oo<sp/>oo<sp/>ba<sp/>ba<sp/>ar<sp/>foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>4b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobarx&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>1c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobabar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>2c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>foo<sp/>ba<sp/>ba<sp/>bar<sp/>ba&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>3c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;foo*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>oo<sp/>oo<sp/>ba<sp/>ba<sp/>ar<sp/>foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>4c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>1d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>2d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>foo<sp/>ba<sp/>ba<sp/>bar<sp/>ba&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>3d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>oo<sp/>oo<sp/>ba<sp/>ba<sp/>ar<sp/>foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>4d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildfind(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyfoobarx&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildfind<sp/>0a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildfind(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaafoobar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildfind<sp/>1a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildfind(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildfind<sp/>2a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildfind(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>foo<sp/>ba<sp/>ba<sp/>bar<sp/>ba&quot;</highlight><highlight class="normal">)<sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildfind<sp/>3a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildfind(</highlight><highlight class="stringliteral">&quot;foo*bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fo<sp/>oo<sp/>oo<sp/>ba<sp/>ba<sp/>ar<sp/>foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildfind<sp/>4a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*;*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">)<sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>1e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*;*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;afooa&quot;</highlight><highlight class="normal">)<sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>2e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*;*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abara&quot;</highlight><highlight class="normal">)<sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>3e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*;*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abaza&quot;</highlight><highlight class="normal">)<sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>4e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/>c(stb_wildmatch(</highlight><highlight class="stringliteral">&quot;*foo*;*bar*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foboar&quot;</highlight><highlight class="normal">)<sp/><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_wildmatch<sp/>5e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/>test_sha1();</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw[0]);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/>memcpy(args,<sp/>args_raw,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw));</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_getopt(&amp;n,<sp/>args);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>!strcmp(args[1],<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_getopt<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/>c(stb_arr_len(s)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>!strcmp(s[2]<sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_getopt<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/>stb_getopt_free(s);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw[0]);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/>memcpy(args,<sp/>args_raw,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_getopt_param(&amp;n,<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/>c(stb_arr_len(s)<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>!strcmp(s[3]<sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;fbar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_getopt<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/>stb_getopt_free(s);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw[0]);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/>memcpy(args,<sp/>args_raw,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_getopt_param(&amp;n,<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/>c(stb_arr_len(s)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>!strcmp(s[1]<sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;xrf&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_getopt<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/>stb_getopt_free(s);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw[0]);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/>memcpy(args,<sp/>args_raw,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(args_raw));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_getopt_param(&amp;n,<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/>c(s<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>n<sp/>==<sp/>0<sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_getopt<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/>stb_getopt_free(s);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/>-1,<sp/>-1)<sp/>==<sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/><sp/>1,<sp/>-3)<sp/>==<sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/>12,<sp/>-2)<sp/>==<sp/><sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/>15,<sp/><sp/>1)<sp/>==<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/><sp/>5,<sp/><sp/>4)<sp/>==<sp/>15,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/><sp/>3,<sp/><sp/>3)<sp/>==<sp/>14,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/>-2,<sp/><sp/>5)<sp/>==<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/>-7,<sp/><sp/>0)<sp/>==<sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/>c(*stb_csample_int(sample_test[0],<sp/>1,<sp/>5,<sp/>5,<sp/>3,<sp/><sp/>2,<sp/><sp/>1)<sp/>==<sp/><sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;stb_csample_int<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p1,<sp/>STB_PATH<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo/bar\\baz/&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p1,<sp/>STB_FILE<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p1,<sp/>STB_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;.xyz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p1,<sp/>STB_PATH_FILE<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo/bar\\baz/test&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p1,<sp/>STB_FILE_EXT<sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;test.xyz&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p2,<sp/>STB_PATH<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo/&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p2,<sp/>STB_FILE<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p2,<sp/>STB_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;.bar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p2,<sp/>STB_PATH_FILE<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo/&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p2,<sp/>STB_FILE_EXT<sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;.bar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p3,<sp/>STB_PATH<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;./&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>11&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p3,<sp/>STB_FILE<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>12&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p3,<sp/>STB_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;.bar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>13&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p3,<sp/>STB_PATH_FILE<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>14&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p4,<sp/>STB_PATH<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo/&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>16&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p4,<sp/>STB_FILE<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>17&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p4,<sp/>STB_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p4,<sp/>STB_PATH_FILE<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;foo/bar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>19&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_splitpath(buf,<sp/>p4,<sp/>STB_FILE_EXT<sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_splitpath<sp/>20&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(p=stb_dupreplace(</highlight><highlight class="stringliteral">&quot;testfootffooo<sp/>foo<sp/>fox&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;brap&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;testbraptfbrapo<sp/>brap<sp/>fox&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_dupreplace<sp/>1&quot;</highlight><highlight class="normal">);<sp/>free(p);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(p=stb_dupreplace(</highlight><highlight class="stringliteral">&quot;testfootffooo<sp/>foo<sp/>fox&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;testtfo<sp/><sp/>fox&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_dupreplace<sp/>2&quot;</highlight><highlight class="normal">);<sp/>free(p);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(p=stb_dupreplace(</highlight><highlight class="stringliteral">&quot;abacab&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aba&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;abababacabab&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_dupreplace<sp/>3&quot;</highlight><highlight class="normal">);<sp/>free(p);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/>m<sp/>=<sp/>stb_mml_parse(</highlight><highlight class="stringliteral">&quot;&lt;a&gt;&lt;b&gt;&lt;c&gt;x&lt;/c&gt;&lt;d&gt;y&lt;/d&gt;&lt;/b&gt;&lt;e&gt;&amp;lt;&amp;amp;f&amp;gt;&lt;/e&gt;&lt;/a&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/>c(m<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;stb_mml_parse<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(!strcmp(m-&gt;child[0]-&gt;child[0]-&gt;child[1]-&gt;tag,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_mml_parse<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(!strcmp(m-&gt;child[0]-&gt;child[1]-&gt;leaf_data,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&amp;f&gt;&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_mml_parse<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_mml_free(m);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/>c(stb_alloc_count_alloc<sp/>==<sp/>stb_alloc_count_free,<sp/></highlight><highlight class="stringliteral">&quot;stb_alloc<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_alloc_count_alloc<sp/>!=<sp/>stb_alloc_count_free)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/>allocs,<sp/>%d<sp/>frees\n&quot;</highlight><highlight class="normal">,<sp/>stb_alloc_count_alloc,<sp/>stb_alloc_count_free);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/>c(stb_linear_remap(3.0f,0,8,1,2)<sp/>==<sp/>1.375,<sp/></highlight><highlight class="stringliteral">&quot;stb_linear_remap()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/>c(stb_bitreverse(0x1248fec8)<sp/>==<sp/>0x137f1248,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitreverse()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/>c(stb_bitreverse8(0x4e)<sp/>==<sp/>0x72,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitreverse8()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/>c(stb_bitreverse8(0x31)<sp/>==<sp/>0x8c,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitreverse8()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=1;<sp/>n<sp/>&lt;<sp/>255;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>stb_bitreverse8((uint8)<sp/>n);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_bitreverse8((uint8)<sp/>m)<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitreverse8()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=2;<sp/>n<sp/>&lt;=<sp/>31;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_is_pow2<sp/><sp/><sp/>((1<sp/>&lt;&lt;<sp/>n)<sp/><sp/>)<sp/>==<sp/>1<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_is_pow2()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_is_pow2<sp/><sp/><sp/>((1<sp/>&lt;&lt;<sp/>n)+1)<sp/>==<sp/>0<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_is_pow2()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_is_pow2<sp/><sp/><sp/>((1<sp/>&lt;&lt;<sp/>n)-1)<sp/>==<sp/>0<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_is_pow2()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_floor((1<sp/>&lt;&lt;<sp/>n)<sp/><sp/>)<sp/>==<sp/>n<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_floor()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_floor((1<sp/>&lt;&lt;<sp/>n)+1)<sp/>==<sp/>n<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_floor()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_floor((1<sp/>&lt;&lt;<sp/>n)-1)<sp/>==<sp/>n-1,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_floor()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_ceil<sp/>((1<sp/>&lt;&lt;<sp/>n)<sp/><sp/>)<sp/>==<sp/>n<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_ceil()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_ceil<sp/>((1<sp/>&lt;&lt;<sp/>n)+1)<sp/>==<sp/>n+1,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_ceil()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_ceil<sp/>((1<sp/>&lt;&lt;<sp/>n)-1)<sp/>==<sp/>n<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_ceil()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_bitreverse(1<sp/>&lt;&lt;<sp/>n)<sp/>==<sp/>1U<sp/>&lt;&lt;<sp/>(31-n),<sp/></highlight><highlight class="stringliteral">&quot;stb_bitreverse()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/>c(stb_log2_floor(0)<sp/>==<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_floor()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/>c(stb_log2_ceil<sp/>(0)<sp/>==<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_ceil<sp/>()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/>c(stb_log2_floor(-1)<sp/>==<sp/>31,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_floor()<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/>c(stb_log2_ceil<sp/>(-1)<sp/>==<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;stb_log2_ceil<sp/>()<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/>c(stb_bitcount(0xffffffff)<sp/>==<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitcount()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/>c(stb_bitcount(0xaaaaaaaa)<sp/>==<sp/>16,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitcount()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/>c(stb_bitcount(0x55555555)<sp/>==<sp/>16,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitcount()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/>c(stb_bitcount(0x00000000)<sp/>==<sp/><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitcount()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/>c(stb_lowbit8(0xf0)<sp/>==<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;stb_lowbit8<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/>c(stb_lowbit8(0x10)<sp/>==<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;stb_lowbit8<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/>c(stb_lowbit8(0xf3)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_lowbit8<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/>c(stb_lowbit8(0xf8)<sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;stb_lowbit8<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/>c(stb_lowbit8(0x60)<sp/>==<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;stb_lowbit8<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf);<sp/>++n)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>200000;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>stb_rand();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,z=0;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>32;<sp/>++i)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>++z;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_bitcount(k)<sp/>==<sp/>z,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitcount()<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[k<sp/>&gt;&gt;<sp/>24]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_is_pow2(k))<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_floor(k)<sp/>==<sp/>stb_log2_ceil(k),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_pow2()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(k<sp/>==<sp/>1U<sp/>&lt;&lt;<sp/>stb_log2_floor(k),<sp/></highlight><highlight class="stringliteral">&quot;stb_is_pow2()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_log2_floor(k)<sp/>==<sp/>stb_log2_ceil(k)-1,<sp/></highlight><highlight class="stringliteral">&quot;stb_is_pow2()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_bitreverse(stb_bitreverse(n))<sp/>==<sp/>(uint32)<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;stb_bitreverse()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>reasonable<sp/>coverage<sp/>from<sp/>stb_rand()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf);<sp/>++n)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(buf[n]<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_rand()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf);<sp/>++n)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n<sp/>&lt;<sp/>60000;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>(float)<sp/>stb_frand();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(int)<sp/>(z<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf));</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(z<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>z<sp/>&lt;<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_frand()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;stb_frand()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>reasonable<sp/>coverage<sp/>from<sp/>stb_frand(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>that<sp/>the<sp/>range<sp/>remap<sp/>isn&apos;t<sp/>incorrect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf);<sp/>++n)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(buf[n]<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_frand()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stb_arr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(sum(s)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_add(s);<sp/>s[0]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,7);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(<sp/>stb_arr_valid(s,1),<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(!stb_arr_valid(s,2),<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,0);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,0);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,0);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,0);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(sum(s)<sp/>==<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,0);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>1;<sp/>s[1]<sp/>=<sp/>5;<sp/>s[2]<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(sum(s)<sp/>==<sp/>26,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_setlen(s,2);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(sum(s)<sp/>==<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_setlen(s,1);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(sum(s)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_setlen(s,0);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(sum(s)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,3);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,4);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,5);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,6);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,7);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_deleten(s,1,3);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_arr_len(s)==2<sp/>&amp;&amp;<sp/>sum(s)<sp/>==<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr_9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s,2);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>7<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_insertn(s,2,2);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>7<sp/>x<sp/>x<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(s[0]==3<sp/>&amp;&amp;<sp/>s[1]<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>s[2]<sp/>==<sp/>5<sp/>&amp;&amp;<sp/>s[3]<sp/>==<sp/>6<sp/>&amp;&amp;<sp/>s[4]<sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;stb_arr<sp/>10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_free(s);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/>f=<sp/>stb_fopen(</highlight><highlight class="stringliteral">&quot;data/stb.test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/>fwrite(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classbuffer" kindref="compound">buffer</ref>)-1,<sp/>f);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/>stb_fclose(f,<sp/>stb_keep_yes);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/>sleep(1);<sp/><sp/></highlight><highlight class="comment">//<sp/>andLinux<sp/>has<sp/>some<sp/>synchronization<sp/>problem<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/>f=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;data/stb.test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/>fwrite(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classbuffer" kindref="compound">buffer</ref>)-1,<sp/>f);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_fexists(</highlight><highlight class="stringliteral">&quot;data/stb.test&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>couldn&apos;t<sp/>open<sp/>file<sp/>just<sp/>written,<sp/>or<sp/>stb_fexists()<sp/>is<sp/>broken.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/>f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;data/stb.test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>f<sp/>=<sp/>NULL;<sp/>//<sp/>test<sp/>stb_fatal()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/>{<sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;Error:<sp/>couldn&apos;t<sp/>open<sp/>file<sp/>just<sp/>written\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[4];</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len1<sp/>=<sp/>stb_filelen(f),<sp/>len2;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,n2;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(temp,1,4,f)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>ferror(f);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{<sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>from<sp/>stream:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>n);<sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feof(f))<sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;Weird,<sp/>read<sp/>0<sp/>bytes<sp/>and<sp/>hit<sp/>eof&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;Read<sp/>0,<sp/>but<sp/>neither<sp/>feof<sp/>nor<sp/>ferror<sp/>is<sp/>true&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;data/stb.test&quot;</highlight><highlight class="normal">,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;Error:<sp/>stb_file()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(len1<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classbuffer" kindref="compound">buffer</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;stb_filelen()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(len2<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classbuffer" kindref="compound">buffer</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;stb_file():n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(memcmp(p,<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classbuffer" kindref="compound">buffer</ref>)-1)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_file()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(strcmp(p,<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_file()<sp/>terminated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>stb_stringfile(</highlight><highlight class="stringliteral">&quot;data/stb.test&quot;</highlight><highlight class="normal">,<sp/>&amp;n1);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n1<sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;stb_stringfile():n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s[n2])<sp/>++n2;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n1<sp/>==<sp/>n2,<sp/></highlight><highlight class="stringliteral">&quot;stb_stringfile():n<sp/>length<sp/>matches<sp/>the<sp/>non-NULL<sp/>strings&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n2<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(strcmp(s[0],str1)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_stringfile()[0]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(strcmp(s[1],str2)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_stringfile()[1]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(strcmp(s[2],str3)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_stringfile()[2]<sp/>(no<sp/>terminating<sp/>newlines)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;data/stb.test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_fgets(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/>f);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//c(strcmp(buf,<sp/>str1)==0,<sp/>&quot;stb_fgets()&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>stb_fgets_malloc(f);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>strlen(p);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>strlen(str2);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(strcmp(p,<sp/>str2)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_fgets_malloc()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_fgets(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/>f);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(strcmp(buf,<sp/>str3)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_fgets()3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_prefix(</highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_prefix()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/>c(!stb_prefix(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_prefix()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/>c(<sp/>stb_prefix(</highlight><highlight class="stringliteral">&quot;foob&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;foob&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_prefix()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/>stb_strncpy(buf,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">,<sp/>6);<sp/><sp/>c(strcmp(buf,</highlight><highlight class="stringliteral">&quot;fooba&quot;</highlight><highlight class="normal"><sp/>)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_strncpy()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/>stb_strncpy(buf,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">,<sp/>8);<sp/><sp/>c(strcmp(buf,</highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_strncpy()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(p=stb_duplower(</highlight><highlight class="stringliteral">&quot;FooBar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_duplower()&quot;</highlight><highlight class="normal">);<sp/>free(p);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/>strcpy(buf,<sp/></highlight><highlight class="stringliteral">&quot;FooBar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/>stb_tolower(buf);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(buf,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_tolower()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_strtok(buf,<sp/></highlight><highlight class="stringliteral">&quot;foo=ba*r&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#=*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(buf,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_strtok()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(p<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;ba*r&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_strtok()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_strtok(buf,<sp/></highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#=*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/>c(*p<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_strtok()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(stb_skipwhite(</highlight><highlight class="stringliteral">&quot;<sp/>\t\n<sp/>foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_skipwhite()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_tokens(</highlight><highlight class="stringliteral">&quot;foo<sp/>==<sp/>ba*r&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#=*&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[0],<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_tokens()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[1],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ba&quot;</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[2],<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/>c(s[3]<sp/>==<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_tokens_allowempty(</highlight><highlight class="stringliteral">&quot;foo<sp/>==<sp/>ba*r&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#=*&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[0],<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_allowempty()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[1],<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_allowempty()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[2],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ba&quot;</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_allowempty()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[3],<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_allowempty()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/>c(s[4]<sp/>==<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_allowempty()<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_tokens_stripwhite(</highlight><highlight class="stringliteral">&quot;foo<sp/>==<sp/>ba*r&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#=*&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[0],<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_stripwhite()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[1],<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>),<sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_stripwhite()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[2],<sp/></highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_stripwhite()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[3],<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_stripwhite()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/>c(s[4]<sp/>==<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_stripwhite()<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>stb_tokens_quoted(</highlight><highlight class="stringliteral">&quot;foo<sp/>=\&quot;=\&quot;<sp/>ba*\&quot;\&quot;r<sp/>\&quot;<sp/>foo\&quot;<sp/>bah<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#=*&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[0],<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_quoted()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[1],<sp/></highlight><highlight class="stringliteral">&quot;=<sp/>ba&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_quoted()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/>c(!strcmp(s[2],<sp/></highlight><highlight class="stringliteral">&quot;\&quot;r<sp/><sp/>foo<sp/>bah&quot;</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_quoted()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/>c(s[3]<sp/>==<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stb_tokens_quoted()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;stb.h&quot;</highlight><highlight class="normal">,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>z<sp/>=<sp/>stb_adler32_old(1,<sp/>p,<sp/>len2);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>x<sp/>=<sp/>stb_adler32<sp/><sp/><sp/><sp/>(1,<sp/>p,<sp/>len2);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(z<sp/>==<sp/>x,<sp/></highlight><highlight class="stringliteral">&quot;stb_adler32()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(p,0xff,len2);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>stb_adler32_old((65520&lt;&lt;16)<sp/>+<sp/>65520,<sp/>p,<sp/>len2);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>stb_adler32<sp/><sp/><sp/><sp/>((65520&lt;&lt;16)<sp/>+<sp/>65520,<sp/>p,<sp/>len2);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(z<sp/>==<sp/>x,<sp/></highlight><highlight class="stringliteral">&quot;stb_adler32()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>stb_hheap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HHEAP_COUNT<sp/><sp/>100000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**p<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p)<sp/>*<sp/>HHEAP_COUNT);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_hheap<sp/>*h2,<sp/>*h<sp/>=<sp/>stb_newhheap(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstruct1" kindref="compound">struct1</ref>),0);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>stb_halloc(h);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_shuffle(p,<sp/>HHEAP_COUNT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p),<sp/>stb_rand());</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_hfree(p[i]);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(h-&gt;num_alloc<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_hheap<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_delhheap(h);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>stb_newhheap(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstruct1" kindref="compound">struct1</ref>),0);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h2<sp/>=<sp/>stb_newhheap(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstruct2" kindref="compound">struct2</ref>),8);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>stb_halloc(h);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>stb_halloc(h2);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c((((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>p[i])<sp/>&amp;<sp/>4)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_hheap<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_shuffle(p,<sp/>HHEAP_COUNT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p),<sp/>stb_rand());</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_hfree(p[i]);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(h-&gt;num_alloc<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_hheap<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(h2-&gt;num_alloc<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_hheap<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_delhheap(h);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_delhheap(h2);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>malloc(32);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_shuffle(p,<sp/>HHEAP_COUNT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p),<sp/>stb_rand());</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(p[i]);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>use<sp/>the<sp/>same<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>do<sp/>pointer<sp/>set<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=100;<sp/>j<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>j<sp/>+=<sp/>25000)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps<sp/>*ps<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>j;<sp/>++i)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>stb_ps_add(ps,<sp/>p[i]);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_ps_find(ps,<sp/>p[i])<sp/>==<sp/>(i<sp/>&lt;<sp/>j),<sp/></highlight><highlight class="stringliteral">&quot;stb_ps<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_ps_count(ps)<sp/>==<sp/>j,<sp/></highlight><highlight class="stringliteral">&quot;stb_ps<sp/>1b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=j;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>stb_ps_add(ps,<sp/>p[i]);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>j;<sp/>++i)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>stb_ps_remove(ps,<sp/>p[i]);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_ps_find(ps,<sp/>p[i])<sp/>==<sp/>!(i<sp/>&lt;<sp/>j),<sp/></highlight><highlight class="stringliteral">&quot;stb_ps<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps_delete(ps);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>HHEAP_COUNT2<sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>use<sp/>the<sp/>same<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>do<sp/>pointer<sp/>set<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=1;<sp/>j<sp/>&lt;<sp/>40;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps<sp/>*ps<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>j;<sp/>++i)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>stb_ps_add(ps,<sp/>p[i]);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT2;<sp/>++i)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_ps_find(ps,<sp/>p[i])<sp/>==<sp/>(i<sp/>&lt;<sp/>j),<sp/></highlight><highlight class="stringliteral">&quot;stb_ps<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_ps_count(ps)<sp/>==<sp/>j,<sp/></highlight><highlight class="stringliteral">&quot;stb_ps<sp/>3b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=j;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT2;<sp/>++i)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>stb_ps_add(ps,<sp/>p[i]);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>j;<sp/>++i)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>stb_ps_remove(ps,<sp/>p[i]);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>HHEAP_COUNT2;<sp/>++i)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(stb_ps_find(ps,<sp/>p[i])<sp/>==<sp/>!(i<sp/>&lt;<sp/>j),<sp/></highlight><highlight class="stringliteral">&quot;stb_ps<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps_delete(ps);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>test_compression(tc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tc));</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress()/stb_decompress()<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;stb.h&quot;</highlight><highlight class="normal">,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;data/stb_h.z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_compress_stream_start(f))<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*q;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len3;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>len2;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>stb_rand()<sp/>%<sp/>10;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>6)<sp/>n<sp/>=<sp/>1<sp/>+<sp/>stb_rand()%16;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>8)<sp/>n<sp/>=<sp/>20<sp/>+<sp/>stb_rand()<sp/>%<sp/>1000;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>15000;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>n<sp/>&gt;<sp/>len2)<sp/>n<sp/>=<sp/>len2<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_write(p<sp/>+<sp/>i,<sp/>n);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_compress_stream_end(1);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>stb_decompress_fromfile(</highlight><highlight class="stringliteral">&quot;data/stb_h.z&quot;</highlight><highlight class="normal">,<sp/>&amp;len3);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(len3<sp/>==<sp/>len2,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress_stream<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len2<sp/>==<sp/>len3)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(!memcmp(p,q,len2),<sp/></highlight><highlight class="stringliteral">&quot;stb_compress_stream<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/>free(q);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(0,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress_stream<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_compress_window(65536*4);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;stb.h&quot;</highlight><highlight class="normal">,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress()/stb_decompress()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_en_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_en_compress()/stb_en_decompress()<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>stb.h<sp/>to<sp/>compression<sp/>test.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;data/test.bmp&quot;</highlight><highlight class="normal">,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>==<sp/>106141,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress()/stb_decompress()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_en_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_en_compress()/stb_en_decompress()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>hardcoded<sp/>compressed<sp/>lengths<sp/>being<sp/>verified<sp/>_could_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>if<sp/>you<sp/>changed<sp/>the<sp/>compressor<sp/>parameters;<sp/>but<sp/>pure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>performance<sp/>optimizations<sp/>shouldn&apos;t<sp/>change<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;data/cantrbry.zip&quot;</highlight><highlight class="normal">,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>==<sp/>642787,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress()/stb_decompress()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_en_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_en_compress()/stb_en_decompress()<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;data/bible.txt&quot;</highlight><highlight class="normal">,<sp/>&amp;len2);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>==<sp/>2022520,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress()/stb_decompress()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>test_en_compression(p,<sp/>len2);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_en_compress()/stb_en_decompress()<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>25,<sp/>o=0;<sp/></highlight><highlight class="comment">//<sp/>32MB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classbuffer" kindref="compound">buffer</ref><sp/>=<sp/>malloc(len);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>8192;<sp/>++i)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>stb_rand();</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>15);<sp/>++i)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>64;<sp/>++i)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[i];</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>21);<sp/>++i)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>64;<sp/>++i)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[i];</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>21);<sp/>++i)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>8192;<sp/>++i)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[i];</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>21);<sp/>++i)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[o++]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(o<sp/>&lt;<sp/>len);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_compress_window(1<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>test_compression(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;stb_compress()<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STB_THREADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/>stb_thread_cleanup();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/>stb_ischar(0,NULL);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/>stb_wrapper_listall(dumpfunc);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Memory<sp/>still<sp/>in<sp/>use:<sp/>%d<sp/>allocations<sp/>of<sp/>%d<sp/>bytes.\n&quot;</highlight><highlight class="normal">,<sp/>alloc_num,<sp/>alloc_size);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>some<sp/>memory<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=1;<sp/>n<sp/>&lt;<sp/>20;<sp/>++n)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>malloc(1<sp/>&lt;&lt;<sp/>n);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Finished<sp/>stb.c<sp/>with<sp/>%d<sp/>errors.\n&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NIST<sp/>test<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*digest;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal">}<sp/>sha1_tests[]<sp/>=</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">{<sp/><sp/><sp/>24,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;616263&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a9993e364706816aba3e25717850c26c9cd0d89d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/>1304,</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ec29561244ede706b6eb30a1c371d74450a105c3f9735f7fa9fe38cf67f304a5736a106e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;92e17139a6813b1c81a4f3d3fb9546ab4296fa9f722826c066869edacd73b25480351858&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;13e22634a9da44000d95a281ff9f264ecce0a931222162d021cca28db5f3c2aa24945ab1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e31cb413ae29810fd794cad5dfaf29ec43cb38d198fe4ae1da2359780221405bd6712a53&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;05da4b1b737fce7cd21c0eb7728d08235a9011&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;970111c4e77bcc88cc20459c02b69b4aa8f58217&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/>2096,</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5fc2c3f6a7e79dc94be526e5166a238899d54927ce470018fbfd668fd9dd97cbf64e2c91&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;584d01da63be3cc9fdff8adfefc3ac728e1e335b9cdc87f069172e323d094b47fa1e652a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fe4d6aa147a9f46fda33cacb65f3aa12234746b9007a8c85fe982afed7815221e43dba55&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3d8fe8a022cdac1b99eeeea359e5a9d2e72e382dffa6d19f359f4f27dc3434cd27daeeda&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8e38594873398678065fbb23665aba9309d946135da0e4a4afdadff14db18e85e71dd93c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3bf9faf7f25c8194c4269b1ee3d9934097ab990025d9c3aaf63d5109f52335dd3959d38a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e485050e4bbb6235574fc0102be8f7a306d6e8de6ba6becf80f37415b57f9898a5824e77&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;414197422be3d36a6080&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0423dc76a8791107d14e13f5265b343f24cc0f19&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/>2888,</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0f865f46a8f3aed2da18482aa09a8f390dc9da07d51d1bd10fe0bf5f3928d5927d08733d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;32075535a6d1c8ac1b2dc6ba0f2f633dc1af68e3f0fa3d85e6c60cb7b56c239dc1519a00&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7ea536a07b518ecca02a6c31b46b76f021620ef3fc6976804018380e5ab9c558ebfc5cb1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c9ed2d974722bf8ab6398f1f2b82fa5083f85c16a5767a3a07271d67743f00850ce8ec42&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8c7f22f1cf01f99895c0c844845b06a06cecb0c6cf83eb55a1d4ebc44c2c13f6f7aa5e0e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;08abfd84e7864279057abc471ee4a45dbbb5774afa24e51791a0eada11093b88681fe30b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aa3b2e94113dc63342c51ca5d1a6096d0897b626e42cb91761058008f746f35465465540&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ad8c6b8b60f7e1461b3ce9e6529625984cb8c7d46f07f735be067588a0117f23e34ff578&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;00e2bbe9a1605fde6087fb15d22c5d3ac47566b8c448b0cee40373e5ba6eaa21abee7136&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6afbb27dbbd300477d70c371e7b8963812f5ed4fb784fb2f3bd1d3afe883cdd47ef32bea&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ea&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6692a71d73e00f27df976bc56df4970650d90e45&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/>3680,</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4893f1c763625f2c6ce53aacf28026f14b3cd8687e1a1d3b60a81e80fcd1e2b038f9145a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b64a0718f948f7c3c9ac92e3d86fb669a5257da1a18c776291653688338210a3242120f1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;01788e8acc9110db9258b1554bf3d26602516ea93606a25a7f566c0c758fb39ecd9d876b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c5d8abc1c3205095382c2474cb1f8bbdb45c2c0e659cb0fc703ec607a5de6bcc7a28687d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b1ee1c8f34797bb2441d5706d210df8c2d7d65dbded36414d063c117b52a51f7a4eb9cac&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0782e008b47459ed5acac0bc1f20121087f992ad985511b33c866d18e63f585478ee5a5e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;654b19d81231d98683ae3f0533565aba43dce408d7e3c4c6be11d8f05165f29c9dcb2030&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c4ee31d3a04e7421aa92c3231a1fc07e50e95fea7389a5e65891afaba51cf55e36a9d089&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bf293accb356d5d06547307d6e41456d4ed146a056179971c56521c83109bf922866186e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;184a99a96c7bb96df8937e35970e438412a2b8d744cf2ad87cb605d4232e976f9f151697&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;76e4e5b6b786132c966b25fc56d815c56c819af5e159aa39f8a93d38115f5580cda93bc0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;73c30b39920e726fe861b72483a3f886269ab7a8eefe952f35d25c4eb7f443f4f3f26e43&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d51fb54591e6a6dad25fcdf5142033084e5624bdd51435e77dea86b8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dc5859dd5163c4354d5d577b855fa98e37f04384&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1635"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/>4472,</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cf494c18a4e17bf03910631471bca5ba7edea8b9a63381e3463517961749848eb03abefd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4ce676dece3740860255f57c261a558aa9c7f11432f549a9e4ce31d8e17c79450ce2ccfc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;148ad904aedfb138219d7052088520495355dadd90f72e6f69f9c6176d3d45f113f275b7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fbc2a295784d41384cd7d629b23d1459a22e45fd5097ec9bf65fa965d3555ec77367903c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;32141065fc24da5c56963d46a2da3c279e4035fb2fb1c0025d9dda5b9e3443d457d92401&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a0d3f58b48469ecb1862dc975cdbe75ca099526db8b0329b03928206f084c633c04eef5e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8e377f118d30edf592504be9d2802651ec78aeb02aea167a03fc3e23e5fc907c324f283f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;89ab37e84687a9c74ccf055402db95c29ba2c8d79b2bd4fa96459f8e3b78e07e923b8119&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8267492196ecb71e01c331f8df245ec5bdf8d0e05c91e63bb299f0f6324895304dda721d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;39410458f117c87b7dd6a0ee734b79fcbe482b2c9e9aa0cef03a39d4b0c86de3bc34b4aa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dabfa373fd2258f7c40c187744d237080762382f547a36adb117839ca72f8ebbc5a20a07&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e86f4c8bb923f5787698d278f6db0040e76e54645bb0f97083995b34b9aa445fc4244550&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;58795828dd00c32471ec402a307f5aa1b37b1a86d6dae3bcbfbe9ba41cab0beeabf489af&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0073d4b3837d3f14b815120bc3602d072b5aeefcdec655fe756b660eba7dcf34675acbce&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;317746270599424b9248791a0780449c1eabbb9459cc1e588bfd74df9b1b711c85c09d8a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a171b309281947e8f4b6ac438753158f4f36fa&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4c17926feb6e87f5bca7890d8a5cde744f231dab&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/>5264,</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8236153781bd2f1b81ffe0def1beb46f5a70191142926651503f1b3bb1016acdb9e7f7ac&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ced8dd168226f118ff664a01a8800116fd023587bfba52a2558393476f5fc69ce9c65001&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f23e70476d2cc81c97ea19caeb194e224339bcb23f77a83feac5096f9b3090c51a6ee6d2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;04b735aa71d7e996d380b80822e4dfd43683af9c7442498cacbea64842dfda238cb09992&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7c6efae07fdf7b23a4e4456e0152b24853fe0d5de4179974b2b9d4a1cdbefcbc01d8d311&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b5dda059136176ea698ab82acf20dd490be47130b1235cb48f8a6710473cfc923e222d94&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b582f9ae36d4ca2a32d141b8e8cc36638845fbc499bce17698c3fecae2572dbbd4705524&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;30d7ef30c238c2124478f1f780483839b4fb73d63a9460206824a5b6b65315b21e3c2f24&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c97ee7c0e78faad3df549c7ca8ef241876d9aafe9a309f6da352bec2caaa92ee8dca3928&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;99ba67dfed90aef33d41fc2494b765cb3e2422c8e595dabbfaca217757453fb322a13203&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f425f6073a9903e2dc5818ee1da737afc345f0057744e3a56e1681c949eb12273a3bfc20&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;699e423b96e44bd1ff62e50a848a890809bfe1611c6787d3d741103308f849a790f9c015&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;098286dbacfc34c1718b2c2b77e32194a75dda37954a320fa68764027852855a7e5b5274&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;eb1e2cbcd27161d98b59ad245822015f48af82a45c0ed59be94f9af03d9736048570d6e3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ef63b1770bc98dfb77de84b1bb1708d872b625d9ab9b06c18e5dbbf34399391f0f8aa26e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c0dac7ff4cb8ec97b52bcb942fa6db2385dcd1b3b9d567aaeb425d567b0ebe267235651a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1ed9bf78fd93d3c1dd077fe340bb04b00529c58f45124b717c168d07e9826e33376988bc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5cf62845c2009980a4dfa69fbc7e5a0b1bb20a5958ca967aec68eb31dd8fccca9afcd30a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;26bab26279f1bf6724ff&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;11863b483809ef88413ca9b0084ac4a5390640af&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/>6056,</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;31ec3c3636618c7141441294fde7e72366a407fa7ec6a64a41a7c8dfda150ca417fac868&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1b3c5be253e3bff3ab7a5e2c01b72790d95ee09b5362be835b4d33bd20e307c3c702aa15&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;60cdc97d190a1f98b1c78e9230446e31d60d25155167f73e33ed20cea27b2010514b57ba&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b05ed16f601e6388ea41f714b0f0241d2429022e37623c11156f66dd0fa59131d8401dba&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f502cffb6f1d234dcb53e4243b5cf9951688821586a524848123a06afa76ab8058bcfa72&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;27a09ce30d7e8cb100c8877bb7a81b615ee6010b8e0daced7cc922c971940b757a9107de&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;60b8454dda3452e902092e7e06faa57c20aadc43c8012b9d28d12a8cd0ba0f47ab4b377f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;316902e6dff5e4f2e4a9b9de1e4359f344e66d0565bd814091e15a25d67d89cf6e30407b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;36b2654762bbe53a6f204b855a3f9108109e351825cf9080c89764c5f74fb4afef89d804&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e7f7d097fd89d98171d63eaf11bd719df44c5a606be0efea358e058af2c265b2da2623fd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;afc62b70f0711d0150625b55672060cea6a253c590b7db1427a536d8a51085756d1e6ada&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;41d9d506b5d51bcae41249d16123b7df7190e056777a70feaf7d9f051fdbbe45cbd60fc6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;295dda84d4ebbd7284ad44be3ee3ba57c8883ead603519b8ad434e3bf630734a9243c00a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a07366b8f88621ec6176111f0418c66b20ff9a93009f43432aaea899dad0f4e3ae72e9ab&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a3f678f140118eb7117230c357a5caa0fe36c4e6cf1957bbe7499f9a68b0f1536e476e53&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;457ed826d9dea53a6ded52e69052faaa4d3927b9a3f9e8b435f424b941bf2d9cd6849874&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;42a44d5acaa0da6d9f390d1a0dd6c19af427f8bb7c082ae405a8dd535dea76aa360b4faa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d786093e113424bb75b8cc66c41af637a7b2acdca048a501417919cf9c5cd3b2fa668860&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d08b6717eea6f125fa1b0bae1dbb52aafce8ae2deaf92aeb5be003fb9c09fedbc286ffb5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e16ad8e07e725faa46ebc35500cf205fc03250075ddc050c263814b8d16d141db4ca289f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;386719b28a09a8e5934722202beb3429899b016dfeb972fee487cdd8d18f8a681042624f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;51&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;f43937922444421042f76756fbed0338b354516f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/>6848,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;21b9a9686ec200456c414f2e6963e2d59e8b57e654eced3d4b57fe565b51c9045c697566&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;44c953178f0a64a6e44d1b46f58763c6a71ce4c373b0821c0b3927a64159c32125ec916b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6edd9bf41c3d80725b9675d6a97c8a7e3b662fac9dbcf6379a319a805b5341a8d360fe00&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5a5c9ac1976094fea43566d66d220aee5901bd1f2d98036b2d27eb36843e94b2e5d1f09c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;738ec826de6e0034cf8b1dca873104c5c33704cae290177d491d65f307c50a69b5c81936&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a050e1fe2b4a6f296e73549323b6a885c3b54ee5eca67aa90660719126b590163203909e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;470608f157f033f017bcf48518bf17d63380dabe2bc9ac7d8efe34aedcae957aeb68f10c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8ad02c4465f1f2b029d5fbb8e8538d18be294394b54b0ee6e67a79fce11731604f3ac4f8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d6ffa9ef3d2081f3d1c99ca107a7bf3d624324a7978ec38af0bcd0d7ee568572328b212b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9dc831efb7880e3f4d6ca7e25f8e80d73913fb8edfffd758ae4df61b4140634a92f49314&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6138ebdcdaa083ea72d52a601230aa6f77874dcad9479f5bcac3763662cc30cb99823c5f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f469dcbd64c028286b0e579580fd3a17b56b099b97bf62d555798f7a250e08b0e4f238c3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fcf684198bd48a68c208a6268be2bb416eda3011b523388bce8357b7f26122640420461a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bcabcb5004519adfa2d43db718bce7d0c8f1b4645c89315c65df1f0842e5741244bba3b5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;10801d2a446818635d0e8ffcd80c8a6f97ca9f878793b91780ee18eb6c2b99ffac3c38ef&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b7c6d3af0478317c2b9c421247eba8209ea677f984e2398c7c243696a12df2164417f602&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d7a1d33809c865b73397550ff33fe116166ae0ddbccd00e2b6fc538733830ac39c328018&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bcb87ac52474ad3cce8780d6002e14c6734f814cb551632bcc31965c1cd23d048b9509a4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e22ab88f76a6dba209d5dd2febd1413a64d32be8574a22341f2a14e4bd879abb35627ef1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;35c37be0f80843006a7cc7158d2bb2a71bf536b36de20ca09bb5b674e5c408485106e6fa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;966e4f2139779b46f6010051615b5b41cda12d206d48e436b9f75d7e1398a656abb0087a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a0eb453368fc1ecc71a31846080f804d7b67ad6a7aa48579c3a1435eff7577f4e6004d46&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aac4130293f6f62ae6d50c0d0c3b9876f0728923a94843785966a27555dd3ce68602e7d9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0f7c7c552f9bda4969ec2dc3e30a70620db6300e822a93e633ab9a7a&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;5d4d18b24b877092188a44be4f2e80ab1d41e795&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/>7640,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1c87f48f4409c3682e2cf34c63286dd52701b6c14e08669851a6dc8fa15530ad3bef692c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7d2bf02238644561069df19bdec3bccae5311fce877afc58c7628d08d32d9bd2dc1df0a6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;24360e505944219d211f33bff62e9ff2342ac86070240a420ccaf14908e6a93c1b27b6e2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0324e522199e83692805cc4c7f3ea66f45a490a50d4dd558aa8e052c45c1a5dfad452674&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;edc7149024c09024913f004ceee90577ff3eaec96a1eebbdc98b440ffeb0cad9c6224efc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9267d2c192b53dc012fb53010926e362ef9d4238d00df9399f6cbb9acc389a7418007a6c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a926c59359e3608b548bdeece213f4e581d02d273781dffe26905ec161956f6dfe1c008d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6da8165d08f8062eea88e80c055b499f6ff8204ffdb303ab132d9b0cba1e5675f3525bbe&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4cf2c3f2b00506f58336b36aefd865d37827f2fad7d1e59105b52f1596ea19f848037dfe&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dc9136e824ead5505e2995d4c0769276548835430667f333fc77375125b29c1b1535602c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;10fe161864f49a98fc274ae7335a736be6bf0a98cd019d120b87881103f86c0a6efadd8c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aa405b6855c384141b4f8751cc42dc0cb2913382210baaa84fe242ca66679472d815c08b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f3d1a7c6b5705a3de17ad157522de1eb90c568a8a1fbcbb422cca293967bb14bfdd91bc5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a9c4d2774dee524057e08f937f3e2bd8a04ced0fc7b16fb78a7b16ee9c6447d99e53d846&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3726c59066af25c317fc5c01f5dc9125809e63a55f1cd7bdf7f995ca3c2655f4c7ab940f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2aa48bc3808961eb48b3a03c731ce627bb67dd0037206c5f2c442fc72704258548c6a9db&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e16da45e40da009dc8b2600347620eff8361346116b550087cb9e2ba6b1d6753622e8b22&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;85589b90a8e93902aa17530104455699a1829efef153327639b2ae722d5680fec035575c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3b48d9ec8c8e9550e15338cc76b203f3ab597c805a8c6482676deabc997a1e4ba857a889&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;97ceba32431443c53d4d662dd5532aa177b373c93bf93122b72ed7a3189e0fa171dfabf0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;520edf4b9d5caef595c9a3a13830c190cf84bcf9c3596aadb2a674fbc2c951d135cb7525&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3ee6c59313444f48440a381e4b95f5086403beb19ff640603394931f15d36b1cc9f3924f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;794c965d4449bfbdd8b543194335bdf70616dc986b49582019ac2bf8e68cfd71ec67e0aa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dff63db39e6a0ef207f74ec6108fae6b13f08a1e6ae01b813cb7ee40961f95f5be189c49&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c43fbf5c594f5968e4e820a1d38f105f2ff7a57e747e4d059ffb1d0788b7c3c772b9bc1f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e147c723aca999015230d22c917730b935e902092f83e0a8e6db9a75d2626e0346e67e40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8d5b815439dab8ccb8ea23f828fff6916c4047&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;32e0f5d40ceec1fbe45ddd151c76c0b3fef1c938&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1758"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/>8432,</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;084f04f8d44b333dca539ad2f45f1d94065fbb1d86d2ccf32f9486fe98f7c64011160ec0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cd66c9c7478ed74fde7945b9c2a95cbe14cedea849978cc2d0c8eb0df48d4834030dfac2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b043e793b6094a88be76b37f836a4f833467693f1aa331b97a5bbc3dbd694d96ce19d385&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c439b26bc16fc64919d0a5eab7ad255fbdb01fac6b2872c142a24aac69b9a20c4f2f07c9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;923c9f0220256b479c11c90903193d4e8f9e70a9dbdf796a49ca5c12a113d00afa844694&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;de942601a93a5c2532031308ad63c0ded048633935f50a7e000e9695c1efc1e59c426080&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a7d1e69a93982a408f1f6a4769078f82f6e2b238b548e0d4af271adfa15aa02c5d7d7052&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6e00095ffb7b74cbee4185ab54385f2707e8362e8bd1596937026f6d95e700340b6338ce&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ba1ee854a621ce1e17a016354016200b1f98846aa46254ab15b7a128b1e840f494b2cdc9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;daccf14107c1e149a7fc27d33121a5cc31a4d74ea6945816a9b7a83850dc2c11d26d767e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ec44c74b83bfd2ef8a17c37626ed80be10262fe63cf9f804b8460c16d62ae63c8dd0d124&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1d8aaac5f220e750cb68d8631b162d80afd6b9bf929875bf2e2bc8e2b30e05babd8336be&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;31e41842673a66a68f0c5acd4d7572d0a77970f42199a4da26a56df6aad2fe420e0d5e34&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;448eb2ed33afbfb35dffaba1bf92039df89c038bae3e11c02ea08aba5240c10ea88a45a1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d0a8631b269bec99a28b39a3fc5b6b5d1381f7018f15638cc5274ab8dc56a62b2e9e4fee&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f172be20170b17ec72ff67b81c15299f165810222f6a001a281b5df1153a891206aca89e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e7baa761a5af7c0493a3af840b9219e358b1ec1dd301f35d4d241b71ad70337bda42f0ea&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dc9434a93ed28f96b6ea073608a314a7272fefd69d030cf22ee6e520b848fa705ed6160f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e54bd3bf5e89608506e882a16aced9c3cf80657cd03749f34977ced9749caa9f52b683e6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4d96af371b293ef4e5053a8ea9422df9dd8be45d5574730f660e79bf4cbaa5f3c93a79b4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0f0e4e86e0fd999ef4f26c509b0940c7a3eaf1f87c560ad89aff43cd1b9d4863aa3ebc41&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a3dd7e5b77372b6953dae497fc7f517efe99e553052e645e8be6a3aeb362900c75ce712d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fcba712c4c25583728db9a883302939655ef118d603e13fcf421d0cea0f8fb7c49224681&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d013250defa7d4fd64b69b0b52e95142e4cc1fb6332486716a82a3b02818b25025ccd283&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;198b07c7d9e08519c3c52c655db94f423912b9dc1c95f2315e44be819477e7ff6d2e3ccd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;daa6da27722aaadf142c2b09ce9472f7fd586f68b64d71fc653decebb4397bf7af30219f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;25c1d496514e3c73b952b8aa57f4a2bbf7dcd4a9e0456aaeb653ca2d9fa7e2e8a532b173&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5c4609e9c4f393dd70901393e898ed704db8e9b03b253357f333a66aba24495e7c3d1ad1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b5200b7892554b59532ac63af3bdef590b57bd5df4fbf38d2b3fa540fa5bf89455802963&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;036bd173fe3967ed1b7d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ee976e4ad3cad933b283649eff9ffdb41fcccb18&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1791"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/>9224,</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bd8320703d0cac96a96aeefa3abf0f757456bf42b3e56f62070fc03e412d3b8f4e4e427b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c47c4600bb423b96de6b4910c20bc5c476c45feb5b429d4b35088813836fa5060ceb26db&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bb9162e4acd683ef879a7e6a0d6549caf0f0482de8e7083d03ed2f583de1b3ef505f4b2c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cd8a23d86c09d47ba05093c56f21a82c815223d777d0cabb7ee4550423b5deb6690f9394&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1862ae41590ea7a580dda79229d141a786215d75f77e74e1db9a03c9a7eb39eb35adf302&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5e26eb31ca2d2ca507edca77d9e7cfcfd136784f2117a2afafa87fa468f08d07d720c933&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f61820af442d260d172a0a113494ca169d33a3aeaacdcc895b356398ed85a871aba769f6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;071abd31e9f2f5834721d0fef6f6ee0fc0e38760b6835dfcc7dbefb592e1f0c3793af7ad&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f748786d3364f3cfd5686b1a18711af220e3637d8fad08c553ce9d5dc1183d48e8337b16&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1fe69b50e1920316dbffec07425b5d616a805a699576590e0939f5c965bce6c7342d314a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c37b9c4d30166567c4f633f182de4d6b00e20a1c762789f915eaa1c89ac31b85222b1f05&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;403dedd94db9ce75ff4e49923d1999d032695fa0a1c595617830c3c9a7ab758732fcec26&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;85ae14350959b6a5f423ef726587e186b055a8daf6fa8fdefa02841b2fdbca1616dcee78&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c685fc6dcc09f24a36097572eba3c37a3eabe98bc23836085f63ef71a54b4488615d83b2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6ed28c9fce78852df9b6cf8a75ca3899a7567298e91bc4ffdd04ffab0066b43b8286a4bb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;555c78808496b252c6e0e4d153631f11f68baf88630e052acc2af5d2af2e22e4f23bb630&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;314c561a577455f86b6727bcad3c19d3e271404dec30af3d9dd0ed63cd9fa708aadfa12a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;500ef2d99a6b71e137b56ba90036975b88004b45f577ef800f0fb3cf97577dc9da37253b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8675e5c8bb7e0bd26564f19eca232fb25f280f82e014424c9fbdd1411d7556e5d7906bb8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;62206316ba03385cd820c54c82ed35b36735bc486b1885d84053eba036c1ebfb5422d93d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a71c53deda7f74db07cd4959cdfa898ba37080d76b564d344b124dd7b80cd70ed3b52a6c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f9c9a32695d134bd39eb11ddeecdac86c808e469bd8a7995b667c452e7d9a54d5c85bcf6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d5ffdc27d491bc06f438f02c7cf018073431587c78ba08d18a8daccb2d3b26136f612ade&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c673f3cd5eb83412b29652d55a10d0d6238d0b5365db272c917349450aff062c36191cfc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d45660819083f89cd42ecae9e26934a020cafeb9b2b68d544edf59574c0ca159fd195dbf&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3e3e74244d942fffdbd4ed7f626219bab88b5a07e50b09a832d3e8ad82091114e54f2c35&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6b48e55e36589ebad3ac6077cb7b1827748b00670df65bbf0a2e65caad3f8a97d654d64e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1c7dad171cafbc37110d2f7ca66524dc08fe60593e914128bd95f41137bfe819b5ca835f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e5741344b5c907ce20a35f4f48726141c6398e753ed9d46d3692050628c78859d5014fe4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dd3708e58d4d9807f8dac540492e32fa579491717ad4145c9efc24cf95605660b2e09b89&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9369b74d3ebff41e707917ff314d93e6ac8dfd643ef2c087cd9912005b4b2681da01a369&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;42a756a3e22123cbf38c429373c6a8663130c24b24b2690b000013960b1c46a32d1d5397&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;47&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2df09b10933afedfcd3f2532dfd29e7cb6213859&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/>10016,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7a94978bec7f5034b12c96b86498068db28cd2726b676f54d81d8d7350804cc106bead8a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;252b465a1f413b1c41e5697f8cece49ec0dea4dfb9fa7b1bfe7a4a00981875b420d094bb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1ce86c1b8c2e1dbebf819c176b926409fdec69042e324e71d7a8d75006f5a11f512811fe&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6af88a12f450e327950b18994dfc3f740631beda6c78bca5fe23d54e6509120e05cd1842&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d3639f1466cf26585030e5b4aefe0404fe900afc31e1980f0193579085342f1803c1ba27&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0568f80eaf92440c4f2186b736f6ab9dc7b7522ccdcfc8cf12b6375a2d721aa89b5ef482&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;112a42c31123aebabcb485d0e72d6b6b70c44e12d2da98d1f87fa9df4f37847e1ffec823&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1b8be3d737d282ddb9cc4b95937acfa0f028ba450def4d134a7d0fc88119bf7296e18cd4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4f56890b661b5b72ddfa34c29228067e13caf08eb3b7fd29de800df9a9ae137aad4a81a4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;16a301c9f74b66c0e163e243b3187996b36eb569de3d9c007d78df91f9b554eef0eaa663&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;88754ce20460b75d95e2d0747229a1502a5652cf39ca58e1daa0e9321d7ab3093981cd70&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;23a7ee956030dd70177028a66ad619ad0629e631f91228b7c5db8e81b276d3b168c1edb1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bc0888d1cbcbb23245c2d8e40c1ff14bfe13f9c70e93a1939a5c45eef9351e795374b9e1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b5c3a7bd642477ba7233e1f590ab44a8232c53099a3c0a6ffe8be8b7ca7b58e6fedf700f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6f03dd7861ee1ef857e3f1a32a2e0baa591d0c7ca04cb231cc254d29cda873f00d68f465&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;00d6101cfdc2e8004c1f333d8007325d06ffe6b0ff7b80f24ba51928e65aa3cb78752028&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;27511207b089328bb60264595a2cebfc0b84d9899f5eca7ea3e1d2f0f053b4e67f975500&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7ff3705ca4178ab9c15b29dd99494135f35befbcec05691d91f6361cad9c9a32e0e65577&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f14d8dc66515081b51d09e3f6c25eea868cf519a83e80c935968cae6fce949a646ad53c5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6ee1f07dda23daef3443310bc04670afedb1a0132a04cb64fa84b4af4b3dc501044849cd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dd4adb8d733d1eac9c73afa4f7d75864c87787f4033ffe5ba707cbc14dd17bd1014b8b61&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;509c1f55a25cf6c0cbe49e4ddcc9e4de3fa38f7203134e4c7404ee52ef30d0b3f4e69bcc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7d0b2e4d8e60d9970e02cc69d537cfbc066734eb9f690a174e0194ca87a6fadad3883d91&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6bd1700a052b26deee832701590d67e6f78938eac7c4beef3061a3474dd90dd588c1cd6e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6a4cda85b110fd08a30dcd85a3ebde910283366a17a100db920885600db7578be46bcfa6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4765ba9a8d6d5010cb1766d5a645e48365ed785e4b1d8c7c233c76291c92ef89d70bc77f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bf37d7ce9996367e5b13b08242ce73971f1e0c6ff2d7920fb9c821768a888a7fe0734908&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;33efb854cbf482aed5cb594fb715ec82a110130664164db488666d6198279006c1aa521f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9cf04250476c934eba0914fd586f62d6c5825b8cf82cd7ef915d93106c506ea6760fd8b0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bf39875cd1036b28417de54783173446026330ef701c3a6e5b6873b2025a2c1666bb9e41&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a40adb4a81c1052047dabe2ad092df2ae06d6d67b87ac90be7d826ca647940c4da264cad&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;43c32a2bb8d5e27f87414e6887561444a80ed879ce91af13e0fbd6af1b5fa497ad0cbd2e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7f0f898f52f9e4710de2174e55ad07c45f8ead3b02cac6c811becc51e72324f2439099a0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5740090c1b165ecae7dec0b341d60a88f46d7ad8624aac231a90c93fad61fcfbbea12503&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;59fcd203862a6b0f1d71ac43db6c58a6b60c2c546edc12dd658998e8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;f32e70862a16e3e8b199e9d81a9949d66f812cad&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/>10808,</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;88dd7f273acbe799219c23184782ac0b07bade2bc46b4f8adbd25ed3d59c0fd3e2931638&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;837d31998641bbb7374c7f03d533ca60439ac4290054ff7659cc519bdda3dff2129a7bdb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;66b3300068931ade382b7b813c970c8e15469187d25cb04b635403dc50ea6c65ab38a97c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;431f28a41ae81c16192bd0c103f03b8fa815d6ea5bf0aa7fa534ad413b194eb12eb74f5d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;62b3d3a7411eb8c8b09a261542bf6880acbdfb617a42e577009e482992253712f8d4c8bd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1c386bad068c7aa10a22111640041f0c35dabd0de00ebf6cd82f89cbc49325df12419278&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ec0d5ebb670577b2fe0c3e0840c5dd0dc5b3da00669eed8ead380f968b00d42f4967faec&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c131425fce1f7edb01cbec7e96d3c26fa6390a659e0ab069ef3edadc07e077bb816f1b22&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;98830a0fe2b393693bb79f41feca89577c5230e0a6c34b860dc1fdb10d85aa054481082c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;494779d59ba798fcd817116c3059b7831857d0364352b354ce3b960fbb61a1b8a04d47ca&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a0ead52a9bea4bada2646cdbaec211f391dac22f2c5b8748e36bfc3d4e8ea45131ca7f52&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;af09df21babe776fcecbb5c5dfa352c790ab27b9a5e74242bbd23970368dbefd7c3c74d1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;61ae01c7e13c65b415f38aa660f51b69ea1c9a504fe1ad31987cb9b26a4db2c37d7b326c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;50dbc8c91b13925306ff0e6098532dee7282a99c3ddf99f9e1024301f76e31e58271870b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d94b9356e892a6a798d422a48c7fd5b80efe855a4925cc93b8cf27badec5498338e2b538&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;70758b45d3e7a2fa059ed88df320a65e0a7cf87fa7e63b74cea1b7371e221f8004726642&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;30d4d57945a85b23d58f248c8cd06ccfabfa969ab8cb78317451fab60e4fdfa796e2e2a8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b46405839a91266d37e8d38bae545fb4060c357923b86d62f5d59d7bef5af20fbb9c7fb4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2c6fd487748ed3b9973dbf4b1f2c9615129fa10d21cc49c622842c37c01670be71715765&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a98814634efbdee66bf3420f284dbd3efafc8a9117a8b9a72d9b81aa53ded78c409f3f90&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bad6e30d5229e26f4f0cea7ee82c09e3b60ec0e768f35a7fb9007b869f9bfc49c518f648&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3c951d3b6e22505453266ec4e7fe6a80dbe6a2458a1d6cd93044f2955607412091009c7d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6cd81648a3b0603c92bfdff9ec3c0104b07ed2105962ca7c56ede91cb932073c337665e2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;409387549f9a46da05bc21c5126bd4b084bc2c06ab1019c51df30581aa4464ab92978c13&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f6d7c7ac8d30a78f982b9a43181bbe3c3eb9f7a1230b3e53b98a3c2a028317827fbe8cf6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ec5e3e6b2a084d517d472b25f72fab3a34415bba488f14e7f621cfa72396ba40890e8c60&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b04815601a0819c9bebc5e18b95e04be3f9c156bd7375d8cc8a97c13ce0a3976123419fa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;592631317ca638c1182be06886f9663d0e8e6839573df8f52219eeb5381482a6a1681a64&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;173660bfbb6d98bf06ee31e601ee99b4b99b5671ed0253260b3077ed5b977c6a79b4ff9a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;08efd3cba5c39bec1a1e9807d40bbf0c988e0fd071cf2155ed7b014c88683cd869783a95&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4cbfced9c0e80c3a92d45b508985cbbc533ba868c0dc4f112e99400345cf7524e42bf234&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5a129e53da4051c429af2ef09aba33ae3c820ec1529132a203bd2b81534f2e865265f55c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9395caf0e0d3e1762c95eaaec935e765dc963b3e0d0a04b28373ab560fa9ba5ca71ced5d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;17bb8b56f314f6f0d0bc8104b3f1835eca7eaac15adf912cf9a6945cfd1de392342dd596&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d67e7ffcb7e086a6c1ea318aa2e0c2b5c2da079078232c637de0d317a1f26640bc1dac5b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e8699b53edc86e4bfdfaf797a2ae350bf4ea29790face675c4d2e85b8f37a694c91f6a14&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1fd561274392ee6ee1a14424d5c134a69bcb4333079400f03615952fc4c99bf03f5733a8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dc71524269fc5c648371f5f3098314d9d10258&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;08632c75676571a5db5971f5d99cb8de6bf1792a&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/>11600,</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;85d43615942fcaa449329fd1fe9efb17545eb252cac752228f1e9d90955a3cf4e72cb116&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3c3d8e93ccb7e4826206ff58b3e05009ee82ab70943db3f18a32925d6d5aed1525c91673&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bd33846571af815b09bb236466807d935b5816a8be8e9becbe65d05d765bcc0bc3ae66c2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5320ebe9fff712aa5b4931548b76b0fd58f6be6b83554435587b1725873172e130e1a3ca&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3d9d0425f4632d79cca0683780f266a0633230e4f3b25f87b0c390092f7b13c66ab5e31b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5a58dbcac8dd26a0600bf85507057bb36e870dfae76da8847875a1a52e4596d5b4b0a211&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2435d27e1dc8dd5016d60feaf2838746d436a2983457b72e3357059b2bf1e9148bb0551a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e2b27d5a39abd3d1a62c36331e26668e8baabc2a1ef218b5e7a51a9ca35795bcd54f403a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;188eafafb30d82896e45ddaea4f418629a1fb76a0f539c7114317bac1e2a8fba5a868bce&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;40abd40f6b9ced3fa8c0329b4de5ca03cc84d75b8746ef31e6c8d0a0a79b4f747690928e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;be327f8bbe9374a0df4c39c845bf3322a49fda9455b36db5a9d6e4ea7d4326cf0e0f7cd8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0ff74538f95cec01a38c188d1243221e9272ccc1053e30787c4cf697043cca6fc3730d2a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;431ecbf60d73ee667a3ab114c68d578c66dc1c659b346cb148c053980190353f6499bfef&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;acfd1d73838d6dc1188c74dd72b690fb0481eee481a3fd9af1d4233f05d5ae33a7b10d7d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d643406cb1f88d7dd1d77580dcbee6f757eeb2bfbcc940f2cddb820b2718264b1a64115c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b85909352c44b13d4e70bbb374a8594d8af7f41f65b221bf54b8d1a7f8f9c7da563550cb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2b062e7a7f21d5e07dd9da8d82e5a89074627597551c745718094c2eb316ca077526d27f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9a589c461d891dc7cd1bc20ba3f464da53c97924219c87a0f683dfb3b3ac8793c59e78ac&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fac109439221ac599a6fd8d2754946d6bcba60784805f7958c9e34ff287ad1dbbc888848&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fa80cc4200dbb8c5e4224535906cbffdd0237a77a906c10ced740f9c0ce7821f2dbf8c8d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7d41ecfcc7dfdc0846b98c78b765d01fb1eb15ff39149ab592e5dd1152665304bba85bbf&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4705751985aaaf31245361554d561a2337e3daeef58a826492fd886d5f18ef568c1e772e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f6461170407695e3254eb7bf0c683811ddde5960140d959114998f08bdb24a104095987d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3255d590e0dbd41ae32b1ae4f4ea4a4f011de1388034231e034756870c9f2d9f23788723&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;27055a7de2b5e931dfb53e7780b6d4294bf094e08567025b026db9203b681565a1d52f30&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;318d0ebe49471b22ba5fd62e1ed6c8966c99b853c9062246a1ace51ef7523c7bf93bef53&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d8a9cb96d6a04f0da1eca888df66e0380a72525a7ecc6115d08569a66248f6ba34e2341b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fd01a78f7b3c1cfe0754e0d26cba2fa3f951ef14d5749ff8933b8aba06fa40fb570b467c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;54ce0d3f0bed21e998e5a36b3bc2f9e1ae29c4bab59c121af6fad67c0b45959cd6a86194&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;14b90b4535fb95f86ca7e64502acc135eff4f8a3abe9dde84238fab7a7d402454a3f07ad&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ec05ec94b2891e0879037fae6acaa31dcecf3f85236ade946f5ad69ad4077beb65099285&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;38ee09f2bc38e5704da67b5006b5e39cd765aafcd740c7dadb99d0c547126e1324610fcb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7353dac2c110e803fca2b17485b1c4b78690bc4f867e6f043b2568889f67985a465a48eb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ee915200589e915756d4968d26529c3ffe3dbe70e84c682ad08a0c68db571634fbb0210d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c1b16b8b725886465c8c51f36a5e27d0f78e5643e051d3bddd512ce511f6bdf3dfe42759&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;00c5fea9d248c2b3f36911ed0ff41a19f6445521f251724657ea8f795b3ead0928a1657f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;308dd7c7c1e7e490d9849df43becfa5cc25ed09ef614fd69ddc7e5e3147623901d647876&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fb60077ffc48c51ed7d02b35f6802e3715fc708a0c88b82fe9cba0a442d38d09ca5ae483&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;21487bdef1794e7636bf7457dd2b51a391880c34d229438347e5fec8555fe263f08ba87b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b16dcde529248a477628067d13d0cb3bf51776f4d39fb3fbc5f669e91019323e40360e4b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;78b6584f077bf9e03b66&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ab7213f6becb980d40dc89fbda0ca39f225a2d33&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/>12392,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7ae3ca60b3a96be914d24980fb5652eb68451fed5fa47abe8e771db8301fbd5331e64753&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;93d96a4010d6551701e5c23f7ecb33bec7dd7bade21381e9865d410c383a139cb4863082&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8e9372bd197c5b5788b6599853e8487bddfd395e537772fdd706b6a1de59c695d63427da&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0dc3261bce2e1ae3cd6de90ec45ecd7e5f14580f5672b6ccd8f9336330dffcd6a3612a74&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;975afc08fb136450e25dc6b071ddfc28fca89d846c107fd2e4bd7a19a4ff6f482d62896d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a583c3277e23ab5e537a653112cdf2306043b3cc39f5280bd744fe81d66f497b95650e7d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dfd704efcb929b13e00c3e3a7d3cd53878af8f1506d9de05dba9c39a92604b394ea25acb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a2cda7b4ae8b08098ba3f0fdea15359df76517be84377f33631c844313ac335aa0d590fe&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c472d805521f0905d44ca40d7391b292184105acd142c083761c1a038c4f5ed869ea3696&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;99592a37817f64cb4205b66be1f1de6fa47a08e1bf1a94312fe61a29e71bab242af95a7b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;38d4fb412c682b30256d91e2a46b634535d02b495240cbdb842cbe17cba6a2b94073f3d5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f9621ac92ddda66f98bed997216466b4bb0579d58945f8d7450808d9e285d4f1709d8a1d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;416aa57d4a1a72bfcbfecdda33de2cff3e90e0cc60c897c4663224fc5bbe8316a83c1773&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;802837a57bc7e9238173ed41ea32fe5fe38e546014a16d5e80700d9bac7a84bb03902f31&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;79e641f86f6bc383d656daf69801499633fb367ea7593195934c72bc9bf9624c0c845ebf&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c36eb7ad4b22fdfb45ca7d4f0d6708c69a21f6eaa6db6bde0f0bd9dc7ec9c6e24626d0a7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8fbeeed4b391f871e80e6a9d207165832d4ff689296f9bca15dc03c7c0381659ea5335eb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aafdc3e50d18e46b00f1844870d09c25afcdb0ff1ae69dd8f94f91aca6095ba6f2b6e594&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c4acfe9903485d21b684e31a6acc2162d40e1a7bb8114a860a07e76f5265666555f2418d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f11ef8f7499656d12215f5da8d7d041ac72648d15d7661ad93b24f3f071334b0921d5bb0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6f2c7ab09f5034518b5ae21cec379373e87d51c77d44a70c2337606aadeb9036716fd920&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a824e7ae18ce3de9f0ec3456f3454027d8c476b3f1854b240c309f6f9786fa8a073915d9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7a019ce99aec3260c5f6b6346cd9c41cb9267f4475958e45289965548238c6b9f91a8784&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b4e0957ba8b73956012c9a2fc3428434b1c1679f6ed2a3e8e2c90238df428622046f668e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e2b053f55e64ffd45600e05a885e3264af573bacee93d23d72a0222b5442ac80bc0a8b79&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4c2afcf3bc881d20c111f57e3450b50a703f3db1fc5de2076a006f3b7eed694b93269874&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3b03c2ed2684bad445e69a692e744c7ac3a04f1e0e52b7a6708076d1fbffdb3f1c995828&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7d5f884e29407030f2db06811092efd80ae08da9daec39744c5ecd3ca771663b8f4968d4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2a88c2c9821c73ae2a5a4d9e2551f82c03583b9c4dea775423b4748d24eb604e8ee3159b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a6de9bea5b22eed6264e011734ed02b2c74ce06dda890b8604ed7ba49e7bf30e28c9871b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e90f5cead67eaf52b5d3181c822b10701219b28ef6f6bebfa278e38acf863e2a1d4b1e40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fd8a0ac6ce31054446301046148bf10dc3ae3385e2026e7762bdc8003ffebc4263191a59&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c72f4f90db03e7d52808506b33bfe1dfa53f1a3daa152e83974fbe56cfd4e8f4e7f7806a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;084b9d0795b858100eced0b5355a72446f37779d6c67ade60a627b8077ae1f3996b03bc3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a5c290651c8609f0d879fbf578cbab35086e1159dd6ddbe3bf7fb5654edcc8f09e4f80d0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;258c9376d7c53fb68f78d333b18b70170d9a11070790c956f5744c78c986b1baf08b7631&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7a65c5f07ae6f57eb0e65488659324d29709e3735623d0426e90aa8c4629bb080881150c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;02be1c004da84414ac001c2eb6138c26388f5a36d594f3acef0e69e2cb43b870efa84da0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cff9c923a9880202aed64ad76260f53c45bb1584b3e388a909d13586094b924680006a1d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;25d4dd36c579a8ec9d3fa63c082d977a5a5021440b5314b51850f2daa6e6af6ae88cb5b1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;44242bceb1d4771e641101f8abfc3a9b19f2de64e35e76458ad22072ba57925d73015de5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;66c66fcaa28fdc656f90de967ad51afd331e246d74ed469d63dd7d219935c59984bd9629&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;09d1af296eb3121d782650e7d038063bab5fa854aac77de5ffebeb53d263f521e3fc02ac&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;70&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;b0e15d39025f5263e3efa255c1868d4a37041382&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1997"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/>13184,</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fa922061131282d91217a9ff07463843ae34ff7f8c28b6d93b23f1ea031d5020aa92f660&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8c3d3df0ee24a8958fd41af880ee454e36e26438defb2de8f09c018607c967d2f0e8b80a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;00c91c0eabe5b4c253e319b45e6106ff8bf0516f866020e5ba3f59fd669c5aeff310ebb3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;85007069d01c64f72d2b02f4ec0b45c5ecf313056afcb52b17e08b666d01fecc42adb5b4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9ea00c60cacac2e0a953f1324bdd44aec00964a22a3cb33916a33da10d74ec6c6577fb37&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5dc6ac8a6ad13e00cba419a8636d4daac8383a2e98fe90790cde7b59cfaa17c410a52abc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d68b127593d2fcbafd30578d195d890e981ae09e6772cb4382404a4e09f1a33c958b57db&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ccee54ae335b6c91443206a0c100135647b844f226417a1f70317fd350d9f3789d81894a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aff4730072401aaeb8b713ead4394e2e64b6917d6eee2549af7bd0952f12035719065320&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ca0d2dfe2847c6a2357c52bee4a676b12bafff66597bd479aa29299c1896f63a7523a85a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b7b916c5930ab66b4d191103cefc74f2f7e0e96e354f65e355ae43959a0af1880d14ea9d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1569e4fd47174aba7f5decb430b3f6baf80a1ef27855227b62487250d3602970e423423c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7ca90920685bcf75adfbe2a61ce5bd9228947b32f567927cb1a5bd8727c03aef91d6367b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ae7d86fd15c0977ac965a88b0d7236037aefb8d24eec8d2a07c633e031a7b9147c4c7714&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;110bfc7e261448a5d0f73c3619664e1c533c81a0acbf95d502227a33f84f0b8249e3f9fa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5c7905a8192b7313fc56bb20679e81333d32c797ac5162204a0eaa0e64507635921c485b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8f17c4e2484667a733197529e2a833eed83c57229b11bd820b5a5b78f1867787dbc217ea&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;28bfba785fb545cbc5a840a12eea428213e1aaa4e50a900ba13efcf4a5345574c2481c5d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;927ada610bba567a55630c89d905db3d9b67fe36c9cc3d6a947664c83e69f51c74711a33&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;df66dd3ff6af9b7c1605b614d4798b4192b9a4b1508f2e2ec5aaad7eaea1ee8867353db9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b8d7d9a6f16aa5f339492073238c979082879aee7f94ac4be8133eaacbaedfb044e2ad4e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;93ba0fa071dea615a5cd80d1d2678f4f93ae5a4bc9cdf3df345a29ec41d8febb23805ce4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2541036f3f05c63ae736f79a29802045fad9f370cabf843458c1b636ca41f387fd7821c9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1abbd1946afcb9186b936403233f28a5b467595131a6bc07b0873e51a08de66b5d7709a6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;02c1bd0e7f6e8f4beb0579c51bda0e0c738ef876fcd9a40ab7873c9c31c1d63a588eebc7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8d9a0ae6fa35cd1a269e0d2bc68252cbd7c08d79e96f0aa6be22a016136a2b8abe9d3c9c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f9d60eeafe3dbc76d489b24d68c36167df4c38cf2b21cf03dc5e659e39018c3490f1237e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ca3f85b742ab0045d86a899c4126ad60a147cbc95b71814c274d6478668df41eb32acfb4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bbf024fb4e3d6be0b60653a0471afc3037ab67dcb00a2b2e24b26911e1880136e56106b7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f3c570fbe6f311d94624cb001914ff96fbbf481f71686aa17be0850568058fc1ee8900b4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7af5cf51c5ed9e00a8b532c131f42513f6b8df14a9bbc2e9ede5a560681184d41a147552&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;edfbdef98d95e6a7793229d25ba9b0b395a020aa1c0731de89e662246d59ec22e5d8f4b4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6fbc048efcffbc234744c5c66417070f9c751c81788f04691ccb1a09d60c46f6f73375bf&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e2e646cf6290069541a8dfe216374c925e94d06ece72e851e81d3e8acd011f82526c2f9f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;55955c6752dc10e93153ab58627e30fa2c573e4042954337982eec1f741be058c85bad86&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bf3a02ed96d3201dadd48bd4de8105200dfcbcc400c3c3dd717abfc562ebe338b14b1eb5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ecbe9227661e49c58bf8233770d813faafc78b05711135adcc4ce4c65095ca0bdc1debc0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b6e5d195dbc582ce94b3afa14a422edf9b69abd7ae869a78c3a26fb50ef7122ec5af8d0c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;78ef082ca114f8817c3d93b31809870caea2eb9533fa767c2954efb9ba07e4f1077e9f9b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;be845661eabea2c91079321477a7c167c7234528d63d6aabbe723e0e337b2e61138a310a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3fd04368aa4215b7af9d0334a8a74681bcb86b4af87a0329a1ed9dc7c9aef14521785eda&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0eeb97bdff8c9945fd0ee04e84d0dae091a69c0bfcdcd4150878fed839c0db6565fc1fed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0e7d6ae2efde7a59d58a9fb3b07e6f7cea51ba93f771c18b2eafa252d7fe171085776052&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a6a17e6858f0a20b7e8be54413523989bf20a028a84d9ce98b78e6ee0b8362df49de5344&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b409cc322354672a21ea383e870d047551a3af71aaf2f44f49a859cf001e61b592dd036f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c6625bf7b91ea0fb78c1563cceb8c4345bf4a9fbe6ee2b6bf5e81083&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;8b6d59106f04300cb57c7c961945cd77f3536b0a&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/>13976,</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;162cca41155de90f6e4b76a34261be6666ef65bdb92b5831b47604ce42e0c6c8d2eda265&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ab9a3716809bf2e745e7831a41768d0f6349a268d9ac6e6adfb832a5d51b75d7951cf60e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;03d9e40de6d351f1f6ade5143531cf32839401ca6dfb9dc7473daa607aeb0c3d1e8eb3db&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cc2f1231ad1dd394d7eac9d8dab726b895b1ee774fdcabc8031063ecfa41c71a9f03ad23&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;904cc056f17c76a1059c43faffe30dfd157fdfd7d792e162bf7a889109550a0fc4c41523&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2af0c0d72dcbc2595299e1a1c2aeae549f7970e994c15e0ab02f113d740d38c32a4d8ec0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;79cd099d37d954ab7ef2800902cdf7c7a19fb14b3c98aaf4c6ad93fe9a9bc7a61229828e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;55ad4d6270d1bdbca9975d450f9be91e5699bd7ee22e8c9c22e355cf1f6793f3551cb510&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c1d5cd363bdf8cab063e6e49a6383221f1188d64692c1f84c910a696de2e72fb9886193f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;61ab6b41ad0ea894d37ff1261bf1fd1f187e0d0c38ab223d99ec6d6b1e6b079fc305e24e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2d9500c98676e2d587434495d6e107b193c06fb12d5d8eaa7b0c001d08f4d91cae5bdcae&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6624ee755e95ca8e4c5ef5b903d7f5ba438abeffd6f16d82d88138f157e7a50d1c91fb50&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c770f6d222fcbf6daf791b1f8379e3b157a3b496ddb2e71650c1c4ac4fc5f2aceb5b3228&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ffc44e15c02d4baa9434e60928a93f21bc91cfd3c2719f53a8c9bcd2f2dee65a8bbc88f9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5d7ced211fc3b04f6e8b74eb2026d66fd57fa0cccea43f0a0381782e6fee5660afed674d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;cb2c28cb54d2bdbbaf78e534b0742ede6b5e659b46cd516d5362a194dd0822f6417935c4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ff05815b118fe5687cd8b050240015cfe449d9dfde1f4fdb105586e429b2c1849aac2791&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ef73bc54603190eba39037ec057e784bb92d497e705dfcde2addb3514b4f1926f12d5440&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;850935779019b23bd0f2977a8c9478c424a7eaaeec04f3743a77bee2bec3937412e707bc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;92a070046e2f9c35fe5cc3f755bbb91a182e683591ab7e8cff40633730546e81522f588f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;07bdf142b78e115d2a22d2eb5664fcdb7574c1ee5ba9abd307d7d29078cd5223c222fc69&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;60324c40cc639be84dad96b01059efce7b08538ebef89bafab834609c7e82774a14e5be6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;62067edba6111efa8ae270f5066442b17e3f31a793581c8a3f96d92921ec26981594e28a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;08987d020b97ad2ba5c662836e35fd3fd954bcec52b579528913959d0d942fbf1c4b9910&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ba010c3700359a4eb7616541257f0f7727cc71b580cc903f718ecc408a315b6bbfa7f6e3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;beb9d258804bd2731ee2fb75e763281baf1effc4690a23d5f952ab5d4311d4f5885af2eb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f27cad9f6d84692cb903064bbd11ca751f919b4811b7722c6ec80c360521e34d357b5c8b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ba6d42e5c632730f53add99ab8aa9c607b6796216753086ede158bc670d04900aca66ce8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;357bd72d19fb147b5fde8ee4df6a0184573a2e65ba3fd3a0cb04dac5eb36d17d2f639a6e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b602645f3ab4da9de4c9999d6506e8e242a5a3216f9e79a4202558ecdc74249ad3caaf90&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;71b4e653338b48b3ba3e9daf1e51e49384268d63f37ce87c6335de79175cdf542d661bcd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;74b8f5107d6ab492f54b7c3c31257ecb0b426b77ed2e2ed22bbfdaf49653e1d54e5988fa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d71397546f9955659f22b3a4117fc823a1e87d6fb6fb8ab7d302a1316975e8baf0c0adbd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;35455655f6a596b6ac3be7c9a8ea34166119d5e70dfbc1aa6e14ff98eff95e94ef576656&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5d368ec8857fb0b029bcb990d420a5ca6bc7ab08053eb4dbfc4612a345d56faefc5e03a4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;43520b224de776a5b618e1aa16edc513d5fcefcd413031b0ddc958a6fca45d108fbde065&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3cf2d11cb00a71cd35f57993875598b4e33e2384623a0986859105d511c717c21d6534bf&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;69fd3d7cf1682e4fc25298d90df951e77a316996beac61bb7078988118c906548af92cfe&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;72cd4b102ffad584e5e721a0cdb5621ed07dda8955d84bea57a5afa4ba06289ddfac3a9e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;765538fd9392fc7904cedb65e38cd90967f01845ff819777a22d199f608e62c13e6ba98b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;40824b38c784bdb41d62c4014fc7e8d93be52695e975e54d1ff92b412f451177143d74a6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;bde0ee53a986043ab465a1ef315ac4c538e775ef4178fde5f2ea560a364de18b8fe9578a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ad80027c3fd32dcf0967d9d03789b1cdf19040762f626289cf3af8afe5a8e0a152d9258e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;981872c1ec95cd7f8d65812e55cb5cbd8db61b3f068a23d9652372dfbf18d43a663c5a0d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;026b0898e383ce5c95b0ba7fb5ed6b7304c7c9d3ba64f38d1dc579465148ccfa7271f2e3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e0e97e9ddac7c0874f0f396cf07851638a734df393687b7b0343afd1652ff32a2da17b3a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4c99d79c02256c73f32625527e5666594a8a42a12135eddb022e743371b3ab7b12ad6785&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7635eed03558ac673d17280769b2368056276d5d72f5dbc75525f8a7558bd90b544aa6cb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;dd964e6c70be79441969bfdf471f17a2dc0c92&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6144c4786145852e2a01b20604c369d1b9721019&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2098"><highlight class="normal">},{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/>14768,</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c9bed88d93806b89c2d028866842e6542ab88c895228c96c1f9f05125f8697c7402538b0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6465b7ae33daef847500f73d20c598c86e4804e633e1c4466e61f3ed1e9baadc5723bbed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9455a2ff4f99b852cfe6aa3442852ade0b18e4995ddab4250928165a9441de108d4a293d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1d95935de022aa17f366a31d4f4c4c54557a4235a9d56473444787ddc5c06c87087aef24&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fa8280b7ac74d76ba685e4be7dc705e5a8a97c6c8fbd201ee5bf522438d23371c60c155d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;93352f8fb8cc9421fe4b66ffabad46909c2c1099944fc55ed424c90aecca4f50d0331153&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2e2844c3ff8ecb495de7ab26941cbf177b79ad7b05f918b713c417da8cf6e67db0a2dcee&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a9179d8d636191759e13955f4244f0c4f2d88842e3015641ef0417d6e54144e8246e4591&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6823e2c6e39bfa3b90b97781c44981710689f2ce20e70a26760d65f9971b291e12338461&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8b3b56710dde2afaa2d46b0e2164d5c9482729350a0e256b2aa6b3fb099b618ebd7c11ca&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;62bdf176b502aedfdf9be57a8e4adbca4a4d6d8407984af2f6635f95a1e4930e375eb53f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;245ab2ade5340c281bda87afded1268e537955c9819168bd60fd440533c75c9b1865e03f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;de3a301d165f97aa6da236cf39cf3e49512f6350224f8d76ff02d0d3b9a99e5f70b23b9f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a85f72849fc98790df246c3a0f4437940e60d42b4317f72e2eb055d343a614f7f9648005&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1e4dff186dff476462d9ced24dbb82eaa60cbbf6a0026e64001da36d30f529f48f3688b1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0ce9378ef3f50f5106e5007cd0eb037136254fda4f20d048769bd51a9d8d09a1e469a482&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6aa0e25b6267b5a96abcb6e919a362fdd7b683d2f2dcec40ee5969311c07f6066ee22f36&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;89ca08381c85bea470040e9541e7a451cd43d62c2aa292a9dc4b95e3a7c4de2ba29663f3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8d5002eb64ceba6934bb1b0e2e55fba7fa706b514ebeeae1be4dd882d6512da066246a05&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1d8bd042593bd0513e9cc47806ccdc7097e75bc75b8603834c85cd084e0ade3cc2c2b7e8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;586eac62249f9769f5bdcd50e24e515f257548762db9adf3ee0846d67cfcd723d85d9588&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;09e6dd406f4c2637557c356fc52490a2a0763429ee298a1c72c098bb810e740c15faffc6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1e80cf6e18f86dc0e29bc150ce43ca71f5729356cd966277fd8b32366f6263c3a761b13d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;544a631a25e1c4c8dea8d794abed47ccb4069d20f1dcb54e40a673ffb5f7b2eb31fb7d44&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;36fd8252f92dc35bb9a18fc55099b17e0807e79caf4f9641ee4bbbc2d6922508bcfae236&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;475bf78bc796548bc8d60659e816af68e5e43352fa64b5086c97c22c60ddcbbbefb9d9ef&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7cd57c64454604793910f4f90aedb4fb824a86061a93bb79c9b0272a1ad0d24e8165f099&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ef6f14a6a4fea09845f280022e061804090d7ab79f7bddcbef264b6f7d4e9971eddb9ca7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;d0e79a8dbe7cff2fa59f514a608d66ae8c44d5e69745aa1b19995e366812064567d3ca20&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9e12994c901d1b1f489be7253615f7c339b5581afd4d262e879ab8480ecb18990d3db61f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;96895dcde9c065e645f52baafefcbe34d072dba373fd1c786fd56c3f3284be7260eaff9a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6a8348b762ed59e20ea443313b1164db53c3989c32fcae5b366f190b9548e8cff46df961&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;350369b490354ed8e530a91f5072967eff45c63540862fb2deab02b3ae05deac65414368&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ac3549f277da92b692947de47cba9c1579526931e31c3490c1d3605f9bafcf468c2e9b47&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;981407ea40b0b59754621943095a2d4f4ba266ac545fe7447e54f69555a7ac9ff1e8f001&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;834fa65f2d4523061726e4d3bf4680519032dc21b7389e9f3229e4c2295d354482f8b803&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;b06ca3a8cb3ff786e60f6bc59dd3a5bfed63b0aa493bab78e97bbefb6633534d84de826f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4e2ccc3069050d50a2caace6c9de15ffc2656988d94b736e5688df0351a3a6a4c875cd99&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ef304f3cc7a0585df2b0b3e6c62f86bba0d43de47b80c4eec1c4f98e60a36188219919cf&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;36dc10ee11e174a67d226ad9e71f02a7fca26ad67a4862773f3defc6a747545314063e5f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;ce7a3f890ec57daa5532acfd027739832437c8a58dcbe11c2842e60e8ca64979d081fbd5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a1a028f59317212fb5869abc689a156171d69e4f4c93b949c3459904c00192d3603cd184&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;48d64b843c57f34aee7830f313e58e2abc41b44be46a96c845ffebcb7120e21d1d751046&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;c072adf65dd901a39c8019742054be5e159ea88d0885ee05fcd4c189bafe5abb68603186&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5dc570b9342fa7f41fd5c1c87e68371ab19a83c82ae1d890c678102d5da8e6c29845657c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;027ba07362cba4d24950ab38e747925e22ce8df9eaec1ae2c6d23374b360c8352feb6cb9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;913e4fc49bde6caf5293030d0d234a8ecd616023cc668262591f812de208738e5336a9e6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9f9be2479b86be1e1369761518dfc93797ed3a55308878a944581eba50bc9c7f7a0e75c7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6a28acd95b277857726f3f684eefc215e0a696f47d65d30431d710d957c08ef96682b385&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;0ee5ba1c8417aafc1af2846a127ec155b4b7fb369e90eb3a5c3793a3389bbc6b532ca32b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f5e1f03c2280e71c6e1ae21312d4ff163eee16ebb1fdee8e887bb0d453829b4e6ed5fa70&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;8f2053f29b81e277be46&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a757ead499a6ec3d8ab9814f839117354ae563c8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_sha1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[4000];</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sha1_tests)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sha1_tests[0]);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_uint<sp/>len<sp/>=<sp/>sha1_tests[i].length<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digest[20],<sp/>fdig[20];</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(len<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classbuffer" kindref="compound">buffer</ref>));</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(strlen(sha1_tests[i].message)<sp/>==<sp/>len*2);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(strlen(sha1_tests[i].digest)<sp/>==<sp/>20<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(h=0;<sp/>h<sp/>&lt;<sp/>len;<sp/>++h)<sp/>{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v[3];</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[0]<sp/>=<sp/>sha1_tests[i].message[h*2];</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[1]<sp/>=<sp/>sha1_tests[i].message[h*2+1];</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[h]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>strtol(v,<sp/>NULL,<sp/>16);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_sha1(digest,<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(h=0;<sp/>h<sp/>&lt;<sp/>20;<sp/>++h)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v[3];</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[0]<sp/>=<sp/>sha1_tests[i].digest[h*2];</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[1]<sp/>=<sp/>sha1_tests[i].digest[h*2+1];</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>digest[h]<sp/>==<sp/>strtol(v,<sp/>NULL,<sp/>16);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(res,<sp/>sha1_tests[i].digest);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res)</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;data/test.bin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>write<sp/>to<sp/>test.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/>len,<sp/>1,<sp/>f);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>stb_sha1_file(fdig,<sp/></highlight><highlight class="stringliteral">&quot;data/test.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z)<sp/>stb_fatal(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>digest<sp/>test.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c(memcmp(digest,<sp/>fdig,<sp/>20)==0,<sp/></highlight><highlight class="stringliteral">&quot;stb_sh1_file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal">stb__obj<sp/><ref refid="group__gtc__constants_1ga788f5a421fc0f40a1296ebc094cbaa8a" kindref="member">zero</ref>,<sp/><ref refid="group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5" kindref="member">one</ref>;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_packed_floats(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/>stb__obj<sp/>*p;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,y,*q;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/>clock_t<sp/>a,b,c;</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/>stb_float_init();</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=-10;<sp/>i<sp/>&lt;<sp/>10;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>(float)<sp/><ref refid="group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace" kindref="member">pow</ref>(10,i);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>f<sp/>*<sp/>10;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>(g<sp/>-<sp/>f)<sp/>/<sp/>10000;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(f<sp/>&lt;<sp/>g)<sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb__obj<sp/>z<sp/>=<sp/>stb_float(f);</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>stb_getfloat(z);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>stb_getfloat_table(z);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert((z<sp/>&amp;<sp/>1)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(f<sp/>==<sp/>k);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(k<sp/>==<sp/>p);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__gtc__constants_1ga788f5a421fc0f40a1296ebc094cbaa8a" kindref="member">zero</ref><sp/>=<sp/>stb_float(0);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__gtc__constants_1ga39c2fb227631ca25894326529bdd1ee5" kindref="member">one</ref><sp/><sp/>=<sp/>stb_float(1);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>malloc(8192<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>8192;<sp/>++i)</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>stb_rand();</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>8192;<sp/>++i)</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stb_rand()<sp/>&amp;<sp/>31)<sp/>&lt;<sp/>28)</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/><ref refid="group__gtc__constants_1ga788f5a421fc0f40a1296ebc094cbaa8a" kindref="member">zero</ref>;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/>q<sp/>=<sp/>malloc(4<sp/>*<sp/>1024);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/>a<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/>x<sp/>=<sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>200000000;<sp/>++i)</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q[i&amp;1023]<sp/>=<sp/>stb_getfloat_table(p[i&amp;8191]);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>200000000;<sp/>++i)</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q[i&amp;1023]<sp/>=<sp/>stb_getfloat_table2(p[i&amp;8191]);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/>c<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/>free(q);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Table:<sp/>%d\nIFs:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>b-a,<sp/>c-b);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_compressor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**argv)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slen;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(argv[1],<sp/>&amp;slen);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>slen;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dlen,<sp/>clen<sp/>=<sp/>stb_compress_tofile(</highlight><highlight class="stringliteral">&quot;data/dummy.bin&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>len);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>stb_decompress_fromfile(</highlight><highlight class="stringliteral">&quot;data/dummy.bin&quot;</highlight><highlight class="normal">,<sp/>&amp;dlen);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>!=<sp/>dlen)<sp/>{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;FAILED<sp/>%d<sp/>-&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>clen);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>memcmp(q,p,dlen);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;FAILED<sp/>%d<sp/>-&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>clen);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/>-&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>clen);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/>window<sp/>=<sp/>atoi(argv[1]);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>&amp;&amp;<sp/>argc<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>stb_file(argv[3],<sp/>&amp;slen);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(int)<sp/>slen;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_compress_hashsize(window);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_compress_tofile(argv[2],<sp/>p,<sp/>len);</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>stb_decompress_fromfile(argv[2],<sp/>&amp;len);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(p,1,len,f);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;FAILED.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>stb<sp/>&lt;hashsize&gt;<sp/>&lt;output&gt;<sp/>&lt;filetocompress&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>or<sp/><sp/>stb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;output&gt;<sp/>&lt;filetodecompress&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>naive<sp/>backtracking<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wildmatch(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*candidate)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*expr)<sp/>{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*expr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*candidate)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++candidate;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++expr;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*expr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++expr;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*expr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>||<sp/>*expr<sp/>==</highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)<sp/>++expr;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;*&apos;<sp/>at<sp/>end<sp/>of<sp/>expression<sp/>matches<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*expr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>scan<sp/>candidate<sp/>&apos;til<sp/>first<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*candidate)<sp/>{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*candidate<sp/>==<sp/>*expr)<sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>this<sp/>candidate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_wildmatch(expr+1,<sp/>candidate+1))</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not,<sp/>then<sp/>backtrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++candidate;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*expr<sp/>!=<sp/>*candidate)</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++expr,<sp/>++candidate;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*candidate<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stb_matcher_find_slow(stb_matcher<sp/>*m,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,y,z;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/>uint16<sp/>*previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/>uint16<sp/>*current<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/>uint16<sp/>*temp;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/>stb_arr_setsize(previous,<sp/>4);</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/>stb_arr_setsize(current,<sp/>4);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/>previous<sp/>=<sp/>stb__add_if_inactive(m,<sp/>previous,<sp/>m-&gt;start_node);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/>previous<sp/>=<sp/>stb__eps_closure(m,previous);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb__clear_goalcheck(m,<sp/>previous))</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str)<sp/>{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>stb_arr_len(previous);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>y;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_nfa_node<sp/>*n<sp/>=<sp/>&amp;m-&gt;nodes[previous[i]];</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>stb_arr_len(n-&gt;out);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>z;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;out[j].match<sp/>==<sp/>*str)</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>stb__add_if_inactive(m,<sp/>current,<sp/>n-&gt;out[j].node);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;out[j].match<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>stb__add_if_inactive(m,<sp/>current,<sp/>n-&gt;out[j].node);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;out[j].match<sp/>&lt;<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>-n-&gt;out[j].match<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;charset[(uint8)<sp/>*str]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>z))</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>stb__add_if_inactive(m,<sp/>current,<sp/>n-&gt;out[j].node);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++str;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_setlen(previous,<sp/>0);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>previous;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m-&gt;match_start)</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>stb__add_if_inactive(m,<sp/>previous,<sp/>m-&gt;start_node);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>stb__eps_closure(m,previous);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb__clear_goalcheck(m,<sp/>previous))</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>=0;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal">done:</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(previous);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(current);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">//<sp/>parser<sp/>generator</highlight></codeline>
<codeline lineno="2405"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>stb_parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Generates<sp/>an<sp/>LR(1)<sp/>parser<sp/>from<sp/>a<sp/>grammar,<sp/>and<sp/>can<sp/>parse<sp/>with<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Symbol<sp/>representations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Client:<sp/><sp/><sp/><sp/><sp/>Internal:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=0<sp/><sp/><sp/><sp/><sp/>e<sp/>aka<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=1<sp/><sp/><sp/><sp/><sp/>$<sp/>aka<sp/>end<sp/>of<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&gt;<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2&lt;=c&lt;M<sp/><sp/><sp/><sp/>terminals<sp/>(note<sp/>these<sp/>are<sp/>remapped<sp/>from<sp/>a<sp/>sparse<sp/>layout)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M&lt;=c&lt;N<sp/><sp/><sp/><sp/>non-terminals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>END<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>encode_term[4096];<sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>malloc<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>encode_nonterm[4096];</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_nonterm,<sp/>num_symbols,<sp/>symset;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>encode_term(x)<sp/><sp/><sp/><sp/><sp/>encode_term[x]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>encode_nonterm(x)<sp/><sp/>encode_nonterm[~(x)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>encode_symbol(x)<sp/><sp/><sp/>((x)<sp/>&gt;=<sp/>0<sp/>?<sp/>encode_term(x)<sp/>:<sp/>encode_nonterm(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal">stb_bitset<sp/>**compute_first(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**<sp/>productions)</highlight></codeline>
<codeline lineno="2431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>changed;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/>stb_bitset<sp/>**first<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*first)<sp/>*<sp/>num_symbols);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/>assert(symset);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_symbols;<sp/>++i)</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first[i]<sp/>=<sp/>stb_bitset_new(0,<sp/>symset);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=END;<sp/>i<sp/>&lt;<sp/>first_nonterm;<sp/>++i)</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_setbit(first[i],<sp/>i);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(productions);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(productions[i][2]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nt<sp/>=<sp/>encode_nonterm(productions[i][0]);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_setbit(first[nt],<sp/>EPS);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(productions);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>nt<sp/>=<sp/>encode_nonterm(productions[i][0]);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=2;<sp/>productions[i][j];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>encode_symbol(productions[i][j]);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>|=<sp/>stb_bitset_unioneq_changed(first[nt],<sp/>first[z],<sp/>symset);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_bitset_testbit(first[z],<sp/>EPS))</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!productions[i][j]<sp/>&amp;&amp;<sp/>!stb_bitset_testbit(first[nt],<sp/>EPS))<sp/>{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_setbit(first[nt],<sp/>EPS);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(changed);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal">stb_bitset<sp/>**compute_follow(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**<sp/>productions,<sp/>stb_bitset<sp/>**first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start)</highlight></codeline>
<codeline lineno="2469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,changed;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/>stb_bitset<sp/>**follow<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*follow)<sp/>*<sp/>num_symbols);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/>assert(symset);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_symbols;<sp/>++i)</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>follow[i]<sp/>=<sp/>(i<sp/>&gt;=<sp/>first_nonterm<sp/>?<sp/>stb_bitset_new(0,<sp/>symset)<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/>stb_bitset_setbit(follow[start],<sp/>END);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(productions);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nt<sp/>=<sp/>encode_nonterm(productions[i][0]);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=2;<sp/>productions[i][j];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(productions[i][j]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,z<sp/>=<sp/>encode_nonterm(productions[i][j]);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=j+1;<sp/>productions[i][k];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>encode_symbol(productions[i][k]);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>|=<sp/>stb_bitset_unioneq_changed(follow[z],<sp/>first[q],<sp/>symset);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_bitset_testbit(first[q],<sp/>EPS))</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!productions[i][k]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>|=<sp/>stb_bitset_unioneq_changed(follow[z],<sp/>follow[nt],<sp/>symset);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(changed);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=first_nonterm;<sp/>i<sp/>&lt;<sp/>num_symbols;<sp/>++i)</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_clearbit(follow[i],<sp/>EPS);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>follow;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>first_for_prod_plus_sym(stb_bitset<sp/>**first,<sp/>stb_bitset<sp/>*out,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*prod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>symbol)</highlight></codeline>
<codeline lineno="2505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/>stb_bitset_clearall(out,<sp/>symset);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;*prod;++prod)<sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>encode_symbol(*prod);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_unioneq_changed(out,<sp/>first[z],<sp/>symset);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_bitset_testbit(first[z],<sp/>EPS))</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/>stb_bitset_unioneq_changed(out,<sp/>first[symbol],<sp/>symset);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Item(p,c,t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void<sp/>*)<sp/>(size_t)<sp/>(((t)<sp/>&lt;&lt;<sp/>18)<sp/>+<sp/>((c)<sp/>&lt;&lt;<sp/>12)<sp/>+<sp/>((p)<sp/>&lt;&lt;<sp/>2)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ItemProd(i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((uint32)<sp/>(size_t)<sp/>(i))<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>1023)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ItemCursor(i)<sp/><sp/><sp/><sp/><sp/>((((uint32)<sp/>(size_t)<sp/>(i))<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>63)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ItemLookahead(i)<sp/><sp/>(((uint32)<sp/>(size_t)<sp/>(i))<sp/>&gt;&gt;<sp/>18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pc(stb_ps<sp/>*p)</highlight></codeline>
<codeline lineno="2522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*prod;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prod_num;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal">}<sp/>ProdRef;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/>stb_bitset<sp/>**first;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/>stb_bitset<sp/>**follow;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**<sp/><sp/><sp/>prod;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/>ProdRef<sp/>**<sp/>prod_by_nt;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal">}<sp/>Grammar;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal">stb_ps<sp/>*itemset_closure(Grammar<sp/>g,<sp/>stb_ps<sp/>*set)</highlight></codeline>
<codeline lineno="2540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/>stb_bitset<sp/>*lookahead;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>changed,i,j,k,<sp/>list_len;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/>lookahead<sp/>=<sp/>stb_bitset_new(0,<sp/>symset);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**list<sp/>=<sp/>stb_ps_getlist(set,<sp/>&amp;list_len);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>list_len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProdRef<sp/>*prod;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nt,<sp/>*looklist;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>ItemProd(list[i]),<sp/>c<sp/>=<sp/>ItemCursor(list[i]),<sp/>t<sp/>=<sp/>ItemLookahead(list[i]);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.prod[p][c]<sp/>&gt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nt<sp/>=<sp/>encode_nonterm(g.prod[p][c]);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_for_prod_plus_sym(g.first,<sp/>lookahead,<sp/>g.prod[p]+c+1,<sp/>t);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>looklist<sp/>=<sp/>stb_bitset_getlist(lookahead,<sp/>1,<sp/>first_nonterm);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prod<sp/>=<sp/>g.prod_by_nt[nt];</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>stb_arr_len(prod);<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(prod[j].prod[0]<sp/>==<sp/>g.prod[p][c]);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>matched<sp/>production;<sp/>now<sp/>iterate<sp/>terminals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>stb_arr_len(looklist);<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item<sp/>=<sp/>Item(prod[j].prod_num,2,looklist[k]);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_ps_find(set,<sp/>item))<sp/>{</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>=<sp/>stb_ps_add(set,<sp/>item);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc(set);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_free(looklist);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(list);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(changed);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/>free(lookahead);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal">stb_ps<sp/>*itemset_goto(Grammar<sp/>g,<sp/>stb_ps<sp/>*set,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sym)</highlight></codeline>
<codeline lineno="2579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>listlen;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**list<sp/>=<sp/>stb_ps_fastlist(set,<sp/>&amp;listlen);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/>stb_ps<sp/>*out<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>listlen;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,c;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_ps_fastlist_valid(list[i]))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>ItemProd(list[i]),<sp/>c<sp/>=<sp/>ItemCursor(list[i]);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encode_symbol(g.prod[p][c])<sp/>==<sp/>sym)<sp/>{</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*z<sp/>=<sp/>Item(p,c+1,ItemLookahead(list[i]));</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_ps_find(out,<sp/>z))</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>stb_ps_add(out,<sp/>z);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc(out);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itemset_closure(g,<sp/>out);</highlight></codeline>
<codeline lineno="2595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>itemset_all_nextsym(Grammar<sp/>g,<sp/>stb_bitset<sp/>*out,<sp/>stb_ps<sp/>*set)</highlight></codeline>
<codeline lineno="2598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>listlen;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**list<sp/>=<sp/>stb_ps_fastlist(set,<sp/>&amp;listlen);</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/>stb_bitset_clearall(out,<sp/>symset);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/>pc(set);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>listlen;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_ps_fastlist_valid(list[i]))<sp/>{</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>ItemProd(list[i]);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>ItemCursor(list[i]);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.prod[p][c])</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_setbit(out,<sp/>encode_symbol(g.prod[p][c]));</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal">stb_ps<sp/>**<sp/>generate_items(Grammar<sp/>g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_prod)</highlight></codeline>
<codeline lineno="2614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/>stb_ps<sp/>**<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>=NULL;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/>stb_bitset<sp/>*</highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>=<sp/>stb_bitset_new(0,symset);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/>stb_ps<sp/>*set<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item<sp/>=<sp/>Item(start_prod,<sp/>2,<sp/>END);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/>set<sp/>=<sp/>stb_ps_add(set,<sp/>item);</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/>pc(set);</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/>set<sp/>=<sp/>itemset_closure(g,<sp/>set);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/>pc(set);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/>stb_arr_push(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>,<sp/>set);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>try<sp/>symbols<sp/>that<sp/>appear<sp/>in<sp/>all[i]...<sp/>there&apos;s<sp/>a<sp/>smarter<sp/>way<sp/>to<sp/>do<sp/>this,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>to<sp/>take<sp/>all[i],<sp/>and<sp/>divide<sp/>it<sp/>up<sp/>by<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pc(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i]);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itemset_all_nextsym(g,<sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">,<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i]);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>num_symbols;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_bitset_testbit(</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">,<sp/>j))<sp/>{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps<sp/>*out;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>)<sp/>&gt;<sp/>4)<sp/>pc(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[4]);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>j<sp/>==<sp/>29)<sp/>{</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>)<sp/>&gt;<sp/>4)<sp/>pc(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[4]);</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>itemset_goto(g,<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i],<sp/>j);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>)<sp/>&gt;<sp/>4)<sp/>pc(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[4]);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>itemset_goto(g,<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i],<sp/>j);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc(out);</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>)<sp/>&gt;<sp/>4)<sp/>pc(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[4]);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>it<sp/>to<sp/>the<sp/>array<sp/>if<sp/>it&apos;s<sp/>not<sp/>already<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>);<sp/>++k)</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_ps_eq(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[k],<sp/>out))</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>==<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>,<sp/>out);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc(out);</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>)<sp/>&gt;<sp/>4)<sp/>pc(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[4]);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps_delete(out);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/>free(</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_stack;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal">}<sp/>Reduction;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*encode_term;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/>Reduction<sp/>*reductions;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**action_goto;<sp/></highlight><highlight class="comment">//<sp/>terminals<sp/>are<sp/>action,<sp/>nonterminals<sp/>are<sp/>goto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_term;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal">}<sp/>Parser;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/>A_error,<sp/>A_accept,<sp/>A_shift,<sp/>A_reduce,<sp/>A_conflict</highlight></codeline>
<codeline lineno="2679"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/>uint8<sp/>type;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/>uint8<sp/>cursor;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>prod;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal">}<sp/>Action;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal">Parser<sp/>*parser_create(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**productions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_prod,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_nt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_term)</highlight></codeline>
<codeline lineno="2690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*mini_rule<sp/>=<sp/>malloc(4<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mini_rule[0]));</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/>Action<sp/>*actions;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/>Grammar<sp/>g;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/>stb_ps<sp/>**<sp/>sets;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/>Parser<sp/>*p<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,n;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/>stb_bitset<sp/>*mapped;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_s=0,<sp/>max_s=0,<sp/>termset,<sp/>ntset,<sp/>num_states,<sp/>num_reductions,<sp/>init_prod;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>synth_start;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remap<sp/>sparse<sp/>terminals<sp/>and<sp/>nonterminals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_prod;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=2;<sp/>productions[i][j];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(productions[i][j]<sp/>&lt;<sp/>min_s)<sp/>min_s<sp/>=<sp/>productions[i][j];</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(productions[i][j]<sp/>&gt;<sp/>max_s)<sp/>max_s<sp/>=<sp/>productions[i][j];</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/>synth_start<sp/>=<sp/>--min_s;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/>termset<sp/>=<sp/>(max_s<sp/>+<sp/>32)<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/>ntset<sp/>=<sp/>(~min_s<sp/>+<sp/>32)<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/>memset(encode_term,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(encode_term));</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/>memset(encode_nonterm,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(encode_nonterm));</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/>mapped<sp/>=<sp/>stb_bitset_new(0,<sp/>termset);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_prod;<sp/>++i)</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=2;<sp/>productions[i][j];<sp/>++j)</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(productions[i][j]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_bitset_testbit(mapped,<sp/>productions[i][j]))<sp/>{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_setbit(mapped,<sp/>productions[i][j]);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encode_term[productions[i][j]]<sp/>=<sp/>n++;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/>free(mapped);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/>first_nonterm<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/>mapped<sp/>=<sp/>stb_bitset_new(0,<sp/>ntset);</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_prod;<sp/>++i)</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=2;<sp/>productions[i][j];<sp/>++j)</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(productions[i][j]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stb_bitset_testbit(mapped,<sp/>~productions[i][j]))<sp/>{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_bitset_setbit(mapped,<sp/>~productions[i][j]);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encode_nonterm[~productions[i][j]]<sp/>=<sp/>n++;</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/>free(mapped);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>special<sp/>start<sp/>state<sp/>for<sp/>internal<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/>p-&gt;start<sp/>=<sp/>n++;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/>encode_nonterm[synth_start]<sp/>=<sp/>p-&gt;start;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/>mini_rule[0]<sp/>=<sp/>synth_start;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/>mini_rule[1]<sp/>=<sp/>-32768;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/>mini_rule[2]<sp/>=<sp/>start_nt;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/>mini_rule[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/>p-&gt;end_term<sp/>=<sp/>end_term;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/>num_symbols<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/>g.prod<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/>g.prod_by_nt<sp/>=<sp/>malloc(num_symbols<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(g.prod_by_nt[0]));</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_symbols;<sp/>++i)</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g.prod_by_nt[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/>for<sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_prod;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(g.prod,<sp/>productions[i]);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/>init_prod<sp/>=<sp/>stb_arr_len(g.prod);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/>stb_arr_push(g.prod,<sp/>mini_rule);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/>num_reductions<sp/>=<sp/>stb_arr_len(g.prod);</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/>p-&gt;reductions<sp/>=<sp/>malloc(num_reductions<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;reductions));</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/>symset<sp/>=<sp/>(num_symbols<sp/>+<sp/>31)<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/>g.first<sp/>=<sp/>compute_first(g.prod);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/>g.follow<sp/>=<sp/>compute_follow(g.prod,<sp/>g.first,<sp/>p-&gt;start);</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(g.prod);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProdRef<sp/>pr<sp/>=<sp/>{<sp/>g.prod[i],<sp/>i<sp/>};</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(g.prod_by_nt[encode_nonterm(g.prod[i][0])],<sp/>pr);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/>sets<sp/>=<sp/>generate_items(g,<sp/>init_prod);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/>num_states<sp/>=<sp/>stb_arr_len(sets);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>generate<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/>actions<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*actions)<sp/>*<sp/>first_nonterm);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/>p-&gt;action_goto<sp/>=<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**)<sp/>stb_array_block_alloc(num_states,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>*<sp/>num_symbols);</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_states;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,n;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**list<sp/>=<sp/>stb_ps_getlist(sets[i],<sp/>&amp;n);</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(actions,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*actions)<sp/>*<sp/>first_nonterm);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>n;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>ItemProd(list[j]),<sp/>c<sp/>=<sp/>ItemCursor(list[j]),<sp/>t<sp/>=<sp/>ItemLookahead(list[j]);</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.prod[p][c]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>init_prod)<sp/>{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>check<sp/>for<sp/>conflicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(actions[t].type<sp/>==<sp/>A_error<sp/>||<sp/>actions[t].type<sp/>==<sp/>A_accept);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[t].type<sp/>=<sp/>A_accept;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>production<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[t].type<sp/>==<sp/>A_reduce)<sp/>{</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>it<sp/>the<sp/>same<sp/>reduction<sp/>we<sp/>already<sp/>have?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[t].prod<sp/>!=<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no,<sp/>it&apos;s<sp/>a<sp/>reduce-reduce<sp/>conflict!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Reduce-reduce<sp/>conflict<sp/>for<sp/>rule<sp/>%d<sp/>and<sp/>%d,<sp/>lookahead<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>actions[t].prod,<sp/>t);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>use<sp/>precedence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[t].type<sp/>=<sp/>A_conflict;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[t].type<sp/>==<sp/>A_shift)<sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Shift-reduce<sp/>conflict<sp/>for<sp/>rule<sp/>%d<sp/>and<sp/>%d,<sp/>lookahead<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>actions[t].prod,<sp/>p,<sp/>t);</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[t].type<sp/>=<sp/>A_conflict;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[t].type<sp/>==<sp/>A_accept)<sp/>{</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[t].type<sp/>==<sp/>A_error)<sp/>{</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[t].type<sp/>=<sp/>A_reduce;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[t].prod<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.prod[p][c]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>encode_symbol(g.prod[p][c]),<sp/>k;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps<sp/>*out<sp/>=<sp/>itemset_goto(g,<sp/>sets[i],<sp/>a);</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>stb_arr_len(sets);<sp/>++k)</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_ps_eq(sets[k],<sp/>out))</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(k<sp/>&lt;<sp/>stb_arr_len(sets));</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[a].type<sp/>==<sp/>A_shift)<sp/>{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[a].<ref refid="classvalue" kindref="compound">value</ref><sp/>!=<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Shift-shift<sp/>conflict!<sp/>Rule<sp/>%d<sp/>and<sp/>%d<sp/>with<sp/>lookahead<sp/>%d/%d\n&quot;</highlight><highlight class="normal">,<sp/>actions[a].prod,<sp/>p,<sp/>a,t);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[a].type<sp/>=<sp/>A_conflict;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[a].type<sp/>==<sp/>A_reduce)<sp/>{</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Shift-reduce<sp/>conflict<sp/>for<sp/>rule<sp/>%d<sp/>and<sp/>%d,<sp/>lookahead<sp/>%d/%d\n&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>actions[a].prod,<sp/>a,t);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[a].type<sp/>=<sp/>A_conflict;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[a].type<sp/>==<sp/>A_accept)<sp/>{</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions[a].type<sp/>==<sp/>A_error)<sp/>{</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[a].type<sp/>=<sp/>A_shift;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[a].prod<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[a].cursor<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions[a].value<sp/><sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>recompile<sp/>actions<sp/>into<sp/>p-&gt;action_goto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/>free(mini_rule);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/>stb_pointer_array_free(g.first<sp/>,<sp/>num_symbols);<sp/>free(g.first<sp/>);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/>stb_pointer_array_free(g.follow,<sp/>num_symbols);<sp/>free(g.follow);</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(g.prod);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_symbols;<sp/>++i)</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_free(g.prod_by_nt[i]);</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/>free(g.prod_by_nt);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(sets);<sp/>++i)</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_ps_delete(sets[i]);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(sets);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parser_destroy(Parser<sp/>*p)</highlight></codeline>
<codeline lineno="2858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>nonterm</highlight></codeline>
<codeline lineno="2864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/>N_globals<sp/>=<sp/>-50,</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/>N_global,<sp/>N_vardef,<sp/>N_varinitlist,<sp/>N_varinit,<sp/>N_funcdef,<sp/>N_optid,<sp/>N_optparamlist,</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/>N_paramlist,<sp/>N_param,<sp/>N_optinit,<sp/>N_optcomma,<sp/>N_statements,<sp/>N_statement,</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/>N_optexpr,<sp/>N_assign,<sp/>N_if,<sp/>N_ifcore,<sp/>N_else,<sp/>N_dictdef,<sp/>N_dictdef2,</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/>N_dictdefitem,<sp/>N_expr,</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/>N__last</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>grammar[][10]<sp/>=</highlight></codeline>
<codeline lineno="2874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_globals<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_globals,<sp/>N_global<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_globals<sp/><sp/><sp/><sp/>,<sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_global<sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_vardef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_global<sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_funcdef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_vardef<sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_var,<sp/>N_varinitlist,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_varinitlist,<sp/><sp/>0,<sp/>N_varinitlist,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>N_varinit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_varinitlist,<sp/><sp/>0,<sp/>N_varinit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_varinit<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_id,<sp/>N_optinit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_funcdef<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_func,<sp/>N_optid,<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">,<sp/>N_optparamlist,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">,<sp/>N_statements,<sp/>ST_end<sp/>},</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optid<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optid<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optparamlist,<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optparamlist,<sp/>0,<sp/>N_paramlist,<sp/>N_optcomma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_paramlist<sp/><sp/>,<sp/><sp/>0,<sp/>N_paramlist,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>N_param<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_paramlist<sp/><sp/>,<sp/><sp/>0,<sp/>N_param<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_param<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_id,<sp/>N_optinit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optinit<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optinit<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optcomma<sp/><sp/><sp/>,<sp/><sp/>0,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optcomma<sp/><sp/><sp/>,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statements<sp/>,<sp/><sp/>0,<sp/>N_statements,<sp/>N_statement<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>N_statement,<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>N_varinit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>ST_return,<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>ST_break<sp/>,<sp/>N_optexpr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optexpr<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_optexpr<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>ST_continue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>N_assign<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_assign<sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_expr,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/>N_assign<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/>N_assign<sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>ST_while,<sp/>N_expr,<sp/>N_statements,<sp/>ST_end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_statement<sp/><sp/>,<sp/><sp/>0,<sp/>ST_if,<sp/>N_if,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_if<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_ifcore,<sp/>ST_end,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_ifcore<sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_expr,<sp/>ST_then,<sp/>N_statements,<sp/>N_else,<sp/>ST_end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_else<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_elseif,<sp/>N_ifcore<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_else<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_else,<sp/>N_statements<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_else<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_dictdef<sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_dictdef2,<sp/>N_optcomma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_dictdef2<sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_dictdef2,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>N_dictdefitem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_dictdef2<sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_dictdefitem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_dictdefitem,<sp/><sp/>0,<sp/>ST_id,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_dictdefitem,<sp/><sp/>0,<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_number<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>ST_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_funcdef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">,<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">,<sp/>N_dictdef,<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">,<sp/>N_expr,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_expr,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>ST_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_expr,<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/>N_expr,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/>{<sp/>N_expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>0,<sp/>N_expr,<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">,<sp/>N_dictdef,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINOP(op)<sp/><sp/>{<sp/>N_expr,<sp/>0,<sp/>N_expr,<sp/>op,<sp/>N_expr<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/>BINOP(ST_and),<sp/>BINOP(ST_or),<sp/>BINOP(ST_eq),<sp/>BINOP(ST_ne),</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/>BINOP(ST_le),<sp/><sp/>BINOP(ST_ge),<sp/>BINOP(</highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">)<sp/>,<sp/>BINOP(</highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/>BINOP(</highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">),<sp/>BINOP(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">),<sp/>BINOP(</highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">),<sp/>BINOP(</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">),<sp/>BINOP(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/>BINOP(</highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">),<sp/>BINOP(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">),<sp/>BINOP(</highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*grammar_list[stb_arrcount(grammar)];</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_parser_generator(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/>Parser<sp/>*p;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/>assert(N__last<sp/>&lt;=<sp/>0);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arrcount(grammar);<sp/>++i)</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grammar_list[i]<sp/>=<sp/>grammar[i];</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>parser_create(grammar_list,<sp/>stb_arrcount(grammar),<sp/>N_globals,<sp/>0);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/>parser_destroy(p);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>parser<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb_threadtest.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STB_THREAD_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../stb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_WORK<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*work_consumer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="2965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/>stb__thread_sleep(20);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pass;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal">stb_threadqueue<sp/>*tq1,<sp/>*tq2,<sp/>*tq3,<sp/>*tq4;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1,t2;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>with<sp/>windows.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worked<sp/>correctly<sp/>with<sp/>100,000,000<sp/>enqueue/dequeue<sp/>WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(770<sp/>passes,<sp/>170000<sp/>per<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worked<sp/>correctly<sp/>with<sp/><sp/><sp/>2,500,000<sp/>enqueue/dequeue<sp/>!WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(15<sp/>passes,<sp/>170000<sp/>per<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worked<sp/>correctly<sp/>with<sp/><sp/><sp/>1,500,000<sp/>enqueue/dequeue<sp/>WAITLESS<sp/>&amp;&amp;<sp/>STB_THREAD_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(9<sp/>passes,<sp/>170000<sp/>per<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>without<sp/>windows.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worked<sp/>correctly<sp/>with<sp/><sp/><sp/>1,000,000<sp/>enqueue/dequeue<sp/>WAITLESS<sp/>&amp;&amp;<sp/>STB_THREAD_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(6<sp/>passes,<sp/>170000<sp/>per<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worked<sp/>correctly<sp/>with<sp/><sp/><sp/><sp/><sp/>500,000<sp/>enqueue/dequeue<sp/>!WAITLESS<sp/>&amp;&amp;<sp/>STB_THREAD_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(3<sp/>passes,<sp/>170000<sp/>per<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Worked<sp/>correctly<sp/>with<sp/><sp/><sp/>1,000,000<sp/>enqueue/dequeue<sp/>WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(15<sp/>passes,<sp/>170000<sp/>per<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtable" kindref="compound">table</ref>[1000*1000*10];</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wait(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="2993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>n;<sp/>++j)</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>1<sp/>/<sp/>(t1+j);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/>t2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tq1_consumer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="3004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_threadq_get_block(tq1,<sp/>&amp;z);</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait(5000);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtable" kindref="compound">table</ref>[z]<sp/>=<sp/>pass;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tq2_consumer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="3015"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_threadq_get(tq2,<sp/>&amp;z))</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtable" kindref="compound">table</ref>[z]<sp/>=<sp/>pass;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait(1000);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tq3_consumer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="3025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_threadq_get_block(tq3,<sp/>&amp;z);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtable" kindref="compound">table</ref>[z]<sp/>=<sp/>pass;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait(500);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tq4_consumer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="3035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_threadq_get_block(tq4,<sp/>&amp;z);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtable" kindref="compound">table</ref>[z]<sp/>=<sp/>pass;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait(500);</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/>stb_threadqueue<sp/>*tq;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal">}<sp/>write_data;</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*writer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3052"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/>write_data<sp/>*p<sp/>=<sp/>(write_data<sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=p-&gt;start;<sp/>i<sp/>&lt;<sp/>p-&gt;end;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_threadq_add_block(p-&gt;tq,<sp/>&amp;i);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;delay)<sp/>stb__thread_sleep(p-&gt;delay);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;=<sp/>20;<sp/>++j)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>+=<sp/>1<sp/>/<sp/>(t1+j);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal">write_data<sp/><ref refid="structinfo" kindref="compound">info</ref>[256];</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start_writer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>stb_threadqueue<sp/>*tq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay)</highlight></codeline>
<codeline lineno="3075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><ref refid="structinfo" kindref="compound">info</ref>[z].start<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><ref refid="structinfo" kindref="compound">info</ref>[z].end<sp/>=<sp/>pos+count;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><ref refid="structinfo" kindref="compound">info</ref>[z].tq<sp/>=<sp/>tq;</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><ref refid="structinfo" kindref="compound">info</ref>[z].delay<sp/>=<sp/>delay;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(writer,<sp/>&amp;<ref refid="structinfo" kindref="compound">info</ref>[z]);</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="3085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/>stb_sync<sp/>s<sp/>=<sp/>stb_sync_new();</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/>stb_sync_set_target(s,<sp/>NUM_WORK+1);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/>stb_work_numthreads(2);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>NUM_WORK;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_work_reach(work_consumer,<sp/>NULL,<sp/>NULL,<sp/>s);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Started<sp/>stb_work<sp/>test.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>queues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/>tq1<sp/>=<sp/>stb_threadq_new(4,<sp/>4,<sp/>TRUE<sp/>,<sp/>TRUE);</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/>tq2<sp/>=<sp/>stb_threadq_new(4,<sp/>4,<sp/>TRUE<sp/>,<sp/>FALSE);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/>tq3<sp/>=<sp/>stb_threadq_new(4,<sp/>4,<sp/>FALSE,<sp/>TRUE);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/>tq4<sp/>=<sp/>stb_threadq_new(4,<sp/>4,<sp/>FALSE,<sp/>FALSE);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>the<sp/>consumers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq1_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq1_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq1_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq2_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq3_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq3_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq3_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq3_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq3_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq3_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq3_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/>stb_create_thread(tq4_consumer,<sp/>NULL);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pass=1;<sp/>pass<sp/>&lt;=<sp/>5000;<sp/>++pass)<sp/>{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_n<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>identical<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>50000,<sp/>tq1,<sp/>0);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>50000,<sp/>tq1,<sp/>0);</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>50000,<sp/>tq1,<sp/>0);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>5000,<sp/>tq2,<sp/>1);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>3000,<sp/>tq2,<sp/>3);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>2000,<sp/>tq2,<sp/>5);</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>5000,<sp/>tq3,<sp/>3);</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_writer(z++,<sp/>5000,<sp/>tq4,<sp/>3);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb__thread_sleep(8000);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=0;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pos;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref>[i]<sp/>==<sp/>pass)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>pos)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>last_n)<sp/>{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++identical;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(identical<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Problem<sp/>slots:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pos;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref>[i]<sp/>!=<sp/>pass)<sp/>printf(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(identical<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Processed<sp/>%d<sp/>of<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>pos);</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identical<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Processed<sp/>%d<sp/>of<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>pos);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_n<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WAITLESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb__thread_sleep(750);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb__thread_sleep(3000);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Finished<sp/>pass<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pass);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/>stb_sync_reach_and_wait(s);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;stb_work<sp/>test<sp/>completed<sp/>ok.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="3183"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>collapse<sp/>tree<sp/>leaves<sp/>up<sp/>to<sp/>parents<sp/>until<sp/>we<sp/>only<sp/>have<sp/>N<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>useful<sp/>for<sp/>cmirror<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stb_summary_tree</highlight></codeline>
<codeline lineno="3188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stb_summary_tree<sp/>**children;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_children;</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight;</highlight></codeline>
<codeline lineno="3192"><highlight class="normal">}<sp/>stb_summary_tree;</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal">STB_EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stb_summarize_tree(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tree,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reweight);</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stb_summary_tree2</highlight></codeline>
<codeline lineno="3199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/>STB__ARR(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stb_summary_tree2<sp/>*)<sp/>children;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_children;</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight_with_all_children;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>makes_target_weight;</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight_at_target;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/>stb_summary_tree<sp/>*original;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stb_summary_tree2<sp/>*target;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/>STB__ARR(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stb_summary_tree2<sp/>*)<sp/>targeters;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal">}<sp/>stb_summary_tree2;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stb_summary_tree2<sp/>*stb__summarize_clone(stb_summary_tree<sp/>*t)</highlight></codeline>
<codeline lineno="3212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/>stb_summary_tree2<sp/>*s;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>(stb_summary_tree2<sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s));</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/>s-&gt;original<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/>s-&gt;weight<sp/>=<sp/>t-&gt;weight;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/>s-&gt;weight_with_all_children<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/>s-&gt;weight_at_target<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/>s-&gt;target<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/>s-&gt;targeters<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/>s-&gt;num_children<sp/>=<sp/>t-&gt;num_children;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/>s-&gt;children<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>s-&gt;num_children;<sp/>++i)</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(s-&gt;children,<sp/>stb__summarize_clone(t-&gt;children[i]));</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stb__summarize_compute_targets(stb_summary_tree2<sp/>*parent,<sp/>stb_summary_tree2<sp/>*node,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reweight,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight)</highlight></codeline>
<codeline lineno="3230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;weight<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>node-&gt;num_children<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>parent)<sp/>{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;target<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stb__summarize_compute_targets(parent,<sp/>node-&gt;children[0],<sp/>reweight,<sp/>weight*reweight);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>total=0;</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>node-&gt;num_children;<sp/>++i)</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>stb__summarize_compute_targets(node,<sp/>node-&gt;children[i],<sp/>reweight,<sp/>reweight);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;weight_with_all_children<sp/>=<sp/>total<sp/>+<sp/>node-&gt;weight;</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent<sp/>&amp;&amp;<sp/>node-&gt;weight_with_all_children)<sp/>{</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;target<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;weight_at_target<sp/>=<sp/>node-&gt;weight_with_all_children<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;makes_target_weight<sp/>=<sp/>node-&gt;weight_at_target<sp/>+<sp/>parent-&gt;weight;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(parent-&gt;targeters,<sp/>node);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;target<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;weight_at_target<sp/>=<sp/>node-&gt;weight;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;makes_target_weight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;weight_with_all_children<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stb_summary_tree2<sp/>**<sp/>stb__summarize_make_array(STB__ARR(stb_summary_tree2<sp/>*)<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>,<sp/>stb_summary_tree2<sp/>*tree)</highlight></codeline>
<codeline lineno="3256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/>stb_arr_push(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>,<sp/>tree);</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>tree-&gt;num_children;<sp/>++i)</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref><sp/>=<sp/>stb__summarize_make_array(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>,<sp/>tree-&gt;children[i]);</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stb_summary_tree2<sp/>*<sp/>stb__stree2;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal">stb_define_sort(stb__summarysort,<sp/>stb__stree2,<sp/>(*a)-&gt;makes_target_weight<sp/>&lt;<sp/>(*b)-&gt;makes_target_weight)</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal">void<sp/>*stb_summarize_tree(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tree,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reweight)</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/>STB__ARR(stb_summary_tree<sp/>*)<sp/>ret=NULL;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/>STB__ARR(stb_summary_tree2<sp/>*)<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>=NULL;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>clone<sp/>the<sp/>tree<sp/>so<sp/>we<sp/>can<sp/>manipulate<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/>stb_summary_tree2<sp/>*t<sp/>=<sp/>stb__summarize_clone((stb_summary_tree<sp/>*)<sp/>tree);</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reweight<sp/>&lt;<sp/>1)<sp/>reweight<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>compute<sp/>how<sp/>far<sp/>up<sp/>the<sp/>tree<sp/>each<sp/>node<sp/>would<sp/>get<sp/>pushed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>no<sp/>value<sp/>in<sp/>pushing<sp/>a<sp/>node<sp/>up<sp/>to<sp/>an<sp/>empty<sp/>node<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>child,<sp/>so<sp/>we<sp/>keep<sp/>pushing<sp/>it<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/>stb__summarize_compute_targets(NULL,<sp/>t,<sp/>reweight,<sp/>1);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref><sp/>=<sp/>stb__summarize_make_array(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>,<sp/>t);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>want<sp/>to<sp/>iteratively<sp/>find<sp/>the<sp/>smallest<sp/>&apos;makes_target_weight&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>that,<sp/>and<sp/>then<sp/>fix<sp/>all<sp/>the<sp/>others<sp/>(which<sp/>will<sp/>be<sp/>all<sp/>descendents)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>do<sp/>this<sp/>efficiently,<sp/>we<sp/>need<sp/>a<sp/>heap<sp/>or<sp/>a<sp/>sorted<sp/>binary<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>we<sp/>have<sp/>is<sp/>an<sp/>array.<sp/>maybe<sp/>we<sp/>can<sp/>insertion<sp/>sort<sp/>the<sp/>array?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/>stb__summarysort(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>,<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>));</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>)<sp/>-<sp/>limit;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_summary_tree2<sp/>*src,<sp/>*dest;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i];</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i]-&gt;target;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src-&gt;makes_target_weight<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(dest<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>);<sp/>++k)</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[k]<sp/>==<sp/>dest)</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(k<sp/>!=<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>));</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(i<sp/>&lt;<sp/>k);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>weight<sp/>from<sp/>all[i]<sp/>to<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;weight<sp/>=<sp/>dest-&gt;makes_target_weight;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;weight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;makes_target_weight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recompute<sp/>effect<sp/>of<sp/>other<sp/>descendents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>stb_arr_len(dest-&gt;targeters);<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest-&gt;targeters[j]-&gt;weight)<sp/>{</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;targeters[j]-&gt;makes_target_weight<sp/>=<sp/>dest-&gt;weight<sp/>+<sp/>dest-&gt;targeters[j]-&gt;weight_at_target;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(dest-&gt;targeters[j]-&gt;makes_target_weight<sp/>&lt;=<sp/>dest-&gt;weight_with_all_children);</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STB_(stb__summarysort,_ins_sort)(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>+i,<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>)-i);</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>the<sp/>elements<sp/>in<sp/>[<sp/>i..stb_arr_len(all)<sp/>)<sp/>are<sp/>the<sp/>relevant<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>);<sp/>++i)</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_push(ret,<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i]-&gt;original);</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>free<sp/>all<sp/>our<sp/>temp<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>stb_arr_len(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stb_arr_free(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i]-&gt;children);</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>[i]);</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/>stb_arr_free(<ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/stb.c"/>
  </compounddef>
</doxygen>
