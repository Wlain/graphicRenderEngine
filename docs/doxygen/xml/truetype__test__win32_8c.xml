<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="truetype__test__win32_8c" kind="file" language="C++">
    <compoundname>truetype_test_win32.c</compoundname>
    <includes local="no">windows.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">tchar.h</includes>
    <includes refid="stb__truetype_8h" local="yes">stb_truetype.h</includes>
    <includes local="no">gl/gl.h</includes>
    <includes local="no">gl/glu.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stb_truetype.h</label>
        <link refid="stb__truetype_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c</label>
        <link refid="truetype__test__win32_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>gl/gl.h</label>
      </node>
      <node id="7">
        <label>gl/glu.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>tchar.h</label>
      </node>
      <node id="2">
        <label>windows.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="truetype__test__win32_8c_1af08ec37a8c99d747fb60fa15bc28678b" prot="public" static="no">
        <name>_CRT_SECURE_NO_WARNINGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="2" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="truetype__test__win32_8c_1ae4242ca3cfe4bca010a56e1cbb6b9f27" prot="public" static="no">
        <name>WIN32_MEAN_AND_LEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="3" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="truetype__test__win32_8c_1afaa2f2d0d9d6726cfae6da070e736347" prot="public" static="no">
        <name>STB_TRUETYPE_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="9" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="truetype__test__win32_8c_1ae7a1da973b3443e759c988205365298b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int screen_x</definition>
        <argsstring></argsstring>
        <name>screen_x</name>
        <initializer>=1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="15" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1aba889b3689a913bbfa6741a3d0dbc10d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int screen_y</definition>
        <argsstring></argsstring>
        <name>screen_y</name>
        <initializer>=768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="15" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1a02b59d9340abbb5f3058556198d6c0fa" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint tex</definition>
        <argsstring></argsstring>
        <name>tex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="16" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1a7e64f95954a09450ff3c366340771f4c" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char ttf_buffer[1&lt;&lt; 20]</definition>
        <argsstring>[1&lt;&lt; 20]</argsstring>
        <name>ttf_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="18" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1abd590ed617f78bd7cd2ab7be275f4407" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char temp_bitmap[1024 *1024]</definition>
        <argsstring>[1024 *1024]</argsstring>
        <name>temp_bitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="19" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1aca52fd544321857a8d6f83a96206553b" prot="public" static="no" mutable="no">
        <type><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref></type>
        <definition>stbtt_bakedchar cdata[96]</definition>
        <argsstring>[96]</argsstring>
        <name>cdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="20" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1a89be6c1a9ee3fb60d100b24cd1d45e1c" prot="public" static="no" mutable="no">
        <type>HINSTANCE</type>
        <definition>HINSTANCE app</definition>
        <argsstring></argsstring>
        <name>app</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Windows OpenGL setup </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="89" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51" prot="public" static="no" mutable="no">
        <type>HWND</type>
        <definition>HWND window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="90" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1a474d98ad521f5aad6b7f75b8de66a1e0" prot="public" static="no" mutable="no">
        <type>HGLRC</type>
        <definition>HGLRC rc</definition>
        <argsstring></argsstring>
        <name>rc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="91" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752" prot="public" static="no" mutable="no">
        <type>HDC</type>
        <definition>HDC dc</definition>
        <argsstring></argsstring>
        <name>dc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="92" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="truetype__test__win32_8c_1a2858154e2009b0e6e616f313177762bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init</definition>
        <argsstring>(void)</argsstring>
        <name>init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="22" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="22" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="truetype__test__win32_8c_1a4421daac47609a9c74c70d57bd0489b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(float x, float y, char *text)</argsstring>
        <name>print</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="32" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="32" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="truetype__test__win32_8c_1ad2e97e7b54d0bf35e406b91fbdd2f256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw</definition>
        <argsstring>(void)</argsstring>
        <name>draw</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="51" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="51" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="truetype__test__win32_8c_1a55167895f88ebb8bdb9b3792be8adab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mySetPixelFormat</definition>
        <argsstring>(HWND win)</argsstring>
        <name>mySetPixelFormat</name>
        <param>
          <type>HWND</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="98" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="98" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="truetype__test__win32_8c_1afc3d7439944832402219fc4638c866b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int WINAPI</type>
        <definition>static int WINAPI WinProc</definition>
        <argsstring>(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)</argsstring>
        <name>WinProc</name>
        <param>
          <type>HWND</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wparam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="115" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="115" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="truetype__test__win32_8c_1a661c2abc03926acfaeb93b4ae7db4943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int WINAPI</type>
        <definition>int WINAPI WinMain</definition>
        <argsstring>(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)</argsstring>
        <name>WinMain</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hInstance</declname>
        </param>
        <param>
          <type>HINSTANCE</type>
          <declname>hPrevInstance</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>lpCmdLine</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nCmdShow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" line="144" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c" bodystart="144" bodyend="184"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>tested<sp/>in<sp/>VC6<sp/>(1998)<sp/>and<sp/>VS<sp/>2019</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_MEAN_AND_LEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TRUETYPE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_truetype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gl/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gl/glu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen_x=1024,<sp/>screen_y=768;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">GLuint<sp/>tex;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ttf_buffer[1&lt;&lt;20];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp_bitmap[1024*1024];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>cdata[96];<sp/></highlight><highlight class="comment">//<sp/>ASCII<sp/>32..126<sp/>is<sp/>95<sp/>glyphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/>fread(ttf_buffer,<sp/>1,<sp/>1&lt;&lt;20,<sp/>fopen(</highlight><highlight class="stringliteral">&quot;c:/windows/fonts/times.ttf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>stbtt_BakeFontBitmap(ttf_buffer,0,<sp/>64.0,<sp/>temp_bitmap,1024,1024,<sp/>32,96,<sp/>cdata);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;tex);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>tex);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,<sp/>GL_ALPHA,<sp/>1024,1024,0,<sp/>GL_ALPHA,<sp/>GL_UNSIGNED_BYTE,<sp/>temp_bitmap);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assume<sp/>orthographic<sp/>projection<sp/>with<sp/>units<sp/>=<sp/>screen<sp/>pixels,<sp/>origin<sp/>at<sp/>top<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>tex);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>glBegin(GL_QUADS);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*text)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*text<sp/>&gt;=<sp/>32<sp/>&amp;&amp;<sp/>*text<sp/>&lt;<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref><sp/>q;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetBakedQuad(cdata,<sp/>1024,1024,<sp/>*text-32,<sp/>&amp;x,&amp;y,&amp;q,1);</highlight><highlight class="comment">//1=opengl<sp/>&amp;<sp/>d3d10+,0=d3d9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.s0,q.t0);<sp/>glVertex2f(q.x0,q.y0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.s1,q.t0);<sp/>glVertex2f(q.x1,q.y0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.s1,q.t1);<sp/>glVertex2f(q.x1,q.y1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.s0,q.t1);<sp/>glVertex2f(q.x0,q.y1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++text;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>glViewport(0,0,screen_x,screen_y);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>glClearColor(0.45f,0.45f,0.75f,0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>glDisable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>glDisable(GL_DEPTH_TEST);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>glDisable(GL_BLEND);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>glMatrixMode(GL_PROJECTION);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>glOrtho(0,screen_x,screen_y,0,-1,1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>glMatrixMode(GL_MODELVIEW);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>glEnable(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>glColor3f(1,1,1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>print(100,150,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>simple<sp/>test!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>font<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>glBegin(GL_QUADS);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(0,0);<sp/>glVertex2f(256,200+0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(1,0);<sp/>glVertex2f(768,200+0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(1,1);<sp/>glVertex2f(768,200+512);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(0,1);<sp/>glVertex2f(256,200+512);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">HINSTANCE<sp/>app;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">HWND<sp/><sp/>window;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">HGLRC<sp/>rc;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">HDC<sp/><sp/><sp/>dc;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;opengl32.lib&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;glu32.lib&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;winmm.lib&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mySetPixelFormat(HWND<sp/>win)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>PIXELFORMATDESCRIPTOR<sp/>pfd<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfd),<sp/>1,<sp/>PFD_SUPPORT_OPENGL<sp/>|<sp/>PFD_DRAW_TO_WINDOW<sp/>|<sp/>PFD_DOUBLEBUFFER,<sp/>PFD_TYPE_RGBA<sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel_format;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>pfd.dwLayerMask<sp/><sp/>=<sp/>PFD_MAIN_PLANE;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>pfd.cColorBits<sp/><sp/><sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>pfd.cAlphaBits<sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>pfd.cDepthBits<sp/><sp/><sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>pfd.cStencilBits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>pixel_format<sp/>=<sp/>ChoosePixelFormat(dc,<sp/>&amp;pfd);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pixel_format)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!DescribePixelFormat(dc,<sp/>pixel_format,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PIXELFORMATDESCRIPTOR),<sp/>&amp;pfd))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>SetPixelFormat(dc,<sp/>pixel_format,<sp/>&amp;pfd);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WINAPI<sp/>WinProc(HWND<sp/>wnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wparam,<sp/>LPARAM<sp/>lparam)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_CREATE:<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPCREATESTRUCT<sp/>lpcs<sp/>=<sp/>(LPCREATESTRUCT)<sp/>lparam;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc<sp/>=<sp/>GetDC(wnd);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mySetPixelFormat(wnd))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>wglCreateContext(dc);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wglMakeCurrent(dc,<sp/>rc);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DESTROY:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wglMakeCurrent(NULL,<sp/>NULL);<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc)<sp/>wglDeleteContext(rc);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostQuitMessage<sp/>(0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DefWindowProc<sp/>(wnd,<sp/>msg,<sp/>wparam,<sp/>lparam);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DefWindowProc<sp/>(wnd,<sp/>msg,<sp/>wparam,<sp/>lparam);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WINAPI<sp/>WinMain(HINSTANCE<sp/>hInstance,<sp/>HINSTANCE<sp/>hPrevInstance,<sp/>LPSTR<sp/>lpCmdLine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCmdShow)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>DWORD<sp/>dwstyle<sp/>=<sp/>WS_OVERLAPPED<sp/>|<sp/>WS_CAPTION<sp/>|<sp/>WS_SYSMENU<sp/>|<sp/>WS_MINIMIZEBOX;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>WNDCLASSEX<sp/><sp/>wndclass;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>wndclass.cbSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wndclass);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>wndclass.style<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CS_OWNDC;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>wndclass.lpfnWndProc<sp/><sp/><sp/>=<sp/>(WNDPROC)<sp/>WinProc;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>wndclass.cbClsExtra<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>wndclass.cbWndExtra<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>wndclass.hInstance<sp/><sp/><sp/><sp/><sp/>=<sp/>hInstance;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>wndclass.hIcon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LoadIcon(hInstance,<sp/>_T(</highlight><highlight class="stringliteral">&quot;appicon&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>wndclass.hCursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LoadCursor(NULL,IDC_ARROW);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>wndclass.hbrBackground<sp/>=<sp/>GetStockObject(NULL_BRUSH);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>wndclass.lpszMenuName<sp/><sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;truetype-test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>wndclass.lpszClassName<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;truetype-test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>wndclass.hIconSm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>app<sp/>=<sp/>hInstance;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!RegisterClassEx(&amp;wndclass))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>window<sp/>=<sp/>CreateWindow(_T(</highlight><highlight class="stringliteral">&quot;truetype-test&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;truetype<sp/>test&quot;</highlight><highlight class="normal">),<sp/>dwstyle,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CW_USEDEFAULT,0,<sp/>screen_x,<sp/>screen_y,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>app,<sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>ShowWindow(window,<sp/>SW_SHOWNORMAL);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MSG<sp/>msg;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetMessage(&amp;msg,<sp/>NULL,<sp/>0,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TranslateMessage(&amp;msg);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DispatchMessage(&amp;msg);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WM_QUIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wglMakeCurrent(dc,<sp/>rc);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>draw();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwapBuffers(dc);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/truetype_test_win32.c"/>
  </compounddef>
</doxygen>
