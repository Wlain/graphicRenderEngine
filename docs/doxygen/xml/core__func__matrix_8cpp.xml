<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="core__func__matrix_8cpp" kind="file" language="C++">
    <compoundname>core_func_matrix.cpp</compoundname>
    <includes refid="matrix_8hpp" local="no">glm/matrix.hpp</includes>
    <includes refid="matrix__transform_8hpp" local="no">glm/gtc/matrix_transform.hpp</includes>
    <includes refid="ulp_8hpp" local="no">glm/gtc/ulp.hpp</includes>
    <includes refid="epsilon_8hpp" local="no">glm/gtc/epsilon.hpp</includes>
    <includes refid="constants_8hpp" local="no">glm/gtc/constants.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">ctime</includes>
    <includes local="no">cstdio</includes>
    <incdepgraph>
      <node id="62">
        <label>../common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>detail/_fixes.hpp</label>
        <link refid="__fixes_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>_vectorize.hpp</label>
        <link refid="__vectorize_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>compute_vector_relational.hpp</label>
        <link refid="compute__vector__relational_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>detail/func_common.inl</label>
        <link refid="func__common_8inl"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>detail/func_exponential.inl</label>
        <link refid="func__exponential_8inl"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>detail/func_geometric.inl</label>
        <link refid="func__geometric_8inl"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>detail/func_matrix.inl</label>
        <link refid="func__matrix_8inl"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>detail/func_trigonometric.inl</label>
        <link refid="func__trigonometric_8inl"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>detail/func_vector_relational.inl</label>
        <link refid="func__vector__relational_8inl"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>detail/qualifier.hpp</label>
        <link refid="qualifier_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>setup.hpp</label>
        <link refid="setup_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>detail/type_float.hpp</label>
        <link refid="type__float_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>type_int.hpp</label>
        <link refid="type__int_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>detail/type_mat.hpp</label>
        <link refid="type__mat_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>detail/type_mat2x2.hpp</label>
        <link refid="type__mat2x2_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>type_mat2x2.inl</label>
        <link refid="type__mat2x2_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>detail/type_mat2x3.hpp</label>
        <link refid="type__mat2x3_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>type_mat2x3.inl</label>
        <link refid="type__mat2x3_8inl"/>
      </node>
      <node id="32">
        <label>detail/type_mat2x4.hpp</label>
        <link refid="type__mat2x4_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>type_mat2x4.inl</label>
        <link refid="type__mat2x4_8inl"/>
      </node>
      <node id="35">
        <label>detail/type_mat3x2.hpp</label>
        <link refid="type__mat3x2_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>type_mat3x2.inl</label>
        <link refid="type__mat3x2_8inl"/>
      </node>
      <node id="38">
        <label>detail/type_mat3x3.hpp</label>
        <link refid="type__mat3x3_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>type_mat3x3.inl</label>
        <link refid="type__mat3x3_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>detail/type_mat3x4.hpp</label>
        <link refid="type__mat3x4_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>type_mat3x4.inl</label>
        <link refid="type__mat3x4_8inl"/>
      </node>
      <node id="44">
        <label>detail/type_mat4x2.hpp</label>
        <link refid="type__mat4x2_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>type_mat4x2.inl</label>
        <link refid="type__mat4x2_8inl"/>
      </node>
      <node id="47">
        <label>detail/type_mat4x3.hpp</label>
        <link refid="type__mat4x3_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>type_mat4x3.inl</label>
        <link refid="type__mat4x3_8inl"/>
      </node>
      <node id="50">
        <label>detail/type_mat4x4.hpp</label>
        <link refid="type__mat4x4_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>type_mat4x4.inl</label>
        <link refid="type__mat4x4_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>type_vec.hpp</label>
        <link refid="type__vec_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>detail/type_vec1.hpp</label>
        <link refid="type__vec1_8hpp_source"/>
      </node>
      <node id="10">
        <label>detail/type_vec2.hpp</label>
        <link refid="type__vec2_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>type_vec2.inl</label>
        <link refid="type__vec2_8inl_source"/>
      </node>
      <node id="18">
        <label>detail/type_vec3.hpp</label>
        <link refid="type__vec3_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>type_vec3.inl</label>
        <link refid="type__vec3_8inl_source"/>
      </node>
      <node id="21">
        <label>detail/type_vec4.hpp</label>
        <link refid="type__vec4_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>type_vec4.inl</label>
        <link refid="type__vec4_8inl_source"/>
      </node>
      <node id="55">
        <label>../exponential.hpp</label>
        <link refid="exponential_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>../fwd.hpp</label>
        <link refid="fwd_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>../geometric.hpp</label>
        <link refid="geometric_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>../gtc/constants.hpp</label>
        <link refid="constants_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>constants.inl</label>
        <link refid="constants_8inl"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>epsilon.hpp</label>
        <link refid="epsilon_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>epsilon.inl</label>
        <link refid="epsilon_8inl"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>glm/gtc/matrix_transform.hpp</label>
        <link refid="matrix__transform_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>matrix_transform.inl</label>
        <link refid="matrix__transform_8inl"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>quaternion.hpp</label>
        <link refid="gtc_2quaternion_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>quaternion.inl</label>
        <link refid="gtc_2quaternion_8inl"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>glm/gtc/ulp.hpp</label>
        <link refid="ulp_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>ulp.inl</label>
        <link refid="ulp_8inl"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>mat2x2.hpp</label>
        <link refid="mat2x2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>mat2x3.hpp</label>
        <link refid="mat2x3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>mat2x4.hpp</label>
        <link refid="mat2x4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>mat3x2.hpp</label>
        <link refid="mat3x2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>mat3x3.hpp</label>
        <link refid="mat3x3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>mat3x4.hpp</label>
        <link refid="mat3x4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>mat4x2.hpp</label>
        <link refid="mat4x2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>mat4x3.hpp</label>
        <link refid="mat4x3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>mat4x4.hpp</label>
        <link refid="mat4x4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>glm/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../simd/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="69">
        <label>../trigonometric.hpp</label>
        <link refid="trigonometric_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vec2.hpp</label>
        <link refid="vec2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>vec3.hpp</label>
        <link refid="vec3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vec4.hpp</label>
        <link refid="vec4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>../vector_relational.hpp</label>
        <link refid="vector__relational_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp</label>
        <link refid="core__func__matrix_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="77">
        <label>cfloat</label>
      </node>
      <node id="57">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="80">
        <label>cstdio</label>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="79">
        <label>ctime</label>
      </node>
      <node id="15">
        <label>limits</label>
      </node>
      <node id="78">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="core__func__matrix_8cpp_1a610782954941810223f625f84f72017a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_matrixCompMult</definition>
        <argsstring>()</argsstring>
        <name>test_matrixCompMult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="12" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="12" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="core__func__matrix_8cpp_1abd90aaaf7cf6aae894b5330223293841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_outerProduct</definition>
        <argsstring>()</argsstring>
        <name>test_outerProduct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="91" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="91" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="core__func__matrix_8cpp_1a305e7ddfb77a8f70e26c9276e635b2a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_transpose</definition>
        <argsstring>()</argsstring>
        <name>test_transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="109" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="109" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="core__func__matrix_8cpp_1a22eb084d662fe12e0cd1cdf6d37ed366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_determinant</definition>
        <argsstring>()</argsstring>
        <name>test_determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="188" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="188" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="core__func__matrix_8cpp_1a7c7c3ef3d24c7264a6d5994f37387983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_inverse</definition>
        <argsstring>()</argsstring>
        <name>test_inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="195" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="195" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="core__func__matrix_8cpp_1ad058fedbe8c4b595a68f4437832c14d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_inverse_simd</definition>
        <argsstring>()</argsstring>
        <name>test_inverse_simd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="238" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="238" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="core__func__matrix_8cpp_1af7ba0f3c63c44ff2a2b13128e171a839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VEC3</type>
          </param>
          <param>
            <type>typename MAT4</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int test_inverse_perf</definition>
        <argsstring>(std::size_t Count, std::size_t Instance, char const *Message)</argsstring>
        <name>test_inverse_perf</name>
        <param>
          <type>std::size_t</type>
          <declname>Count</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>Instance</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>Message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="261" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="261" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="core__func__matrix_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" line="305" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp" bodystart="305" bodyend="328"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="matrix_8hpp" kindref="compound">glm/matrix.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="matrix__transform_8hpp" kindref="compound">glm/gtc/matrix_transform.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ulp_8hpp" kindref="compound">glm/gtc/ulp.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="epsilon_8hpp" kindref="compound">glm/gtc/epsilon.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="constants_8hpp" kindref="compound">glm/gtc/constants.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">glm;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_matrixCompMult()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga8357ec0aab6f8cf69313592492663c3f" kindref="member">mat2</ref>(0,<sp/>1,<sp/>4,<sp/>9);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x3</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x3</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x3</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gaea02797b8231f6dd9380345f6ff12155" kindref="member">mat2x3</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x4</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x4</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x4</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gaa9bfb36efaf88ecad32369ec8a01d901" kindref="member">mat2x4</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25,<sp/>36,<sp/>49);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gadfaff2a7dce5cbf4e77a47ecea42ac5b" kindref="member">mat3</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25,<sp/>36,<sp/>49,<sp/>64);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x2</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x2</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x2</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gad7476e0e866186f12ee87975c6b01552" kindref="member">mat3x2</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x4</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x4</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x4</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga5524ae15d7fc00a68b8e0e3a0733cc2a" kindref="member">mat3x4</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25,<sp/>36,<sp/>49,<sp/>64,<sp/>81,<sp/>100,<sp/>121);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga7dcd2365c2e368e6af5b7adeb6a9c8df" kindref="member">mat4</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25,<sp/>36,<sp/>49,<sp/>64,<sp/>81,<sp/>100,<sp/>121,<sp/>144,<sp/>169,<sp/>196,<sp/>225);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x2</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x2</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x2</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga72cf8ec4f4cda85943f4683531e421bc" kindref="member">mat4x2</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25,<sp/>36,<sp/>49);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x3</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x3</ref><sp/>n<sp/>=<sp/><ref refid="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" kindref="member">matrixCompMult</ref>(m,<sp/>m);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x3</ref><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gad3f3f750dcdc74a9037342c5cae55f5e" kindref="member">mat4x3</ref>(0,<sp/>1,<sp/>4,<sp/>9,<sp/>16,<sp/>25,<sp/>36,<sp/>49,<sp/>64,<sp/>81,<sp/>100,<sp/>121);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m.length();<sp/>++l)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(n[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_outerProduct()</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat2</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat3</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat2x3</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat2x4</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat3x2</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat3x4</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x2</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x3</ref><sp/>m<sp/>=<sp/>glm::outerProduct(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0f),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f));<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_transpose()</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m(0,<sp/>1,<sp/>2,<sp/>3);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga8357ec0aab6f8cf69313592492663c3f" kindref="member">mat2</ref>(0,<sp/>2,<sp/>1,<sp/>3);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x3</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x2</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x2</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gad7476e0e866186f12ee87975c6b01552" kindref="member">mat3x2</ref>(0,<sp/>3,<sp/>1,<sp/>4,<sp/>2,<sp/>5);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x4</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x2</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x2</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga72cf8ec4f4cda85943f4683531e421bc" kindref="member">mat4x2</ref>(0,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gadfaff2a7dce5cbf4e77a47ecea42ac5b" kindref="member">mat3</ref>(0,<sp/>3,<sp/>6,<sp/>1,<sp/>4,<sp/>7,<sp/>2,<sp/>5,<sp/>8);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x2</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x3</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gaea02797b8231f6dd9380345f6ff12155" kindref="member">mat2x3</ref>(0,<sp/>2,<sp/>4,<sp/>1,<sp/>3,<sp/>5);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x4</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x3</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gad3f3f750dcdc74a9037342c5cae55f5e" kindref="member">mat4x3</ref>(0,<sp/>4,<sp/>8,<sp/>1,<sp/>5,<sp/>9,<sp/>2,<sp/>6,<sp/>10,<sp/>3,<sp/>7,<sp/>11);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga7dcd2365c2e368e6af5b7adeb6a9c8df" kindref="member">mat4</ref>(0,<sp/>4,<sp/>8,<sp/>12,<sp/>1,<sp/>5,<sp/>9,<sp/>13,<sp/>2,<sp/>6,<sp/>10,<sp/>14,<sp/>3,<sp/>7,<sp/>11,<sp/>15);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x2</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x4</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat2x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1gaa9bfb36efaf88ecad32369ec8a01d901" kindref="member">mat2x4</ref>(0,<sp/>2,<sp/>4,<sp/>6,<sp/>1,<sp/>3,<sp/>5,<sp/>7);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat4x3</ref><sp/>m(0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x4</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" kindref="member">transpose</ref>(m);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">mat3x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/><ref refid="group__core__types_1ga5524ae15d7fc00a68b8e0e3a0733cc2a" kindref="member">mat3x4</ref>(0,<sp/>3,<sp/>6,<sp/>9,<sp/>1,<sp/>4,<sp/>7,<sp/>10,<sp/>2,<sp/>5,<sp/>8,<sp/>11);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>expected.length();<sp/>++l)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(t[l],<sp/>expected[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_determinant()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_inverse()</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/>A4x4(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1,<sp/>0,<sp/>1,<sp/>0),<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0,<sp/>1,<sp/>0,<sp/>0),<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0,<sp/>0,<sp/>1,<sp/>0),<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0,<sp/>0,<sp/>0,<sp/>1));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/>B4x4<sp/>=<sp/><ref refid="group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc" kindref="member">inverse</ref>(A4x4);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/>I4x4<sp/>=<sp/>A4x4<sp/>*<sp/>B4x4;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/>Identity(1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>Identity.length();<sp/>++l)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(I4x4[l],<sp/>Identity[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat3x3</ref><sp/>A3x3(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1,<sp/>0,<sp/>1),<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(0,<sp/>1,<sp/>0),<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(0,<sp/>0,<sp/>1));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat3x3</ref><sp/>B3x3<sp/>=<sp/><ref refid="group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc" kindref="member">glm::inverse</ref>(A3x3);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat3x3</ref><sp/>I3x3<sp/>=<sp/>A3x3<sp/>*<sp/>B3x3;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat3x3</ref><sp/>Identity(1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>Identity.length();<sp/>++l)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(I3x3[l],<sp/>Identity[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat2x2</ref><sp/>A2x2(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1,<sp/>1),<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat2x2</ref><sp/>B2x2<sp/>=<sp/><ref refid="group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc" kindref="member">glm::inverse</ref>(A2x2);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat2x2</ref><sp/>I2x2<sp/>=<sp/>A2x2<sp/>*<sp/>B2x2;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat2x2</ref><sp/>Identity(1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length_t<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>Identity.length();<sp/>++l)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">epsilonEqual</ref>(I2x2[l],<sp/>Identity[l],<sp/>epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_inverse_simd()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Identity(1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4x4(</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1,<sp/>0,<sp/>1,<sp/>0),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0,<sp/>1,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0,<sp/>0,<sp/>1,<sp/>0),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0,<sp/>0,<sp/>0,<sp/>1));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>B4x4<sp/>=<sp/><ref refid="group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc" kindref="member">glm::inverse</ref>(A4x4);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglm_1_1mat" kindref="compound">glm::mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I4x4<sp/>=<sp/>A4x4<sp/>*<sp/>B4x4;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(I4x4[0],<sp/>Identity[0],<sp/>0.001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(I4x4[1],<sp/>Identity[1],<sp/>0.001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(I4x4[2],<sp/>Identity[2],<sp/>0.001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(I4x4[3],<sp/>Identity[3],<sp/>0.001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VEC3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAT4&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_inverse_perf(std::size_t<sp/>Count,<sp/>std::size_t<sp/>Instance,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>Message)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;MAT4&gt;<sp/>TestInputs;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>TestInputs.resize(Count);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;MAT4&gt;<sp/>TestOutputs;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOutputs.resize(TestInputs.size());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>VEC3<sp/>Axis(glm::normalize(VEC3(1.0f,<sp/>2.0f,<sp/>3.0f)));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>TestInputs.size();<sp/>++i)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAT4::value_type<sp/>f<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename<sp/>MAT4::value_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>+<sp/>Instance)<sp/>*<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAT4::value_type(0.1)<sp/>+<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAT4::value_type(0.1);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestInputs[i]<sp/>=<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">glm::rotate</ref>(<ref refid="group__gtc__matrix__transform_1ga67d8473d6b293d1bb2b4eaf249795cab" kindref="member">glm::translate</ref>(MAT4(1),<sp/>Axis<sp/>*<sp/>f),<sp/>f,<sp/>Axis);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TestInputs[i]<sp/>=<sp/>glm::translate(MAT4(1),<sp/>Axis<sp/>*<sp/>f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>std::clock_t<sp/>StartTime<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>TestInputs.size();<sp/>++i)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestOutputs[i]<sp/>=<sp/><ref refid="group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc" kindref="member">glm::inverse</ref>(TestInputs[i]);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::clock_t<sp/>EndTime<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>TestInputs.size();<sp/>++i)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestOutputs[i]<sp/>=<sp/>TestOutputs[i]<sp/>*<sp/>TestInputs[i];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAT4::value_type<sp/>Diff(0);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>Entry<sp/>=<sp/>0;<sp/>Entry<sp/>&lt;<sp/>TestOutputs.size();<sp/>++Entry)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAT4<sp/>i(1.0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAT4<sp/>m(TestOutputs[Entry]);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(glm::length_t<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>m.length();<sp/>++y)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(glm::length_t<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>m[y].length();<sp/>++x)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Diff<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(m[y][x],<sp/>i[y][x]);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glm::uint<sp/>Ulp<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ulp<sp/>=<sp/>glm::max(glm::float_distance(*Dst,<sp/>*Src),<sp/>Ulp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;inverse&lt;%s&gt;(%f):<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>Message,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Diff),<sp/>EndTime<sp/>-<sp/>StartTime);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_matrixCompMult();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_outerProduct();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_transpose();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_determinant();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_inverse();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_inverse_simd();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Samples<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Samples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="comment">//NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_inverse_perf&lt;glm::vec3,<sp/>glm::mat4&gt;(Samples,<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;mat4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_inverse_perf&lt;glm::dvec3,<sp/>glm::dmat4&gt;(Samples,<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;dmat4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_matrix.cpp"/>
  </compounddef>
</doxygen>
