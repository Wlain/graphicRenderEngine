<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4" kind="class" language="C++" prot="public">
    <compoundname>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</compoundname>
    <basecompoundref refid="classdetail_1_1truncating__iterator__base" prot="public" virt="non-virtual">detail::truncating_iterator_base&lt; OutputIt &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename OutputIt</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a8bbc61d3b1bcf1605d908e79c58ccc94" prot="public" static="no">
        <type>typename <ref refid="classdetail_1_1truncating__iterator__base" kindref="compound">truncating_iterator_base</ref>&lt; OutputIt &gt;::value_type</type>
        <definition>using detail::truncating_iterator&lt; OutputIt, std::false_type &gt;::value_type =  typename truncating_iterator_base&lt;OutputIt&gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="98" column="3" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a48c34850b4f2e0de25de072b61d0f574" prot="private" static="no" mutable="yes">
        <type><ref refid="classdetail_1_1truncating__iterator__base" kindref="compound">truncating_iterator_base</ref>&lt; OutputIt &gt;::value_type</type>
        <definition>truncating_iterator_base&lt;OutputIt&gt;::value_type detail::truncating_iterator&lt; OutputIt, std::false_type &gt;::blackhole_</definition>
        <argsstring></argsstring>
        <name>blackhole_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="95" column="58" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1af83fa54c7baa87d400b2fda0caa9729c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;::truncating_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>truncating_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="100" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a3f454dc6284c6f6d1da51d2ff08427ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;::truncating_iterator</definition>
        <argsstring>(OutputIt out, size_t limit)</argsstring>
        <name>truncating_iterator</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="102" column="3" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" bodystart="102" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1abb7d0bb5ca5015027f398ddd7c56318d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1truncating__iterator" kindref="compound">truncating_iterator</ref> &amp;</type>
        <definition>truncating_iterator &amp; detail::truncating_iterator&lt; OutputIt, std::false_type &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="105" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a086822731db032512b99b9d4a1931b02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1truncating__iterator" kindref="compound">truncating_iterator</ref></type>
        <definition>truncating_iterator detail::truncating_iterator&lt; OutputIt, std::false_type &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="110" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1ad2d0ec61b3dc832445d8cfd263e53579" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type &amp;</type>
        <definition>value_type &amp; detail::truncating_iterator&lt; OutputIt, std::false_type &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="116" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" bodystart="116" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</label>
        <link refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>detail::truncating_iterator_base&lt; OutputIt &gt;</label>
        <link refid="classdetail_1_1truncating__iterator__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</label>
        <link refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>detail::truncating_iterator_base&lt; OutputIt &gt;</label>
        <link refid="classdetail_1_1truncating__iterator__base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>count_</edgelabel>
          <edgelabel>limit_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" line="93" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/compile.h" bodystart="94" bodyend="119"/>
    <listofallmembers>
      <member refid="classdetail_1_1truncating__iterator__base_1a8dbc2aad6cf724387f3c707924734a80" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>_Unchecked_type</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a573bec528d15e9b10bd25a0640623e44" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>base</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a48c34850b4f2e0de25de072b61d0f574" prot="private" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>blackhole_</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a1f30cfb932ed15aaf15242a2ebe60b33" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>count</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a1d416994cfe027e1eabf459648542695" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>count_</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1abc2994483ee29204fbdcc0d55e8a4a9f" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>difference_type</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1acbcad1d11812d89bba9e8ca0a3ea548c" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>iterator_category</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a68f63204e045cd61d118a594108601c5" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>limit_</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1ad2d0ec61b3dc832445d8cfd263e53579" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>operator*</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1abb7d0bb5ca5015027f398ddd7c56318d" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>operator++</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a086822731db032512b99b9d4a1931b02" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>operator++</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1aabf7031a36137260823898c436bdab3f" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>out_</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1aadb7f1019f339d99b325985354292a81" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>pointer</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1ac3c38c7ac2672fad4e8ccb12e7eb71ad" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>reference</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1af83fa54c7baa87d400b2fda0caa9729c" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>truncating_iterator</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a3f454dc6284c6f6d1da51d2ff08427ac" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>truncating_iterator</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a0ba319a1eb55241ee7c98651f7e277d2" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>truncating_iterator_base</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a3de886223ba3391ca8a4618720a1c0e6" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>truncating_iterator_base</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4_1a8bbc61d3b1bcf1605d908e79c58ccc94" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
