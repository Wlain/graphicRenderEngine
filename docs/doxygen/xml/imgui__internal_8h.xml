<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__internal_8h" kind="file" language="C++">
    <compoundname>imgui_internal.h</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">limits.h</includes>
    <includes refid="imstb__textedit_8h" local="yes">imstb_textedit.h</includes>
    <includedby refid="imgui_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp</includedby>
    <includedby refid="imgui__draw_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp</includedby>
    <includedby refid="imgui__tables_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_tables.cpp</includedby>
    <includedby refid="imgui__widgets_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp</includedby>
    <includedby refid="imgui__freetype_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/misc/freetype/imgui_freetype.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h</label>
        <link refid="imgui__internal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>imstb_textedit.h</label>
        <link refid="imstb__textedit_8h_source"/>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="12">
        <label>limits.h</label>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp</label>
        <link refid="imgui_8cpp_source"/>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp</label>
        <link refid="imgui__draw_8cpp_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h</label>
        <link refid="imgui__internal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_tables.cpp</label>
        <link refid="imgui__tables_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp</label>
        <link refid="imgui__widgets_8cpp_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/misc/freetype/imgui_freetype.cpp</label>
        <link refid="imgui__freetype_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_im_vec1" prot="public">ImVec1</innerclass>
    <innerclass refid="struct_im_vec2ih" prot="public">ImVec2ih</innerclass>
    <innerclass refid="struct_im_rect" prot="public">ImRect</innerclass>
    <innerclass refid="struct_im_bit_array" prot="public">ImBitArray</innerclass>
    <innerclass refid="struct_im_bit_vector" prot="public">ImBitVector</innerclass>
    <innerclass refid="struct_im_span" prot="public">ImSpan</innerclass>
    <innerclass refid="struct_im_span_allocator" prot="public">ImSpanAllocator</innerclass>
    <innerclass refid="struct_im_pool" prot="public">ImPool</innerclass>
    <innerclass refid="struct_im_chunk_stream" prot="public">ImChunkStream</innerclass>
    <innerclass refid="struct_im_draw_list_shared_data" prot="public">ImDrawListSharedData</innerclass>
    <innerclass refid="struct_im_draw_data_builder" prot="public">ImDrawDataBuilder</innerclass>
    <innerclass refid="struct_im_gui_input_event_mouse_pos" prot="public">ImGuiInputEventMousePos</innerclass>
    <innerclass refid="struct_im_gui_input_event_mouse_wheel" prot="public">ImGuiInputEventMouseWheel</innerclass>
    <innerclass refid="struct_im_gui_input_event_mouse_button" prot="public">ImGuiInputEventMouseButton</innerclass>
    <innerclass refid="struct_im_gui_input_event_key" prot="public">ImGuiInputEventKey</innerclass>
    <innerclass refid="struct_im_gui_input_event_key_mods" prot="public">ImGuiInputEventKeyMods</innerclass>
    <innerclass refid="struct_im_gui_input_event_text" prot="public">ImGuiInputEventText</innerclass>
    <innerclass refid="struct_im_gui_input_event_app_focused" prot="public">ImGuiInputEventAppFocused</innerclass>
    <innerclass refid="struct_im_gui_input_event" prot="public">ImGuiInputEvent</innerclass>
    <innerclass refid="struct_im_gui_data_type_temp_storage" prot="public">ImGuiDataTypeTempStorage</innerclass>
    <innerclass refid="struct_im_gui_data_type_info" prot="public">ImGuiDataTypeInfo</innerclass>
    <innerclass refid="struct_im_gui_color_mod" prot="public">ImGuiColorMod</innerclass>
    <innerclass refid="struct_im_gui_style_mod" prot="public">ImGuiStyleMod</innerclass>
    <innerclass refid="struct_im_gui_combo_preview_data" prot="public">ImGuiComboPreviewData</innerclass>
    <innerclass refid="struct_im_gui_group_data" prot="public">ImGuiGroupData</innerclass>
    <innerclass refid="struct_im_gui_menu_columns" prot="public">ImGuiMenuColumns</innerclass>
    <innerclass refid="struct_im_gui_input_text_state" prot="public">ImGuiInputTextState</innerclass>
    <innerclass refid="struct_im_gui_popup_data" prot="public">ImGuiPopupData</innerclass>
    <innerclass refid="struct_im_gui_next_window_data" prot="public">ImGuiNextWindowData</innerclass>
    <innerclass refid="struct_im_gui_next_item_data" prot="public">ImGuiNextItemData</innerclass>
    <innerclass refid="struct_im_gui_last_item_data" prot="public">ImGuiLastItemData</innerclass>
    <innerclass refid="struct_im_gui_stack_sizes" prot="public">ImGuiStackSizes</innerclass>
    <innerclass refid="struct_im_gui_window_stack_data" prot="public">ImGuiWindowStackData</innerclass>
    <innerclass refid="struct_im_gui_shrink_width_item" prot="public">ImGuiShrinkWidthItem</innerclass>
    <innerclass refid="struct_im_gui_ptr_or_index" prot="public">ImGuiPtrOrIndex</innerclass>
    <innerclass refid="struct_im_gui_list_clipper_range" prot="public">ImGuiListClipperRange</innerclass>
    <innerclass refid="struct_im_gui_list_clipper_data" prot="public">ImGuiListClipperData</innerclass>
    <innerclass refid="struct_im_gui_nav_item_data" prot="public">ImGuiNavItemData</innerclass>
    <innerclass refid="struct_im_gui_old_column_data" prot="public">ImGuiOldColumnData</innerclass>
    <innerclass refid="struct_im_gui_old_columns" prot="public">ImGuiOldColumns</innerclass>
    <innerclass refid="struct_im_gui_dock_node" prot="public">ImGuiDockNode</innerclass>
    <innerclass refid="struct_im_gui_window_dock_style" prot="public">ImGuiWindowDockStyle</innerclass>
    <innerclass refid="struct_im_gui_dock_context" prot="public">ImGuiDockContext</innerclass>
    <innerclass refid="struct_im_gui_viewport_p" prot="public">ImGuiViewportP</innerclass>
    <innerclass refid="struct_im_gui_window_settings" prot="public">ImGuiWindowSettings</innerclass>
    <innerclass refid="struct_im_gui_settings_handler" prot="public">ImGuiSettingsHandler</innerclass>
    <innerclass refid="struct_im_gui_metrics_config" prot="public">ImGuiMetricsConfig</innerclass>
    <innerclass refid="struct_im_gui_stack_level_info" prot="public">ImGuiStackLevelInfo</innerclass>
    <innerclass refid="struct_im_gui_stack_tool" prot="public">ImGuiStackTool</innerclass>
    <innerclass refid="struct_im_gui_context_hook" prot="public">ImGuiContextHook</innerclass>
    <innerclass refid="struct_im_gui_context" prot="public">ImGuiContext</innerclass>
    <innerclass refid="struct_im_gui_window_temp_data" prot="public">ImGuiWindowTempData</innerclass>
    <innerclass refid="struct_im_gui_window" prot="public">ImGuiWindow</innerclass>
    <innerclass refid="struct_im_gui_tab_item" prot="public">ImGuiTabItem</innerclass>
    <innerclass refid="struct_im_gui_tab_bar" prot="public">ImGuiTabBar</innerclass>
    <innerclass refid="struct_im_gui_table_column" prot="public">ImGuiTableColumn</innerclass>
    <innerclass refid="struct_im_gui_table_cell_data" prot="public">ImGuiTableCellData</innerclass>
    <innerclass refid="struct_im_gui_table" prot="public">ImGuiTable</innerclass>
    <innerclass refid="struct_im_gui_table_temp_data" prot="public">ImGuiTableTempData</innerclass>
    <innerclass refid="struct_im_gui_table_column_settings" prot="public">ImGuiTableColumnSettings</innerclass>
    <innerclass refid="struct_im_gui_table_settings" prot="public">ImGuiTableSettings</innerclass>
    <innerclass refid="struct_im_font_builder_i_o" prot="public">ImFontBuilderIO</innerclass>
    <innernamespace refid="namespace_im_stb">ImStb</innernamespace>
    <innernamespace refid="namespace_im_gui">ImGui</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="imgui__internal_8h_1aedaea85d00a4f8ed74df48b3e92b12fe" prot="public" static="no">
        <name>IMGUI_ENABLE_STB_TRUETYPE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="105" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ab58b961887715e3f06f0a60a773c6de1" prot="public" static="no">
        <name>STB_TEXTEDIT_STRING</name>
        <initializer><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="186" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a6e64031a061922e3a48d88fd8623f4c3" prot="public" static="no">
        <name>STB_TEXTEDIT_CHARTYPE</name>
        <initializer>ImWchar</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="187" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ab109eb512ec8d9ad1973e58b367fec22" prot="public" static="no">
        <name>STB_TEXTEDIT_GETWIDTH_NEWLINE</name>
        <initializer>(-1.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="188" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1afa79483143df87a1497010712b3dfaf9" prot="public" static="no">
        <name>STB_TEXTEDIT_UNDOSTATECOUNT</name>
        <initializer>99</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="189" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a15cbcac55cf92003c28c44734422756a" prot="public" static="no">
        <name>STB_TEXTEDIT_UNDOCHARCOUNT</name>
        <initializer>999</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="190" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ad97743d633d5dc0f9836e0d13872ff33" prot="public" static="no">
        <name>IMGUI_PAYLOAD_TYPE_WINDOW</name>
        <initializer>&quot;_IMWINDOW&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="200" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1af981be9fab3821feb2ddc4000ed6dd3f" prot="public" static="no">
        <name>IMGUI_DEBUG_LOG</name>
        <param><defname>_FMT</defname></param>
        <param><defname>...</defname></param>
        <initializer>printf(&quot;[%05d] &quot; _FMT, GImGui-&gt;FrameCount, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="204" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ac5da5a1ff584fc05b5ae97e01ed43ff0" prot="public" static="no">
        <name>IMGUI_DEBUG_LOG_POPUP</name>
        <param><defname>...</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="213" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aab371220994964eb900b3d76c6556db6" prot="public" static="no">
        <name>IMGUI_DEBUG_LOG_NAV</name>
        <param><defname>...</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="214" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aec9bef75077c76fb8b322d23d7a488fa" prot="public" static="no">
        <name>IMGUI_DEBUG_LOG_IO</name>
        <param><defname>...</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="215" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1abb3ddf04a4a40fa6819241f6bf019316" prot="public" static="no">
        <name>IMGUI_DEBUG_LOG_VIEWPORT</name>
        <param><defname>...</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="216" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a32f5f778a40336af6efadd3b7af7faef" prot="public" static="no">
        <name>IMGUI_DEBUG_LOG_DOCKING</name>
        <param><defname>...</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="217" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ab48aaa96aa99bc25d19384ec3492a6d3" prot="public" static="no">
        <name>IM_STATIC_ASSERT</name>
        <param><defname>_COND</defname></param>
        <initializer>static_assert(_COND, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="220" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" prot="public" static="no">
        <name>IM_ASSERT_PARANOID</name>
        <param><defname>_EXPR</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="228" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a537f548eb1d21404f9341cfe20383cd7" prot="public" static="no">
        <name>IM_ASSERT_USER_ERROR</name>
        <param><defname>_EXP</defname></param>
        <param><defname>_MSG</defname></param>
        <initializer>IM_ASSERT((_EXP) &amp;&amp; _MSG)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="234" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" prot="public" static="no">
        <name>IM_PI</name>
        <initializer>3.14159265358979323846f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="238" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a1bfa04d9a2431433f9668c814fd4c3d5" prot="public" static="no">
        <name>IM_NEWLINE</name>
        <initializer>&quot;\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="242" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1af913a6a3d1f42d6b137cb6733c763569" prot="public" static="no">
        <name>IM_TABSIZE</name>
        <initializer>(4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="244" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a564a6d3ea943fd0a1cf948288888a6a5" prot="public" static="no">
        <name>IM_MEMALIGN</name>
        <param><defname>_OFF</defname></param>
        <param><defname>_ALIGN</defname></param>
        <initializer>(((_OFF) + (_ALIGN - 1)) &amp; ~(_ALIGN - 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="245" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aac14064fede4cb5a2263206baea7ffb1" prot="public" static="no">
        <name>IM_F32_TO_INT8_UNBOUND</name>
        <param><defname>_VAL</defname></param>
        <initializer>((int)((_VAL) * 255.0f + ((_VAL)&gt;=0 ? 0.5f : -0.5f)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="246" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a044d12ff2cdc7af4a6de58d63cd96839" prot="public" static="no">
        <name>IM_F32_TO_INT8_SAT</name>
        <param><defname>_VAL</defname></param>
        <initializer>((int)(ImSaturate(_VAL) * 255.0f + 0.5f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="247" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ad6166e2776ce11effbcae5c45d4aa4a6" prot="public" static="no">
        <name>IM_FLOOR</name>
        <param><defname>_VAL</defname></param>
        <initializer>((float)(int)(_VAL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="248" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aca6e2273580ccf447bcde493e6292043" prot="public" static="no">
        <name>IM_ROUND</name>
        <param><defname>_VAL</defname></param>
        <initializer>((float)(int)((_VAL) + 0.5f))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="249" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a3a504542c4837c193bd5e54911123fe1" prot="public" static="no">
        <name>IMGUI_CDECL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="255" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aeb84d7a31a153a1b3482c9234ce15ad0" prot="public" static="no">
        <name>IM_MSVC_WARNING_SUPPRESS</name>
        <param><defname>XXXX</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="262" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a4dfe43927baa0f5cd67e0a7fc891aafb" prot="public" static="no">
        <name>IM_DEBUG_BREAK</name>
        <param></param>
        <initializer>IM_ASSERT(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="280" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aa886f20aead1a15ce961ac6fa361b044" prot="public" static="no">
        <name>ImFabs</name>
        <param><defname>X</defname></param>
        <initializer>fabsf(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="407" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1af45b12e2af4037adec57b0a9488b45c2" prot="public" static="no">
        <name>ImSqrt</name>
        <param><defname>X</defname></param>
        <initializer>sqrtf(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="408" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ab31c49c24dd5d51dd629a56b5d11a85e" prot="public" static="no">
        <name>ImFmod</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <initializer>fmodf((X), (Y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="409" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a29665878048d6614ab3753e9b3b7b436" prot="public" static="no">
        <name>ImCos</name>
        <param><defname>X</defname></param>
        <initializer>cosf(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="410" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a6f4d18e137599dbd4b1bde0d2a4b065f" prot="public" static="no">
        <name>ImSin</name>
        <param><defname>X</defname></param>
        <initializer>sinf(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="411" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a2b9b8e68466b8175e03ca1d7d36c4e33" prot="public" static="no">
        <name>ImAcos</name>
        <param><defname>X</defname></param>
        <initializer>acosf(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="412" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a91e7466f40711f63162e524cdf7501ca" prot="public" static="no">
        <name>ImAtan2</name>
        <param><defname>Y</defname></param>
        <param><defname>X</defname></param>
        <initializer>atan2f((Y), (X))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="413" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1abc1babb382e50cb53cbd9526581e626b" prot="public" static="no">
        <name>ImAtof</name>
        <param><defname>STR</defname></param>
        <initializer>atof(STR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="414" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a09170e101a72d70544ae6edfe495ee8f" prot="public" static="no">
        <name>ImCeil</name>
        <param><defname>X</defname></param>
        <initializer>ceilf(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="416" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a218b788bbd9e9e23daab8c1293dc864f" prot="public" static="no">
        <name>IM_ROUNDUP_TO_EVEN</name>
        <param><defname>_V</defname></param>
        <initializer>((((_V) + 1) / 2) * 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="708" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a4c112341b8105d20801645b1cc798795" prot="public" static="no">
        <name>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MIN</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="709" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a4a2db720e636ba7503b2f4316b0d8fde" prot="public" static="no">
        <name>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="710" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a2f55b4cb9fd50652e56a623ab4ecc5ad" prot="public" static="no">
        <name>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC</name>
        <param><defname>_RAD</defname></param>
        <param><defname>_MAXERROR</defname></param>
        <initializer>ImClamp(IM_ROUNDUP_TO_EVEN((int)ImCeil(IM_PI / ImAcos(1 - ImMin((_MAXERROR), (_RAD)) / (_RAD)))), IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MIN, IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="711" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a2710a795e254cfa72314040661e5a1e5" prot="public" static="no">
        <name>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R</name>
        <param><defname>_N</defname></param>
        <param><defname>_MAXERROR</defname></param>
        <initializer>((_MAXERROR) / (1 - ImCos(IM_PI / ImMax((float)(_N), IM_PI))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="714" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a686993b4921388469fe16254d44a9016" prot="public" static="no">
        <name>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_ERROR</name>
        <param><defname>_N</defname></param>
        <param><defname>_RAD</defname></param>
        <initializer>((1 - ImCos(IM_PI / ImMax((float)(_N), IM_PI))) / (_RAD))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="715" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1ac149be83e162f3775a56cd66590fc092" prot="public" static="no">
        <name>IM_DRAWLIST_ARCFAST_TABLE_SIZE</name>
        <initializer>48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="719" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" prot="public" static="no">
        <name>IM_DRAWLIST_ARCFAST_SAMPLE_MAX</name>
        <initializer>IM_DRAWLIST_ARCFAST_TABLE_SIZE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="721" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1af753c58d54a4e49adbb5638a007eb45c" prot="public" static="no">
        <name>IM_COL32_DISABLE</name>
        <initializer>IM_COL32(0,0,0,1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="2430" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="2430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a965e900d0dd3a8c3b39fb4de516dc6ca" prot="public" static="no">
        <name>IMGUI_TABLE_MAX_COLUMNS</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="2431" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="2431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a7ec767415f33219e9d45fc46a1db4113" prot="public" static="no">
        <name>IMGUI_TABLE_MAX_DRAW_CHANNELS</name>
        <initializer>(4 + 64 * 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="2432" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="2432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__internal_8h_1a81212fb781479085c4354b54dd41a1d2" prot="public" static="no">
        <name>IMGUI_TEST_ENGINE_ITEM_INFO</name>
        <param><defname>_ID</defname></param>
        <param><defname>_LABEL</defname></param>
        <param><defname>_FLAGS</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3189" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="3189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44b" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiItemFlags_</name>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba5d290fa5a6de73ecde481664fe6785ef" prot="public">
          <name>ImGuiItemFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba446348bf1c0722c99ad0332f76276129" prot="public">
          <name>ImGuiItemFlags_NoTabStop</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba995328c4628ba17f0bd4b51cd6b41b5a" prot="public">
          <name>ImGuiItemFlags_ButtonRepeat</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba16dccc85f1c0bd80cc4aed5a736ba308" prot="public">
          <name>ImGuiItemFlags_Disabled</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44bac6dbbff7a3a5bd0b7af2339f650b53c6" prot="public">
          <name>ImGuiItemFlags_NoNav</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba6f18c9cbb835376ddeba52c55571ee41" prot="public">
          <name>ImGuiItemFlags_NoNavDefaultFocus</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba78e8b3f2ffa6203a2d59e03577158509" prot="public">
          <name>ImGuiItemFlags_SelectableDontClosePopup</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba7a3e32e27315211cd5a6e781980cbf9c" prot="public">
          <name>ImGuiItemFlags_MixedValue</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44baadc69586369b84ef3777616b36ee218a" prot="public">
          <name>ImGuiItemFlags_ReadOnly</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a64418599f4e9c7eeb3e322b22eb8d44ba9c616802219d1c3d6b9c00d88d2cc852" prot="public">
          <name>ImGuiItemFlags_Inputable</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="761" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="762" bodyend="773"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfc" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiItemStatusFlags_</name>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfcaae7c0f0b20c6c151ea189ed5b078c6ba" prot="public">
          <name>ImGuiItemStatusFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca1cd7702ed1d8354e5d80a20f750c7ca2" prot="public">
          <name>ImGuiItemStatusFlags_HoveredRect</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca114af7511bce1d820abac3e236351c9a" prot="public">
          <name>ImGuiItemStatusFlags_HasDisplayRect</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca67d1ba9815c60860dd0e98773a1c07cd" prot="public">
          <name>ImGuiItemStatusFlags_Edited</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca0ba47c4a344a8043f6764f169d983462" prot="public">
          <name>ImGuiItemStatusFlags_ToggledSelection</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfcaff81063067ea58ad553548a404cf4ef4" prot="public">
          <name>ImGuiItemStatusFlags_ToggledOpen</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca7c27b68d86220ae2ab042ee599da83b6" prot="public">
          <name>ImGuiItemStatusFlags_HasDeactivated</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca21c9b5a8445901fda26c5e119ab63762" prot="public">
          <name>ImGuiItemStatusFlags_Deactivated</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca993d5ef006bbebf26e269c6ca8794f01" prot="public">
          <name>ImGuiItemStatusFlags_HoveredWindow</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a772a57072bdc1dbcb826d3acb3c00cfca62a762f08027384be86d40025945467b" prot="public">
          <name>ImGuiItemStatusFlags_FocusedByTabbing</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="776" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="777" bodyend="796"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a0d7e4430cfb9abdc7fb7b3ffafab7c13" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiInputTextFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1a0d7e4430cfb9abdc7fb7b3ffafab7c13ae16618b5910dfff3b2cef34786d9b69c" prot="public">
          <name>ImGuiInputTextFlags_Multiline</name>
          <initializer>= 1 &lt;&lt; 26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a0d7e4430cfb9abdc7fb7b3ffafab7c13aeb9c6a9f620871dd6041d4bb5e94a17c" prot="public">
          <name>ImGuiInputTextFlags_NoMarkEdited</name>
          <initializer>= 1 &lt;&lt; 27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a0d7e4430cfb9abdc7fb7b3ffafab7c13a12fab8a42aeb2292dc31e67cb8bc3dbb" prot="public">
          <name>ImGuiInputTextFlags_MergedItem</name>
          <initializer>= 1 &lt;&lt; 28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="799" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="800" bodyend="805"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiButtonFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0ace7632232484c218d34933d0eaedd67d" prot="public">
          <name>ImGuiButtonFlags_PressedOnClick</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a78a6a688669d26385c0e6757264e5e4a" prot="public">
          <name>ImGuiButtonFlags_PressedOnClickRelease</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a95215fa948aedb2849b0283972df76d1" prot="public">
          <name>ImGuiButtonFlags_PressedOnClickReleaseAnywhere</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0aa0492b4253b162233f95158b251c1bbc" prot="public">
          <name>ImGuiButtonFlags_PressedOnRelease</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a303d3f0c9d93bd42ca8953ec49c21441" prot="public">
          <name>ImGuiButtonFlags_PressedOnDoubleClick</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a824c84e57100b4aa8621dc3ab2a4be8f" prot="public">
          <name>ImGuiButtonFlags_PressedOnDragDropHold</name>
          <initializer>= 1 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a61bec0e6cea16f5041e0d362419dc3c8" prot="public">
          <name>ImGuiButtonFlags_Repeat</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a0aca23522a6dc5d2e61da31bf328760b" prot="public">
          <name>ImGuiButtonFlags_FlattenChildren</name>
          <initializer>= 1 &lt;&lt; 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0ac9daa551a7112a723aacd8151d836f33" prot="public">
          <name>ImGuiButtonFlags_AllowItemOverlap</name>
          <initializer>= 1 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0aee99adc9d4d07682346e2a23079e5a8f" prot="public">
          <name>ImGuiButtonFlags_DontClosePopups</name>
          <initializer>= 1 &lt;&lt; 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a655cb0c3df1c9d3a7ed732d4d37384ef" prot="public">
          <name>ImGuiButtonFlags_AlignTextBaseLine</name>
          <initializer>= 1 &lt;&lt; 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a23b895e50fa2347537040e69a062f75d" prot="public">
          <name>ImGuiButtonFlags_NoKeyModifiers</name>
          <initializer>= 1 &lt;&lt; 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a3bf97fae98b60cc884a6a75ce60882a9" prot="public">
          <name>ImGuiButtonFlags_NoHoldingActiveId</name>
          <initializer>= 1 &lt;&lt; 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a7da3d020255bec5e67f944e6f12543a5" prot="public">
          <name>ImGuiButtonFlags_NoNavFocus</name>
          <initializer>= 1 &lt;&lt; 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a0beba7411aac8aa793d21f2be7ed6d24" prot="public">
          <name>ImGuiButtonFlags_NoHoveredOnFocus</name>
          <initializer>= 1 &lt;&lt; 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a08d72dc0a02321461aabf3960aa93645" prot="public">
          <name>ImGuiButtonFlags_PressedOnMask_</name>
          <initializer>= ImGuiButtonFlags_PressedOnClick | ImGuiButtonFlags_PressedOnClickRelease | ImGuiButtonFlags_PressedOnClickReleaseAnywhere | ImGuiButtonFlags_PressedOnRelease | ImGuiButtonFlags_PressedOnDoubleClick | ImGuiButtonFlags_PressedOnDragDropHold</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a48a9b845b6fe61315c2b2f758573afb0a7620bfe462f82c3946202f2c2d2608cb" prot="public">
          <name>ImGuiButtonFlags_PressedOnDefault_</name>
          <initializer>= ImGuiButtonFlags_PressedOnClickRelease</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="808" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="809" bodyend="828"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ad0872275951aa1c1b042adc65b7e24f5" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiComboFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1ad0872275951aa1c1b042adc65b7e24f5a513bd7494979f188325d96b5851111a1" prot="public">
          <name>ImGuiComboFlags_CustomPreview</name>
          <initializer>= 1 &lt;&lt; 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="831" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="832" bodyend="834"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a5ebc33388f4c09221f190dd5c0172089" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiSliderFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1a5ebc33388f4c09221f190dd5c0172089a2db4b9ade9f3519d30e6fe3ab8a25f3f" prot="public">
          <name>ImGuiSliderFlags_Vertical</name>
          <initializer>= 1 &lt;&lt; 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a5ebc33388f4c09221f190dd5c0172089a054449dd88f22fc8be61adc5fbe1afe5" prot="public">
          <name>ImGuiSliderFlags_ReadOnly</name>
          <initializer>= 1 &lt;&lt; 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="837" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="838" bodyend="841"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bf" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiSelectableFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfa50000511c374320cb282b0eb775ace28" prot="public">
          <name>ImGuiSelectableFlags_NoHoldingActiveID</name>
          <initializer>= 1 &lt;&lt; 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfa92f422c1174e2b8ada37cd57aa84b110" prot="public">
          <name>ImGuiSelectableFlags_SelectOnNav</name>
          <initializer>= 1 &lt;&lt; 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfa5a3db9c085e28f04817d404e65007d3e" prot="public">
          <name>ImGuiSelectableFlags_SelectOnClick</name>
          <initializer>= 1 &lt;&lt; 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfad6e10e8714f7a324520b76511b593e51" prot="public">
          <name>ImGuiSelectableFlags_SelectOnRelease</name>
          <initializer>= 1 &lt;&lt; 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfa3ee8b2c4b7cd86254764ae57ef94cff6" prot="public">
          <name>ImGuiSelectableFlags_SpanAvailWidth</name>
          <initializer>= 1 &lt;&lt; 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfacc47b185fab5b4d4e1fe7f90053b7795" prot="public">
          <name>ImGuiSelectableFlags_DrawHoveredWhenHeld</name>
          <initializer>= 1 &lt;&lt; 25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfac7c4325e26120515d18d5d9e57dccdff" prot="public">
          <name>ImGuiSelectableFlags_SetNavIdOnHover</name>
          <initializer>= 1 &lt;&lt; 26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3009e4cdf58220e2d87426a575e18bfabc5467fc6bb6276e0e07a941edc036ef" prot="public">
          <name>ImGuiSelectableFlags_NoPadWithHalfSpacing</name>
          <initializer>= 1 &lt;&lt; 27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="844" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="845" bodyend="855"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ae9c5bc8382033031fa6b36929aae4478" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiTreeNodeFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1ae9c5bc8382033031fa6b36929aae4478acede7092554d9ab46dfb5cc74f146ef4" prot="public">
          <name>ImGuiTreeNodeFlags_ClipLabelForTrailingButton</name>
          <initializer>= 1 &lt;&lt; 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="858" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="859" bodyend="861"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a2b58eba4cf52133830d1eb2ac3c42654" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiSeparatorFlags_</name>
        <enumvalue id="imgui__internal_8h_1a2b58eba4cf52133830d1eb2ac3c42654ac709701ce3986d718c7dc97d93f04516" prot="public">
          <name>ImGuiSeparatorFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a2b58eba4cf52133830d1eb2ac3c42654a00e6c7e3f77de10a4bfa908f55e7d16a" prot="public">
          <name>ImGuiSeparatorFlags_Horizontal</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a2b58eba4cf52133830d1eb2ac3c42654ad27b2c49ccef9f50993053c7cc1dcfaa" prot="public">
          <name>ImGuiSeparatorFlags_Vertical</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a2b58eba4cf52133830d1eb2ac3c42654a204fb508a77f0225672aef6e0460c5c8" prot="public">
          <name>ImGuiSeparatorFlags_SpanAllColumns</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="863" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="864" bodyend="869"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1af40f56844aa51e0ebc4962d7f97ff1c2" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiTextFlags_</name>
        <enumvalue id="imgui__internal_8h_1af40f56844aa51e0ebc4962d7f97ff1c2a50de51bc52c86302caab8506180779d0" prot="public">
          <name>ImGuiTextFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1af40f56844aa51e0ebc4962d7f97ff1c2ae0d5c5b800eed646d8380dba74d1d0f9" prot="public">
          <name>ImGuiTextFlags_NoWidthForLargeClippedText</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="871" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="872" bodyend="875"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a75bc7b9a85540423ca8b16e4b447cc2b" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiTooltipFlags_</name>
        <enumvalue id="imgui__internal_8h_1a75bc7b9a85540423ca8b16e4b447cc2ba2b180b171f1a1504abab689e87798c8b" prot="public">
          <name>ImGuiTooltipFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a75bc7b9a85540423ca8b16e4b447cc2ba6f937dcd572808b55cb7698a9be2b4dc" prot="public">
          <name>ImGuiTooltipFlags_OverridePreviousTooltip</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="877" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="878" bodyend="881"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1abce83213b194cfc876faa80cd9da4823" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiLayoutType_</name>
        <enumvalue id="imgui__internal_8h_1abce83213b194cfc876faa80cd9da4823accc103236d2a074a05ac0f5857a423ae" prot="public">
          <name>ImGuiLayoutType_Horizontal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abce83213b194cfc876faa80cd9da4823abca9a5514cc9bbf69f532ab6ee4f387e" prot="public">
          <name>ImGuiLayoutType_Vertical</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="885" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="886" bodyend="889"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1e" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiLogType</name>
        <enumvalue id="imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1ea0978e2c78e6e9f2d91070e3e064d9181" prot="public">
          <name>ImGuiLogType_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1ea071f267c20976b9853cfb31cd2f6c2cb" prot="public">
          <name>ImGuiLogType_TTY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1ea54b08c15c88d960b4959195be4072206" prot="public">
          <name>ImGuiLogType_File</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1eadf402b49ca86f0bd57e61c22b19f55fa" prot="public">
          <name>ImGuiLogType_Buffer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1ea25e62200482768ca28ebaac9abca8d8c" prot="public">
          <name>ImGuiLogType_Clipboard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="891" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="892" bodyend="898"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiAxis</name>
        <enumvalue id="imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483a03c230bed95e0bedfe4ae746835848a8" prot="public">
          <name>ImGuiAxis_None</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483a56b8304279c0c828698ae893b3687354" prot="public">
          <name>ImGuiAxis_X</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483aea4d0df122c8f789939a73ff4b213a72" prot="public">
          <name>ImGuiAxis_Y</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="901" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="902" bodyend="906"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a9d5efcdd8895aa3544f1e8ce366c2728" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiPlotType</name>
        <enumvalue id="imgui__internal_8h_1a9d5efcdd8895aa3544f1e8ce366c2728aadebee780e8bd6f9dbb4741efb86377b" prot="public">
          <name>ImGuiPlotType_Lines</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a9d5efcdd8895aa3544f1e8ce366c2728a1c19c715203ea8cb19886098b87494da" prot="public">
          <name>ImGuiPlotType_Histogram</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="908" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="909" bodyend="912"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aec" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiInputEventType</name>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aeca165fa7531364de26026c7a6da1da0e40" prot="public">
          <name>ImGuiInputEventType_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aecac6b9806deeff025014fa0bf2f1289f37" prot="public">
          <name>ImGuiInputEventType_MousePos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aecaa34c6e78adb999faee9b924be478af86" prot="public">
          <name>ImGuiInputEventType_MouseWheel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aecae621e4353fa86fd3695ff59fbfc39e2f" prot="public">
          <name>ImGuiInputEventType_MouseButton</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aecabe9c190acd7d33fe428759ff161499d3" prot="public">
          <name>ImGuiInputEventType_Key</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aeca89e9282d22f1115a00c0408cff79a864" prot="public">
          <name>ImGuiInputEventType_KeyMods</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aecab869bf22751eef57f5d6f7c36d8b6105" prot="public">
          <name>ImGuiInputEventType_Char</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aeca34a0a567199c3da04d154717f427980d" prot="public">
          <name>ImGuiInputEventType_Focus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8baf1d40f4b383b021ecbc6719a69aecab14fe8c4f360d1fa6c69304a98284ea0" prot="public">
          <name>ImGuiInputEventType_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="914" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="915" bodyend="925"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiInputSource</name>
        <enumvalue id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78aef18047c6e32382b1644a98fa68a2622" prot="public">
          <name>ImGuiInputSource_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78a004e3cd161dccc08c9dd2814c552d305" prot="public">
          <name>ImGuiInputSource_Mouse</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78a8781a7e7ed1536f27e7f30eb4f8c159c" prot="public">
          <name>ImGuiInputSource_Keyboard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78a23f80e1957c04f981ab4412cbdab0b99" prot="public">
          <name>ImGuiInputSource_Gamepad</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78ab31b60490e3ba3e2fae77988936062e7" prot="public">
          <name>ImGuiInputSource_Nav</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78a3018be1413949e333e20495094f81fb3" prot="public">
          <name>ImGuiInputSource_Clipboard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8ee603a145a3a4f4ab5c93c8c8333b78a86ca1f5ab44fc267491e0cf7518dd883" prot="public">
          <name>ImGuiInputSource_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="927" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="928" bodyend="936"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a595aad51728e2685daff714edb3d05fd" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiInputReadMode</name>
        <enumvalue id="imgui__internal_8h_1a595aad51728e2685daff714edb3d05fda7de346eb74709d862c1a354c66fc81db" prot="public">
          <name>ImGuiInputReadMode_Down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a595aad51728e2685daff714edb3d05fda62b2902c4138e255df31f2d7010e311b" prot="public">
          <name>ImGuiInputReadMode_Pressed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a595aad51728e2685daff714edb3d05fda76247163c506317acb6aab2fb70dda90" prot="public">
          <name>ImGuiInputReadMode_Released</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a595aad51728e2685daff714edb3d05fdae4ebadc9a73b269a8fa4b50a32662e69" prot="public">
          <name>ImGuiInputReadMode_Repeat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a595aad51728e2685daff714edb3d05fda18bfb6910777eb7d00185d46c47f0ad2" prot="public">
          <name>ImGuiInputReadMode_RepeatSlow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a595aad51728e2685daff714edb3d05fda13765db913d3abe27a0ba7fb2c5b70aa" prot="public">
          <name>ImGuiInputReadMode_RepeatFast</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="968" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="969" bodyend="976"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a9c122103feadc7b225fc21698ff0f4d8" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiPopupPositionPolicy</name>
        <enumvalue id="imgui__internal_8h_1a9c122103feadc7b225fc21698ff0f4d8ab8a9815cfc6ed3f721aa8e75d960dbdf" prot="public">
          <name>ImGuiPopupPositionPolicy_Default</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a9c122103feadc7b225fc21698ff0f4d8a8aaec33fd337ffbffd524a140f6810ea" prot="public">
          <name>ImGuiPopupPositionPolicy_ComboBox</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a9c122103feadc7b225fc21698ff0f4d8a98c2b5615114955f8ea26ddadcf7469c" prot="public">
          <name>ImGuiPopupPositionPolicy_Tooltip</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="978" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="979" bodyend="983"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1af75ba6b510cea782217d4d885e26b06b" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiDataTypePrivate_</name>
        <enumvalue id="imgui__internal_8h_1af75ba6b510cea782217d4d885e26b06ba2a8b8c147a6fc39328eb7aae96bc0f5f" prot="public">
          <name>ImGuiDataType_String</name>
          <initializer>= ImGuiDataType_COUNT + 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1af75ba6b510cea782217d4d885e26b06baddb592de4eadc0eac7e3bb8a835a2d4b" prot="public">
          <name>ImGuiDataType_Pointer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1af75ba6b510cea782217d4d885e26b06ba063d254c2d48a00023e3193652e617c6" prot="public">
          <name>ImGuiDataType_ID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1000" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1001" bodyend="1005"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiNextWindowDataFlags_</name>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a7e542bab0d96b2b5932c28fd0454ada5" prot="public">
          <name>ImGuiNextWindowDataFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2aeb5aa62a597881fbe4ef93f5c37b1524" prot="public">
          <name>ImGuiNextWindowDataFlags_HasPos</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a09e7a64416470e0ade6eb409e6896b0e" prot="public">
          <name>ImGuiNextWindowDataFlags_HasSize</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a681b538c5524a41f5b1441deaf83f109" prot="public">
          <name>ImGuiNextWindowDataFlags_HasContentSize</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a99b4a748f646c75e95e0e79b1b287401" prot="public">
          <name>ImGuiNextWindowDataFlags_HasCollapsed</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a058e79b35835c61379cd17ac1a644a73" prot="public">
          <name>ImGuiNextWindowDataFlags_HasSizeConstraint</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a1dbb34ccb7f209caf1e5df490f55cfe5" prot="public">
          <name>ImGuiNextWindowDataFlags_HasFocus</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a211615311a254e0af958048945676be4" prot="public">
          <name>ImGuiNextWindowDataFlags_HasBgAlpha</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a7a7d377adf3f19607ad4e4b96116b313" prot="public">
          <name>ImGuiNextWindowDataFlags_HasScroll</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a2f3b65c8454d9294013bcda533083ddb" prot="public">
          <name>ImGuiNextWindowDataFlags_HasViewport</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a7bfdcce721be0ac3b5e3a50db4be47ae" prot="public">
          <name>ImGuiNextWindowDataFlags_HasDock</name>
          <initializer>= 1 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1abb053de20abf920e20d5e71744ad9fb2a63b1385e7038994b75ad91ab2b0ce9e4" prot="public">
          <name>ImGuiNextWindowDataFlags_HasWindowClass</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1122" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1123" bodyend="1136"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ab3326ece0897bea17386ca3a13cec16d" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiNextItemDataFlags_</name>
        <enumvalue id="imgui__internal_8h_1ab3326ece0897bea17386ca3a13cec16da0c8afd8659e11f265d62ddf50bb8b4e1" prot="public">
          <name>ImGuiNextItemDataFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ab3326ece0897bea17386ca3a13cec16dacc4931375476944456310ae0ee74baac" prot="public">
          <name>ImGuiNextItemDataFlags_HasWidth</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ab3326ece0897bea17386ca3a13cec16dab2d3f6c04861ac42d8b4228340fd3e17" prot="public">
          <name>ImGuiNextItemDataFlags_HasOpen</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1166" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1167" bodyend="1171"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ac6dc2a94ce331db0a60128e0c4d3b781" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiActivateFlags_</name>
        <enumvalue id="imgui__internal_8h_1ac6dc2a94ce331db0a60128e0c4d3b781aa33844c64e46b5b7de4679ec75a1dae2" prot="public">
          <name>ImGuiActivateFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac6dc2a94ce331db0a60128e0c4d3b781a2aea002f5b27f2bebdfb9e3ffbf76690" prot="public">
          <name>ImGuiActivateFlags_PreferInput</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac6dc2a94ce331db0a60128e0c4d3b781abfc73c8fa2e6f9199776625c669535bb" prot="public">
          <name>ImGuiActivateFlags_PreferTweak</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac6dc2a94ce331db0a60128e0c4d3b781a323d6950284312a50792b19155ecc814" prot="public">
          <name>ImGuiActivateFlags_TryToPreserveState</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1271" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1272" bodyend="1277"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3b" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiScrollFlags_</name>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3baefabbb18e69bd62676409818e9816de3" prot="public">
          <name>ImGuiScrollFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3bad2b12e29b789dca61ca5ffd983b0366c" prot="public">
          <name>ImGuiScrollFlags_KeepVisibleEdgeX</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3ba0260e1caf3cad782884eed0b7f59b6c0" prot="public">
          <name>ImGuiScrollFlags_KeepVisibleEdgeY</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3ba83baf3c803bae17539111d86a7f4ad3e" prot="public">
          <name>ImGuiScrollFlags_KeepVisibleCenterX</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3baed7e932769d957a862bcdf436fe9d25f" prot="public">
          <name>ImGuiScrollFlags_KeepVisibleCenterY</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3ba393df63246541be577f1a3d4f0bb60d1" prot="public">
          <name>ImGuiScrollFlags_AlwaysCenterX</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3bab8f17d4cc5b3f4b2a013b193f84e1d7f" prot="public">
          <name>ImGuiScrollFlags_AlwaysCenterY</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3ba1989b3caf04086a857afa9c954621ca9" prot="public">
          <name>ImGuiScrollFlags_NoScrollParent</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3ba04eed6aba4afcab3535acbad330b8496" prot="public">
          <name>ImGuiScrollFlags_MaskX_</name>
          <initializer>= ImGuiScrollFlags_KeepVisibleEdgeX | ImGuiScrollFlags_KeepVisibleCenterX | ImGuiScrollFlags_AlwaysCenterX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a11bb3c636c3fa5869d0584b76d877d3bac814dc337de9556c681617043413b195" prot="public">
          <name>ImGuiScrollFlags_MaskY_</name>
          <initializer>= ImGuiScrollFlags_KeepVisibleEdgeY | ImGuiScrollFlags_KeepVisibleCenterY | ImGuiScrollFlags_AlwaysCenterY</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1280" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1281" bodyend="1292"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiNavHighlightFlags_</name>
        <enumvalue id="imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26a6f47e567193290259dd85fdcade51ee6" prot="public">
          <name>ImGuiNavHighlightFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26ae54860a6f56817772ef7f1f42ca3c1bd" prot="public">
          <name>ImGuiNavHighlightFlags_TypeDefault</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26a12a4f12d464b2a5313a8bba2b9250d8a" prot="public">
          <name>ImGuiNavHighlightFlags_TypeThin</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26a8d97ef7eb2ce4cfa5ee98957dbb941cd" prot="public">
          <name>ImGuiNavHighlightFlags_AlwaysDraw</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26a0d2af936bbd5e37cc62ba573f02250be" prot="public">
          <name>ImGuiNavHighlightFlags_NoRounding</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1294" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1295" bodyend="1301"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ac8abedb3b5ce10300fd7049f72887e30" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiNavDirSourceFlags_</name>
        <enumvalue id="imgui__internal_8h_1ac8abedb3b5ce10300fd7049f72887e30a4508beca51b1de5f06bded9ceebae335" prot="public">
          <name>ImGuiNavDirSourceFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac8abedb3b5ce10300fd7049f72887e30a5f414343d9d759b1700b894b14723941" prot="public">
          <name>ImGuiNavDirSourceFlags_RawKeyboard</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac8abedb3b5ce10300fd7049f72887e30a26c911383d076bcd4a536fd4fe6d7dbf" prot="public">
          <name>ImGuiNavDirSourceFlags_Keyboard</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac8abedb3b5ce10300fd7049f72887e30ae9988d3760de3b2575faeac3fe1b182f" prot="public">
          <name>ImGuiNavDirSourceFlags_PadDPad</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ac8abedb3b5ce10300fd7049f72887e30a0515fcf2914bc6adccbbac4ed31a5e0a" prot="public">
          <name>ImGuiNavDirSourceFlags_PadLStick</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1303" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1304" bodyend="1310"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177c" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiNavMoveFlags_</name>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177cac52ba4fd5c7ad628e2dace965f1c02cd" prot="public">
          <name>ImGuiNavMoveFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177cac784f58a6171479f3fb754af4701298a" prot="public">
          <name>ImGuiNavMoveFlags_LoopX</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca9f8e276286a9675c723a6531374362ba" prot="public">
          <name>ImGuiNavMoveFlags_LoopY</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca90dc1c64af4b4e43a0c555573ad6f714" prot="public">
          <name>ImGuiNavMoveFlags_WrapX</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca097bd55eceaa4c0e4ef88f6aee5f38c0" prot="public">
          <name>ImGuiNavMoveFlags_WrapY</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca61f1ac459b7ca1dd1097aeb279278c56" prot="public">
          <name>ImGuiNavMoveFlags_AllowCurrentNavId</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca1f4719a5582f194ef9d8c7aa65fe1ef7" prot="public">
          <name>ImGuiNavMoveFlags_AlsoScoreVisibleSet</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177cac53a1e6c97f5c7c9e37e55fd3f54f339" prot="public">
          <name>ImGuiNavMoveFlags_ScrollToEdgeY</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca04d5738a6924704bd99f27fa3fc55ad6" prot="public">
          <name>ImGuiNavMoveFlags_Forwarded</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca82bc55458bf9b2e44ece9592249687cb" prot="public">
          <name>ImGuiNavMoveFlags_DebugNoResult</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177cade835d879ecb006d5ae9fbca1b60fc13" prot="public">
          <name>ImGuiNavMoveFlags_FocusApi</name>
          <initializer>= 1 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca0d0585ca73a5239e35125a897d50f538" prot="public">
          <name>ImGuiNavMoveFlags_Tabbing</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177cae8af2e894775d409d38d4c1ee63a35e9" prot="public">
          <name>ImGuiNavMoveFlags_Activate</name>
          <initializer>= 1 &lt;&lt; 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ad3fdd202d1973cfeb10564b8f55b177ca5aad01a3834a4a1622dccfef22a13925" prot="public">
          <name>ImGuiNavMoveFlags_DontSetNavHighlight</name>
          <initializer>= 1 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1312" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1313" bodyend="1328"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1afb412215b8327dc2c6af2c19fdca64c6" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiNavLayer</name>
        <enumvalue id="imgui__internal_8h_1afb412215b8327dc2c6af2c19fdca64c6af20ab672127882528d426234dda66607" prot="public">
          <name>ImGuiNavLayer_Main</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1afb412215b8327dc2c6af2c19fdca64c6a5955aaa1ab52860ec9be55f32e2a9d30" prot="public">
          <name>ImGuiNavLayer_Menu</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1afb412215b8327dc2c6af2c19fdca64c6a7c54ca28f0db8d5e808af0ec3290b05c" prot="public">
          <name>ImGuiNavLayer_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1330" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1331" bodyend="1335"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2c" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiOldColumnFlags_</name>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2cab6b95d246afa157be5207b3805e80f52" prot="public">
          <name>ImGuiOldColumnFlags_None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2cae78e11f64bc8d767c81489a8fdac1ad7" prot="public">
          <name>ImGuiOldColumnFlags_NoBorder</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2caa37db2ea8df9275cc2519a1f3e4124cd" prot="public">
          <name>ImGuiOldColumnFlags_NoResize</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2cac9d198e4b2362f973b7eceec610d57a2" prot="public">
          <name>ImGuiOldColumnFlags_NoPreserveWidths</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2cafa5209b8a63584051e81ca3cb44ef666" prot="public">
          <name>ImGuiOldColumnFlags_NoForceWithinWindow</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2ca347930c963217fe6ce56b19febc0f54b" prot="public">
          <name>ImGuiOldColumnFlags_GrowParentContentsSize</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2ca6b2cf5f4ec329ea36ca98c1c8d547761" prot="public">
          <name>ImGuiColumnsFlags_None</name>
          <initializer>= ImGuiOldColumnFlags_None</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2caeafe73f0f7664ce44e5c08277803228d" prot="public">
          <name>ImGuiColumnsFlags_NoBorder</name>
          <initializer>= ImGuiOldColumnFlags_NoBorder</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2ca5297643b959c2e5c542bf8ef36cff686" prot="public">
          <name>ImGuiColumnsFlags_NoResize</name>
          <initializer>= ImGuiOldColumnFlags_NoResize</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2cae32cb38aa0d09e87a951a0ce9b9a4553" prot="public">
          <name>ImGuiColumnsFlags_NoPreserveWidths</name>
          <initializer>= ImGuiOldColumnFlags_NoPreserveWidths</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2ca816318249c9a40a068953849275ad4aa" prot="public">
          <name>ImGuiColumnsFlags_NoForceWithinWindow</name>
          <initializer>= ImGuiOldColumnFlags_NoForceWithinWindow</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a8b9b28a4b14227561a035ca721d38d2cad86ef11ecd7b2dc932c98cb7ab58bf78" prot="public">
          <name>ImGuiColumnsFlags_GrowParentContentsSize</name>
          <initializer>= ImGuiOldColumnFlags_GrowParentContentsSize</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1357" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1358" bodyend="1375"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810a" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiDockNodeFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa3c510b653367281311212c9d9bc9d67f" prot="public">
          <name>ImGuiDockNodeFlags_DockSpace</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aacbdca016218c706eeb5b2be0b92833f3" prot="public">
          <name>ImGuiDockNodeFlags_CentralNode</name>
          <initializer>= 1 &lt;&lt; 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aacdbeb7c8f134742898dc6cdf97453b06" prot="public">
          <name>ImGuiDockNodeFlags_NoTabBar</name>
          <initializer>= 1 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aad1fdb744c284d4a4df6f30d159d28858" prot="public">
          <name>ImGuiDockNodeFlags_HiddenTabBar</name>
          <initializer>= 1 &lt;&lt; 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa57d6a050cc007bc5ac4f1f94f32ef99c" prot="public">
          <name>ImGuiDockNodeFlags_NoWindowMenuButton</name>
          <initializer>= 1 &lt;&lt; 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aafca6de7c30491fb0aa1bbbd08b37b62d" prot="public">
          <name>ImGuiDockNodeFlags_NoCloseButton</name>
          <initializer>= 1 &lt;&lt; 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa5db741172b10e44b42b6a2bba9bd38f4" prot="public">
          <name>ImGuiDockNodeFlags_NoDocking</name>
          <initializer>= 1 &lt;&lt; 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa52ea03c3a3afc90f2467fb5861074518" prot="public">
          <name>ImGuiDockNodeFlags_NoDockingSplitMe</name>
          <initializer>= 1 &lt;&lt; 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa10f92e2724d69a06d3b81b6d9a665087" prot="public">
          <name>ImGuiDockNodeFlags_NoDockingSplitOther</name>
          <initializer>= 1 &lt;&lt; 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa0cb8cbc9364c015e1999995a390bf6a0" prot="public">
          <name>ImGuiDockNodeFlags_NoDockingOverMe</name>
          <initializer>= 1 &lt;&lt; 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aab539831c682da3afe1f140b9a3f35648" prot="public">
          <name>ImGuiDockNodeFlags_NoDockingOverOther</name>
          <initializer>= 1 &lt;&lt; 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa5a15d1611d92325783638878902e25a7" prot="public">
          <name>ImGuiDockNodeFlags_NoDockingOverEmpty</name>
          <initializer>= 1 &lt;&lt; 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa0359b08d703d00a6be7ab30f77f3e6be" prot="public">
          <name>ImGuiDockNodeFlags_NoResizeX</name>
          <initializer>= 1 &lt;&lt; 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa232dad5f3a02cba9a8983fc142022750" prot="public">
          <name>ImGuiDockNodeFlags_NoResizeY</name>
          <initializer>= 1 &lt;&lt; 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aaa0dd873a041a44fb260bcbee9eb42f86" prot="public">
          <name>ImGuiDockNodeFlags_SharedFlagsInheritMask_</name>
          <initializer>= ~0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa0f64f29b0bc977e3403f59c7bf8e3e15" prot="public">
          <name>ImGuiDockNodeFlags_NoResizeFlagsMask_</name>
          <initializer>= ImGuiDockNodeFlags_NoResize | ImGuiDockNodeFlags_NoResizeX | ImGuiDockNodeFlags_NoResizeY</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa2038c8c2ee7c8a7889e5d96226c9f82d" prot="public">
          <name>ImGuiDockNodeFlags_LocalFlagsMask_</name>
          <initializer>= ImGuiDockNodeFlags_NoSplit | ImGuiDockNodeFlags_NoResizeFlagsMask_ | ImGuiDockNodeFlags_AutoHideTabBar | ImGuiDockNodeFlags_DockSpace | ImGuiDockNodeFlags_CentralNode | ImGuiDockNodeFlags_NoTabBar | ImGuiDockNodeFlags_HiddenTabBar | ImGuiDockNodeFlags_NoWindowMenuButton | ImGuiDockNodeFlags_NoCloseButton | ImGuiDockNodeFlags_NoDocking</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aaebabad374eb53ddb399a0a718a17a582" prot="public">
          <name>ImGuiDockNodeFlags_LocalFlagsTransferMask_</name>
          <initializer>= ImGuiDockNodeFlags_LocalFlagsMask_ &amp; ~ImGuiDockNodeFlags_DockSpace</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a7a78e630f5cf974fc0968522200b810aa3ef9f7716f9cd1d4fdde0568fafab240" prot="public">
          <name>ImGuiDockNodeFlags_SavedFlagsMask_</name>
          <initializer>= ImGuiDockNodeFlags_NoResizeFlagsMask_ | ImGuiDockNodeFlags_DockSpace | ImGuiDockNodeFlags_CentralNode | ImGuiDockNodeFlags_NoTabBar | ImGuiDockNodeFlags_HiddenTabBar | ImGuiDockNodeFlags_NoWindowMenuButton | ImGuiDockNodeFlags_NoCloseButton | ImGuiDockNodeFlags_NoDocking</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1423" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1424" bodyend="1445"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1ae57210f8b9ee87840d96cdffb74eb885" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiDataAuthority_</name>
        <enumvalue id="imgui__internal_8h_1ae57210f8b9ee87840d96cdffb74eb885a21bf3ed3763c8e1a42a22588337b4c3c" prot="public">
          <name>ImGuiDataAuthority_Auto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ae57210f8b9ee87840d96cdffb74eb885a92151ace03a62c7d80a895448057d337" prot="public">
          <name>ImGuiDataAuthority_DockNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1ae57210f8b9ee87840d96cdffb74eb885a019ebf85ba705941fb8c090b1688f121" prot="public">
          <name>ImGuiDataAuthority_Window</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1448" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1449" bodyend="1453"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a645a5c246ec9f9f3f87d72a65ee58a31" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiDockNodeState</name>
        <enumvalue id="imgui__internal_8h_1a645a5c246ec9f9f3f87d72a65ee58a31a6159fa7b3ab5efa58b708024c53d8cdc" prot="public">
          <name>ImGuiDockNodeState_Unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a645a5c246ec9f9f3f87d72a65ee58a31acc1169ff6e04f63095c7200861d48e15" prot="public">
          <name>ImGuiDockNodeState_HostWindowHiddenBecauseSingleWindow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a645a5c246ec9f9f3f87d72a65ee58a31ac805202e1d58f803faa1f6f62d86b6c4" prot="public">
          <name>ImGuiDockNodeState_HostWindowHiddenBecauseWindowsAreResizing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a645a5c246ec9f9f3f87d72a65ee58a31a87fb35fa48643ce75356fbce411560da" prot="public">
          <name>ImGuiDockNodeState_HostWindowVisible</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1455" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1456" bodyend="1461"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiWindowDockStyleCol</name>
        <enumvalue id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9a7ce931a48dcf79b88141114b6a689de5" prot="public">
          <name>ImGuiWindowDockStyleCol_Text</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9a0e73a126f8202cbf49a62b68410469ee" prot="public">
          <name>ImGuiWindowDockStyleCol_Tab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9a3ffd938791f02b938e94c32def867abf" prot="public">
          <name>ImGuiWindowDockStyleCol_TabHovered</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9a29f433e96b9be4d30cf83b5fe8d37cc6" prot="public">
          <name>ImGuiWindowDockStyleCol_TabActive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9acc4da127426651fc6f9f3b268584eb70" prot="public">
          <name>ImGuiWindowDockStyleCol_TabUnfocused</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9aa60286fde70523a1c09de1c32b710ed9" prot="public">
          <name>ImGuiWindowDockStyleCol_TabUnfocusedActive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a32592b700e2025d7e931fafaa4af4ab9acbb288ff7ab0223bccf2f1ade2c0839f" prot="public">
          <name>ImGuiWindowDockStyleCol_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1530" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1531" bodyend="1539"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiContextHookType</name>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944acdc5557f289ac0c42bfb0ae10c779007" prot="public">
          <name>ImGuiContextHookType_NewFramePre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944a634538cef470e9e7d7c6a18aa98a6da7" prot="public">
          <name>ImGuiContextHookType_NewFramePost</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944aae9779a06a38aa7a286984ff61c4ea23" prot="public">
          <name>ImGuiContextHookType_EndFramePre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944af89bd23e3dc8417b45d0e22ea81821de" prot="public">
          <name>ImGuiContextHookType_EndFramePost</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944a98949a4c583105fc33fcc7dcad42dbf0" prot="public">
          <name>ImGuiContextHookType_RenderPre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944a0e18a2181e8659c0f28e123db59e5d74" prot="public">
          <name>ImGuiContextHookType_RenderPost</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944aff021ea6bb9da9b720f4790f827c7a89" prot="public">
          <name>ImGuiContextHookType_Shutdown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944a08caacd5ad63bd162d6dc7e4a61b6509" prot="public">
          <name>ImGuiContextHookType_PendingRemoval_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1697" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1697" bodyend="1697"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1a3cbab85d1b24ec93439a282888949a14" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiTabBarFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1a3cbab85d1b24ec93439a282888949a14abc08752c3f7cc8cd59f2514d7018645a" prot="public">
          <name>ImGuiTabBarFlags_DockNode</name>
          <initializer>= 1 &lt;&lt; 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a3cbab85d1b24ec93439a282888949a14aac75268d8e19ec356a99cf96c6f3dce3" prot="public">
          <name>ImGuiTabBarFlags_IsFocused</name>
          <initializer>= 1 &lt;&lt; 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1a3cbab85d1b24ec93439a282888949a14a06b732b29b82ed362e23c156c1c198c7" prot="public">
          <name>ImGuiTabBarFlags_SaveSettings</name>
          <initializer>= 1 &lt;&lt; 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="2344" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="2345" bodyend="2349"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__internal_8h_1aaef03ace24ca11beaec1716d944865b8" prot="public" static="no" strong="no">
        <type></type>
        <name>ImGuiTabItemFlagsPrivate_</name>
        <enumvalue id="imgui__internal_8h_1aaef03ace24ca11beaec1716d944865b8af46cab1d2ac6a0f8306b70d1b57250d6" prot="public">
          <name>ImGuiTabItemFlags_SectionMask_</name>
          <initializer>= ImGuiTabItemFlags_Leading | ImGuiTabItemFlags_Trailing</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1aaef03ace24ca11beaec1716d944865b8a18947a6e8820b3822b58686745ab5881" prot="public">
          <name>ImGuiTabItemFlags_NoCloseButton</name>
          <initializer>= 1 &lt;&lt; 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1aaef03ace24ca11beaec1716d944865b8ac165028e40ca4cdd0873c6316695843f" prot="public">
          <name>ImGuiTabItemFlags_Button</name>
          <initializer>= 1 &lt;&lt; 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1aaef03ace24ca11beaec1716d944865b8abfe1678b1367454d6966f8e388d6ef61" prot="public">
          <name>ImGuiTabItemFlags_Unsorted</name>
          <initializer>= 1 &lt;&lt; 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__internal_8h_1aaef03ace24ca11beaec1716d944865b8a3e2ef10513d85891562efb86b7ec9883" prot="public">
          <name>ImGuiTabItemFlags_Preview</name>
          <initializer>= 1 &lt;&lt; 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="2352" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="2353" bodyend="2359"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="imgui__internal_8h_1ad490f117472332edc285f13c5ba77bf8" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiDataAuthority</definition>
        <argsstring></argsstring>
        <name>ImGuiDataAuthority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="150" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a86d7bb2ee8297d38b131d8ea7e6430c6" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiLayoutType</definition>
        <argsstring></argsstring>
        <name>ImGuiLayoutType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="151" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a69818e5784f8f39375ee58059c449ab2" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiActivateFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiActivateFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="152" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiItemFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiItemFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="153" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a86b8f9e2fd4084fb2112f003070b53fa" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiItemStatusFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiItemStatusFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="154" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a930931ec4c54582a278a461676df4dda" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiOldColumnFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiOldColumnFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="155" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a8c2855ba575756109c607c10697bcccd" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiNavHighlightFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiNavHighlightFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="156" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a83858661b68556d7da82de40d020e152" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiNavDirSourceFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiNavDirSourceFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="157" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1aff7a453b89555bb074f2fe46a159ac25" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiNavMoveFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiNavMoveFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="158" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a24c816e161b249fa062cec22451bd863" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiNextItemDataFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiNextItemDataFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="159" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a55b45c183ddf8a1b8a70fbce77fa5d26" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiNextWindowDataFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiNextWindowDataFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="160" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiScrollFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiScrollFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="161" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a5bfe5a88609ebcdf61cfee4e2fabf9a8" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiSeparatorFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiSeparatorFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="162" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1af5a78082b7812985fff78923206b7488" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiTextFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiTextFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="163" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1ad3bdaebce9ed8c9ce2f572ac419ffb71" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImGuiTooltipFlags</definition>
        <argsstring></argsstring>
        <name>ImGuiTooltipFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="164" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1af128655e687b027c18655e3bfde4b11e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* ImGuiErrorLogCallback) (void *user_data, const char *fmt,...)</definition>
        <argsstring>)(void *user_data, const char *fmt,...)</argsstring>
        <name>ImGuiErrorLogCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="166" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a5c58fe70d0547f85609b2b99ab451efe" prot="public" static="no">
        <type>FILE *</type>
        <definition>typedef FILE* ImFileHandle</definition>
        <argsstring></argsstring>
        <name>ImFileHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="392" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1a2bcd38f7be434db57a9757ebf7aa56d0" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ImPoolIdx</definition>
        <argsstring></argsstring>
        <name>ImPoolIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="636" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1aa99029b7d107c7769178a5ca13ddfa6f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* ImGuiContextHookCallback) (ImGuiContext *ctx, ImGuiContextHook *hook)</definition>
        <argsstring>)(ImGuiContext *ctx, ImGuiContextHook *hook)</argsstring>
        <name>ImGuiContextHookCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="1696" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="1696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1abe1882c8292cd23a77a54eda2407f147" prot="public" static="no">
        <type>ImS8</type>
        <definition>typedef ImS8 ImGuiTableColumnIdx</definition>
        <argsstring></argsstring>
        <name>ImGuiTableColumnIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="2435" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="2435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__internal_8h_1aad84cfe70f5c1afb2c057b0284cbed03" prot="public" static="no">
        <type>ImU8</type>
        <definition>typedef ImU8 ImGuiTableDrawChannelIdx</definition>
        <argsstring></argsstring>
        <name>ImGuiTableDrawChannelIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="2436" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="2436" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="imgui__internal_8h_1a93caa8df61dac3cb1ab1271a755442a3" prot="public" static="no" mutable="no">
        <type>IMGUI_API <ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
        <definition>IMGUI_API ImGuiContext* GImGui</definition>
        <argsstring></argsstring>
        <name>GImGui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="174" column="31" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1029" bodyend="-1" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="174" declcolumn="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__internal_8h_1a389b46fe63c36208d3867fbeac7de374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImGuiID</type>
        <definition>IMGUI_API ImGuiID ImHashData</definition>
        <argsstring>(const void *data, size_t data_size, ImU32 seed=0)</argsstring>
        <name>ImHashData</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_size</declname>
        </param>
        <param>
          <type>ImU32</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="308" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1724" bodyend="1732" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="308" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a35393f0d7463508da9e7cfff07043d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImGuiID</type>
        <definition>IMGUI_API ImGuiID ImHashStr</definition>
        <argsstring>(const char *data, size_t data_size=0, ImU32 seed=0)</argsstring>
        <name>ImHashStr</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>ImU32</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="309" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1740" bodyend="1766" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="309" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a11816fbf9c49220cdbf87dd3793aae1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ImGuiID</type>
        <definition>static ImGuiID ImHash</definition>
        <argsstring>(const void *data, int size, ImU32 seed=0)</argsstring>
        <name>ImHash</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ImU32</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="311" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="311" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a75cd0ec18686a171e74b1726b5ddf893" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ImQsort</definition>
        <argsstring>(void *base, size_t count, size_t size_of_element, int(IMGUI_CDECL *compare_func)(void const *, void const *))</argsstring>
        <name>ImQsort</name>
        <param>
          <type>void *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size_of_element</declname>
        </param>
        <param>
          <type>int(IMGUI_CDECL *compare_func)(void const *, void const *)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="316" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="316" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a9bd0c67916b1c57ab0840893a2689a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImU32</type>
        <definition>IMGUI_API ImU32 ImAlphaBlendColors</definition>
        <argsstring>(ImU32 col_a, ImU32 col_b)</argsstring>
        <name>ImAlphaBlendColors</name>
        <param>
          <type>ImU32</type>
          <declname>col_a</declname>
        </param>
        <param>
          <type>ImU32</type>
          <declname>col_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="320" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="2026" bodyend="2033" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="320" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a3cc719adb48b1aed8ab1196ecea7e828" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImIsPowerOfTwo</definition>
        <argsstring>(int v)</argsstring>
        <name>ImIsPowerOfTwo</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="323" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a6405ea738cdf3ad5b8754a7bafc89ddf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImIsPowerOfTwo</definition>
        <argsstring>(ImU64 v)</argsstring>
        <name>ImIsPowerOfTwo</name>
        <param>
          <type>ImU64</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="324" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="324" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1adae096c61c812293ec61ac541c146674" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ImUpperPowerOfTwo</definition>
        <argsstring>(int v)</argsstring>
        <name>ImUpperPowerOfTwo</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="325" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ac83ff6f214b1dac86be7da67c3206c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImStricmp</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>ImStricmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="328" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1529" bodyend="1534" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="328" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ad3c3ef07cbc7d62ca9000c4e38bb6f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImStrnicmp</definition>
        <argsstring>(const char *str1, const char *str2, size_t count)</argsstring>
        <name>ImStrnicmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="329" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1536" bodyend="1541" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="329" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aba04ec0781116f3fa7dcd16c0bdd2886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImStrncpy</definition>
        <argsstring>(char *dst, const char *src, size_t count)</argsstring>
        <name>ImStrncpy</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="330" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1543" bodyend="1550" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="330" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a6797fbbfd7e8fed3be1ae5cd26ce9f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API char *</type>
        <definition>IMGUI_API char * ImStrdup</definition>
        <argsstring>(const char *str)</argsstring>
        <name>ImStrdup</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="331" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1552" bodyend="1557" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="331" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1abfdf313fa0c69cf4ab215cbd0b157f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API char *</type>
        <definition>IMGUI_API char * ImStrdupcpy</definition>
        <argsstring>(char *dst, size_t *p_dst_size, const char *str)</argsstring>
        <name>ImStrdupcpy</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>p_dst_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="332" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1559" bodyend="1571" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="332" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a0a80494c88f813c8d6dbf2420606961a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImStrchrRange</definition>
        <argsstring>(const char *str_begin, const char *str_end, char c)</argsstring>
        <name>ImStrchrRange</name>
        <param>
          <type>const char *</type>
          <declname>str_begin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str_end</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="333" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1573" bodyend="1577" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="333" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ad4061c0b279f4c5fb44f070fd3704f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImStrlenW</definition>
        <argsstring>(const ImWchar *str)</argsstring>
        <name>ImStrlenW</name>
        <param>
          <type>const ImWchar *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="334" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1579" bodyend="1585" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="334" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a65e17757a32b6e854e46017dc62c9c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImStreolRange</definition>
        <argsstring>(const char *str, const char *str_end)</argsstring>
        <name>ImStreolRange</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="335" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1588" bodyend="1592" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="335" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1abbd367d76ff5e558e0cc4fdadd2a7b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const ImWchar *</type>
        <definition>IMGUI_API const ImWchar * ImStrbolW</definition>
        <argsstring>(const ImWchar *buf_mid_line, const ImWchar *buf_begin)</argsstring>
        <name>ImStrbolW</name>
        <param>
          <type>const ImWchar *</type>
          <declname>buf_mid_line</declname>
        </param>
        <param>
          <type>const ImWchar *</type>
          <declname>buf_begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="336" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1594" bodyend="1599" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="336" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a611fc777022e2ff4d52fbad3ceb30742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImStristr</definition>
        <argsstring>(const char *haystack, const char *haystack_end, const char *needle, const char *needle_end)</argsstring>
        <name>ImStristr</name>
        <param>
          <type>const char *</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>haystack_end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>needle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>needle_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="337" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1601" bodyend="1621" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="337" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a62f34433ca9defd9ae50a3b69606eb63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImStrTrimBlanks</definition>
        <argsstring>(char *str)</argsstring>
        <name>ImStrTrimBlanks</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="338" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1624" bodyend="1637" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="338" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1afcfd4f84e7ded8c02a1173aef345558a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImStrSkipBlank</definition>
        <argsstring>(const char *str)</argsstring>
        <name>ImStrSkipBlank</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="339" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1639" bodyend="1644" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="339" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a92825e36c348cccb1b7451263504a8ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImFormatString</definition>
        <argsstring>(char *buf, size_t buf_size, const char *fmt,...) IM_FMTARGS(3)</argsstring>
        <name>ImFormatString</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="340" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1664" bodyend="1680" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="340" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a9aa25e73aa28500257b65ec9f6f9c3d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImFormatStringV</definition>
        <argsstring>(char *buf, size_t buf_size, const char *fmt, va_list args) IM_FMTLIST(3)</argsstring>
        <name>ImFormatStringV</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="341" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1682" bodyend="1695" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="341" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a5e2440f006340026d4e8e38933050f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImParseFormatFindStart</definition>
        <argsstring>(const char *format)</argsstring>
        <name>ImParseFormatFindStart</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="342" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3300" bodyend="3311" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="342" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ae979b3c0513f9f643a502a71a03776e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImParseFormatFindEnd</definition>
        <argsstring>(const char *format)</argsstring>
        <name>ImParseFormatFindEnd</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="343" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3313" bodyend="3328" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="343" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aa125d90b2adea3b6a6000b14f047127c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImParseFormatTrimDecorations</definition>
        <argsstring>(const char *format, char *buf, size_t buf_size)</argsstring>
        <name>ImParseFormatTrimDecorations</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="344" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3335" bodyend="3345" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="344" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a4bff16ce85d201d97552ce9017c1d79a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImParseFormatPrecision</definition>
        <argsstring>(const char *format, int default_value)</argsstring>
        <name>ImParseFormatPrecision</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="345" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3349" bodyend="3369" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="345" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ac22c577d0d6591a9d948ab5590663359" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImCharIsBlankA</definition>
        <argsstring>(char c)</argsstring>
        <name>ImCharIsBlankA</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="346" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a28a0d11512ebeb664af106f145a37ddd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImCharIsBlankW</definition>
        <argsstring>(unsigned int c)</argsstring>
        <name>ImCharIsBlankW</name>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="347" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="347" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a6c541d278df930a47b87be9803cfacda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const char *</type>
        <definition>IMGUI_API const char * ImTextCharToUtf8</definition>
        <argsstring>(char out_buf[5], unsigned int c)</argsstring>
        <name>ImTextCharToUtf8</name>
        <param>
          <type>char</type>
          <declname>out_buf</declname>
          <array>[5]</array>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="350" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1968" bodyend="1973" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="350" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1afa7a85c08cb7ce746532720c66dae8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImTextStrToUtf8</definition>
        <argsstring>(char *out_buf, int out_buf_size, const ImWchar *in_text, const ImWchar *in_text_end)</argsstring>
        <name>ImTextStrToUtf8</name>
        <param>
          <type>char *</type>
          <declname>out_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_buf_size</declname>
        </param>
        <param>
          <type>const ImWchar *</type>
          <declname>in_text</declname>
        </param>
        <param>
          <type>const ImWchar *</type>
          <declname>in_text_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="351" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1991" bodyend="2005" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="351" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aa4a574b013af98bc338e7dbb5c078c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImTextCharFromUtf8</definition>
        <argsstring>(unsigned int *out_char, const char *in_text, const char *in_text_end)</argsstring>
        <name>ImTextCharFromUtf8</name>
        <param>
          <type>unsigned int *</type>
          <declname>out_char</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_text_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="352" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1848" bodyend="1898" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="352" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aa34d407ddf820aef1a01a2f741ffb052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImTextStrFromUtf8</definition>
        <argsstring>(ImWchar *out_buf, int out_buf_size, const char *in_text, const char *in_text_end, const char **in_remaining=NULL)</argsstring>
        <name>ImTextStrFromUtf8</name>
        <param>
          <type>ImWchar *</type>
          <declname>out_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_buf_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_text_end</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>in_remaining</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="353" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1900" bodyend="1916" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="353" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a67e2dd0d3d5f244f3607f6071541c902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImTextCountCharsFromUtf8</definition>
        <argsstring>(const char *in_text, const char *in_text_end)</argsstring>
        <name>ImTextCountCharsFromUtf8</name>
        <param>
          <type>const char *</type>
          <declname>in_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_text_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="354" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1918" bodyend="1930" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="354" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a0b29b7595abee961a88370cf8bb62cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImTextCountUtf8BytesFromChar</definition>
        <argsstring>(const char *in_text, const char *in_text_end)</argsstring>
        <name>ImTextCountUtf8BytesFromChar</name>
        <param>
          <type>const char *</type>
          <declname>in_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_text_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="355" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1976" bodyend="1980" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="355" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ae7d1184270a003cecacd3b45e8cbd44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API int</type>
        <definition>IMGUI_API int ImTextCountUtf8BytesFromStr</definition>
        <argsstring>(const ImWchar *in_text, const ImWchar *in_text_end)</argsstring>
        <name>ImTextCountUtf8BytesFromStr</name>
        <param>
          <type>const ImWchar *</type>
          <declname>in_text</declname>
        </param>
        <param>
          <type>const ImWchar *</type>
          <declname>in_text_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="356" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="2007" bodyend="2019" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="356" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ac9611d336fcfdb0c6d0080d3c507a982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImFileHandle</type>
        <definition>IMGUI_API ImFileHandle ImFileOpen</definition>
        <argsstring>(const char *filename, const char *mode)</argsstring>
        <name>ImFileOpen</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="393" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1775" bodyend="1790" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="393" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a54e97bd32e4dc4aa6a97ca4f204862ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API bool</type>
        <definition>IMGUI_API bool ImFileClose</definition>
        <argsstring>(ImFileHandle file)</argsstring>
        <name>ImFileClose</name>
        <param>
          <type>ImFileHandle</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="394" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1793" bodyend="1793" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="394" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aeeed95e0d852309aef4cfc41c060261a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImU64</type>
        <definition>IMGUI_API ImU64 ImFileGetSize</definition>
        <argsstring>(ImFileHandle file)</argsstring>
        <name>ImFileGetSize</name>
        <param>
          <type>ImFileHandle</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="395" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1794" bodyend="1794" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="395" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a2243fe92e380df3000065c44959d2115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImU64</type>
        <definition>IMGUI_API ImU64 ImFileRead</definition>
        <argsstring>(void *data, ImU64 size, ImU64 count, ImFileHandle file)</argsstring>
        <name>ImFileRead</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>ImU64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ImU64</type>
          <declname>count</declname>
        </param>
        <param>
          <type>ImFileHandle</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="396" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1795" bodyend="1795" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="396" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a4eb5ced85aec5184087c150c57fc24c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImU64</type>
        <definition>IMGUI_API ImU64 ImFileWrite</definition>
        <argsstring>(const void *data, ImU64 size, ImU64 count, ImFileHandle file)</argsstring>
        <name>ImFileWrite</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>ImU64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ImU64</type>
          <declname>count</declname>
        </param>
        <param>
          <type>ImFileHandle</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="397" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1796" bodyend="1796" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="397" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a02226c5ba68632cd7f55b120c99e2bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void *</type>
        <definition>IMGUI_API void * ImFileLoadToMemory</definition>
        <argsstring>(const char *filename, const char *mode, size_t *out_file_size=NULL, int padding_bytes=0)</argsstring>
        <name>ImFileLoadToMemory</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_file_size</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>padding_bytes</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="401" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1802" bodyend="1839" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="401" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ac56c2c45fefd41fb76bd800e9111b9e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImPow</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>ImPow</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="417" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="417" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ac2fe696c26f9f32753d9fa0e3e3ab1c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double ImPow</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>ImPow</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="418" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="418" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a49b9ad97a1cfc70f433bf46f2b2a95ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImLog</definition>
        <argsstring>(float x)</argsstring>
        <name>ImLog</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="419" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="419" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1adce171007e2f416ff8f327814b235ba0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double ImLog</definition>
        <argsstring>(double x)</argsstring>
        <name>ImLog</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="420" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="420" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aab329ad3ecb3ffc0bf9183d9edb144bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ImAbs</definition>
        <argsstring>(int x)</argsstring>
        <name>ImAbs</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="421" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="421" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a5a48f60a435847c5443eec5bcba45dd7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImAbs</definition>
        <argsstring>(float x)</argsstring>
        <name>ImAbs</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="422" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="422" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a70f58d6c1686cd6dec7fd4a94fd3843b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double ImAbs</definition>
        <argsstring>(double x)</argsstring>
        <name>ImAbs</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="423" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="423" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a9d017add608b267bb7e7b383613ed8dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImSign</definition>
        <argsstring>(float x)</argsstring>
        <name>ImSign</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="424" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="424" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a5f336bc6c5b4e1508751569dbea24e01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double ImSign</definition>
        <argsstring>(double x)</argsstring>
        <name>ImSign</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="425" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="425" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a50152fb6de7e67cb366d67146519dc4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImRsqrt</definition>
        <argsstring>(float x)</argsstring>
        <name>ImRsqrt</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="429" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="429" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ad5c9410a0f3bf413fd98ab90655905fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double ImRsqrt</definition>
        <argsstring>(double x)</argsstring>
        <name>ImRsqrt</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="431" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="431" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a7f9d7828066a9d61b5630adcdf4655d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T ImMin</definition>
        <argsstring>(T lhs, T rhs)</argsstring>
        <name>ImMin</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>T</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="435" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="435" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a7667efd95147d0422f140917c71a9226" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T ImMax</definition>
        <argsstring>(T lhs, T rhs)</argsstring>
        <name>ImMax</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>T</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="436" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="436" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a6e61ede308bfd68c7434e17905a29fc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T ImClamp</definition>
        <argsstring>(T v, T mn, T mx)</argsstring>
        <name>ImClamp</name>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T</type>
          <declname>mn</declname>
        </param>
        <param>
          <type>T</type>
          <declname>mx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="437" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="437" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a1d7813429922346e44eebd82d13f777c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T ImLerp</definition>
        <argsstring>(T a, T b, float t)</argsstring>
        <name>ImLerp</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="438" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="438" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a026ee5118396c67803e2c0e072cbf9eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void ImSwap</definition>
        <argsstring>(T &amp;a, T &amp;b)</argsstring>
        <name>ImSwap</name>
        <param>
          <type>T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="439" column="31" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="439" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a1142cda10c2bf64ea057ddc4d3854e33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T ImAddClampOverflow</definition>
        <argsstring>(T a, T b, T mn, T mx)</argsstring>
        <name>ImAddClampOverflow</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <param>
          <type>T</type>
          <declname>mn</declname>
        </param>
        <param>
          <type>T</type>
          <declname>mx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="440" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="440" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a8a975b156105771153c53558affa2f67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T ImSubClampOverflow</definition>
        <argsstring>(T a, T b, T mn, T mx)</argsstring>
        <name>ImSubClampOverflow</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <param>
          <type>T</type>
          <declname>mn</declname>
        </param>
        <param>
          <type>T</type>
          <declname>mx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="441" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="441" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a9647558f9bb4e0333c8215dce6d1b639" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImMin</definition>
        <argsstring>(const ImVec2 &amp;lhs, const ImVec2 &amp;rhs)</argsstring>
        <name>ImMin</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="443" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="443" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a45122055d2fb98da806461dc6e9e75cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImMax</definition>
        <argsstring>(const ImVec2 &amp;lhs, const ImVec2 &amp;rhs)</argsstring>
        <name>ImMax</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="444" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="444" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a876339a365573acf7c0a9e5dfbfaeab6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImClamp</definition>
        <argsstring>(const ImVec2 &amp;v, const ImVec2 &amp;mn, ImVec2 mx)</argsstring>
        <name>ImClamp</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>mn</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>mx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="445" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="445" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a41d8ae15bc9c99ad5e0e3c72ebbfc02f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImLerp</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b, float t)</argsstring>
        <name>ImLerp</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="446" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="446" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aef9d03d544579996c4f3f6e7e496426f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImLerp</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b, const ImVec2 &amp;t)</argsstring>
        <name>ImLerp</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="447" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="447" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aa14c4f8aa926b3e1305ba5ed8e21c9bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref></type>
        <definition>static ImVec4 ImLerp</definition>
        <argsstring>(const ImVec4 &amp;a, const ImVec4 &amp;b, float t)</argsstring>
        <name>ImLerp</name>
        <param>
          <type>const <ref refid="struct_im_vec4" kindref="compound">ImVec4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec4" kindref="compound">ImVec4</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="448" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="448" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1acab424daf09fa4cb151b56403d8afcae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImSaturate</definition>
        <argsstring>(float f)</argsstring>
        <name>ImSaturate</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="449" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="449" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a2fa5cb39358b9b4b5fbe3750e648e19e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImLengthSqr</definition>
        <argsstring>(const ImVec2 &amp;lhs)</argsstring>
        <name>ImLengthSqr</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="450" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="450" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a59038731c5df4b47ba3c4e62cf27198d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImLengthSqr</definition>
        <argsstring>(const ImVec4 &amp;lhs)</argsstring>
        <name>ImLengthSqr</name>
        <param>
          <type>const <ref refid="struct_im_vec4" kindref="compound">ImVec4</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="451" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="451" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ad5ffa5df33e9084eed74f50a16af8b2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImInvLength</definition>
        <argsstring>(const ImVec2 &amp;lhs, float fail_value)</argsstring>
        <name>ImInvLength</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fail_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="452" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="452" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a51a84b6be21807818b857a8565d97912" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImFloor</definition>
        <argsstring>(float f)</argsstring>
        <name>ImFloor</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="453" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="453" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aca04c5f1e3143cb8246ff43368f367c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImFloorSigned</definition>
        <argsstring>(float f)</argsstring>
        <name>ImFloorSigned</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="454" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="454" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1abe7cdfc0b6d0a19ff201cae20ddf285b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImFloor</definition>
        <argsstring>(const ImVec2 &amp;v)</argsstring>
        <name>ImFloor</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="455" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="455" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a5f206270c3245e920367308e7f4f02a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImFloorSigned</definition>
        <argsstring>(const ImVec2 &amp;v)</argsstring>
        <name>ImFloorSigned</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="456" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="456" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a9792d5488279971874ca8c889911ec9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ImModPositive</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>ImModPositive</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="457" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="457" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1accfddaa3910b8818ade25bf36a51301d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImDot</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b)</argsstring>
        <name>ImDot</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="458" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="458" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a09fb9656039efe11ce8923dbeeaf79a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImRotate</definition>
        <argsstring>(const ImVec2 &amp;v, float cos_a, float sin_a)</argsstring>
        <name>ImRotate</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float</type>
          <declname>cos_a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sin_a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="459" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="459" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a1ed5011517f742671619a5dd17bc87f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImLinearSweep</definition>
        <argsstring>(float current, float target, float speed)</argsstring>
        <name>ImLinearSweep</name>
        <param>
          <type>float</type>
          <declname>current</declname>
        </param>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>float</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="460" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="460" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a8c558d605eaf9aed1367e759d3ff91aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImMul</definition>
        <argsstring>(const ImVec2 &amp;lhs, const ImVec2 &amp;rhs)</argsstring>
        <name>ImMul</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="461" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="461" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ac2bed88864ba3e0f7e775ea56700071d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImIsFloatAboveGuaranteedIntegerPrecision</definition>
        <argsstring>(float f)</argsstring>
        <name>ImIsFloatAboveGuaranteedIntegerPrecision</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="462" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a932c8922e7699ce23d2e3bb33a542e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IM_MSVC_RUNTIME_CHECKS_RESTORE IMGUI_API <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>IM_MSVC_RUNTIME_CHECKS_RESTORE IMGUI_API ImVec2 ImBezierCubicCalc</definition>
        <argsstring>(const ImVec2 &amp;p1, const ImVec2 &amp;p2, const ImVec2 &amp;p3, const ImVec2 &amp;p4, float t)</argsstring>
        <name>ImBezierCubicCalc</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="466" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="1237" bodyend="1245" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="466" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a6e271b165fee9b3139c7ece967cfa77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>IMGUI_API ImVec2 ImBezierCubicClosestPoint</definition>
        <argsstring>(const ImVec2 &amp;p1, const ImVec2 &amp;p2, const ImVec2 &amp;p3, const ImVec2 &amp;p4, const ImVec2 &amp;p, int num_segments)</argsstring>
        <name>ImBezierCubicClosestPoint</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="467" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1408" bodyend="1428" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="467" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a22c9b1385706c6059e648ed18e4f928f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>IMGUI_API ImVec2 ImBezierCubicClosestPointCasteljau</definition>
        <argsstring>(const ImVec2 &amp;p1, const ImVec2 &amp;p2, const ImVec2 &amp;p3, const ImVec2 &amp;p4, const ImVec2 &amp;p, float tess_tol)</argsstring>
        <name>ImBezierCubicClosestPointCasteljau</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>tess_tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="468" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1466" bodyend="1474" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="468" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a72d8354ed692e2a2f7971311204b79c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>IMGUI_API ImVec2 ImBezierQuadraticCalc</definition>
        <argsstring>(const ImVec2 &amp;p1, const ImVec2 &amp;p2, const ImVec2 &amp;p3, float t)</argsstring>
        <name>ImBezierQuadraticCalc</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="469" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="1247" bodyend="1254" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="469" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aaa66fc7d25c00956cf6c1a4541e585a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>IMGUI_API ImVec2 ImLineClosestPoint</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b, const ImVec2 &amp;p)</argsstring>
        <name>ImLineClosestPoint</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="470" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1476" bodyend="1487" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="470" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a0e623415e91787735e0fb4773454f8f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API bool</type>
        <definition>IMGUI_API bool ImTriangleContainsPoint</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b, const ImVec2 &amp;c, const ImVec2 &amp;p)</argsstring>
        <name>ImTriangleContainsPoint</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="471" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1489" bodyend="1495" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="471" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aa3c3af3a40f69cc3569e1f16898a41d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>IMGUI_API ImVec2 ImTriangleClosestPoint</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b, const ImVec2 &amp;c, const ImVec2 &amp;p)</argsstring>
        <name>ImTriangleClosestPoint</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="472" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1508" bodyend="1522" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="472" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1af8d02d5d38ee7c5ca68f1927665214cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImTriangleBarycentricCoords</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b, const ImVec2 &amp;c, const ImVec2 &amp;p, float &amp;out_u, float &amp;out_v, float &amp;out_w)</argsstring>
        <name>ImTriangleBarycentricCoords</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>out_u</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>out_v</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>out_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="473" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1497" bodyend="1506" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="473" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ae4a958d172c455e95e879485c7758316" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ImTriangleArea</definition>
        <argsstring>(const ImVec2 &amp;a, const ImVec2 &amp;b, const ImVec2 &amp;c)</argsstring>
        <name>ImTriangleArea</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="474" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="474" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a347ff0c7923bfcda19058cb0a3564b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API ImGuiDir</type>
        <definition>IMGUI_API ImGuiDir ImGetDirQuadrantFromDelta</definition>
        <argsstring>(float dx, float dy)</argsstring>
        <name>ImGetDirQuadrantFromDelta</name>
        <param>
          <type>float</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="475" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="10088" bodyend="10093" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="475" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a3c381b3dd37ebf2e9fbfc6456311ef8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IM_MSVC_RUNTIME_CHECKS_RESTORE bool</type>
        <definition>IM_MSVC_RUNTIME_CHECKS_RESTORE bool ImBitArrayTestBit</definition>
        <argsstring>(const ImU32 *arr, int n)</argsstring>
        <name>ImBitArrayTestBit</name>
        <param>
          <type>const ImU32 *</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="536" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="536" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a24a25a6ab6d96d3b49a6a38a52cfa22d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ImBitArrayClearBit</definition>
        <argsstring>(ImU32 *arr, int n)</argsstring>
        <name>ImBitArrayClearBit</name>
        <param>
          <type>ImU32 *</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="537" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="537" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a1ae2766a00f274b81a06cc5f0b5bd3ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ImBitArraySetBit</definition>
        <argsstring>(ImU32 *arr, int n)</argsstring>
        <name>ImBitArraySetBit</name>
        <param>
          <type>ImU32 *</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="538" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="538" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a3c0dd97e39757c4e7eab1a9034033267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ImBitArraySetBitRange</definition>
        <argsstring>(ImU32 *arr, int n, int n2)</argsstring>
        <name>ImBitArraySetBitRange</name>
        <param>
          <type>ImU32 *</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="539" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" bodystart="539" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a00158fc6c67fa9a0800b1cf814e05c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API const <ref refid="struct_im_font_builder_i_o" kindref="compound">ImFontBuilderIO</ref> *</type>
        <definition>IMGUI_API const ImFontBuilderIO * ImFontAtlasGetBuilderForStbTruetype</definition>
        <argsstring>()</argsstring>
        <name>ImFontAtlasGetBuilderForStbTruetype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3164" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2602" bodyend="2607" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3164" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a6049021ed3551928d5fd5031eb51510a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildInit</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasBuildInit</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3166" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2765" bodyend="2783" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3166" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a56160f7248aed6a767f706848d9b9c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildSetupFont</definition>
        <argsstring>(ImFontAtlas *atlas, ImFont *font, ImFontConfig *font_config, float ascent, float descent)</argsstring>
        <name>ImFontAtlasBuildSetupFont</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type><ref refid="struct_im_font" kindref="compound">ImFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref> *</type>
          <declname>font_config</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ascent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>descent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3167" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2611" bodyend="2624" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3167" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a960bc2d38a7a0cf6333bd5327e9ef157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildPackCustomRects</definition>
        <argsstring>(ImFontAtlas *atlas, void *stbrp_context_opaque)</argsstring>
        <name>ImFontAtlasBuildPackCustomRects</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>stbrp_context_opaque</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3168" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2626" bodyend="2651" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3168" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1af44667fe1e74c3ebace8aa35ece9d4ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildFinish</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasBuildFinish</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3169" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2786" bodyend="2813" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3169" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a79b0a97ad826ad745e7effb7c2c40799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildRender8bppRectFromString</definition>
        <argsstring>(ImFontAtlas *atlas, int x, int y, int w, int h, const char *in_str, char in_marker_char, unsigned char in_marker_pixel_value)</argsstring>
        <name>ImFontAtlasBuildRender8bppRectFromString</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>in_marker_char</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>in_marker_pixel_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3170" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2653" bodyend="2661" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3170" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1ac5978e0d8063401ea05802776da8f144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildRender32bppRectFromString</definition>
        <argsstring>(ImFontAtlas *atlas, int x, int y, int w, int h, const char *in_str, char in_marker_char, unsigned int in_marker_pixel_value)</argsstring>
        <name>ImFontAtlasBuildRender32bppRectFromString</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>in_marker_char</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>in_marker_pixel_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3171" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2663" bodyend="2671" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3171" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1a3f2f38197a3ea2a246fd75d50878647f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildMultiplyCalcLookupTable</definition>
        <argsstring>(unsigned char out_table[256], float in_multiply_factor)</argsstring>
        <name>ImFontAtlasBuildMultiplyCalcLookupTable</name>
        <param>
          <type>unsigned char</type>
          <declname>out_table</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>float</type>
          <declname>in_multiply_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3172" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2295" bodyend="2302" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3172" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__internal_8h_1aff7910be269c5759331ffc45fbe0c98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_API void</type>
        <definition>IMGUI_API void ImFontAtlasBuildMultiplyRectAlpha8</definition>
        <argsstring>(const unsigned char table[256], unsigned char *pixels, int x, int y, int w, int h, int stride)</argsstring>
        <name>ImFontAtlasBuildMultiplyRectAlpha8</name>
        <param>
          <type>const unsigned char</type>
          <declname>table</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>pixels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" line="3173" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_draw.cpp" bodystart="2304" bodyend="2310" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h" declline="3173" declcolumn="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui,<sp/>v1.87<sp/>WIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(internal<sp/>structures/api)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>use<sp/>this<sp/>file<sp/>to<sp/>debug,<sp/>understand<sp/>or<sp/>extend<sp/>ImGui<sp/>features<sp/>but<sp/>we<sp/>don&apos;t<sp/>provide<sp/>any<sp/>guarantee<sp/>of<sp/>forward<sp/>compatibility!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>#define<sp/>IMGUI_DEFINE_MATH_OPERATORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>implement<sp/>maths<sp/>operators<sp/>for<sp/>ImVec2<sp/>(disabled<sp/>by<sp/>default<sp/>to<sp/>not<sp/>collide<sp/>with<sp/>using<sp/>IM_VEC2_CLASS_EXTRA<sp/>along<sp/>with<sp/>your<sp/>own<sp/>math<sp/>types+operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">Index<sp/>of<sp/>this<sp/>file:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>[SECTION]<sp/>Header<sp/>mess</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>[SECTION]<sp/>Forward<sp/>declarations</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>[SECTION]<sp/>Context<sp/>pointer</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>[SECTION]<sp/>STB<sp/>libraries<sp/>includes</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>[SECTION]<sp/>Macros</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>[SECTION]<sp/>Generic<sp/>helpers</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawList<sp/>support</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets<sp/>support:<sp/>flags,<sp/>enums,<sp/>data<sp/>structures</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/>[SECTION]<sp/>Clipper<sp/>support</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>[SECTION]<sp/>Navigation<sp/>support</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>[SECTION]<sp/>Columns<sp/>support</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/>[SECTION]<sp/>Multi-select<sp/>support</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/>[SECTION]<sp/>Docking<sp/>support</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>[SECTION]<sp/>Viewport<sp/>support</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>[SECTION]<sp/>Settings<sp/>support</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>[SECTION]<sp/>Metrics,<sp/>Debug<sp/>tools</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>[SECTION]<sp/>Generic<sp/>context<sp/>hooks</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>[SECTION]<sp/>ImGuiContext<sp/>(main<sp/>imgui<sp/>context)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>[SECTION]<sp/>ImGuiWindowTempData,<sp/>ImGuiWindow</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>[SECTION]<sp/>Tab<sp/>bar,<sp/>Tab<sp/>item<sp/>support</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>[SECTION]<sp/>Table<sp/>support</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>[SECTION]<sp/>ImGui<sp/>internal<sp/>API</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontAtlas<sp/>internal<sp/>API</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>[SECTION]<sp/>Test<sp/>Engine<sp/>specific<sp/>hooks<sp/>(imgui_test_engine)</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Header<sp/>mess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FILE*,<sp/>sscanf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL,<sp/>malloc,<sp/>free,<sp/>qsort,<sp/>atoi,<sp/>atof</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sqrtf,<sp/>fabsf,<sp/>fmodf,<sp/>powf,<sp/>floorf,<sp/>ceilf,<sp/>cosf,<sp/>sinf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INT_MIN,<sp/>INT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable<sp/>SSE<sp/>intrinsics<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>__SSE__<sp/>||<sp/>defined<sp/>__x86_64__<sp/>||<sp/>defined<sp/>_M_X64)<sp/>&amp;&amp;<sp/>!defined(IMGUI_DISABLE_SSE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_ENABLE_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;immintrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visual<sp/>Studio<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4251)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>&apos;xxx&apos;<sp/>needs<sp/>to<sp/>have<sp/>dll-interface<sp/>to<sp/>be<sp/>used<sp/>by<sp/>clients<sp/>of<sp/>struct<sp/>&apos;xxx&apos;<sp/>//<sp/>when<sp/>IMGUI_API<sp/>is<sp/>set<sp/>to__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>26812)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>enum<sp/>type<sp/>&apos;xxx&apos;<sp/>is<sp/>unscoped.<sp/>Prefer<sp/>&apos;enum<sp/>class&apos;<sp/>over<sp/>&apos;enum&apos;<sp/>(Enum.3).<sp/>[MSVC<sp/>Static<sp/>Analyzer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>26495)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Static<sp/>Analyzer]<sp/>Variable<sp/>&apos;XXX&apos;<sp/>is<sp/>uninitialized.<sp/>Always<sp/>initialize<sp/>a<sp/>member<sp/>variable<sp/>(type.6).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1922<sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>2019<sp/>16.2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>5054)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operator<sp/>&apos;|&apos;:<sp/>deprecated<sp/>between<sp/>enumerations<sp/>of<sp/>different<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang/GCC<sp/>warnings<sp/>with<sp/>-Weverything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__has_warning(&quot;-Wunknown-warning-option&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunknown-warning-option&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>warning<sp/>group<sp/>&apos;xxx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunknown-pragmas&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>warning<sp/>group<sp/>&apos;xxx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wfloat-equal&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>comparing<sp/>floating<sp/>point<sp/>with<sp/>==<sp/>or<sp/>!=<sp/>is<sp/>unsafe<sp/>//<sp/>storing<sp/>and<sp/>comparing<sp/>against<sp/>same<sp/>constants<sp/>ok,<sp/>for<sp/>ImFloorSigned()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-function&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>stb_textedit.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wmissing-prototypes&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>stb_textedit.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wold-style-cast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wzero-as-null-pointer-constant&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdouble-promotion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wimplicit-int-float-conversion&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>from<sp/>&apos;xxx&apos;<sp/>to<sp/>&apos;float&apos;<sp/>may<sp/>lose<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wmissing-noreturn&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>function<sp/>&apos;xxx&apos;<sp/>could<sp/>be<sp/>declared<sp/>with<sp/>attribute<sp/>&apos;noreturn&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wpragmas&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>option<sp/>after<sp/>&apos;#pragma<sp/>GCC<sp/>diagnostic&apos;<sp/>kind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wclass-memaccess&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[__GNUC__<sp/>&gt;=<sp/>8]<sp/>warning:<sp/>&apos;memset/memcpy&apos;<sp/>clearing/writing<sp/>an<sp/>object<sp/>of<sp/>type<sp/>&apos;xxxx&apos;<sp/>with<sp/>no<sp/>trivial<sp/>copy-assignment;<sp/>use<sp/>assignment<sp/>or<sp/>value-initialization<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Legacy<sp/>defines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_DISABLE_FORMAT_STRING_FUNCTIONS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Renamed<sp/>in<sp/>1.74</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Use<sp/>IMGUI_DISABLE_DEFAULT_FORMAT_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_DISABLE_MATH_FUNCTIONS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Renamed<sp/>in<sp/>1.74</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Use<sp/>IMGUI_DISABLE_DEFAULT_MATH_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable<sp/>stb_truetype<sp/>by<sp/>default<sp/>unless<sp/>FreeType<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>compile<sp/>with<sp/>both<sp/>by<sp/>defining<sp/>both<sp/>IMGUI_ENABLE_FREETYPE<sp/>and<sp/>IMGUI_ENABLE_STB_TRUETYPE<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_ENABLE_FREETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_ENABLE_STB_TRUETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_bit_vector" kindref="compound">ImBitVector</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>1-bit<sp/>per<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_rect" kindref="compound">ImRect</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>axis-aligned<sp/>rectangle<sp/>(2<sp/>points)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_draw_data_builder" kindref="compound">ImDrawDataBuilder</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>build<sp/>a<sp/>ImDrawData<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_draw_list_shared_data" kindref="compound">ImDrawListSharedData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>shared<sp/>between<sp/>all<sp/>ImDrawList<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_color_mod" kindref="compound">ImGuiColorMod</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stacked<sp/>color<sp/>modifier,<sp/>backup<sp/>of<sp/>modified<sp/>data<sp/>so<sp/>we<sp/>can<sp/>restore<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Main<sp/>Dear<sp/>ImGui<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_context_hook" kindref="compound">ImGuiContextHook</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hook<sp/>for<sp/>extensions<sp/>like<sp/>ImGuiTestEngine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_data_type_info" kindref="compound">ImGuiDataTypeInfo</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>information<sp/>associated<sp/>to<sp/>a<sp/>ImGuiDataType<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_dock_context" kindref="compound">ImGuiDockContext</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Docking<sp/>system<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_dock_request" kindref="compound">ImGuiDockRequest</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Docking<sp/>system<sp/>dock/undock<sp/>queued<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Docking<sp/>system<sp/>node<sp/>(hold<sp/>a<sp/>list<sp/>of<sp/>Windows<sp/>OR<sp/>two<sp/>child<sp/>dock<sp/>nodes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_dock_node_settings" kindref="compound">ImGuiDockNodeSettings</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>dock<sp/>node<sp/>in<sp/>.ini<sp/>file<sp/>(we<sp/>preserve<sp/>those<sp/>even<sp/>if<sp/>the<sp/>associated<sp/>dock<sp/>node<sp/>isn&apos;t<sp/>active<sp/>during<sp/>the<sp/>session)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_group_data" kindref="compound">ImGuiGroupData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stacked<sp/>storage<sp/>data<sp/>for<sp/>BeginGroup()/EndGroup()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>state<sp/>of<sp/>the<sp/>currently<sp/>focused/edited<sp/>text<sp/>input<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Status<sp/>storage<sp/>for<sp/>last<sp/>submitted<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_menu_columns" kindref="compound">ImGuiMenuColumns</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>column<sp/>measurement,<sp/>currently<sp/>used<sp/>for<sp/>MenuItem()<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Result<sp/>of<sp/>a<sp/>gamepad/keyboard<sp/>directional<sp/>navigation<sp/>move<sp/>query<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_metrics_config" kindref="compound">ImGuiMetricsConfig</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>ShowMetricsWindow()<sp/>and<sp/>DebugNodeXXX()<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_next_window_data" kindref="compound">ImGuiNextWindowData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>SetNextWindow**<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_next_item_data" kindref="compound">ImGuiNextItemData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>SetNextItem**<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_old_column_data" kindref="compound">ImGuiOldColumnData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>data<sp/>for<sp/>a<sp/>single<sp/>column<sp/>for<sp/>legacy<sp/>Columns()<sp/>api</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>data<sp/>for<sp/>a<sp/>columns<sp/>set<sp/>for<sp/>legacy<sp/>Columns()<sp/>api</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_popup_data" kindref="compound">ImGuiPopupData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>current<sp/>popup<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>one<sp/>type<sp/>registered<sp/>in<sp/>the<sp/>.ini<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_stack_sizes" kindref="compound">ImGuiStackSizes</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>of<sp/>stack<sp/>sizes<sp/>for<sp/>debugging/asserting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_style_mod" kindref="compound">ImGuiStyleMod</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stacked<sp/>style<sp/>modifier,<sp/>backup<sp/>of<sp/>modified<sp/>data<sp/>so<sp/>we<sp/>can<sp/>restore<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>tab<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>tab<sp/>item<sp/>(within<sp/>a<sp/>tab<sp/>bar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table_column" kindref="compound">ImGuiTableColumn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>one<sp/>column<sp/>of<sp/>a<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table_temp_data" kindref="compound">ImGuiTableTempData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>storage<sp/>for<sp/>one<sp/>table<sp/>(one<sp/>per<sp/>table<sp/>in<sp/>the<sp/>stack),<sp/>shared<sp/>between<sp/>tables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table_settings" kindref="compound">ImGuiTableSettings</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>table<sp/>.ini<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ImGuiTableColumnsSettings;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>column<sp/>.ini<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>one<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_window_temp_data" kindref="compound">ImGuiWindowTempData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>storage<sp/>for<sp/>one<sp/>window<sp/>(that&apos;s<sp/>the<sp/>data<sp/>which<sp/>in<sp/>theory<sp/>we<sp/>could<sp/>ditch<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>frame,<sp/>in<sp/>practice<sp/>we<sp/>currently<sp/>keep<sp/>it<sp/>for<sp/>each<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_window_settings" kindref="compound">ImGuiWindowSettings</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>window<sp/>.ini<sp/>settings<sp/>(we<sp/>keep<sp/>one<sp/>of<sp/>those<sp/>even<sp/>if<sp/>the<sp/>actual<sp/>window<sp/>wasn&apos;t<sp/>instanced<sp/>during<sp/>this<sp/>session)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>your<sp/>programming<sp/>IDE<sp/>&quot;Go<sp/>to<sp/>definition&quot;<sp/>facility<sp/>on<sp/>the<sp/>names<sp/>of<sp/>the<sp/>center<sp/>columns<sp/>to<sp/>find<sp/>the<sp/>actual<sp/>flags/enum<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiDataAuthority;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiDataAuthority_<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Enum:<sp/>for<sp/>storing<sp/>the<sp/>source<sp/>authority<sp/>(dock<sp/>node<sp/>vs<sp/>window)<sp/>of<sp/>a<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiLayoutType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiLayoutType_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Enum:<sp/>Horizontal<sp/>or<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiActivateFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiActivateFlags_<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>navigation/focus<sp/>function<sp/>(will<sp/>be<sp/>for<sp/>ActivateItem()<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiItemFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiItemFlags_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>PushItemFlag()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiItemStatusFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiItemStatusFlags_<sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>DC.LastItemStatusFlags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiOldColumnFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiOldColumnFlags_<sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>BeginColumns()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiNavHighlightFlags;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiNavHighlightFlags_<sp/><sp/>//<sp/>Flags:<sp/>for<sp/>RenderNavHighlight()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiNavDirSourceFlags;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiNavDirSourceFlags_<sp/><sp/>//<sp/>Flags:<sp/>for<sp/>GetNavInputAmount2d()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiNavMoveFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiNavMoveFlags_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>navigation<sp/>requests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiNextItemDataFlags;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiNextItemDataFlags_<sp/><sp/>//<sp/>Flags:<sp/>for<sp/>SetNextItemXXX()<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiNextWindowDataFlags;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiNextWindowDataFlags_//<sp/>Flags:<sp/>for<sp/>SetNextWindowXXX()<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiScrollFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiScrollFlags_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>ScrollToItem()<sp/>and<sp/>navigation<sp/>requests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiSeparatorFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiSeparatorFlags_<sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>SeparatorEx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiTextFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiTextFlags_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>TextEx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGuiTooltipFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>enum<sp/>ImGuiTooltipFlags_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Flags:<sp/>for<sp/>BeginTooltipEx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*ImGuiErrorLogCallback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Context<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>implementation<sp/>of<sp/>this<sp/>variable<sp/>in<sp/>imgui.cpp<sp/>for<sp/>comments<sp/>and<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GImGui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>GImGui;<sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>implicit<sp/>context<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>STB<sp/>libraries<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ImStb</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STB_TEXTEDIT_STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STB_TEXTEDIT_CHARTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiInputTextState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_CHARTYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImWchar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_GETWIDTH_NEWLINE<sp/><sp/><sp/>(-1.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_UNDOSTATECOUNT<sp/><sp/><sp/><sp/><sp/>99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_UNDOCHARCOUNT<sp/><sp/><sp/><sp/><sp/><sp/>999</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imstb_textedit.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ImStb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>Drag<sp/>and<sp/>Drop<sp/>payload<sp/>types.<sp/>String<sp/>starting<sp/>with<sp/>&apos;_&apos;<sp/>are<sp/>reserved<sp/>for<sp/>Dear<sp/>ImGui.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_PAYLOAD_TYPE_WINDOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;_IMWINDOW&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Payload<sp/>==<sp/>ImGuiWindow*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debug<sp/>Logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DEBUG_LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEBUG_LOG(_FMT,...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;[%05d]<sp/>&quot;</highlight><highlight class="normal"><sp/>_FMT,<sp/>GImGui-&gt;FrameCount,<sp/>__VA_ARGS__)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debug<sp/>Logging<sp/>for<sp/>selected<sp/>systems.<sp/>Remove<sp/>the<sp/>&apos;((void)0)<sp/>//&apos;<sp/>to<sp/>enable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DEBUG_LOG_POPUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_DEBUG_LOG<sp/>//<sp/>Enable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DEBUG_LOG_NAV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_DEBUG_LOG<sp/>//<sp/>Enable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DEBUG_LOG_IO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_DEBUG_LOG<sp/>//<sp/>Enable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DEBUG_LOG_VIEWPORT<sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_DEBUG_LOG<sp/>//<sp/>Enable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DEBUG_LOG_DOCKING<sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_DEBUG_LOG<sp/>//<sp/>Enable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEBUG_LOG_POPUP(...)<sp/><sp/><sp/><sp/><sp/><sp/>((void)0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEBUG_LOG_NAV(...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void)0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEBUG_LOG_IO(...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void)0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEBUG_LOG_VIEWPORT(...)<sp/><sp/><sp/>((void)0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEBUG_LOG_DOCKING(...)<sp/><sp/><sp/><sp/>((void)0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>Asserts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_STATIC_ASSERT(_COND)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(_COND,<sp/>&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Paranoid&quot;<sp/>Debug<sp/>Asserts<sp/>are<sp/>meant<sp/>to<sp/>only<sp/>be<sp/>enabled<sp/>during<sp/>specific<sp/>debugging/work,<sp/>otherwise<sp/>would<sp/>slow<sp/>down<sp/>the<sp/>code<sp/>too<sp/>much.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>currently<sp/>don&apos;t<sp/>have<sp/>many<sp/>of<sp/>those<sp/>so<sp/>the<sp/>effect<sp/>is<sp/>currently<sp/>negligible,<sp/>but<sp/>onward<sp/>intent<sp/>to<sp/>add<sp/>more<sp/>aggressive<sp/>ones<sp/>in<sp/>the<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DEBUG_PARANOID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_DEBUG_PARANOID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_ASSERT_PARANOID(_EXPR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(_EXPR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_ASSERT_PARANOID(_EXPR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Down<sp/>the<sp/>line<sp/>in<sp/>some<sp/>frameworks/languages<sp/>we<sp/>would<sp/>like<sp/>to<sp/>have<sp/>a<sp/>way<sp/>to<sp/>redirect<sp/>those<sp/>to<sp/>the<sp/>programmer<sp/>and<sp/>recover<sp/>from<sp/>more<sp/>faults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IM_ASSERT_USER_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_ASSERT_USER_ERROR(_EXP,_MSG)<sp/>IM_ASSERT((_EXP)<sp/>&amp;&amp;<sp/>_MSG)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recoverable<sp/>User<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Misc<sp/>Macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_PI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.14159265358979323846f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_NEWLINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\r\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Play<sp/>it<sp/>nice<sp/>with<sp/>Windows<sp/>users<sp/>(Update:<sp/>since<sp/>2018-05,<sp/>Notepad<sp/>finally<sp/>appears<sp/>to<sp/>support<sp/>Unix-style<sp/>carriage<sp/>returns!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_NEWLINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_TABSIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_MEMALIGN(_OFF,_ALIGN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((_OFF)<sp/>+<sp/>(_ALIGN<sp/>-<sp/>1))<sp/>&amp;<sp/>~(_ALIGN<sp/>-<sp/>1))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>align<sp/>e.g.<sp/>IM_ALIGN(0,4)=0,<sp/>IM_ALIGN(1,4)=4,<sp/>IM_ALIGN(4,4)=4,<sp/>IM_ALIGN(5,4)=8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_F32_TO_INT8_UNBOUND(_VAL)<sp/><sp/><sp/><sp/>((int)((_VAL)<sp/>*<sp/>255.0f<sp/>+<sp/>((_VAL)&gt;=0<sp/>?<sp/>0.5f<sp/>:<sp/>-0.5f)))<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unsaturated,<sp/>for<sp/>display<sp/>purpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_F32_TO_INT8_SAT(_VAL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int)(ImSaturate(_VAL)<sp/>*<sp/>255.0f<sp/>+<sp/>0.5f))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Saturated,<sp/>always<sp/>output<sp/>0..255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_FLOOR(_VAL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((float)(int)(_VAL))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImFloor()<sp/>is<sp/>not<sp/>inlined<sp/>in<sp/>MSVC<sp/>debug<sp/>builds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_ROUND(_VAL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((float)(int)((_VAL)<sp/>+<sp/>0.5f))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enforce<sp/>cdecl<sp/>calling<sp/>convention<sp/>for<sp/>functions<sp/>called<sp/>by<sp/>the<sp/>standard<sp/>library,<sp/>in<sp/>case<sp/>compilation<sp/>settings<sp/>changed<sp/>the<sp/>default<sp/>to<sp/>e.g.<sp/>__vectorcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_CDECL<sp/>__cdecl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_CDECL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_MSVC_WARNING_SUPPRESS(XXXX)<sp/><sp/>__pragma(warning(suppress:<sp/>XXXX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_MSVC_WARNING_SUPPRESS(XXXX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debug<sp/>Tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>&apos;Metrics/Debugger-&gt;Tools-&gt;Item<sp/>Picker&apos;<sp/>to<sp/>break<sp/>into<sp/>the<sp/>call-stack<sp/>of<sp/>a<sp/>specific<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>call<sp/>IM_DEBUG_BREAK()<sp/>which<sp/>you<sp/>may<sp/>redefine<sp/>yourself.<sp/>See<sp/>https://github.com/scottt/debugbreak<sp/>for<sp/>more<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IM_DEBUG_BREAK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DEBUG_BREAK()<sp/><sp/><sp/><sp/>__debugbreak()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DEBUG_BREAK()<sp/><sp/><sp/><sp/>__builtin_debugtrap()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(defined(__i386__)<sp/>||<sp/>defined(__x86_64__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DEBUG_BREAK()<sp/><sp/><sp/><sp/>__asm__<sp/>volatile(&quot;int<sp/>$0x03&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__thumb__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DEBUG_BREAK()<sp/><sp/><sp/><sp/>__asm__<sp/>volatile(&quot;.inst<sp/>0xde01&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__arm__)<sp/>&amp;&amp;<sp/>!defined(__thumb__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DEBUG_BREAK()<sp/><sp/><sp/><sp/>__asm__<sp/>volatile(&quot;.inst<sp/>0xe7f001f0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DEBUG_BREAK()<sp/><sp/><sp/><sp/>IM_ASSERT(0)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>expected<sp/>that<sp/>you<sp/>define<sp/>IM_DEBUG_BREAK()<sp/>into<sp/>something<sp/>that<sp/>will<sp/>break<sp/>nicely<sp/>in<sp/>a<sp/>debugger!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IM_DEBUG_BREAK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Generic<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>ImXXX<sp/>helpers<sp/>functions<sp/>are<sp/>lower-level<sp/>than<sp/>ImGui<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImGui<sp/>functions<sp/>or<sp/>the<sp/>ImGui<sp/>context<sp/>are<sp/>never<sp/>called/used<sp/>from<sp/>other<sp/>ImXXX<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>Hashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>Sorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>Bit<sp/>manipulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>String,<sp/>Formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>UTF-8<sp/>&lt;&gt;<sp/>wchar<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>ImVec2/ImVec4<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>Maths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helpers:<sp/>Geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImVec1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImVec2ih</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImRect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImBitArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImBitVector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImSpan&lt;&gt;,<sp/>ImSpanAllocator&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImPool&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper:<sp/>ImChunkStream&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>Hashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImHashData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_size,<sp/>ImU32<sp/>seed<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImHashStr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_size<sp/>=<sp/>0,<sp/>ImU32<sp/>seed<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiID<sp/><sp/><sp/>ImHash(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>ImU32<sp/>seed<sp/>=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size<sp/>?<sp/>ImHashData(data,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)size,<sp/>seed)<sp/>:<sp/>ImHashStr((const<sp/>char*)data,<sp/>0,<sp/>seed);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>[moved<sp/>to<sp/>ImHashStr/ImHashData<sp/>in<sp/>1.68]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>Sorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ImQsort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImQsort(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>base,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_of_element,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(IMGUI_CDECL<sp/>*compare_func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*))<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>1)<sp/>qsort(base,<sp/>count,<sp/>size_of_element,<sp/>compare_func);<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>Color<sp/>Blending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">IMGUI_API<sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImAlphaBlendColors(ImU32<sp/>col_a,<sp/>ImU32<sp/>col_b);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>Bit<sp/>manipulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImIsPowerOfTwo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(v<sp/>&amp;<sp/>(v<sp/>-<sp/>1))<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImIsPowerOfTwo(ImU64<sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(v<sp/>&amp;<sp/>(v<sp/>-<sp/>1))<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImUpperPowerOfTwo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>v--;<sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>1;<sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>2;<sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>4;<sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>8;<sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>16;<sp/>v++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>String,<sp/>Formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStricmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str2);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStrnicmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStrncpy(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStrdup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStrdupcpy(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>p_dst_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImStrchrRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_end,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="334"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStrlenW(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>str);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImStreolRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_end);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>end-of-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*ImStrbolW(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>buf_mid_line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>buf_begin);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>beginning-of-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImStristr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>haystack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>haystack_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>needle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>needle_end);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStrTrimBlanks(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImStrSkipBlank(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)<sp/>IM_FMTARGS(3);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatStringV(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)<sp/>IM_FMTLIST(3);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">IMGUI_API<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImParseFormatFindStart(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">IMGUI_API<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImParseFormatFindEnd(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format);</highlight></codeline>
<codeline lineno="344"><highlight class="normal">IMGUI_API<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImParseFormatTrimDecorations(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImParseFormatPrecision(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_value);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">static<sp/>inline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImCharIsBlankA(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImCharIsBlankW(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/>0x3000;<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>UTF-8<sp/>&lt;&gt;<sp/>wchar<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>ImTextCharToUtf8(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>out_buf[5],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>out_buf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextStrToUtf8(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>out_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_buf_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>in_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>in_text_end);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>output<sp/>UTF-8<sp/>bytes<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextCharFromUtf8(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_char,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text_end);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>one<sp/>character.<sp/>return<sp/>input<sp/>UTF-8<sp/>bytes<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextStrFromUtf8(ImWchar*<sp/>out_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_buf_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>in_remaining<sp/>=<sp/>NULL);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>input<sp/>UTF-8<sp/>bytes<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextCountCharsFromUtf8(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text_end);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>number<sp/>of<sp/>UTF-8<sp/>code-points<sp/>(NOT<sp/>bytes<sp/>count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextCountUtf8BytesFromChar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_text_end);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>express<sp/>one<sp/>char<sp/>in<sp/>UTF-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextCountUtf8BytesFromStr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>in_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>in_text_end);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>express<sp/>string<sp/>in<sp/>UTF-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>ImVec2/ImVec4<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>keeping<sp/>those<sp/>disabled<sp/>by<sp/>default<sp/>so<sp/>they<sp/>don&apos;t<sp/>leak<sp/>in<sp/>user<sp/>space,<sp/>to<sp/>allow<sp/>user<sp/>enabling<sp/>implicit<sp/>cast<sp/>operators<sp/>between<sp/>ImVec2<sp/>and<sp/>their<sp/>own<sp/>types<sp/>(using<sp/>IM_VEC2_CLASS_EXTRA<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>unfortunately<sp/>don&apos;t<sp/>have<sp/>a<sp/>unary-<sp/>operator<sp/>for<sp/>ImVec2<sp/>because<sp/>this<sp/>would<sp/>needs<sp/>to<sp/>be<sp/>defined<sp/>inside<sp/>the<sp/>class<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_DEFINE_MATH_OPERATORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">IM_MSVC_RUNTIME_CHECKS_OFF</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>*<sp/>rhs,<sp/>lhs.y<sp/>*<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>/<sp/>rhs,<sp/>lhs.y<sp/>/<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>+<sp/>rhs.x,<sp/>lhs.y<sp/>+<sp/>rhs.y);<sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>-<sp/>rhs.x,<sp/>lhs.y<sp/>-<sp/>rhs.y);<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>*<sp/>rhs.x,<sp/>lhs.y<sp/>*<sp/>rhs.y);<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>/<sp/>rhs.x,<sp/>lhs.y<sp/>/<sp/>rhs.y);<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>operator*=(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>lhs.x<sp/>*=<sp/>rhs;<sp/>lhs.y<sp/>*=<sp/>rhs;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>operator/=(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>lhs.x<sp/>/=<sp/>rhs;<sp/>lhs.y<sp/>/=<sp/>rhs;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>operator+=(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>lhs.x<sp/>+=<sp/>rhs.x;<sp/>lhs.y<sp/>+=<sp/>rhs.y;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>operator-=(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>lhs.x<sp/>-=<sp/>rhs.x;<sp/>lhs.y<sp/>-=<sp/>rhs.y;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>operator*=(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>lhs.x<sp/>*=<sp/>rhs.x;<sp/>lhs.y<sp/>*=<sp/>rhs.y;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>operator/=(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>lhs.x<sp/>/=<sp/>rhs.x;<sp/>lhs.y<sp/>/=<sp/>rhs.y;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(lhs.x<sp/>+<sp/>rhs.x,<sp/>lhs.y<sp/>+<sp/>rhs.y,<sp/>lhs.z<sp/>+<sp/>rhs.z,<sp/>lhs.w<sp/>+<sp/>rhs.w);<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(lhs.x<sp/>-<sp/>rhs.x,<sp/>lhs.y<sp/>-<sp/>rhs.y,<sp/>lhs.z<sp/>-<sp/>rhs.z,<sp/>lhs.w<sp/>-<sp/>rhs.w);<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(lhs.x<sp/>*<sp/>rhs.x,<sp/>lhs.y<sp/>*<sp/>rhs.y,<sp/>lhs.z<sp/>*<sp/>rhs.z,<sp/>lhs.w<sp/>*<sp/>rhs.w);<sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">IM_MSVC_RUNTIME_CHECKS_RESTORE</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>File<sp/>System</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_DISABLE_FILE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DISABLE_DEFAULT_FILE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ImFileHandle;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImFileHandle<sp/><sp/>ImFileOpen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileClose(ImFileHandle)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileGetSize(ImFileHandle)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ImU64)-1;<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileRead(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>ImU64,<sp/>ImU64,<sp/>ImFileHandle)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>ImU64,<sp/>ImU64,<sp/>ImFileHandle)<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_DEFAULT_FILE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FILE*<sp/>ImFileHandle;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">IMGUI_API<sp/>ImFileHandle<sp/><sp/><sp/><sp/><sp/><sp/>ImFileOpen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileClose(ImFileHandle<sp/>file);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">IMGUI_API<sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileGetSize(ImFileHandle<sp/>file);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">IMGUI_API<sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileRead(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/>ImU64<sp/>size,<sp/>ImU64<sp/>count,<sp/>ImFileHandle<sp/>file);</highlight></codeline>
<codeline lineno="397"><highlight class="normal">IMGUI_API<sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/>ImU64<sp/>size,<sp/>ImU64<sp/>count,<sp/>ImFileHandle<sp/>file);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DISABLE_TTY_FUNCTIONS<sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>stdout,<sp/>fflush<sp/>if<sp/>we<sp/>are<sp/>not<sp/>using<sp/>default<sp/>file<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFileLoadToMemory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>out_file_size<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding_bytes<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>Maths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">IM_MSVC_RUNTIME_CHECKS_OFF</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Wrapper<sp/>for<sp/>standard<sp/>libs<sp/>functions.<sp/>(Note<sp/>that<sp/>imgui_demo.cpp<sp/>does<sp/>_not_<sp/>use<sp/>them<sp/>to<sp/>keep<sp/>the<sp/>code<sp/>easy<sp/>to<sp/>copy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_DEFAULT_MATH_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImFabs(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImSqrt(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtf(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImFmod(X,<sp/>Y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmodf((X),<sp/>(Y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImCos(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosf(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImSin(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sinf(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImAcos(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acosf(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImAtan2(Y,<sp/>X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>atan2f((Y),<sp/>(X))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImAtof(STR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atof(STR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>ImFloorStd(X)<sp/><sp/><sp/><sp/><sp/>floorf(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>We<sp/>use<sp/>our<sp/>own,<sp/>see<sp/>ImFloor()<sp/>and<sp/>ImFloorSigned()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImCeil(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ceilf(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImPow(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>powf(x,<sp/>y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DragBehaviorT/SliderBehaviorT<sp/>uses<sp/>ImPow<sp/>with<sp/>either<sp/>float/double<sp/>and<sp/>need<sp/>the<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImPow(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1ga717a43207fffc8b5e8e66cf56ded5ace" kindref="member">pow</ref>(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImLog(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logf(x);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DragBehaviorT/SliderBehaviorT<sp/>uses<sp/>ImLog<sp/>with<sp/>either<sp/>float/double<sp/>and<sp/>need<sp/>the<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImLog(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" kindref="member">log</ref>(x);<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImAbs(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>&lt;<sp/>0<sp/>?<sp/>-x<sp/>:<sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImAbs(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabsf(x);<sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImAbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(x);<sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImSign(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>-1.0f<sp/>:<sp/>(x<sp/>&gt;<sp/>0.0f)<sp/>?<sp/>1.0f<sp/>:<sp/>0.0f;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Sign<sp/>operator<sp/>-<sp/>returns<sp/>-1,<sp/>0<sp/>or<sp/>1<sp/>based<sp/>on<sp/>sign<sp/>of<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImSign(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0.0)<sp/>?<sp/>-1.0<sp/>:<sp/>(x<sp/>&gt;<sp/>0.0)<sp/>?<sp/>1.0<sp/>:<sp/>0.0;<sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImRsqrt(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_cvtss_f32(_mm_rsqrt_ss(_mm_set_ss(x)));<sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImRsqrt(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0f<sp/>/<sp/>sqrtf(x);<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ImRsqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0<sp/>/<sp/><ref refid="group__core__func__exponential_1ga1f904e09827e939a56e4158f45ca8ede" kindref="member">sqrt</ref>(x);<sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImMin/ImMax/ImClamp/ImLerp/ImSwap<sp/>are<sp/>used<sp/>by<sp/>widgets<sp/>which<sp/>support<sp/>variety<sp/>of<sp/>types:<sp/>signed/unsigned<sp/>int/long<sp/>long<sp/>float/double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Exceptionally<sp/>using<sp/>templates<sp/>here<sp/>but<sp/>we<sp/>could<sp/>also<sp/>redefine<sp/>them<sp/>for<sp/>those<sp/>types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>ImMin(T<sp/>lhs,<sp/>T<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>lhs<sp/>:<sp/>rhs;<sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>ImMax(T<sp/>lhs,<sp/>T<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&gt;=<sp/>rhs<sp/>?<sp/>lhs<sp/>:<sp/>rhs;<sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>ImClamp(T<sp/>v,<sp/>T<sp/>mn,<sp/>T<sp/>mx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>mn)<sp/>?<sp/>mn<sp/>:<sp/>(v<sp/>&gt;<sp/>mx)<sp/>?<sp/>mx<sp/>:<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>ImLerp(T<sp/>a,<sp/>T<sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T)(a<sp/>+<sp/>(b<sp/>-<sp/>a)<sp/>*<sp/>t);<sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImSwap(T&amp;<sp/>a,<sp/>T&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>T<sp/>tmp<sp/>=<sp/>a;<sp/>a<sp/>=<sp/>b;<sp/>b<sp/>=<sp/>tmp;<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>ImAddClampOverflow(T<sp/>a,<sp/>T<sp/>b,<sp/>T<sp/>mn,<sp/>T<sp/>mx)<sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>(a<sp/>&lt;<sp/>mn<sp/>-<sp/>b))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mn;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(a<sp/>&gt;<sp/>mx<sp/>-<sp/>b))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mx;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>ImSubClampOverflow(T<sp/>a,<sp/>T<sp/>b,<sp/>T<sp/>mn,<sp/>T<sp/>mx)<sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(a<sp/>&lt;<sp/>mn<sp/>+<sp/>b))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mn;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>(a<sp/>&gt;<sp/>mx<sp/>+<sp/>b))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mx;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>-<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Misc<sp/>maths<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImMin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>&lt;<sp/>rhs.x<sp/>?<sp/>lhs.x<sp/>:<sp/>rhs.x,<sp/>lhs.y<sp/>&lt;<sp/>rhs.y<sp/>?<sp/>lhs.y<sp/>:<sp/>rhs.y);<sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImMax(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>&gt;=<sp/>rhs.x<sp/>?<sp/>lhs.x<sp/>:<sp/>rhs.x,<sp/>lhs.y<sp/>&gt;=<sp/>rhs.y<sp/>?<sp/>lhs.y<sp/>:<sp/>rhs.y);<sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImClamp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>mn,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>mx)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((v.x<sp/>&lt;<sp/>mn.x)<sp/>?<sp/>mn.x<sp/>:<sp/>(v.x<sp/>&gt;<sp/>mx.x)<sp/>?<sp/>mx.x<sp/>:<sp/>v.x,<sp/>(v.y<sp/>&lt;<sp/>mn.y)<sp/>?<sp/>mn.y<sp/>:<sp/>(v.y<sp/>&gt;<sp/>mx.y)<sp/>?<sp/>mx.y<sp/>:<sp/>v.y);<sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImLerp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(a.x<sp/>+<sp/>(b.x<sp/>-<sp/>a.x)<sp/>*<sp/>t,<sp/>a.y<sp/>+<sp/>(b.y<sp/>-<sp/>a.y)<sp/>*<sp/>t);<sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImLerp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>t)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(a.x<sp/>+<sp/>(b.x<sp/>-<sp/>a.x)<sp/>*<sp/>t.x,<sp/>a.y<sp/>+<sp/>(b.y<sp/>-<sp/>a.y)<sp/>*<sp/>t.y);<sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>ImLerp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(a.x<sp/>+<sp/>(b.x<sp/>-<sp/>a.x)<sp/>*<sp/>t,<sp/>a.y<sp/>+<sp/>(b.y<sp/>-<sp/>a.y)<sp/>*<sp/>t,<sp/>a.z<sp/>+<sp/>(b.z<sp/>-<sp/>a.z)<sp/>*<sp/>t,<sp/>a.w<sp/>+<sp/>(b.w<sp/>-<sp/>a.w)<sp/>*<sp/>t);<sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImSaturate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(f<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>0.0f<sp/>:<sp/>(f<sp/>&gt;<sp/>1.0f)<sp/>?<sp/>1.0f<sp/>:<sp/>f;<sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImLengthSqr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lhs.x<sp/>*<sp/>lhs.x)<sp/>+<sp/>(lhs.y<sp/>*<sp/>lhs.y);<sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImLengthSqr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>lhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lhs.x<sp/>*<sp/>lhs.x)<sp/>+<sp/>(lhs.y<sp/>*<sp/>lhs.y)<sp/>+<sp/>(lhs.z<sp/>*<sp/>lhs.z)<sp/>+<sp/>(lhs.w<sp/>*<sp/>lhs.w);<sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImInvLength(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fail_value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(lhs.x<sp/>*<sp/>lhs.x)<sp/>+<sp/>(lhs.y<sp/>*<sp/>lhs.y);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImRsqrt(d);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fail_value;<sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImFloor(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(int)(f);<sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImFloorSigned(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((f<sp/>&gt;=<sp/>0<sp/>||<sp/>(float)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)f<sp/>==<sp/>f)<sp/>?<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)f<sp/>:<sp/>(int)f<sp/>-<sp/>1);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Decent<sp/>replacement<sp/>for<sp/>floorf()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImFloor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(v.x),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(v.y));<sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImFloorSigned(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImFloorSigned(v.x),<sp/>ImFloorSigned(v.y));<sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImModPositive(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>+<sp/>b)<sp/>%<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImDot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y;<sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImRotate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin_a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(v.x<sp/>*<sp/>cos_a<sp/>-<sp/>v.y<sp/>*<sp/>sin_a,<sp/>v.x<sp/>*<sp/>sin_a<sp/>+<sp/>v.y<sp/>*<sp/>cos_a);<sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>ImLinearSweep(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>current,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>speed)<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>target)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImMin(current<sp/>+<sp/>speed,<sp/>target);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>target)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImMax(current<sp/>-<sp/>speed,<sp/>target);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current;<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImMul(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(lhs.x<sp/>*<sp/>rhs.x,<sp/>lhs.y<sp/>*<sp/>rhs.y);<sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/>ImIsFloatAboveGuaranteedIntegerPrecision(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f<sp/>&lt;=<sp/>-16777216<sp/>||<sp/>f<sp/>&gt;=<sp/>16777216;<sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal">IM_MSVC_RUNTIME_CHECKS_RESTORE</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers:<sp/>Geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/>ImBezierCubicCalc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="467"><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/>ImBezierCubicClosestPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>curves<sp/>with<sp/>explicit<sp/>number<sp/>of<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/>ImBezierCubicClosestPointCasteljau(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tess_tol);</highlight><highlight class="comment">//<sp/>For<sp/>auto-tessellated<sp/>curves<sp/>you<sp/>can<sp/>use<sp/>tess_tol<sp/>=<sp/>style.CurveTessellationTol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/>ImBezierQuadraticCalc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/>ImLineClosestPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTriangleContainsPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/>ImTriangleClosestPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTriangleBarycentricCoords(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>out_u,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>out_v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>out_w);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTriangleArea(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFabs((a.x<sp/>*<sp/>(b.y<sp/>-<sp/>c.y))<sp/>+<sp/>(b.x<sp/>*<sp/>(c.y<sp/>-<sp/>a.y))<sp/>+<sp/>(c.x<sp/>*<sp/>(a.y<sp/>-<sp/>b.y)))<sp/>*<sp/>0.5f;<sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal">IMGUI_API<sp/>ImGuiDir<sp/><sp/><sp/>ImGetDirQuadrantFromDelta(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImVec1<sp/>(1D<sp/>vector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(this<sp/>odd<sp/>construct<sp/>is<sp/>used<sp/>to<sp/>facilitate<sp/>the<sp/>transition<sp/>between<sp/>1D<sp/>and<sp/>2D,<sp/>and<sp/>the<sp/>maintenance<sp/>of<sp/>some<sp/>branches/patches)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">IM_MSVC_RUNTIME_CHECKS_OFF</highlight></codeline>
<codeline lineno="480" refid="struct_im_vec1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref></highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>x;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>x<sp/>=<sp/>0.0f;<sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_x)<sp/>{<sp/>x<sp/>=<sp/>_x;<sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal">};</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImVec2ih<sp/>(2D<sp/>vector,<sp/>half-size<sp/>integer,<sp/>for<sp/>long-term<sp/>packed<sp/>storage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="struct_im_vec2ih" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref></highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>x<sp/>=<sp/>y<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>_x,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>_y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>x<sp/>=<sp/>_x;<sp/>y<sp/>=<sp/>_y;<sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>rhs)<sp/>{<sp/>x<sp/>=<sp/>(short)rhs.x;<sp/>y<sp/>=<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)rhs.y;<sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal">};</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImRect<sp/>(2D<sp/>axis<sp/>aligned<sp/>bounding-box)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>we<sp/>can&apos;t<sp/>rely<sp/>on<sp/>ImVec2<sp/>math<sp/>operators<sp/>being<sp/>available<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="struct_im_rect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref></highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>Min;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upper-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>Max;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lower-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Min(0.0f,<sp/>0.0f),<sp/>Max(0.0f,<sp/>0.0f)<sp/><sp/>{}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">max</ref>)<sp/><sp/><sp/><sp/>:<sp/>Min(<ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">min</ref>),<sp/>Max(<ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">max</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Min(v.x,<sp/>v.y),<sp/>Max(v.z,<sp/>v.w)<sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2)<sp/><sp/>:<sp/>Min(x1,<sp/>y1),<sp/>Max(x2,<sp/>y2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>GetCenter()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((Min.x<sp/>+<sp/>Max.x)<sp/>*<sp/>0.5f,<sp/>(Min.y<sp/>+<sp/>Max.y)<sp/>*<sp/>0.5f);<sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>GetSize()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(Max.x<sp/>-<sp/>Min.x,<sp/>Max.y<sp/>-<sp/>Min.y);<sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWidth()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Max.x<sp/>-<sp/>Min.x;<sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetHeight()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Max.y<sp/>-<sp/>Min.y;<sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetArea()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Max.x<sp/>-<sp/>Min.x)<sp/>*<sp/>(Max.y<sp/>-<sp/>Min.y);<sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>GetTL()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Min;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>GetTR()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(Max.x,<sp/>Min.y);<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Top-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>GetBL()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(Min.x,<sp/>Max.y);<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>GetBR()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Max;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.x<sp/><sp/><sp/><sp/><sp/>&gt;=<sp/>Min.x<sp/>&amp;&amp;<sp/>p.y<sp/><sp/><sp/><sp/><sp/>&gt;=<sp/>Min.y<sp/>&amp;&amp;<sp/>p.x<sp/><sp/><sp/><sp/><sp/>&lt;<sp/><sp/>Max.x<sp/>&amp;&amp;<sp/>p.y<sp/><sp/><sp/><sp/><sp/>&lt;<sp/><sp/>Max.y;<sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r.Min.x<sp/>&gt;=<sp/>Min.x<sp/>&amp;&amp;<sp/>r.Min.y<sp/>&gt;=<sp/>Min.y<sp/>&amp;&amp;<sp/>r.Max.x<sp/>&lt;=<sp/>Max.x<sp/>&amp;&amp;<sp/>r.Max.y<sp/>&lt;=<sp/>Max.y;<sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Overlaps(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r.Min.y<sp/>&lt;<sp/><sp/>Max.y<sp/>&amp;&amp;<sp/>r.Max.y<sp/>&gt;<sp/><sp/>Min.y<sp/>&amp;&amp;<sp/>r.Min.x<sp/>&lt;<sp/><sp/>Max.x<sp/>&amp;&amp;<sp/>r.Max.x<sp/>&gt;<sp/><sp/>Min.x;<sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Min.x<sp/>&gt;<sp/>p.x)<sp/><sp/><sp/><sp/><sp/>Min.x<sp/>=<sp/>p.x;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Min.y<sp/>&gt;<sp/>p.y)<sp/><sp/><sp/><sp/><sp/>Min.y<sp/>=<sp/>p.y;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Max.x<sp/>&lt;<sp/>p.x)<sp/><sp/><sp/><sp/><sp/>Max.x<sp/>=<sp/>p.x;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Max.y<sp/>&lt;<sp/>p.y)<sp/><sp/><sp/><sp/><sp/>Max.y<sp/>=<sp/>p.y;<sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Min.x<sp/>&gt;<sp/>r.Min.x)<sp/>Min.x<sp/>=<sp/>r.Min.x;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Min.y<sp/>&gt;<sp/>r.Min.y)<sp/>Min.y<sp/>=<sp/>r.Min.y;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Max.x<sp/>&lt;<sp/>r.Max.x)<sp/>Max.x<sp/>=<sp/>r.Max.x;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Max.y<sp/>&lt;<sp/>r.Max.y)<sp/>Max.y<sp/>=<sp/>r.Max.y;<sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Expand(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amount)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min.x<sp/>-=<sp/>amount;<sp/><sp/><sp/>Min.y<sp/>-=<sp/>amount;<sp/><sp/><sp/>Max.x<sp/>+=<sp/>amount;<sp/><sp/><sp/>Max.y<sp/>+=<sp/>amount;<sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Expand(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>amount)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min.x<sp/>-=<sp/>amount.x;<sp/>Min.y<sp/>-=<sp/>amount.y;<sp/>Max.x<sp/>+=<sp/>amount.x;<sp/>Max.y<sp/>+=<sp/>amount.y;<sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Translate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min.x<sp/>+=<sp/>d.x;<sp/>Min.y<sp/>+=<sp/>d.y;<sp/>Max.x<sp/>+=<sp/>d.x;<sp/>Max.y<sp/>+=<sp/>d.y;<sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TranslateX(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min.x<sp/>+=<sp/>dx;<sp/>Max.x<sp/>+=<sp/>dx;<sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TranslateY(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min.y<sp/>+=<sp/>dy;<sp/>Max.y<sp/>+=<sp/>dy;<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min<sp/>=<sp/>ImMax(Min,<sp/>r.Min);<sp/>Max<sp/>=<sp/>ImMin(Max,<sp/>r.Max);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>version,<sp/>may<sp/>lead<sp/>to<sp/>an<sp/>inverted<sp/>rectangle,<sp/>which<sp/>is<sp/>fine<sp/>for<sp/>Contains/Overlaps<sp/>test<sp/>but<sp/>not<sp/>for<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipWithFull(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min<sp/>=<sp/>ImClamp(Min,<sp/>r.Min,<sp/>r.Max);<sp/>Max<sp/>=<sp/>ImClamp(Max,<sp/>r.Min,<sp/>r.Max);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Full<sp/>version,<sp/>ensure<sp/>both<sp/>points<sp/>are<sp/>fully<sp/>clipped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_floor" kindref="compound">Floor</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Min.x<sp/>=<sp/>IM_FLOOR(Min.x);<sp/>Min.y<sp/>=<sp/>IM_FLOOR(Min.y);<sp/>Max.x<sp/>=<sp/>IM_FLOOR(Max.x);<sp/>Max.y<sp/>=<sp/>IM_FLOOR(Max.y);<sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsInverted()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Min.x<sp/>&gt;<sp/>Max.x<sp/>||<sp/>Min.y<sp/>&gt;<sp/>Max.y;<sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/>ToVec4()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(Min.x,<sp/>Min.y,<sp/>Max.x,<sp/>Max.y);<sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal">};</highlight></codeline>
<codeline lineno="533"><highlight class="normal">IM_MSVC_RUNTIME_CHECKS_RESTORE</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImBitArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImBitArrayTestBit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*<sp/>arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ImU32<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>=<sp/>(ImU32)1<sp/>&lt;&lt;<sp/>(n<sp/>&amp;<sp/>31);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arr[n<sp/>&gt;&gt;<sp/>5]<sp/>&amp;<sp/><ref refid="structmask" kindref="compound">mask</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImBitArrayClearBit(ImU32*<sp/>arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ImU32<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>=<sp/>(ImU32)1<sp/>&lt;&lt;<sp/>(n<sp/>&amp;<sp/>31);<sp/>arr[n<sp/>&gt;&gt;<sp/>5]<sp/>&amp;=<sp/><ref refid="structmask" kindref="compound">~mask</ref>;<sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImBitArraySetBit(ImU32*<sp/>arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ImU32<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>=<sp/>(ImU32)1<sp/>&lt;&lt;<sp/>(n<sp/>&amp;<sp/>31);<sp/>arr[n<sp/>&gt;&gt;<sp/>5]<sp/>|=<sp/><ref refid="structmask" kindref="compound">mask</ref>;<sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImBitArraySetBitRange(ImU32*<sp/>arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2)<sp/></highlight><highlight class="comment">//<sp/>Works<sp/>on<sp/>range<sp/>[n..n2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>n2--;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>n2)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_mod<sp/>=<sp/>(n<sp/>&amp;<sp/>31);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b_mod<sp/>=<sp/>(n2<sp/>&gt;<sp/>(n<sp/>|<sp/>31)<sp/>?<sp/>31<sp/>:<sp/>(n2<sp/>&amp;<sp/>31))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImU32<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>=<sp/>(ImU32)(((ImU64)1<sp/>&lt;&lt;<sp/>b_mod)<sp/>-<sp/>1)<sp/>&amp;<sp/>~(ImU32)(((ImU64)1<sp/>&lt;&lt;<sp/>a_mod)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[n<sp/>&gt;&gt;<sp/>5]<sp/>|=<sp/><ref refid="structmask" kindref="compound">mask</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(n<sp/>+<sp/>32)<sp/>&amp;<sp/>~31;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImBitArray<sp/>class<sp/>(wrapper<sp/>over<sp/>ImBitArray<sp/>functions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Store<sp/>1-bit<sp/>per<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITCOUNT&gt;</highlight></codeline>
<codeline lineno="555" refid="struct_im_bit_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_bit_array" kindref="compound">ImBitArray</ref></highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Size<sp/>=<sp/>BITCOUNT;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Storage[(BITCOUNT<sp/>+<sp/>31)<sp/>&gt;&gt;<sp/>5];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_bit_array" kindref="compound">ImBitArray</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ClearAllBits();<sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearAllBits()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(Storage,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Storage));<sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetAllBits()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(Storage,<sp/>255,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Storage));<sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestBit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/>IM_ASSERT(n<sp/>&lt;<sp/>BITCOUNT);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImBitArrayTestBit(Storage,<sp/>n);<sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetBit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(n<sp/>&lt;<sp/>BITCOUNT);<sp/>ImBitArraySetBit(Storage,<sp/>n);<sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearBit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(n<sp/>&lt;<sp/>BITCOUNT);<sp/>ImBitArrayClearBit(Storage,<sp/>n);<sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetBitRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2)<sp/><sp/>{<sp/>ImBitArraySetBitRange(Storage,<sp/>n,<sp/>n2);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Works<sp/>on<sp/>range<sp/>[n..n2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITCOUNT&gt;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_im_bit_array" kindref="compound">ImBitArray&lt;BITCOUNT&gt;::Size</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImBitVector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Store<sp/>1-bit<sp/>per<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="struct_im_bit_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_bit_vector" kindref="compound">ImBitVector</ref></highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImU32&gt;</ref><sp/>Storage;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Create(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Storage.resize((sz<sp/>+<sp/>31)<sp/>&gt;&gt;<sp/>5);<sp/>memset(Storage.Data,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)Storage.Size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Storage.Data[0]));<sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clear()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Storage.clear();<sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestBit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/>IM_ASSERT(n<sp/>&lt;<sp/>(Storage.Size<sp/>&lt;&lt;<sp/>5));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImBitArrayTestBit(Storage.Data,<sp/>n);<sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetBit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(n<sp/>&lt;<sp/>(Storage.Size<sp/>&lt;&lt;<sp/>5));<sp/>ImBitArraySetBit(Storage.Data,<sp/>n);<sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearBit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(n<sp/>&lt;<sp/>(Storage.Size<sp/>&lt;&lt;<sp/>5));<sp/>ImBitArrayClearBit(Storage.Data,<sp/>n);<sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal">};</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImSpan&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pointing<sp/>to<sp/>a<sp/>span<sp/>of<sp/>data<sp/>we<sp/>don&apos;t<sp/>own.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="585" refid="struct_im_span" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_span" kindref="compound">ImSpan</ref></highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataEnd;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors,<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_span" kindref="compound">ImSpan</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Data<sp/>=<sp/>DataEnd<sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_span" kindref="compound">ImSpan</ref>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Data<sp/>=<sp/>data;<sp/>DataEnd<sp/>=<sp/>data<sp/>+<sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_span" kindref="compound">ImSpan</ref>(T*<sp/>data,<sp/>T*<sp/>data_end)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Data<sp/>=<sp/>data;<sp/>DataEnd<sp/>=<sp/>data_end;<sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Data<sp/>=<sp/>data;<sp/>DataEnd<sp/>=<sp/>data<sp/>+<sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set(T*<sp/>data,<sp/>T*<sp/>data_end)<sp/><sp/><sp/>{<sp/>Data<sp/>=<sp/>data;<sp/>DataEnd<sp/>=<sp/>data_end;<sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ptrdiff_t)(DataEnd<sp/>-<sp/>Data);<sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ptrdiff_t)(DataEnd<sp/>-<sp/>Data)<sp/>*<sp/>(int)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);<sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>T*<sp/>p<sp/>=<sp/>Data<sp/>+<sp/>i;<sp/>IM_ASSERT(p<sp/>&gt;=<sp/>Data<sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>DataEnd);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*p;<sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><sp/><sp/><sp/><sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p<sp/>=<sp/>Data<sp/>+<sp/>i;<sp/>IM_ASSERT(p<sp/>&gt;=<sp/>Data<sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>DataEnd);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*p;<sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Data;<sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><sp/><sp/><sp/><sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Data;<sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataEnd;<sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><sp/><sp/><sp/><sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataEnd;<sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>index_from_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>it)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/>IM_ASSERT(it<sp/>&gt;=<sp/>Data<sp/>&amp;&amp;<sp/>it<sp/>&lt;<sp/>DataEnd);<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/>off<sp/>=<sp/>it<sp/>-<sp/>Data;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)off;<sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal">};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImSpanAllocator&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Facilitate<sp/>storing<sp/>multiple<sp/>chunks<sp/>into<sp/>a<sp/>single<sp/>large<sp/>block<sp/>(the<sp/>&quot;arena&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Usage:<sp/>call<sp/>Reserve()<sp/>N<sp/>times,<sp/>allocate<sp/>GetArenaSizeInBytes()<sp/>worth,<sp/>pass<sp/>it<sp/>to<sp/>SetArenaBasePtr(),<sp/>call<sp/>GetSpan()<sp/>N<sp/>times<sp/>to<sp/>retrieve<sp/>the<sp/>aligned<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CHUNKS&gt;</highlight></codeline>
<codeline lineno="615" refid="struct_im_span_allocator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_span_allocator" kindref="compound">ImSpanAllocator</ref></highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>BasePtr;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CurrOff;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CurrIdx;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Offsets[CHUNKS];</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Sizes[CHUNKS];</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_span_allocator" kindref="compound">ImSpanAllocator</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>Reserve(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a=4)<sp/>{<sp/>IM_ASSERT(n<sp/>==<sp/>CurrIdx<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>CHUNKS);<sp/>CurrOff<sp/>=<sp/>IM_MEMALIGN(CurrOff,<sp/>a);<sp/>Offsets[n]<sp/>=<sp/>CurrOff;<sp/>Sizes[n]<sp/>=<sp/>(int)sz;<sp/>CurrIdx++;<sp/>CurrOff<sp/>+=<sp/>(int)sz;<sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>GetArenaSizeInBytes()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CurrOff;<sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>SetArenaBasePtr(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>base_ptr)<sp/><sp/><sp/><sp/>{<sp/>BasePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)base_ptr;<sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>GetSpanPtrBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(n<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>CHUNKS<sp/>&amp;&amp;<sp/>CurrIdx<sp/>==<sp/>CHUNKS);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(BasePtr<sp/>+<sp/>Offsets[n]);<sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>GetSpanPtrEnd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(n<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>CHUNKS<sp/>&amp;&amp;<sp/>CurrIdx<sp/>==<sp/>CHUNKS);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(BasePtr<sp/>+<sp/>Offsets[n]<sp/>+<sp/>Sizes[n]);<sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>GetSpan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="struct_im_span" kindref="compound">ImSpan&lt;T&gt;</ref>*<sp/>span)<sp/><sp/><sp/><sp/>{<sp/>span-&gt;set((T*)GetSpanPtrBegin(n),<sp/>(T*)GetSpanPtrEnd(n));<sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal">};</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImPool&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Basic<sp/>keyed<sp/>storage<sp/>for<sp/>contiguous<sp/>instances,<sp/>slow/amortized<sp/>insertion,<sp/>O(1)<sp/>indexable,<sp/>O(Log<sp/>N)<sp/>queries<sp/>by<sp/>ID<sp/>over<sp/>a<sp/>dense/hot<sp/>buffer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Honor<sp/>constructor/destructor.<sp/>Add/remove<sp/>invalidate<sp/>all<sp/>pointers.<sp/>Indexes<sp/>have<sp/>the<sp/>same<sp/>lifetime<sp/>as<sp/>the<sp/>associated<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImPoolIdx;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="638" refid="struct_im_pool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_pool" kindref="compound">ImPool</ref></highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;T&gt;</ref><sp/><sp/><sp/><sp/><sp/>Buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contiguous<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref><sp/><sp/><sp/><sp/>Map;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID-&gt;Index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>ImPoolIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeIdx;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>free<sp/>idx<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>ImPoolIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AliveCount;<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>active/alive<sp/>items<sp/>(for<sp/>display<sp/>purpose)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_pool" kindref="compound">ImPool</ref>()<sp/><sp/><sp/><sp/>{<sp/>FreeIdx<sp/>=<sp/>AliveCount<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_pool" kindref="compound">~ImPool</ref>()<sp/><sp/><sp/>{<sp/>Clear();<sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetByKey(ImGuiID<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>Map.GetInt(key,<sp/>-1);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(idx<sp/>!=<sp/>-1)<sp/>?<sp/>&amp;Buf[idx]<sp/>:<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetByIndex(ImPoolIdx<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Buf[n];<sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>ImPoolIdx<sp/><sp/><sp/>GetIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/>IM_ASSERT(p<sp/>&gt;=<sp/>Buf.Data<sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>Buf.Data<sp/>+<sp/>Buf.Size);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ImPoolIdx)(p<sp/>-<sp/>Buf.Data);<sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetOrAddByKey(ImGuiID<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_idx<sp/>=<sp/>Map.GetIntRef(key,<sp/>-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p_idx<sp/>!=<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Buf[*p_idx];<sp/>*p_idx<sp/>=<sp/>FreeIdx;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Add();<sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p<sp/>&gt;=<sp/>Buf.Data<sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>Buf.Data<sp/>+<sp/>Buf.Size);<sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clear()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>Map.Data.Size;<sp/>n++)<sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>Map.Data[n].val_i;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>!=<sp/>-1)<sp/>Buf[idx].~T();<sp/>}<sp/>Map.Clear();<sp/>Buf.clear();<sp/>FreeIdx<sp/>=<sp/>AliveCount<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>FreeIdx;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>==<sp/>Buf.Size)<sp/>{<sp/>Buf.resize(Buf.Size<sp/>+<sp/>1);<sp/>FreeIdx++;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>FreeIdx<sp/>=<sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;Buf[idx];<sp/>}<sp/>IM_PLACEMENT_NEW(&amp;Buf[idx])<sp/>T();<sp/>AliveCount++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Buf[idx];<sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Remove(ImGuiID<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p)<sp/><sp/><sp/><sp/><sp/>{<sp/>Remove(key,<sp/>GetIndex(p));<sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Remove(ImGuiID<sp/>key,<sp/>ImPoolIdx<sp/>idx)<sp/><sp/>{<sp/>Buf[idx].~T();<sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;Buf[idx]<sp/>=<sp/>FreeIdx;<sp/>FreeIdx<sp/>=<sp/>idx;<sp/>Map.SetInt(key,<sp/>-1);<sp/>AliveCount--;<sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reserve(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>capacity)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Buf.reserve(capacity);<sp/>Map.Data.reserve(capacity);<sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>iterate<sp/>a<sp/>ImPool:<sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>pool.GetMapSize();<sp/>n++)<sp/>if<sp/>(T*<sp/>t<sp/>=<sp/>pool.TryGetMapData(n))<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>be<sp/>avoided<sp/>if<sp/>you<sp/>know<sp/>.Remove()<sp/>has<sp/>never<sp/>been<sp/>called<sp/>on<sp/>the<sp/>pool,<sp/>or<sp/>AliveCount<sp/>==<sp/>GetMapSize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetAliveCount()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AliveCount;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>active/alive<sp/>items<sp/>in<sp/>the<sp/>pool<sp/>(for<sp/>display<sp/>purpose)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetBufSize()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Buf.Size;<sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetMapSize()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Map.Data.Size;<sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>the<sp/>map<sp/>we<sp/>need<sp/>iterate<sp/>to<sp/>find<sp/>valid<sp/>items,<sp/>since<sp/>we<sp/>don&apos;t<sp/>have<sp/>&quot;alive&quot;<sp/>storage<sp/>anywhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TryGetMapData(ImPoolIdx<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>Map.Data[n].val_i;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetByIndex(idx);<sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetSize()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMapSize();<sp/>}<sp/></highlight><highlight class="comment">//<sp/>For<sp/>ImPlot:<sp/>should<sp/>use<sp/>GetMapSize()<sp/>from<sp/>(IMGUI_VERSION_NUM<sp/>&gt;=<sp/>18304)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">};</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>ImChunkStream&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Build<sp/>and<sp/>iterate<sp/>a<sp/>contiguous<sp/>stream<sp/>of<sp/>variable-sized<sp/>structures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>by<sp/>Settings<sp/>to<sp/>store<sp/>persistent<sp/>data<sp/>while<sp/>reducing<sp/>allocation<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>store<sp/>the<sp/>chunk<sp/>size<sp/>first,<sp/>and<sp/>align<sp/>the<sp/>final<sp/>size<sp/>on<sp/>4<sp/>bytes<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>tedious/zealous<sp/>amount<sp/>of<sp/>casting<sp/>is<sp/>to<sp/>avoid<sp/>-Wcast-align<sp/>warnings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="675" refid="struct_im_chunk_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_chunk_stream" kindref="compound">ImChunkStream</ref></highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;char&gt;</ref><sp/><sp/>Buf;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>clear()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Buf.clear();<sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>empty()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Buf.Size<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Buf.Size;<sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/>alloc_chunk(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>HDR_SZ<sp/>=<sp/>4;<sp/>sz<sp/>=<sp/>IM_MEMALIGN(HDR_SZ<sp/>+<sp/>sz,<sp/>4u);<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off<sp/>=<sp/>Buf.Size;<sp/>Buf.resize(off<sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)sz);<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(Buf.Data<sp/>+<sp/>off))[0]<sp/>=<sp/>(int)sz;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(Buf.Data<sp/>+<sp/>off<sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)HDR_SZ);<sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/>begin()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>HDR_SZ<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Buf.Data)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(Buf.Data<sp/>+<sp/>HDR_SZ);<sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/>next_chunk(T*<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>HDR_SZ<sp/>=<sp/>4;<sp/>IM_ASSERT(p<sp/>&gt;=<sp/>begin()<sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>end());<sp/>p<sp/>=<sp/>(T*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)p<sp/>+<sp/>chunk_size(p));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>(T*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)end()<sp/>+<sp/>HDR_SZ))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)0;<sp/>IM_ASSERT(p<sp/>&lt;<sp/>end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>chunk_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)p)[-1];<sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/>end()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(Buf.Data<sp/>+<sp/>Buf.Size);<sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>offset_from_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p)<sp/>{<sp/>IM_ASSERT(p<sp/>&gt;=<sp/>begin()<sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>end());<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/>off<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)p<sp/>-<sp/>Buf.Data;<sp/>return<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)off;<sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/>ptr_from_offset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off)<sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(off<sp/>&gt;=<sp/>4<sp/>&amp;&amp;<sp/>off<sp/>&lt;<sp/>Buf.Size);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(Buf.Data<sp/>+<sp/>off);<sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>swap(<ref refid="struct_im_chunk_stream" kindref="compound">ImChunkStream&lt;T&gt;</ref>&amp;<sp/>rhs)<sp/>{<sp/>rhs.Buf.swap(Buf);<sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal">};</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawList<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImDrawList:<sp/>Helper<sp/>function<sp/>to<sp/>calculate<sp/>a<sp/>circle&apos;s<sp/>segment<sp/>count<sp/>given<sp/>its<sp/>radius<sp/>and<sp/>a<sp/>&quot;maximum<sp/>error&quot;<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Estimation<sp/>of<sp/>number<sp/>of<sp/>circle<sp/>segment<sp/>based<sp/>on<sp/>error<sp/>is<sp/>derived<sp/>using<sp/>method<sp/>described<sp/>in<sp/>https://stackoverflow.com/a/2244088/15194693</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>segments<sp/>(N)<sp/>is<sp/>calculated<sp/>using<sp/>equation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>N<sp/>=<sp/>ceil<sp/>(<sp/>pi<sp/>/<sp/>acos(1<sp/>-<sp/>error<sp/>/<sp/>r)<sp/>)<sp/><sp/><sp/><sp/><sp/>where<sp/>r<sp/>&gt;<sp/>0,<sp/>error<sp/>&lt;=<sp/>r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>equation<sp/>is<sp/>significantly<sp/>simpler<sp/>that<sp/>one<sp/>in<sp/>the<sp/>post<sp/>thanks<sp/>for<sp/>choosing<sp/>segment<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">//<sp/>perpendicular<sp/>to<sp/>X<sp/>axis.<sp/>Follow<sp/>steps<sp/>in<sp/>the<sp/>article<sp/>from<sp/>this<sp/>starting<sp/>condition<sp/>and<sp/>you<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>get<sp/>this<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rendering<sp/>circles<sp/>with<sp/>an<sp/>odd<sp/>number<sp/>of<sp/>segments,<sp/>while<sp/>mathematically<sp/>correct<sp/>will<sp/>produce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>asymmetrical<sp/>results<sp/>on<sp/>the<sp/>raster<sp/>grid.<sp/>Therefore<sp/>we&apos;re<sp/>rounding<sp/>N<sp/>to<sp/>next<sp/>even<sp/>number<sp/>(7-&gt;8,<sp/>8-&gt;8,<sp/>9-&gt;10<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_ROUNDUP_TO_EVEN(_V)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((_V)<sp/>+<sp/>1)<sp/>/<sp/>2)<sp/>*<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC(_RAD,_MAXERROR)<sp/><sp/><sp/><sp/>ImClamp(IM_ROUNDUP_TO_EVEN((int)ImCeil(IM_PI<sp/>/<sp/>ImAcos(1<sp/>-<sp/>ImMin((_MAXERROR),<sp/>(_RAD))<sp/>/<sp/>(_RAD)))),<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MIN,<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Raw<sp/>equation<sp/>from<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC<sp/>rewritten<sp/>for<sp/>&apos;r&apos;<sp/>and<sp/>&apos;error&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R(_N,_MAXERROR)<sp/><sp/><sp/><sp/>((_MAXERROR)<sp/>/<sp/>(1<sp/>-<sp/>ImCos(IM_PI<sp/>/<sp/>ImMax((float)(_N),<sp/>IM_PI))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_ERROR(_N,_RAD)<sp/><sp/><sp/><sp/><sp/>((1<sp/>-<sp/>ImCos(IM_PI<sp/>/<sp/>ImMax((float)(_N),<sp/>IM_PI)))<sp/>/<sp/>(_RAD))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImDrawList:<sp/>Lookup<sp/>table<sp/>size<sp/>for<sp/>adaptive<sp/>arc<sp/>drawing,<sp/>cover<sp/>full<sp/>circle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IM_DRAWLIST_ARCFAST_TABLE_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DRAWLIST_ARCFAST_TABLE_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>samples<sp/>in<sp/>lookup<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_DRAWLIST_ARCFAST_SAMPLE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_DRAWLIST_ARCFAST_TABLE_SIZE<sp/></highlight><highlight class="comment">//<sp/>Sample<sp/>index<sp/>_PathArcToFastEx()<sp/>for<sp/>360<sp/>angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Data<sp/>shared<sp/>between<sp/>all<sp/>ImDrawList<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>want<sp/>to<sp/>create<sp/>your<sp/>own<sp/>instance<sp/>of<sp/>this<sp/>if<sp/>you<sp/>want<sp/>to<sp/>use<sp/>ImDrawList<sp/>completely<sp/>without<sp/>ImGui.<sp/>In<sp/>that<sp/>case,<sp/>watch<sp/>out<sp/>for<sp/>future<sp/>changes<sp/>to<sp/>this<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="struct_im_draw_list_shared_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_draw_list_shared_data" kindref="compound">ImDrawListSharedData</ref></highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TexUvWhitePixel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UV<sp/>of<sp/>white<sp/>pixel<sp/>in<sp/>the<sp/>atlas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Font;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current/default<sp/>font<sp/>(optional,<sp/>for<sp/>simplified<sp/>AddText<sp/>overload)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current/default<sp/>font<sp/>size<sp/>(optional,<sp/>for<sp/>simplified<sp/>AddText<sp/>overload)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurveTessellationTol;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tessellation<sp/>tolerance<sp/>when<sp/>using<sp/>PathBezierCurveTo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CircleSegmentMaxError;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>circle<sp/>segments<sp/>to<sp/>use<sp/>per<sp/>pixel<sp/>of<sp/>radius<sp/>for<sp/>AddCircle()<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipRectFullscreen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>for<sp/>PushClipRectFullscreen()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawListFlags<sp/>InitialFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>flags<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>frame<sp/>(it<sp/>is<sp/>possible<sp/>to<sp/>alter<sp/>flags<sp/>on<sp/>a<sp/>per-drawlist<sp/>basis<sp/>afterwards)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Internal]<sp/>Lookup<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArcFastVtx[IM_DRAWLIST_ARCFAST_TABLE_SIZE];<sp/></highlight><highlight class="comment">//<sp/>Sample<sp/>points<sp/>on<sp/>the<sp/>quarter<sp/>of<sp/>the<sp/>circle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArcFastRadiusCutoff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cutoff<sp/>radius<sp/>after<sp/>which<sp/>arc<sp/>drawing<sp/>will<sp/>fallback<sp/>to<sp/>slower<sp/>PathArcTo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CircleSegmentCounts[64];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Precomputed<sp/>segment<sp/>count<sp/>for<sp/>given<sp/>radius<sp/>before<sp/>we<sp/>calculate<sp/>it<sp/>dynamically<sp/>(to<sp/>avoid<sp/>calculation<sp/>overhead)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>*<sp/><sp/><sp/>TexUvLines;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UV<sp/>of<sp/>anti-aliased<sp/>lines<sp/>in<sp/>the<sp/>atlas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_shared_data" kindref="compound">ImDrawListSharedData</ref>();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCircleTessellationMaxError(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_error);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">};</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="struct_im_draw_data_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_draw_data_builder" kindref="compound">ImDrawDataBuilder</ref></highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImDrawList*&gt;</ref><sp/><sp/><sp/>Layers[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Global<sp/>layers<sp/>for:<sp/>regular,<sp/>tooltip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>IM_ARRAYSIZE(Layers);<sp/>n++)<sp/>Layers[n].resize(0);<sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearFreeMemory()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>IM_ARRAYSIZE(Layers);<sp/>n++)<sp/>Layers[n].clear();<sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetDrawListCount()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>IM_ARRAYSIZE(Layers);<sp/>n++)<sp/>count<sp/>+=<sp/>Layers[n].Size;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;<sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FlattenIntoSingleLayer();</highlight></codeline>
<codeline lineno="753"><highlight class="normal">};</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets<sp/>support:<sp/>flags,<sp/>enums,<sp/>data<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transient<sp/>per-window<sp/>flags,<sp/>reset<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>frame.<sp/>For<sp/>child<sp/>window,<sp/>inherited<sp/>from<sp/>parent<sp/>on<sp/>first<sp/>Begin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>going<sp/>to<sp/>be<sp/>exposed<sp/>in<sp/>imgui.h<sp/>when<sp/>stabilized<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiItemFlags_</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_NoTabStop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>Disable<sp/>keyboard<sp/>tabbing<sp/>(FIXME:<sp/>should<sp/>merge<sp/>with<sp/>_NoNav)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_ButtonRepeat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>Button()<sp/>will<sp/>return<sp/>true<sp/>multiple<sp/>times<sp/>based<sp/>on<sp/>io.KeyRepeatDelay<sp/>and<sp/>io.KeyRepeatRate<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_Disabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>Disable<sp/>interactions<sp/>but<sp/>doesn&apos;t<sp/>affect<sp/>visuals.<sp/>See<sp/>BeginDisabled()/EndDisabled().<sp/>See<sp/>github.com/ocornut/imgui/issues/211</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_NoNav<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>Disable<sp/>keyboard/gamepad<sp/>directional<sp/>navigation<sp/>(FIXME:<sp/>should<sp/>merge<sp/>with<sp/>_NoTabStop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_NoNavDefaultFocus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>Disable<sp/>item<sp/>being<sp/>a<sp/>candidate<sp/>for<sp/>default<sp/>focus<sp/>(e.g.<sp/>used<sp/>by<sp/>title<sp/>bar<sp/>items)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_SelectableDontClosePopup<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>Disable<sp/>MenuItem/Selectable()<sp/>automatically<sp/>closing<sp/>their<sp/>popup<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_MixedValue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>[BETA]<sp/>Represent<sp/>a<sp/>mixed/indeterminate<sp/>value,<sp/>generally<sp/>multi-selection<sp/>where<sp/>values<sp/>differ.<sp/>Currently<sp/>only<sp/>supported<sp/>by<sp/>Checkbox()<sp/>(later<sp/>should<sp/>support<sp/>all<sp/>sorts<sp/>of<sp/>widgets)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_ReadOnly<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,<sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>[ALPHA]<sp/>Allow<sp/>hovering<sp/>interactions<sp/>but<sp/>underlying<sp/>value<sp/>is<sp/>not<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags_Inputable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>8<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/><sp/><sp/><sp/><sp/>//<sp/>[WIP]<sp/>Auto-activate<sp/>input<sp/>mode<sp/>when<sp/>tab<sp/>focused.<sp/>Currently<sp/>only<sp/>used<sp/>and<sp/>supported<sp/>by<sp/>a<sp/>few<sp/>items<sp/>before<sp/>it<sp/>becomes<sp/>a<sp/>generic<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal">};</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>LastItem<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiItemStatusFlags_</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_HoveredRect<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mouse<sp/>position<sp/>is<sp/>within<sp/>item<sp/>rectangle<sp/>(does<sp/>NOT<sp/>mean<sp/>that<sp/>the<sp/>window<sp/>is<sp/>in<sp/>correct<sp/>z-order<sp/>and<sp/>can<sp/>be<sp/>hovered!,<sp/>this<sp/>is<sp/>only<sp/>one<sp/>part<sp/>of<sp/>the<sp/>most-common<sp/>IsItemHovered<sp/>test)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_HasDisplayRect<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g.LastItemData.DisplayRect<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_Edited<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>exposed<sp/>by<sp/>item<sp/>was<sp/>edited<sp/>in<sp/>the<sp/>current<sp/>frame<sp/>(should<sp/>match<sp/>the<sp/>bool<sp/>return<sp/>value<sp/>of<sp/>most<sp/>widgets)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_ToggledSelection<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>Selectable(),<sp/>TreeNode()<sp/>reports<sp/>toggling<sp/>a<sp/>selection.<sp/>We<sp/>can&apos;t<sp/>report<sp/>&quot;Selected&quot;,<sp/>only<sp/>state<sp/>changes,<sp/>in<sp/>order<sp/>to<sp/>easily<sp/>handle<sp/>clipping<sp/>with<sp/>less<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_ToggledOpen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>TreeNode()<sp/>reports<sp/>toggling<sp/>their<sp/>open<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_HasDeactivated<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>if<sp/>the<sp/>widget/group<sp/>is<sp/>able<sp/>to<sp/>provide<sp/>data<sp/>for<sp/>the<sp/>ImGuiItemStatusFlags_Deactivated<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_Deactivated<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>valid<sp/>if<sp/>ImGuiItemStatusFlags_HasDeactivated<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_HoveredWindow<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>the<sp/>HoveredWindow<sp/>test<sp/>to<sp/>allow<sp/>cross-window<sp/>hover<sp/>testing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_FocusedByTabbing<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>8<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>the<sp/>Focusable<sp/>item<sp/>just<sp/>got<sp/>focused<sp/>by<sp/>Tabbing<sp/>(FIXME:<sp/>to<sp/>be<sp/>removed<sp/>soon)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_TEST_ENGINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="comment">//<sp/>[imgui_tests<sp/>only]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_Openable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20,<sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_Opened<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>21,<sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_Checkable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>22,<sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags_Checked<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>23<sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">};</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiInputTextFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiInputTextFlagsPrivate_</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputTextFlags_Multiline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>26,<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>internal<sp/>use<sp/>by<sp/>InputTextMultiline()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputTextFlags_NoMarkEdited<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>27,<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>internal<sp/>use<sp/>by<sp/>functions<sp/>using<sp/>InputText()<sp/>before<sp/>reformatting<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputTextFlags_MergedItem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>28<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>internal<sp/>use<sp/>by<sp/>TempInputText(),<sp/>will<sp/>skip<sp/>calling<sp/>ItemAdd().<sp/>Require<sp/>bounding-box<sp/>to<sp/>strictly<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal">};</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiButtonFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiButtonFlagsPrivate_</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnClick<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>on<sp/>click<sp/>(mouse<sp/>down<sp/>event)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Default]<sp/>return<sp/>true<sp/>on<sp/>click<sp/>+<sp/>release<sp/>on<sp/>same<sp/>item<sp/>&lt;--<sp/>this<sp/>is<sp/>what<sp/>the<sp/>majority<sp/>of<sp/>Button<sp/>are<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnClickReleaseAnywhere<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>on<sp/>click<sp/>+<sp/>release<sp/>even<sp/>if<sp/>the<sp/>release<sp/>event<sp/>is<sp/>not<sp/>done<sp/>while<sp/>hovering<sp/>the<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnRelease<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>on<sp/>release<sp/>(default<sp/>requires<sp/>click+release)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnDoubleClick<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>8,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>on<sp/>double-click<sp/>(default<sp/>requires<sp/>click+release)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnDragDropHold<sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>9,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>when<sp/>held<sp/>into<sp/>while<sp/>we<sp/>are<sp/>drag<sp/>and<sp/>dropping<sp/>another<sp/>item<sp/>(used<sp/>by<sp/>e.g.<sp/>tree<sp/>nodes,<sp/>collapsing<sp/>headers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_Repeat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>10,<sp/><sp/></highlight><highlight class="comment">//<sp/>hold<sp/>to<sp/>repeat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_FlattenChildren<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>11,<sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>interactions<sp/>even<sp/>if<sp/>a<sp/>child<sp/>window<sp/>is<sp/>overlapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_AllowItemOverlap<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>12,<sp/><sp/></highlight><highlight class="comment">//<sp/>require<sp/>previous<sp/>frame<sp/>HoveredId<sp/>to<sp/>either<sp/>match<sp/>id<sp/>or<sp/>be<sp/>null<sp/>before<sp/>being<sp/>usable,<sp/>use<sp/>along<sp/>with<sp/>SetItemAllowOverlap()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_DontClosePopups<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>13,<sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>automatically<sp/>closing<sp/>parent<sp/>popup<sp/>on<sp/>press<sp/>//<sp/>[UNUSED]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ImGuiButtonFlags_Disabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>14,<sp/><sp/>//<sp/>disable<sp/>interactions<sp/>-&gt;<sp/>use<sp/>BeginDisabled()<sp/>or<sp/>ImGuiItemFlags_Disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_AlignTextBaseLine<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>15,<sp/><sp/></highlight><highlight class="comment">//<sp/>vertically<sp/>align<sp/>button<sp/>to<sp/>match<sp/>text<sp/>baseline<sp/>-<sp/>ButtonEx()<sp/>only<sp/>//<sp/>FIXME:<sp/>Should<sp/>be<sp/>removed<sp/>and<sp/>handled<sp/>by<sp/>SmallButton(),<sp/>not<sp/>possible<sp/>currently<sp/>because<sp/>of<sp/>DC.CursorPosPrevLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_NoKeyModifiers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>16,<sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>mouse<sp/>interaction<sp/>if<sp/>a<sp/>key<sp/>modifier<sp/>is<sp/>held</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_NoHoldingActiveId<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>17,<sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>set<sp/>ActiveId<sp/>while<sp/>holding<sp/>the<sp/>mouse<sp/>(ImGuiButtonFlags_PressedOnClick<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_NoNavFocus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>18,<sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>override<sp/>navigation<sp/>focus<sp/>when<sp/>activated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_NoHoveredOnFocus<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>19,<sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>report<sp/>as<sp/>hovered<sp/>when<sp/>nav<sp/>focus<sp/>is<sp/>on<sp/>this<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnMask_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiButtonFlags_PressedOnClick<sp/>|<sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/>|<sp/>ImGuiButtonFlags_PressedOnClickReleaseAnywhere<sp/>|<sp/>ImGuiButtonFlags_PressedOnRelease<sp/>|<sp/>ImGuiButtonFlags_PressedOnDoubleClick<sp/>|<sp/>ImGuiButtonFlags_PressedOnDragDropHold,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags_PressedOnDefault_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiButtonFlags_PressedOnClickRelease</highlight></codeline>
<codeline lineno="828"><highlight class="normal">};</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiComboFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiComboFlagsPrivate_</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiComboFlags_CustomPreview<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>BeginComboPreview()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal">};</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiSliderFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiSliderFlagsPrivate_</highlight></codeline>
<codeline lineno="838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags_Vertical<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20,<sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>this<sp/>slider<sp/>be<sp/>orientated<sp/>vertically?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags_ReadOnly<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>21</highlight></codeline>
<codeline lineno="841"><highlight class="normal">};</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiSelectableFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiSelectableFlagsPrivate_</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>need<sp/>to<sp/>be<sp/>in<sp/>sync<sp/>with<sp/>last<sp/>value<sp/>of<sp/>ImGuiSelectableFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_NoHoldingActiveID<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_SelectOnNav<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>21,<sp/><sp/></highlight><highlight class="comment">//<sp/>(WIP)<sp/>Auto-select<sp/>when<sp/>moved<sp/>into.<sp/>This<sp/>is<sp/>not<sp/>exposed<sp/>in<sp/>public<sp/>API<sp/>as<sp/>to<sp/>handle<sp/>multi-select<sp/>and<sp/>modifiers<sp/>we<sp/>will<sp/>need<sp/>user<sp/>to<sp/>explicitly<sp/>control<sp/>focus<sp/>scope.<sp/>May<sp/>be<sp/>replaced<sp/>with<sp/>a<sp/>BeginSelection()<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_SelectOnClick<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>22,<sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>button<sp/>behavior<sp/>to<sp/>react<sp/>on<sp/>Click<sp/>(default<sp/>is<sp/>Click+Release)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_SelectOnRelease<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>23,<sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>button<sp/>behavior<sp/>to<sp/>react<sp/>on<sp/>Release<sp/>(default<sp/>is<sp/>Click+Release)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_SpanAvailWidth<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>24,<sp/><sp/></highlight><highlight class="comment">//<sp/>Span<sp/>all<sp/>avail<sp/>width<sp/>even<sp/>if<sp/>we<sp/>declared<sp/>less<sp/>for<sp/>layout<sp/>purpose.<sp/>FIXME:<sp/>We<sp/>may<sp/>be<sp/>able<sp/>to<sp/>remove<sp/>this<sp/>(added<sp/>in<sp/>6251d379,<sp/>2bcafc86<sp/>for<sp/>menus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_DrawHoveredWhenHeld<sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>25,<sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>show<sp/>active<sp/>when<sp/>held,<sp/>even<sp/>is<sp/>not<sp/>hovered.<sp/>This<sp/>concept<sp/>could<sp/>probably<sp/>be<sp/>renamed/formalized<sp/>somehow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_SetNavIdOnHover<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>26,<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Nav/Focus<sp/>ID<sp/>on<sp/>mouse<sp/>hover<sp/>(used<sp/>by<sp/>MenuItem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSelectableFlags_NoPadWithHalfSpacing<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>27<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>padding<sp/>each<sp/>side<sp/>with<sp/>ItemSpacing<sp/>*<sp/>0.5f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">};</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiTreeNodeFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiTreeNodeFlagsPrivate_</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTreeNodeFlags_ClipLabelForTrailingButton<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20</highlight></codeline>
<codeline lineno="861"><highlight class="normal">};</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiSeparatorFlags_</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSeparatorFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSeparatorFlags_Horizontal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Axis<sp/>default<sp/>to<sp/>current<sp/>layout<sp/>type,<sp/>so<sp/>generally<sp/>Horizontal<sp/>unless<sp/>e.g.<sp/>in<sp/>a<sp/>menu<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSeparatorFlags_Vertical<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSeparatorFlags_SpanAllColumns<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2</highlight></codeline>
<codeline lineno="869"><highlight class="normal">};</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiTextFlags_</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTextFlags_None<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTextFlags_NoWidthForLargeClippedText<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0</highlight></codeline>
<codeline lineno="875"><highlight class="normal">};</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiTooltipFlags_</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTooltipFlags_None<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTooltipFlags_OverridePreviousTooltip<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>will<sp/>clear/ignore<sp/>previously<sp/>submitted<sp/>tooltip<sp/>(defaults<sp/>to<sp/>append)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal">};</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>this<sp/>is<sp/>in<sp/>development,<sp/>not<sp/>exposed/functional<sp/>as<sp/>a<sp/>generic<sp/>feature<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Horizontal/Vertical<sp/>enums<sp/>are<sp/>fixed<sp/>to<sp/>0/1<sp/>so<sp/>they<sp/>may<sp/>be<sp/>used<sp/>to<sp/>index<sp/>ImVec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiLayoutType_</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLayoutType_Horizontal<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLayoutType_Vertical<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="889"><highlight class="normal">};</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiLogType</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLogType_None<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLogType_TTY,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLogType_File,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLogType_Buffer,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLogType_Clipboard</highlight></codeline>
<codeline lineno="898"><highlight class="normal">};</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//<sp/>X/Y<sp/>enums<sp/>are<sp/>fixed<sp/>to<sp/>0/1<sp/>so<sp/>they<sp/>may<sp/>be<sp/>used<sp/>to<sp/>index<sp/>ImVec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiAxis</highlight></codeline>
<codeline lineno="902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiAxis_None<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiAxis_X<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiAxis_Y<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="906"><highlight class="normal">};</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiPlotType</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiPlotType_Lines,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiPlotType_Histogram</highlight></codeline>
<codeline lineno="912"><highlight class="normal">};</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiInputEventType</highlight></codeline>
<codeline lineno="915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_None<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_MousePos,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_MouseWheel,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_MouseButton,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_Key,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_KeyMods,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_Char,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_Focus,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType_COUNT</highlight></codeline>
<codeline lineno="925"><highlight class="normal">};</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiInputSource</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource_None<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource_Mouse,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource_Keyboard,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource_Gamepad,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource_Nav,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stored<sp/>in<sp/>g.ActiveIdSource<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource_Clipboard,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>only<sp/>used<sp/>by<sp/>InputText()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource_COUNT</highlight></codeline>
<codeline lineno="936"><highlight class="normal">};</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Structures<sp/>in<sp/>the<sp/>union<sp/>below<sp/>need<sp/>to<sp/>be<sp/>declared<sp/>as<sp/>anonymous<sp/>unions<sp/>appears<sp/>to<sp/>be<sp/>an<sp/>extension?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>ImVec2()<sp/>would<sp/>fail<sp/>on<sp/>Clang<sp/>&apos;union<sp/>member<sp/>&apos;MousePos&apos;<sp/>has<sp/>a<sp/>non-trivial<sp/>default<sp/>constructor&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="struct_im_gui_input_event_mouse_pos" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event_mouse_pos" kindref="compound">ImGuiInputEventMousePos</ref><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>PosX,<sp/>PosY;<sp/>};</highlight></codeline>
<codeline lineno="941" refid="struct_im_gui_input_event_mouse_wheel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event_mouse_wheel" kindref="compound">ImGuiInputEventMouseWheel</ref><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>WheelX,<sp/>WheelY;<sp/>};</highlight></codeline>
<codeline lineno="942" refid="struct_im_gui_input_event_mouse_button" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event_mouse_button" kindref="compound">ImGuiInputEventMouseButton</ref><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Button;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Down;<sp/>};</highlight></codeline>
<codeline lineno="943" refid="struct_im_gui_input_event_key" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event_key" kindref="compound">ImGuiInputEventKey</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ImGuiKey<sp/>Key;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Down;<sp/>};</highlight></codeline>
<codeline lineno="944" refid="struct_im_gui_input_event_key_mods" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event_key_mods" kindref="compound">ImGuiInputEventKeyMods</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ImGuiKeyModFlags<sp/>Mods;<sp/>};</highlight></codeline>
<codeline lineno="945" refid="struct_im_gui_input_event_text" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event_text" kindref="compound">ImGuiInputEventText</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Char;<sp/>};</highlight></codeline>
<codeline lineno="946" refid="struct_im_gui_input_event_app_focused" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event_app_focused" kindref="compound">ImGuiInputEventAppFocused</ref><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Focused;<sp/>};</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948" refid="struct_im_gui_input_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_input_event" kindref="compound">ImGuiInputEvent</ref></highlight></codeline>
<codeline lineno="949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputEventType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Source;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SubmittedByTestEngine;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event_mouse_pos" kindref="compound">ImGuiInputEventMousePos</ref><sp/><sp/><sp/><sp/><sp/>MousePos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Type<sp/>==<sp/>ImGuiInputEventType_MousePos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event_mouse_wheel" kindref="compound">ImGuiInputEventMouseWheel</ref><sp/><sp/><sp/>MouseWheel;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Type<sp/>==<sp/>ImGuiInputEventType_MouseWheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event_mouse_button" kindref="compound">ImGuiInputEventMouseButton</ref><sp/><sp/>MouseButton;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Type<sp/>==<sp/>ImGuiInputEventType_MouseButton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event_key" kindref="compound">ImGuiInputEventKey</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Key;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Type<sp/>==<sp/>ImGuiInputEventType_Key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event_key_mods" kindref="compound">ImGuiInputEventKeyMods</ref><sp/><sp/><sp/><sp/><sp/><sp/>KeyMods;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Type<sp/>==<sp/>ImGuiInputEventType_Modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event_text" kindref="compound">ImGuiInputEventText</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Type<sp/>==<sp/>ImGuiInputEventType_Text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event_app_focused" kindref="compound">ImGuiInputEventAppFocused</ref><sp/><sp/><sp/>AppFocused;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Type<sp/>==<sp/>ImGuiInputEventType_Focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_event" kindref="compound">ImGuiInputEvent</ref>()<sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal">};</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME-NAV:<sp/>Clarify/expose<sp/>various<sp/>repeat<sp/>delay/rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiInputReadMode</highlight></codeline>
<codeline lineno="969"><highlight class="normal">{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputReadMode_Down,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputReadMode_Pressed,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputReadMode_Released,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputReadMode_Repeat,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputReadMode_RepeatSlow,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputReadMode_RepeatFast</highlight></codeline>
<codeline lineno="976"><highlight class="normal">};</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiPopupPositionPolicy</highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiPopupPositionPolicy_Default,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiPopupPositionPolicy_ComboBox,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiPopupPositionPolicy_Tooltip</highlight></codeline>
<codeline lineno="983"><highlight class="normal">};</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985" refid="struct_im_gui_data_type_temp_storage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_data_type_temp_storage" kindref="compound">ImGuiDataTypeTempStorage</ref></highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data[8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>fit<sp/>any<sp/>data<sp/>up<sp/>to<sp/>ImGuiDataType_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal">};</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Type<sp/>information<sp/>associated<sp/>to<sp/>one<sp/>ImGuiDataType.<sp/>Retrieve<sp/>with<sp/>DataTypeGetInfo().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="struct_im_gui_data_type_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_data_type_info" kindref="compound">ImGuiDataTypeInfo</ref></highlight></codeline>
<codeline lineno="992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Name;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Short<sp/>descriptive<sp/>name<sp/>for<sp/>the<sp/>type,<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>PrintFmt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>printf<sp/>format<sp/>for<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ScanFmt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>scanf<sp/>format<sp/>for<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal">};</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiDataType_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiDataTypePrivate_</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataType_String<sp/>=<sp/>ImGuiDataType_COUNT<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataType_Pointer,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataType_ID</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stacked<sp/>color<sp/>modifier,<sp/>backup<sp/>of<sp/>modified<sp/>data<sp/>so<sp/>we<sp/>can<sp/>restore<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008" refid="struct_im_gui_color_mod" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_color_mod" kindref="compound">ImGuiColorMod</ref></highlight></codeline>
<codeline lineno="1009"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCol<sp/><sp/><sp/><sp/>Col;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/>BackupValue;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stacked<sp/>style<sp/>modifier,<sp/>backup<sp/>of<sp/>modified<sp/>data<sp/>so<sp/>we<sp/>can<sp/>restore<sp/>it.<sp/>Data<sp/>type<sp/>inferred<sp/>from<sp/>the<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="struct_im_gui_style_mod" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_style_mod" kindref="compound">ImGuiStyleMod</ref></highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiStyleVar<sp/><sp/><sp/>VarIdx;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BackupInt[2];<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>BackupFloat[2];<sp/>};</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style_mod" kindref="compound">ImGuiStyleMod</ref>(ImGuiStyleVar<sp/>idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)<sp/><sp/><sp/><sp/><sp/>{<sp/>VarIdx<sp/>=<sp/>idx;<sp/>BackupInt[0]<sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style_mod" kindref="compound">ImGuiStyleMod</ref>(ImGuiStyleVar<sp/>idx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v)<sp/><sp/><sp/>{<sp/>VarIdx<sp/>=<sp/>idx;<sp/>BackupFloat[0]<sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style_mod" kindref="compound">ImGuiStyleMod</ref>(ImGuiStyleVar<sp/>idx,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>v)<sp/><sp/>{<sp/>VarIdx<sp/>=<sp/>idx;<sp/>BackupFloat[0]<sp/>=<sp/>v.x;<sp/>BackupFloat[1]<sp/>=<sp/>v.y;<sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storage<sp/>data<sp/>for<sp/>BeginComboPreview()/EndComboPreview()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="struct_im_gui_combo_preview_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_combo_preview_data" kindref="compound">ImGuiComboPreviewData</ref></highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreviewRect;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupCursorPos;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupCursorMaxPos;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupCursorPosPrevLine;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupPrevLineTextBaseOffset;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLayoutType<sp/>BackupLayout;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_combo_preview_data" kindref="compound">ImGuiComboPreviewData</ref>()<sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stacked<sp/>storage<sp/>data<sp/>for<sp/>BeginGroup()/EndGroup()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="struct_im_gui_group_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_group_data" kindref="compound">ImGuiGroupData</ref></highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>WindowID;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>BackupCursorPos;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>BackupCursorMaxPos;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref><sp/><sp/><sp/><sp/><sp/><sp/>BackupIndent;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref><sp/><sp/><sp/><sp/><sp/><sp/>BackupGroupOffset;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/>BackupCurrLineSize;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupCurrLineTextBaseOffset;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>BackupActiveIdIsAlive;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupActiveIdPreviousFrameIsAlive;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupHoveredIdIsAlive;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmitItem;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>column<sp/>measurement,<sp/>currently<sp/>used<sp/>for<sp/>MenuItem()<sp/>only..<sp/>This<sp/>is<sp/>very<sp/>short-sighted/throw-away<sp/>code<sp/>and<sp/>NOT<sp/>a<sp/>generic<sp/>helper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054" refid="struct_im_gui_menu_columns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_menu_columns" kindref="compound">ImGuiMenuColumns</ref></highlight></codeline>
<codeline lineno="1055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalWidth;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextTotalWidth;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU16<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spacing;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU16<sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetIcon;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>zero<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU16<sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetLabel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offsets<sp/>are<sp/>locked<sp/>in<sp/>Update()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU16<sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetShortcut;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU16<sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetMark;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU16<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Widths[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Width<sp/>of:<sp/><sp/><sp/>Icon,<sp/>Label,<sp/>Shortcut,<sp/>Mark<sp/><sp/>(accumulators<sp/>for<sp/>current<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_menu_columns" kindref="compound">ImGuiMenuColumns</ref>()<sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>window_reappearing);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeclColumns(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_icon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_shortcut,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_mark);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalcNextTotalWidth(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>update_offsets);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>state<sp/>of<sp/>the<sp/>currently<sp/>focused/edited<sp/>text<sp/>input<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>given<sp/>item<sp/>ID,<sp/>access<sp/>with<sp/>ImGui::GetInputTextState()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073" refid="struct_im_gui_input_text_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>widget<sp/>id<sp/>owning<sp/>the<sp/>text<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurLenW,<sp/>CurLenA;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>maintain<sp/>our<sp/>buffer<sp/>length<sp/>in<sp/>both<sp/>UTF-8<sp/>and<sp/>wchar<sp/>format.<sp/>UTF-8<sp/>length<sp/>is<sp/>valid<sp/>even<sp/>if<sp/>TextA<sp/>is<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImWchar&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextW;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edit<sp/>buffer,<sp/>we<sp/>need<sp/>to<sp/>persist<sp/>but<sp/>can&apos;t<sp/>guarantee<sp/>the<sp/>persistence<sp/>of<sp/>the<sp/>user-provided<sp/>buffer.<sp/>so<sp/>we<sp/>copy<sp/>into<sp/>own<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;char&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextA;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>UTF8<sp/>buffer<sp/>for<sp/>callbacks<sp/>and<sp/>other<sp/>operations.<sp/>this<sp/>is<sp/>not<sp/>updated<sp/>in<sp/>every<sp/>code-path!<sp/>size=capacity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;char&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitialTextA;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backup<sp/>of<sp/>end-user<sp/>buffer<sp/>at<sp/>the<sp/>time<sp/>of<sp/>focus<sp/>(in<sp/>UTF-8,<sp/>unaltered)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextAIsValid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>UTF8<sp/>buffer<sp/>is<sp/>not<sp/>initially<sp/>valid<sp/>before<sp/>we<sp/>make<sp/>the<sp/>widget<sp/>active<sp/>(until<sp/>then<sp/>we<sp/>pull<sp/>the<sp/>data<sp/>from<sp/>user<sp/>argument)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufCapacityA;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end-user<sp/>buffer<sp/>capacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>scrolling/offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>ImStb::STB_TexteditState<sp/>Stb;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state<sp/>for<sp/>stb_textedit.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorAnim;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>timer<sp/>for<sp/>cursor<sp/>blink,<sp/>reset<sp/>on<sp/>every<sp/>user<sp/>action<sp/>so<sp/>the<sp/>cursor<sp/>reappears<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorFollow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>when<sp/>we<sp/>want<sp/>scrolling<sp/>to<sp/>follow<sp/>the<sp/>current<sp/>cursor<sp/>position<sp/>(not<sp/>always!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectedAllMouseLock;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>a<sp/>double-click<sp/>to<sp/>select<sp/>all,<sp/>we<sp/>ignore<sp/>further<sp/>mouse<sp/>drags<sp/>to<sp/>update<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Edited;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edited<sp/>this<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputTextFlags<sp/><sp/><sp/><sp/><sp/>Flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>of<sp/>InputText()<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearText()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>CurLenW<sp/>=<sp/>CurLenA<sp/>=<sp/>0;<sp/>TextW[0]<sp/>=<sp/>0;<sp/>TextA[0]<sp/>=<sp/>0;<sp/>CursorClamp();<sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearFreeMemory()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>TextW.clear();<sp/>TextA.clear();<sp/>InitialTextA.clear();<sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetUndoAvailCount()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Stb.undostate.undo_point;<sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetRedoAvailCount()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STB_TEXTEDIT_UNDOSTATECOUNT<sp/>-<sp/>Stb.undostate.redo_point;<sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnKeyPressed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cannot<sp/>be<sp/>inline<sp/>because<sp/>we<sp/>call<sp/>in<sp/>code<sp/>in<sp/>stb_textedit.h<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cursor<sp/>&amp;<sp/>Selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorAnimReset()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>CursorAnim<sp/>=<sp/>-0.30f;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>a<sp/>user-input<sp/>the<sp/>cursor<sp/>stays<sp/>on<sp/>for<sp/>a<sp/>while<sp/>without<sp/>blinking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorClamp()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Stb.cursor<sp/>=<sp/>ImMin(Stb.cursor,<sp/>CurLenW);<sp/>Stb.select_start<sp/>=<sp/>ImMin(Stb.select_start,<sp/>CurLenW);<sp/>Stb.select_end<sp/>=<sp/>ImMin(Stb.select_end,<sp/>CurLenW);<sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasSelection()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Stb.select_start<sp/>!=<sp/>Stb.select_end;<sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearSelection()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Stb.select_start<sp/>=<sp/>Stb.select_end<sp/>=<sp/>Stb.cursor;<sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetCursorPos()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Stb.cursor;<sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetSelectionStart()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Stb.select_start;<sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetSelectionEnd()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Stb.select_end;<sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectAll()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Stb.select_start<sp/>=<sp/>0;<sp/>Stb.cursor<sp/>=<sp/>Stb.select_end<sp/>=<sp/>CurLenW;<sp/>Stb.has_preferred_x<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>current<sp/>popup<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="struct_im_gui_popup_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_popup_data" kindref="compound">ImGuiPopupData</ref></highlight></codeline>
<codeline lineno="1110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopupId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>on<sp/>OpenPopup()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolved<sp/>on<sp/>BeginPopup()<sp/>-<sp/>may<sp/>stay<sp/>unresolved<sp/>if<sp/>user<sp/>never<sp/>calls<sp/>OpenPopup()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceWindow;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>on<sp/>OpenPopup()<sp/>copy<sp/>of<sp/>NavWindow<sp/>at<sp/>the<sp/>time<sp/>of<sp/>opening<sp/>the<sp/>popup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenFrameCount;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>on<sp/>OpenPopup()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenParentId;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>on<sp/>OpenPopup(),<sp/>we<sp/>need<sp/>this<sp/>to<sp/>differentiate<sp/>multiple<sp/>menu<sp/>sets<sp/>from<sp/>each<sp/>others<sp/>(e.g.<sp/>inside<sp/>menu<sp/>bar<sp/>vs<sp/>loose<sp/>menu<sp/>items)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupPos;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>on<sp/>OpenPopup(),<sp/>preferred<sp/>popup<sp/>position<sp/>(typically<sp/>==<sp/>OpenMousePos<sp/>when<sp/>using<sp/>mouse)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenMousePos;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>on<sp/>OpenPopup(),<sp/>copy<sp/>of<sp/>mouse<sp/>position<sp/>at<sp/>the<sp/>time<sp/>of<sp/>opening<sp/>popup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_popup_data" kindref="compound">ImGuiPopupData</ref>()<sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>OpenFrameCount<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiNextWindowDataFlags_</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasPos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasContentSize<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasCollapsed<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasSizeConstraint<sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasFocus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasBgAlpha<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasScroll<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasViewport<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>8,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasDock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>9,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags_HasWindowClass<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>10</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>SetNexWindow**<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139" refid="struct_im_gui_next_window_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_next_window_data" kindref="compound">ImGuiNextWindowData</ref></highlight></codeline>
<codeline lineno="1140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags<sp/><sp/><sp/><sp/>Flags;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PosCond;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeCond;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CollapsedCond;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockCond;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PosVal;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PosPivotVal;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeVal;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentSizeVal;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollVal;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PosUndock;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CollapsedVal;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeConstraintRect;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSizeCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeCallback;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeCallbackUserData;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BgAlphaVal;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>background<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewportId;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockId;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window_class" kindref="compound">ImGuiWindowClass</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowClass;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MenuBarOffsetMinVal;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Always<sp/>on)<sp/>This<sp/>is<sp/>not<sp/>exposed<sp/>publicly,<sp/>so<sp/>we<sp/>don&apos;t<sp/>clear<sp/>it<sp/>and<sp/>it<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>corresponding<sp/>flag<sp/>(could<sp/>we?<sp/>for<sp/>consistency?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_next_window_data" kindref="compound">ImGuiNextWindowData</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearFlags()<sp/><sp/><sp/><sp/>{<sp/>Flags<sp/>=<sp/>ImGuiNextWindowDataFlags_None;<sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiNextItemDataFlags_</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextItemDataFlags_None<sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextItemDataFlags_HasWidth<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextItemDataFlags_HasOpen<sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173" refid="struct_im_gui_next_item_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_next_item_data" kindref="compound">ImGuiNextItemData</ref></highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextItemDataFlags<sp/><sp/><sp/><sp/><sp/><sp/>Flags;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>by<sp/>SetNextItemWidth()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusScopeId;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>by<sp/>SetNextItemMultiSelectData()<sp/>(!=<sp/>0<sp/>signify<sp/>value<sp/>has<sp/>been<sp/>set,<sp/>so<sp/>it&apos;s<sp/>an<sp/>alternate<sp/>version<sp/>of<sp/>HasSelectionData,<sp/>we<sp/>don&apos;t<sp/>use<sp/>Flags<sp/>for<sp/>this<sp/>because<sp/>they<sp/>are<sp/>cleared<sp/>too<sp/>early.<sp/>This<sp/>is<sp/>mostly<sp/>used<sp/>for<sp/>debugging)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenCond;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenVal;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>by<sp/>SetNextItemOpen()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_next_item_data" kindref="compound">ImGuiNextItemData</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearFlags()<sp/><sp/><sp/><sp/>{<sp/>Flags<sp/>=<sp/>ImGuiNextItemDataFlags_None;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Also<sp/>cleared<sp/>manually<sp/>by<sp/>ItemAdd()!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Status<sp/>storage<sp/>for<sp/>the<sp/>last<sp/>submitted<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186" refid="struct_im_gui_last_item_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref></highlight></codeline>
<codeline lineno="1187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>ImGuiItemFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags<sp/><sp/><sp/><sp/>StatusFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>ImGuiItemStatusFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Full<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Navigation<sp/>scoring<sp/>rectangle<sp/>(not<sp/>displayed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisplayRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>rectangle<sp/>(only<sp/>if<sp/>ImGuiItemStatusFlags_HasDisplayRect<sp/>is<sp/>set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref>()<sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198" refid="struct_im_gui_stack_sizes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_stack_sizes" kindref="compound">ImGuiStackSizes</ref></highlight></codeline>
<codeline lineno="1199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfIDStack;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfColorStack;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfStyleVarStack;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfFontStack;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfFocusScopeStack;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfGroupStack;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfItemFlagsStack;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfBeginPopupStack;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>SizeOfDisabledStack;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_stack_sizes" kindref="compound">ImGuiStackSizes</ref>()<sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetToCurrentState();</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CompareWithCurrentState();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Data<sp/>saved<sp/>for<sp/>each<sp/>window<sp/>pushed<sp/>into<sp/>the<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216" refid="struct_im_gui_window_stack_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_window_stack_data" kindref="compound">ImGuiWindowStackData</ref></highlight></codeline>
<codeline lineno="1217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParentLastItemDataBackup;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_stack_sizes" kindref="compound">ImGuiStackSizes</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StackSizesOnBegin;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>size<sp/>of<sp/>various<sp/>stacks<sp/>for<sp/>asserting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223" refid="struct_im_gui_shrink_width_item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref></highlight></codeline>
<codeline lineno="1224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Width;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="struct_im_gui_ptr_or_index" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref></highlight></codeline>
<codeline lineno="1230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>field<sp/>can<sp/>be<sp/>set,<sp/>not<sp/>both.<sp/>e.g.<sp/>Dock<sp/>node<sp/>tab<sp/>bars<sp/>are<sp/>loose<sp/>while<sp/>BeginTabBar()<sp/>ones<sp/>are<sp/>in<sp/>a<sp/>pool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usually<sp/>index<sp/>in<sp/>a<sp/>main<sp/>pool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)<sp/><sp/>{<sp/>Ptr<sp/>=<sp/>ptr;<sp/>Index<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/><sp/>{<sp/>Ptr<sp/>=<sp/>NULL;<sp/>Index<sp/>=<sp/>index;<sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Clipper<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242" refid="struct_im_gui_list_clipper_range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_list_clipper_range" kindref="compound">ImGuiListClipperRange</ref></highlight></codeline>
<codeline lineno="1243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Min;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Max;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PosToIndexConvert;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin/End<sp/>are<sp/>absolute<sp/>position<sp/>(will<sp/>be<sp/>converted<sp/>to<sp/>indices<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/>PosToIndexOffsetMin;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>Min<sp/>after<sp/>converting<sp/>to<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/>PosToIndexOffsetMax;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>Min<sp/>after<sp/>converting<sp/>to<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_list_clipper_range" kindref="compound">ImGuiListClipperRange</ref><sp/><sp/><sp/><sp/>FromIndices(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">max</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_list_clipper_range" kindref="compound">ImGuiListClipperRange</ref><sp/>r<sp/>=<sp/>{<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">min</ref>,<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0,<sp/>0<sp/>};<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_list_clipper_range" kindref="compound">ImGuiListClipperRange</ref><sp/><sp/><sp/><sp/>FromPositions(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_max)<sp/>{<sp/><ref refid="struct_im_gui_list_clipper_range" kindref="compound">ImGuiListClipperRange</ref><sp/>r<sp/>=<sp/>{<sp/>(int)y1,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)y2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(ImS8)off_min,<sp/>(ImS8)off_max<sp/>};<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Temporary<sp/>clipper<sp/>data,<sp/>buffers<sp/>shared/reused<sp/>between<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255" refid="struct_im_gui_list_clipper_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_list_clipper_data" kindref="compound">ImGuiListClipperData</ref></highlight></codeline>
<codeline lineno="1256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_list_clipper" kindref="compound">ImGuiListClipper</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ListClipper;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LossynessOffset;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StepNo;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemsFrozen;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiListClipperRange&gt;</ref><sp/>Ranges;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_list_clipper_data" kindref="compound">ImGuiListClipperData</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reset(<ref refid="struct_im_gui_list_clipper" kindref="compound">ImGuiListClipper</ref>*<sp/>clipper)<sp/>{<sp/>ListClipper<sp/>=<sp/>clipper;<sp/>StepNo<sp/>=<sp/>ItemsFrozen<sp/>=<sp/>0;<sp/>Ranges.resize(0);<sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Navigation<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiActivateFlags_</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiActivateFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiActivateFlags_PreferInput<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Favor<sp/>activation<sp/>that<sp/>requires<sp/>keyboard<sp/>text<sp/>input<sp/>(e.g.<sp/>for<sp/>Slider/Drag).<sp/>Default<sp/>if<sp/>keyboard<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiActivateFlags_PreferTweak<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Favor<sp/>activation<sp/>for<sp/>tweaking<sp/>with<sp/>arrows<sp/>or<sp/>gamepad<sp/>(e.g.<sp/>for<sp/>Slider/Drag).<sp/>Default<sp/>if<sp/>keyboard<sp/>is<sp/>not<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiActivateFlags_TryToPreserveState<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>widget<sp/>to<sp/>preserve<sp/>state<sp/>if<sp/>it<sp/>can<sp/>(e.g.<sp/>InputText<sp/>will<sp/>try<sp/>to<sp/>preserve<sp/>cursor/selection)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Early<sp/>work-in-progress<sp/>API<sp/>for<sp/>ScrollToItem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiScrollFlags_</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_KeepVisibleEdgeX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>item<sp/>is<sp/>not<sp/>visible:<sp/>scroll<sp/>as<sp/>little<sp/>as<sp/>possible<sp/>on<sp/>X<sp/>axis<sp/>to<sp/>bring<sp/>item<sp/>back<sp/>into<sp/>view<sp/>[default<sp/>for<sp/>X<sp/>axis]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_KeepVisibleEdgeY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>item<sp/>is<sp/>not<sp/>visible:<sp/>scroll<sp/>as<sp/>little<sp/>as<sp/>possible<sp/>on<sp/>Y<sp/>axis<sp/>to<sp/>bring<sp/>item<sp/>back<sp/>into<sp/>view<sp/>[default<sp/>for<sp/>Y<sp/>axis<sp/>for<sp/>windows<sp/>that<sp/>are<sp/>already<sp/>visible]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_KeepVisibleCenterX<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>item<sp/>is<sp/>not<sp/>visible:<sp/>scroll<sp/>to<sp/>make<sp/>the<sp/>item<sp/>centered<sp/>on<sp/>X<sp/>axis<sp/>[rarely<sp/>used]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_KeepVisibleCenterY<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>item<sp/>is<sp/>not<sp/>visible:<sp/>scroll<sp/>to<sp/>make<sp/>the<sp/>item<sp/>centered<sp/>on<sp/>Y<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_AlwaysCenterX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>center<sp/>the<sp/>result<sp/>item<sp/>on<sp/>X<sp/>axis<sp/>[rarely<sp/>used]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_AlwaysCenterY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>center<sp/>the<sp/>result<sp/>item<sp/>on<sp/>Y<sp/>axis<sp/>[default<sp/>for<sp/>Y<sp/>axis<sp/>for<sp/>appearing<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_NoScrollParent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>forwarding<sp/>scrolling<sp/>to<sp/>parent<sp/>window<sp/>if<sp/>required<sp/>to<sp/>keep<sp/>item/rect<sp/>visible<sp/>(only<sp/>scroll<sp/>window<sp/>the<sp/>function<sp/>was<sp/>applied<sp/>to).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_MaskX_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiScrollFlags_KeepVisibleEdgeX<sp/>|<sp/>ImGuiScrollFlags_KeepVisibleCenterX<sp/>|<sp/>ImGuiScrollFlags_AlwaysCenterX,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags_MaskY_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiScrollFlags_KeepVisibleEdgeY<sp/>|<sp/>ImGuiScrollFlags_KeepVisibleCenterY<sp/>|<sp/>ImGuiScrollFlags_AlwaysCenterY</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiNavHighlightFlags_</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavHighlightFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavHighlightFlags_TypeDefault<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavHighlightFlags_TypeThin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavHighlightFlags_AlwaysDraw<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>rectangular<sp/>highlight<sp/>if<sp/>(g.NavId<sp/>==<sp/>id)<sp/>_even_<sp/>when<sp/>using<sp/>the<sp/>mouse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavHighlightFlags_NoRounding<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiNavDirSourceFlags_</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavDirSourceFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavDirSourceFlags_RawKeyboard<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>keyboard<sp/>(not<sp/>pulled<sp/>from<sp/>nav),<sp/>faciliate<sp/>use<sp/>of<sp/>some<sp/>functions<sp/>before<sp/>we<sp/>can<sp/>unify<sp/>nav<sp/>and<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavDirSourceFlags_Keyboard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavDirSourceFlags_PadDPad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavDirSourceFlags_PadLStick<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiNavMoveFlags_</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_LoopX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>failed<sp/>request,<sp/>restart<sp/>from<sp/>opposite<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_LoopY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_WrapX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>failed<sp/>request,<sp/>request<sp/>from<sp/>opposite<sp/>side<sp/>one<sp/>line<sp/>down<sp/>(when<sp/>NavDir==right)<sp/>or<sp/>one<sp/>line<sp/>up<sp/>(when<sp/>NavDir==left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_WrapY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>not<sp/>super<sp/>useful<sp/>but<sp/>provided<sp/>for<sp/>completeness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_AllowCurrentNavId<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>scoring<sp/>and<sp/>considering<sp/>the<sp/>current<sp/>NavId<sp/>as<sp/>a<sp/>move<sp/>target<sp/>candidate.<sp/>This<sp/>is<sp/>used<sp/>when<sp/>the<sp/>move<sp/>source<sp/>is<sp/>offset<sp/>(e.g.<sp/>pressing<sp/>PageDown<sp/>actually<sp/>needs<sp/>to<sp/>send<sp/>a<sp/>Up<sp/>move<sp/>request,<sp/>if<sp/>we<sp/>are<sp/>pressing<sp/>PageDown<sp/>from<sp/>the<sp/>bottom-most<sp/>item<sp/>we<sp/>need<sp/>to<sp/>stay<sp/>in<sp/>place)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_AlsoScoreVisibleSet<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>alternate<sp/>result<sp/>in<sp/>NavMoveResultLocalVisible<sp/>that<sp/>only<sp/>comprise<sp/>elements<sp/>that<sp/>are<sp/>already<sp/>fully<sp/>visible<sp/>(used<sp/>by<sp/>PageUp/PageDown)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_ScrollToEdgeY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>scrolling<sp/>to<sp/>min/max<sp/>(used<sp/>by<sp/>Home/End)<sp/>//<sp/>FIXME-NAV:<sp/>Aim<sp/>to<sp/>remove<sp/>or<sp/>reword,<sp/>probably<sp/>unnecessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_Forwarded<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_DebugNoResult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>8,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dummy<sp/>scoring<sp/>for<sp/>debug<sp/>purpose,<sp/>don&apos;t<sp/>apply<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_FocusApi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>9,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_Tabbing<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>10,<sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>Focus<sp/>+<sp/>Activate<sp/>if<sp/>item<sp/>is<sp/>Inputable<sp/>+<sp/>DontChangeNavHighlight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_Activate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>11,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags_DontSetNavHighlight<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>12<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>alter<sp/>the<sp/>visible<sp/>state<sp/>of<sp/>keyboard<sp/>vs<sp/>mouse<sp/>nav<sp/>highlight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiNavLayer</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavLayer_Main<sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Main<sp/>scrolling<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavLayer_Menu<sp/><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Menu<sp/>layer<sp/>(access<sp/>with<sp/>Alt/ImGuiNavInput_Menu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavLayer_COUNT</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337" refid="struct_im_gui_nav_item_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref></highlight></codeline>
<codeline lineno="1338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init,Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>window<sp/>(result-&gt;ItemWindow-&gt;RootWindowForNav<sp/>==<sp/>request-&gt;Window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init,Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>item<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusScopeId;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init,Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>focus<sp/>scope<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RectRel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init,Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>bounding<sp/>box<sp/>in<sp/>window<sp/>relative<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags<sp/><sp/><sp/><sp/><sp/><sp/>InFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>????,Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>item<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DistBox;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>box<sp/>distance<sp/>to<sp/>current<sp/>NavId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DistCenter;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>center<sp/>distance<sp/>to<sp/>current<sp/>NavId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DistAxial;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Move<sp/><sp/><sp/><sp/>//<sp/>Best<sp/>candidate<sp/>axial<sp/>distance<sp/>to<sp/>current<sp/>NavId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref>()<sp/><sp/>{<sp/>Clear();<sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Window<sp/>=<sp/>NULL;<sp/>ID<sp/>=<sp/>FocusScopeId<sp/>=<sp/>0;<sp/>InFlags<sp/>=<sp/>0;<sp/>DistBox<sp/>=<sp/>DistCenter<sp/>=<sp/>DistAxial<sp/>=<sp/>FLT_MAX;<sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Columns<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flags<sp/>for<sp/>internal&apos;s<sp/>BeginColumns().<sp/>Prefix<sp/>using<sp/>BeginTable()<sp/>nowadays!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiOldColumnFlags_</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags_NoBorder<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>column<sp/>dividers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags_NoResize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>resizing<sp/>columns<sp/>when<sp/>clicking<sp/>on<sp/>the<sp/>dividers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags_NoPreserveWidths<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>column<sp/>width<sp/>preservation<sp/>when<sp/>adjusting<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags_NoForceWithinWindow<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>forcing<sp/>columns<sp/>to<sp/>fit<sp/>within<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags_GrowParentContentsSize<sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(WIP)<sp/>Restore<sp/>pre-1.51<sp/>behavior<sp/>of<sp/>extending<sp/>the<sp/>parent<sp/>window<sp/>contents<sp/>size<sp/>but<sp/>_without<sp/>affecting<sp/>the<sp/>columns<sp/>width<sp/>at<sp/>all_.<sp/>Will<sp/>eventually<sp/>remove.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obsolete<sp/>names<sp/>(will<sp/>be<sp/>removed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>ImGuiColumnsFlags_None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiOldColumnFlags_None,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiColumnsFlags_NoBorder<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiOldColumnFlags_NoBorder,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiColumnsFlags_NoResize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiOldColumnFlags_NoResize,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiColumnsFlags_NoPreserveWidths<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiOldColumnFlags_NoPreserveWidths,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiColumnsFlags_NoForceWithinWindow<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiOldColumnFlags_NoForceWithinWindow,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiColumnsFlags_GrowParentContentsSize<sp/><sp/><sp/><sp/>=<sp/>ImGuiOldColumnFlags_GrowParentContentsSize</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377" refid="struct_im_gui_old_column_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_old_column_data" kindref="compound">ImGuiOldColumnData</ref></highlight></codeline>
<codeline lineno="1378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetNorm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>start<sp/>offset,<sp/>normalized<sp/>0.0<sp/>(far<sp/>left)<sp/>-&gt;<sp/>1.0<sp/>(far<sp/>right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetNormBeforeResize;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags<sp/>Flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>exposed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipRect;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_old_column_data" kindref="compound">ImGuiOldColumnData</ref>()<sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387" refid="struct_im_gui_old_columns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref></highlight></codeline>
<codeline lineno="1388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiOldColumnFlags<sp/>Flags;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsFirstFrame;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsBeingResized;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Current;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Count;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffMinX,<sp/>OffMaxX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offsets<sp/>from<sp/>HostWorkRect.Min.x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LineMinY,<sp/>LineMaxY;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostCursorPosY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>CursorPos<sp/>at<sp/>the<sp/>time<sp/>of<sp/>BeginColumns()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostCursorMaxPosX;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>CursorMaxPos<sp/>at<sp/>the<sp/>time<sp/>of<sp/>BeginColumns()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostInitialClipRect;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>ClipRect<sp/>at<sp/>the<sp/>time<sp/>of<sp/>BeginColumns()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupClipRect;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>ClipRect<sp/>during<sp/>PushColumnsBackground()/PopColumnsBackground()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupParentWorkRect;</highlight><highlight class="comment">//Backup<sp/>of<sp/>WorkRect<sp/>at<sp/>the<sp/>time<sp/>of<sp/>BeginColumns()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiOldColumnData&gt;</ref><sp/>Columns;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter" kindref="compound">ImDrawListSplitter</ref><sp/><sp/>Splitter;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>()<sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Multi-select<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_HAS_MULTI_SELECT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;this<sp/>is<sp/>filled<sp/>in<sp/>&apos;range_select&apos;<sp/>branch&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>IMGUI_HAS_MULTI_SELECT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Docking<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_HAS_DOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiDockNodeFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiDockNodeFlagsPrivate_</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_DockSpace<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>10,<sp/><sp/></highlight><highlight class="comment">//<sp/>Local,<sp/>Saved<sp/><sp/>//<sp/>A<sp/>dockspace<sp/>is<sp/>a<sp/>node<sp/>that<sp/>occupy<sp/>space<sp/>within<sp/>an<sp/>existing<sp/>user<sp/>window.<sp/>Otherwise<sp/>the<sp/>node<sp/>is<sp/>floating<sp/>and<sp/>create<sp/>its<sp/>own<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_CentralNode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>11,<sp/><sp/></highlight><highlight class="comment">//<sp/>Local,<sp/>Saved<sp/><sp/>//<sp/>The<sp/>central<sp/>node<sp/>has<sp/>2<sp/>main<sp/>properties:<sp/>stay<sp/>visible<sp/>when<sp/>empty,<sp/>only<sp/>use<sp/>&quot;remaining&quot;<sp/>spaces<sp/>from<sp/>its<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoTabBar<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>12,<sp/><sp/></highlight><highlight class="comment">//<sp/>Local,<sp/>Saved<sp/><sp/>//<sp/>Tab<sp/>bar<sp/>is<sp/>completely<sp/>unavailable.<sp/>No<sp/>triangle<sp/>in<sp/>the<sp/>corner<sp/>to<sp/>enable<sp/>it<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_HiddenTabBar<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>13,<sp/><sp/></highlight><highlight class="comment">//<sp/>Local,<sp/>Saved<sp/><sp/>//<sp/>Tab<sp/>bar<sp/>is<sp/>hidden,<sp/>with<sp/>a<sp/>triangle<sp/>in<sp/>the<sp/>corner<sp/>to<sp/>show<sp/>it<sp/>again<sp/>(NB:<sp/>actual<sp/>tab-bar<sp/>instance<sp/>may<sp/>be<sp/>destroyed<sp/>as<sp/>this<sp/>is<sp/>only<sp/>used<sp/>for<sp/>single-window<sp/>tab<sp/>bar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoWindowMenuButton<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>14,<sp/><sp/></highlight><highlight class="comment">//<sp/>Local,<sp/>Saved<sp/><sp/>//<sp/>Disable<sp/>window/docking<sp/>menu<sp/>(that<sp/>one<sp/>that<sp/>appears<sp/>instead<sp/>of<sp/>the<sp/>collapse<sp/>button)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoCloseButton<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>15,<sp/><sp/></highlight><highlight class="comment">//<sp/>Local,<sp/>Saved<sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoDocking<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>16,<sp/><sp/></highlight><highlight class="comment">//<sp/>Local,<sp/>Saved<sp/><sp/>//<sp/>Disable<sp/>any<sp/>form<sp/>of<sp/>docking<sp/>in<sp/>this<sp/>dockspace<sp/>or<sp/>individual<sp/>node.<sp/>(On<sp/>a<sp/>whole<sp/>dockspace,<sp/>this<sp/>pretty<sp/>much<sp/>defeat<sp/>the<sp/>purpose<sp/>of<sp/>using<sp/>a<sp/>dockspace<sp/>at<sp/>all).<sp/>Note:<sp/>when<sp/>turned<sp/>on,<sp/>existing<sp/>docked<sp/>nodes<sp/>will<sp/>be<sp/>preserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoDockingSplitMe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>17,<sp/><sp/></highlight><highlight class="comment">//<sp/>[EXPERIMENTAL]<sp/>Prevent<sp/>another<sp/>window/node<sp/>from<sp/>splitting<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoDockingSplitOther<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>18,<sp/><sp/></highlight><highlight class="comment">//<sp/>[EXPERIMENTAL]<sp/>Prevent<sp/>this<sp/>node<sp/>from<sp/>splitting<sp/>another<sp/>window/node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoDockingOverMe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>19,<sp/><sp/></highlight><highlight class="comment">//<sp/>[EXPERIMENTAL]<sp/>Prevent<sp/>another<sp/>window/node<sp/>to<sp/>be<sp/>docked<sp/>over<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoDockingOverOther<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20,<sp/><sp/></highlight><highlight class="comment">//<sp/>[EXPERIMENTAL]<sp/>Prevent<sp/>this<sp/>node<sp/>to<sp/>be<sp/>docked<sp/>over<sp/>another<sp/>window<sp/>or<sp/>non-empty<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoDockingOverEmpty<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>21,<sp/><sp/></highlight><highlight class="comment">//<sp/>[EXPERIMENTAL]<sp/>Prevent<sp/>this<sp/>node<sp/>to<sp/>be<sp/>docked<sp/>over<sp/>an<sp/>empty<sp/>node<sp/>(e.g.<sp/>DockSpace<sp/>with<sp/>no<sp/>other<sp/>windows)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoResizeX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>22,<sp/><sp/></highlight><highlight class="comment">//<sp/>[EXPERIMENTAL]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoResizeY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>23,<sp/><sp/></highlight><highlight class="comment">//<sp/>[EXPERIMENTAL]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_SharedFlagsInheritMask_<sp/><sp/>=<sp/>~0,</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_NoResizeFlagsMask_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiDockNodeFlags_NoResize<sp/>|<sp/>ImGuiDockNodeFlags_NoResizeX<sp/>|<sp/>ImGuiDockNodeFlags_NoResizeY,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_LocalFlagsMask_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiDockNodeFlags_NoSplit<sp/>|<sp/>ImGuiDockNodeFlags_NoResizeFlagsMask_<sp/>|<sp/>ImGuiDockNodeFlags_AutoHideTabBar<sp/>|<sp/>ImGuiDockNodeFlags_DockSpace<sp/>|<sp/>ImGuiDockNodeFlags_CentralNode<sp/>|<sp/>ImGuiDockNodeFlags_NoTabBar<sp/>|<sp/>ImGuiDockNodeFlags_HiddenTabBar<sp/>|<sp/>ImGuiDockNodeFlags_NoWindowMenuButton<sp/>|<sp/>ImGuiDockNodeFlags_NoCloseButton<sp/>|<sp/>ImGuiDockNodeFlags_NoDocking,</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_LocalFlagsTransferMask_<sp/><sp/>=<sp/>ImGuiDockNodeFlags_LocalFlagsMask_<sp/>&amp;<sp/>~ImGuiDockNodeFlags_DockSpace,<sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>splitting<sp/>those<sp/>flags<sp/>are<sp/>moved<sp/>to<sp/>the<sp/>inheriting<sp/>child,<sp/>never<sp/>duplicated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags_SavedFlagsMask_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiDockNodeFlags_NoResizeFlagsMask_<sp/>|<sp/>ImGuiDockNodeFlags_DockSpace<sp/>|<sp/>ImGuiDockNodeFlags_CentralNode<sp/>|<sp/>ImGuiDockNodeFlags_NoTabBar<sp/>|<sp/>ImGuiDockNodeFlags_HiddenTabBar<sp/>|<sp/>ImGuiDockNodeFlags_NoWindowMenuButton<sp/>|<sp/>ImGuiDockNodeFlags_NoCloseButton<sp/>|<sp/>ImGuiDockNodeFlags_NoDocking</highlight></codeline>
<codeline lineno="1445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>source<sp/>authority<sp/>(dock<sp/>node<sp/>vs<sp/>window)<sp/>of<sp/>a<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiDataAuthority_</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataAuthority_Auto,</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataAuthority_DockNode,</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataAuthority_Window</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiDockNodeState</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeState_Unknown,</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeState_HostWindowHiddenBecauseSingleWindow,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeState_HostWindowHiddenBecauseWindowsAreResizing,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeState_HostWindowVisible</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sizeof()<sp/>156~192</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464" refid="struct_im_gui_dock_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref></highlight></codeline>
<codeline lineno="1465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags<sp/><sp/><sp/><sp/><sp/><sp/>SharedFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Write)<sp/>Flags<sp/>shared<sp/>by<sp/>all<sp/>nodes<sp/>of<sp/>a<sp/>same<sp/>dockspace<sp/>hierarchy<sp/>(inherited<sp/>from<sp/>the<sp/>root<sp/>node)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags<sp/><sp/><sp/><sp/><sp/><sp/>LocalFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Write)<sp/>Flags<sp/>specific<sp/>to<sp/>this<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags<sp/><sp/><sp/><sp/><sp/><sp/>LocalFlagsInWindows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Write)<sp/>Flags<sp/>specific<sp/>to<sp/>this<sp/>node,<sp/>applied<sp/>from<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeFlags<sp/><sp/><sp/><sp/><sp/><sp/>MergedFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Read)<sp/><sp/>Effective<sp/>flags<sp/>(==<sp/>SharedFlags<sp/>|<sp/>LocalFlagsInNode<sp/>|<sp/>LocalFlagsInWindows)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDockNodeState<sp/><sp/><sp/><sp/><sp/><sp/>State;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParentNode;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChildNodes[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Split<sp/>node<sp/>only]<sp/>Child<sp/>nodes<sp/>(left/right<sp/>or<sp/>top/bottom).<sp/>Consider<sp/>switching<sp/>to<sp/>an<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiWindow*&gt;</ref><sp/><sp/>Windows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>unordered<sp/>list!<sp/>Iterate<sp/>TabBar-&gt;Tabs<sp/>for<sp/>user-order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBar;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeRef;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Split<sp/>node<sp/>only]<sp/>Last<sp/>explicitly<sp/>written-to<sp/>size<sp/>(overridden<sp/>when<sp/>using<sp/>a<sp/>splitter<sp/>affecting<sp/>the<sp/>node),<sp/>used<sp/>to<sp/>calculate<sp/>Size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiAxis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplitAxis;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Split<sp/>node<sp/>only]<sp/>Split<sp/>axis<sp/>(X<sp/>or<sp/>Y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window_class" kindref="compound">ImGuiWindowClass</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowClass;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Root<sp/>node<sp/>only]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastBgColor;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostWindow;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VisibleWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generally<sp/>point<sp/>to<sp/>window<sp/>which<sp/>is<sp/>ID<sp/>is<sp/>==<sp/>SelectedTabID,<sp/>but<sp/>when<sp/>CTRL+Tabbing<sp/>this<sp/>can<sp/>be<sp/>a<sp/>different<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CentralNode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Root<sp/>node<sp/>only]<sp/>Pointer<sp/>to<sp/>central<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnlyNodeWithWindows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Root<sp/>node<sp/>only]<sp/>Set<sp/>when<sp/>there<sp/>is<sp/>a<sp/>single<sp/>visible<sp/>node<sp/>within<sp/>the<sp/>hierarchy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountNodeWithWindows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Root<sp/>node<sp/>only]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameAlive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>frame<sp/>number<sp/>the<sp/>node<sp/>was<sp/>updated<sp/>or<sp/>kept<sp/>alive<sp/>explicitly<sp/>with<sp/>DockSpace()<sp/>+<sp/>ImGuiDockNodeFlags_KeepAliveOnly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameActive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>frame<sp/>number<sp/>the<sp/>node<sp/>was<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameFocused;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>frame<sp/>number<sp/>the<sp/>node<sp/>was<sp/>focused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFocusedNodeId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Root<sp/>node<sp/>only]<sp/>Which<sp/>of<sp/>our<sp/>child<sp/>docking<sp/>node<sp/>(any<sp/>ancestor<sp/>in<sp/>the<sp/>hierarchy)<sp/>was<sp/>last<sp/>focused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectedTabId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Leaf<sp/>node<sp/>only]<sp/>Which<sp/>of<sp/>our<sp/>tab/window<sp/>is<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantCloseTabId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Leaf<sp/>node<sp/>only]<sp/>Set<sp/>when<sp/>closing<sp/>a<sp/>specific<sp/>tab/window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataAuthority<sp/><sp/><sp/><sp/><sp/><sp/>AuthorityForPos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:3;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataAuthority<sp/><sp/><sp/><sp/><sp/><sp/>AuthorityForSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:3;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDataAuthority<sp/><sp/><sp/><sp/><sp/><sp/>AuthorityForViewport<sp/><sp/><sp/><sp/>:3;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsVisible<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:1;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>false<sp/>when<sp/>the<sp/>node<sp/>is<sp/>hidden<sp/>(usually<sp/>disabled<sp/>as<sp/>it<sp/>has<sp/>no<sp/>active<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsFocused<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:1;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsBgDrawnThisFrame<sp/><sp/><sp/><sp/><sp/><sp/>:1;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasCloseButton<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:1;<sp/></highlight><highlight class="comment">//<sp/>Provide<sp/>space<sp/>for<sp/>a<sp/>close<sp/>button<sp/>(if<sp/>any<sp/>of<sp/>the<sp/>docked<sp/>window<sp/>has<sp/>one).<sp/>Note<sp/>that<sp/>button<sp/>may<sp/>be<sp/>hidden<sp/>on<sp/>window<sp/>without<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasWindowMenuButton<sp/><sp/><sp/><sp/><sp/>:1;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasCentralNodeChild<sp/><sp/><sp/><sp/><sp/>:1;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantCloseAll<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:1;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>closing<sp/>all<sp/>tabs<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantLockSizeOnce<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:1;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantMouseMove<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:1;<sp/></highlight><highlight class="comment">//<sp/>After<sp/>a<sp/>node<sp/>extraction<sp/>we<sp/>need<sp/>to<sp/>transition<sp/>toward<sp/>moving<sp/>the<sp/>newly<sp/>created<sp/>host<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantHiddenTabBarUpdate<sp/><sp/>:1;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantHiddenTabBarToggle<sp/><sp/>:1;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">~ImGuiDockNode</ref>();</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsRootNode()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParentNode<sp/>==<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDockSpace()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MergedFlags<sp/>&amp;<sp/>ImGuiDockNodeFlags_DockSpace)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsFloatingNode()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParentNode<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>(MergedFlags<sp/>&amp;<sp/>ImGuiDockNodeFlags_DockSpace)<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsCentralNode()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MergedFlags<sp/>&amp;<sp/>ImGuiDockNodeFlags_CentralNode)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsHiddenTabBar()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MergedFlags<sp/>&amp;<sp/>ImGuiDockNodeFlags_HiddenTabBar)<sp/>!=<sp/>0;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Hidden<sp/>tab<sp/>bar<sp/>can<sp/>be<sp/>shown<sp/>back<sp/>by<sp/>clicking<sp/>the<sp/>small<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsNoTabBar()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MergedFlags<sp/>&amp;<sp/>ImGuiDockNodeFlags_NoTabBar)<sp/>!=<sp/>0;<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>show<sp/>a<sp/>tab<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsSplitNode()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ChildNodes[0]<sp/>!=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsLeafNode()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ChildNodes[0]<sp/>==<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsEmpty()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ChildNodes[0]<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>Windows.Size<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rect()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(Pos.x,<sp/>Pos.y,<sp/>Pos.x<sp/>+<sp/>Size.x,<sp/>Pos.y<sp/>+<sp/>Size.y);<sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLocalFlags(ImGuiDockNodeFlags<sp/>flags)<sp/>{<sp/>LocalFlags<sp/>=<sp/>flags;<sp/>UpdateMergedFlags();<sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateMergedFlags()<sp/><sp/><sp/><sp/><sp/>{<sp/>MergedFlags<sp/>=<sp/>SharedFlags<sp/>|<sp/>LocalFlags<sp/>|<sp/>LocalFlagsInWindows;<sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>colors<sp/>that<sp/>are<sp/>stored<sp/>at<sp/>the<sp/>time<sp/>of<sp/>Begin()<sp/>into<sp/>Docked<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>currently<sp/>store<sp/>the<sp/>packed<sp/>colors<sp/>in<sp/>a<sp/>simple<sp/>array<sp/>window-&gt;DockStyle.Colors[].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>better<sp/>solution<sp/>may<sp/>involve<sp/>appending<sp/>into<sp/>a<sp/>log<sp/>of<sp/>colors<sp/>in<sp/>ImGuiContext<sp/>+<sp/>store<sp/>offsets<sp/>into<sp/>those<sp/>arrays<sp/>in<sp/>ImGuiWindow,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>would<sp/>be<sp/>more<sp/>complex<sp/>as<sp/>we&apos;d<sp/>need<sp/>to<sp/>double-buffer<sp/>both<sp/>as<sp/>e.g.<sp/>drop<sp/>target<sp/>may<sp/>refer<sp/>to<sp/>window<sp/>from<sp/>last<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiWindowDockStyleCol</highlight></codeline>
<codeline lineno="1531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowDockStyleCol_Text,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowDockStyleCol_Tab,</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowDockStyleCol_TabHovered,</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowDockStyleCol_TabActive,</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowDockStyleCol_TabUnfocused,</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowDockStyleCol_TabUnfocusedActive,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowDockStyleCol_COUNT</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541" refid="struct_im_gui_window_dock_style" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_window_dock_style" kindref="compound">ImGuiWindowDockStyle</ref></highlight></codeline>
<codeline lineno="1542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>Colors[ImGuiWindowDockStyleCol_COUNT];</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546" refid="struct_im_gui_dock_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_dock_context" kindref="compound">ImGuiDockContext</ref></highlight></codeline>
<codeline lineno="1547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nodes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>ID<sp/>-&gt;<sp/>ImGuiDockNode*:<sp/>Active<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiDockRequest&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/>Requests;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiDockNodeSettings&gt;</ref><sp/>NodesSettings;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantFullRebuild;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_context" kindref="compound">ImGuiDockContext</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>IMGUI_HAS_DOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Viewport<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImGuiViewport<sp/>Private/Internals<sp/>fields<sp/>(cardinal<sp/>sin:<sp/>we<sp/>are<sp/>using<sp/>inheritance!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>instance<sp/>of<sp/>ImGuiViewport<sp/>is<sp/>in<sp/>fact<sp/>a<sp/>ImGuiViewportP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563" refid="struct_im_gui_viewport_p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref></highlight></codeline>
<codeline lineno="1564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Idx;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameActive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>frame<sp/>number<sp/>this<sp/>viewport<sp/>was<sp/>activated<sp/>by<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrontMostStampCount;</highlight><highlight class="comment">//<sp/>Last<sp/>stamp<sp/>number<sp/>from<sp/>when<sp/>a<sp/>window<sp/>hosted<sp/>by<sp/>this<sp/>viewport<sp/>was<sp/>made<sp/>front-most<sp/>(by<sp/>comparing<sp/>this<sp/>value<sp/>between<sp/>two<sp/>viewport<sp/>we<sp/>have<sp/>an<sp/>implicit<sp/>viewport<sp/>z-order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastNameHash;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastPos;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alpha;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>opacity<sp/>(when<sp/>dragging<sp/>dockable<sp/>windows/viewports<sp/>we<sp/>make<sp/>them<sp/>transparent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastAlpha;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformMonitor;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformWindowCreated;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>the<sp/>viewport<sp/>is<sp/>owned<sp/>by<sp/>a<sp/>window<sp/>(and<sp/>ImGuiViewportFlags_CanHostOtherWindows<sp/>is<sp/>NOT<sp/>set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawListsLastFrame[2];<sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>frame<sp/>number<sp/>the<sp/>background<sp/>(0)<sp/>and<sp/>foreground<sp/>(1)<sp/>draw<sp/>lists<sp/>were<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawLists[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>background<sp/>(0)<sp/>and<sp/>foreground<sp/>(1)<sp/>draw<sp/>lists.<sp/>We<sp/>use<sp/>them<sp/>to<sp/>draw<sp/>software<sp/>mouser<sp/>cursor<sp/>when<sp/>io.MouseDrawCursor<sp/>is<sp/>set<sp/>and<sp/>to<sp/>draw<sp/>most<sp/>debug<sp/>overlays.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawDataP;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_builder" kindref="compound">ImDrawDataBuilder</ref><sp/><sp/><sp/>DrawDataBuilder;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastPlatformPos;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastPlatformSize;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastRendererSize;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkOffsetMin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Work<sp/>Area:<sp/>Offset<sp/>from<sp/>Pos<sp/>to<sp/>top-left<sp/>corner<sp/>of<sp/>Work<sp/>Area.<sp/>Generally<sp/>(0,0)<sp/>or<sp/>(0,+main_menu_bar_height).<sp/>Work<sp/>Area<sp/>is<sp/>Full<sp/>Area<sp/>but<sp/>without<sp/>menu-bars/status-bars<sp/>(so<sp/>WorkArea<sp/>always<sp/>fit<sp/>inside<sp/>Pos/Size!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkOffsetMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Work<sp/>Area:<sp/>Offset<sp/>from<sp/>Pos+Size<sp/>to<sp/>bottom-right<sp/>corner<sp/>of<sp/>Work<sp/>Area.<sp/>Generally<sp/>(0,0)<sp/>or<sp/>(0,-status_bar_height).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BuildWorkOffsetMin;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Work<sp/>Area:<sp/>Offset<sp/>being<sp/>built<sp/>during<sp/>current<sp/>frame.<sp/>Generally<sp/>&gt;=<sp/>0.0f.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BuildWorkOffsetMax;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Work<sp/>Area:<sp/>Offset<sp/>being<sp/>built<sp/>during<sp/>current<sp/>frame.<sp/>Generally<sp/>&lt;=<sp/>0.0f.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Idx<sp/>=<sp/>-1;<sp/>LastFrameActive<sp/>=<sp/>DrawListsLastFrame[0]<sp/>=<sp/>DrawListsLastFrame[1]<sp/>=<sp/>LastFrontMostStampCount<sp/>=<sp/>-1;<sp/>LastNameHash<sp/>=<sp/>0;<sp/>Alpha<sp/>=<sp/>LastAlpha<sp/>=<sp/>1.0f;<sp/>PlatformMonitor<sp/>=<sp/>-1;<sp/>PlatformWindowCreated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>Window<sp/>=<sp/>NULL;<sp/>DrawLists[0]<sp/>=<sp/>DrawLists[1]<sp/>=<sp/>NULL;<sp/>LastPlatformPos<sp/>=<sp/>LastPlatformSize<sp/>=<sp/>LastRendererSize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(FLT_MAX,<sp/>FLT_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">~ImGuiViewportP</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DrawLists[0])<sp/>IM_DELETE(DrawLists[0]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DrawLists[1])<sp/>IM_DELETE(DrawLists[1]);<sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ClearRequestFlags()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>PlatformRequestClose<sp/>=<sp/>PlatformRequestMove<sp/>=<sp/>PlatformRequestResize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>work<sp/>rect<sp/>pos/size<sp/>given<sp/>a<sp/>set<sp/>of<sp/>offset<sp/>(we<sp/>have<sp/>1<sp/>pair<sp/>of<sp/>offset<sp/>for<sp/>rect<sp/>locked<sp/>from<sp/>last<sp/>frame<sp/>data,<sp/>and<sp/>1<sp/>pair<sp/>for<sp/>currently<sp/>building<sp/>rect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/>CalcWorkRectPos(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>off_min)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(Pos.x<sp/>+<sp/>off_min.x,<sp/>Pos.y<sp/>+<sp/>off_min.y);<sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/>CalcWorkRectSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>off_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>off_max)</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImMax(0.0f,<sp/>Size.x<sp/>-<sp/>off_min.x<sp/>+<sp/>off_max.x),<sp/>ImMax(0.0f,<sp/>Size.y<sp/>-<sp/>off_min.y<sp/>+<sp/>off_max.y));<sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateWorkRect()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>WorkPos<sp/>=<sp/>CalcWorkRectPos(WorkOffsetMin);<sp/>WorkSize<sp/>=<sp/>CalcWorkRectSize(WorkOffsetMin,<sp/>WorkOffsetMax);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>public<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helpers<sp/>to<sp/>retrieve<sp/>ImRect<sp/>(we<sp/>don&apos;t<sp/>need<sp/>to<sp/>store<sp/>BuildWorkRect<sp/>as<sp/>every<sp/>access<sp/>tend<sp/>to<sp/>change<sp/>it,<sp/>hence<sp/>the<sp/>code<sp/>asymmetry)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/>GetMainRect()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(Pos.x,<sp/>Pos.y,<sp/>Pos.x<sp/>+<sp/>Size.x,<sp/>Pos.y<sp/>+<sp/>Size.y);<sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/>GetWorkRect()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(WorkPos.x,<sp/>WorkPos.y,<sp/>WorkPos.x<sp/>+<sp/>WorkSize.x,<sp/>WorkPos.y<sp/>+<sp/>WorkSize.y);<sp/>}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/>GetBuildWorkRect()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>CalcWorkRectPos(BuildWorkOffsetMin);<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>CalcWorkRectSize(BuildWorkOffsetMin,<sp/>BuildWorkOffsetMax);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(pos.x,<sp/>pos.y,<sp/>pos.x<sp/>+<sp/>size.x,<sp/>pos.y<sp/>+<sp/>size.y);<sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Settings<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Windows<sp/>data<sp/>saved<sp/>in<sp/>imgui.ini<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>never<sp/>destroy<sp/>or<sp/>rename<sp/>ImGuiWindowSettings,<sp/>we<sp/>can<sp/>store<sp/>the<sp/>names<sp/>in<sp/>a<sp/>separate<sp/>buffer<sp/>easily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(this<sp/>is<sp/>designed<sp/>to<sp/>be<sp/>stored<sp/>in<sp/>a<sp/>ImChunkStream<sp/>buffer,<sp/>with<sp/>the<sp/>variable-length<sp/>Name<sp/>following<sp/>our<sp/>structure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609" refid="struct_im_gui_window_settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_window_settings" kindref="compound">ImGuiWindowSettings</ref></highlight></codeline>
<codeline lineno="1610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>ID;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref><sp/><sp/><sp/><sp/>Pos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>Settings<sp/>position<sp/>are<sp/>stored<sp/>RELATIVE<sp/>to<sp/>the<sp/>viewport!<sp/>Whereas<sp/>runtime<sp/>ones<sp/>are<sp/>absolute<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref><sp/><sp/><sp/><sp/>Size;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref><sp/><sp/><sp/><sp/>ViewportPos;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>ViewportId;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>DockId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID<sp/>of<sp/>last<sp/>known<sp/>DockNode<sp/>(even<sp/>if<sp/>the<sp/>DockNode<sp/>is<sp/>invisible<sp/>because<sp/>it<sp/>has<sp/>only<sp/>1<sp/>active<sp/>window),<sp/>or<sp/>0<sp/>if<sp/>none.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>ClassId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID<sp/>of<sp/>window<sp/>class<sp/>if<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockOrder;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Order<sp/>of<sp/>the<sp/>last<sp/>time<sp/>the<sp/>window<sp/>was<sp/>visible<sp/>within<sp/>its<sp/>DockNode.<sp/>This<sp/>is<sp/>used<sp/>to<sp/>reorder<sp/>windows<sp/>that<sp/>are<sp/>reappearing<sp/>on<sp/>the<sp/>same<sp/>frame.<sp/>Same<sp/>value<sp/>between<sp/>windows<sp/>that<sp/>were<sp/>active<sp/>and<sp/>windows<sp/>that<sp/>were<sp/>none<sp/>are<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collapsed;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantApply;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>loaded<sp/>from<sp/>.ini<sp/>data<sp/>(to<sp/>enable<sp/>merging/loading<sp/>.ini<sp/>data<sp/>into<sp/>an<sp/>already<sp/>running<sp/>context)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window_settings" kindref="compound">ImGuiWindowSettings</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>DockOrder<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>GetName()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626" refid="struct_im_gui_settings_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref></highlight></codeline>
<codeline lineno="1627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>TypeName;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Short<sp/>description<sp/>stored<sp/>in<sp/>.ini<sp/>file.<sp/>Disallowed<sp/>characters:<sp/>&apos;[&apos;<sp/>&apos;]&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>TypeHash;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>ImHashStr(TypeName)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ClearAllFn)(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>*<sp/>handler);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>all<sp/>settings<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ReadInitFn)(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>*<sp/>handler);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read:<sp/>Called<sp/>before<sp/>reading<sp/>(in<sp/>registration<sp/>order)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ReadOpenFn)(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>*<sp/>handler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read:<sp/>Called<sp/>when<sp/>entering<sp/>into<sp/>a<sp/>new<sp/>ini<sp/>entry<sp/>e.g.<sp/>&quot;[Window][Name]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ReadLineFn)(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>*<sp/>handler,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>entry,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line);<sp/></highlight><highlight class="comment">//<sp/>Read:<sp/>Called<sp/>for<sp/>every<sp/>line<sp/>of<sp/>text<sp/>within<sp/>an<sp/>ini<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ApplyAllFn)(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>*<sp/>handler);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read:<sp/>Called<sp/>after<sp/>reading<sp/>(in<sp/>registration<sp/>order)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*WriteAllFn)(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>*<sp/>handler,<sp/><ref refid="struct_im_gui_text_buffer" kindref="compound">ImGuiTextBuffer</ref>*<sp/>out_buf);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write:<sp/>Output<sp/>every<sp/>entries<sp/>into<sp/>&apos;out_buf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserData;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>()<sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Metrics,<sp/>Debug<sp/>Tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645" refid="struct_im_gui_metrics_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_metrics_config" kindref="compound">ImGuiMetricsConfig</ref></highlight></codeline>
<codeline lineno="1646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowStackTool;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindowsRects;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindowsBeginOrder;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowTablesRects;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowDrawCmdMesh;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowDrawCmdBoundingBoxes;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowDockingNodes;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindowsRectsType;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowTablesRectsType;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_metrics_config" kindref="compound">ImGuiMetricsConfig</ref>()</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowStackTool<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindowsRects<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindowsBeginOrder<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowTablesRects<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowDrawCmdMesh<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowDrawCmdBoundingBoxes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowDockingNodes<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindowsRectsType<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowTablesRectsType<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671" refid="struct_im_gui_stack_level_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_stack_level_info" kindref="compound">ImGuiStackLevelInfo</ref></highlight></codeline>
<codeline lineno="1672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QueryFrameCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;=<sp/>1:<sp/>Query<sp/>in<sp/>progress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QuerySuccess;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obtained<sp/>result<sp/>from<sp/>DebugHookIdInfo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Desc[58];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arbitrarily<sp/>sized<sp/>buffer<sp/>to<sp/>hold<sp/>a<sp/>result<sp/>(FIXME:<sp/>could<sp/>replace<sp/>Results[]<sp/>with<sp/>a<sp/>chunk<sp/>stream?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_stack_level_info" kindref="compound">ImGuiStackLevelInfo</ref>()<sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>State<sp/>for<sp/>Stack<sp/>tool<sp/>queries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682" refid="struct_im_gui_stack_tool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_stack_tool" kindref="compound">ImGuiStackTool</ref></highlight></codeline>
<codeline lineno="1683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastActiveFrame;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StackLevel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1:<sp/>query<sp/>stack<sp/>and<sp/>resize<sp/>Results,<sp/>&gt;=<sp/>0:<sp/>individual<sp/>stack<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QueryId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID<sp/>to<sp/>query<sp/>details<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiStackLevelInfo&gt;</ref><sp/>Results;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_stack_tool" kindref="compound">ImGuiStackTool</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Generic<sp/>context<sp/>hooks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*ImGuiContextHookCallback)(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_context_hook" kindref="compound">ImGuiContextHook</ref>*<sp/>hook);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiContextHookType<sp/>{<sp/>ImGuiContextHookType_NewFramePre,<sp/>ImGuiContextHookType_NewFramePost,<sp/>ImGuiContextHookType_EndFramePre,<sp/>ImGuiContextHookType_EndFramePost,<sp/>ImGuiContextHookType_RenderPre,<sp/>ImGuiContextHookType_RenderPost,<sp/>ImGuiContextHookType_Shutdown,<sp/>ImGuiContextHookType_PendingRemoval_<sp/>};</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699" refid="struct_im_gui_context_hook" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_context_hook" kindref="compound">ImGuiContextHook</ref></highlight></codeline>
<codeline lineno="1700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HookId;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>unique<sp/>ID<sp/>assigned<sp/>by<sp/>AddContextHook()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiContextHookType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Owner;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiContextHookCallback<sp/><sp/><sp/><sp/>Callback;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserData;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context_hook" kindref="compound">ImGuiContextHook</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImGuiContext<sp/>(main<sp/>imgui<sp/>context)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714" refid="struct_im_gui_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref></highlight></codeline>
<codeline lineno="1715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialized;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontAtlasOwnedByContext;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IO.Fonts-&gt;<sp/>is<sp/>owned<sp/>by<sp/>the<sp/>ImGuiContext<sp/>and<sp/>will<sp/>be<sp/>destructed<sp/>along<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IO;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformIO;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiInputEvent&gt;</ref><sp/>InputEventsQueue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>events<sp/>which<sp/>will<sp/>be<sp/>tricked/written<sp/>into<sp/>IO<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiInputEvent&gt;</ref><sp/>InputEventsTrail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Past<sp/>input<sp/>events<sp/>processed<sp/>in<sp/>NewFrame().<sp/>This<sp/>is<sp/>to<sp/>allow<sp/>domain-specific<sp/>application<sp/>to<sp/>access<sp/>e.g<sp/>mouse/pen<sp/>trail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Style;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiConfigFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigFlagsCurrFrame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>g.IO.ConfigFlags<sp/>at<sp/>the<sp/>time<sp/>of<sp/>NewFrame()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiConfigFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigFlagsLastFrame;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Font;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Shortcut)<sp/>==<sp/>FontStack.empty()<sp/>?<sp/>IO.Font<sp/>:<sp/>FontStack.back()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Shortcut)<sp/>==<sp/>FontBaseSize<sp/>*<sp/>g.CurrentWindow-&gt;FontWindowScale<sp/>==<sp/>window-&gt;FontSize().<sp/>Text<sp/>height<sp/>for<sp/>current<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontBaseSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Shortcut)<sp/>==<sp/>IO.FontGlobalScale<sp/>*<sp/>Font-&gt;Scale<sp/>*<sp/>Font-&gt;FontSize.<sp/>Base<sp/>text<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_shared_data" kindref="compound">ImDrawListSharedData</ref><sp/><sp/><sp/><sp/>DrawListSharedData;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameCount;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameCountEnded;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameCountPlatformEnded;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameCountRendered;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WithinFrameScope;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>by<sp/>NewFrame(),<sp/>cleared<sp/>by<sp/>EndFrame()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WithinFrameScopeWithImplicitWindow;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>by<sp/>NewFrame(),<sp/>cleared<sp/>by<sp/>EndFrame()<sp/>when<sp/>the<sp/>implicit<sp/>debug<sp/>window<sp/>has<sp/>been<sp/>pushed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WithinEndChild;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>within<sp/>EndChild()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GcCompactAll;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>full<sp/>GC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestEngineHookItems;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>call<sp/>test<sp/>engine<sp/>hooks:<sp/>ImGuiTestEngineHook_ItemAdd(),<sp/>ImGuiTestEngineHook_ItemInfo(),<sp/>ImGuiTestEngineHook_Log()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestEngine;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>engine<sp/>user<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiWindow*&gt;</ref><sp/><sp/>Windows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows,<sp/>sorted<sp/>in<sp/>display<sp/>order,<sp/>back<sp/>to<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiWindow*&gt;</ref><sp/><sp/>WindowsFocusOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>windows,<sp/>sorted<sp/>in<sp/>focus<sp/>order,<sp/>back<sp/>to<sp/>front.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiWindow*&gt;</ref><sp/><sp/>WindowsTempSortBuffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>buffer<sp/>used<sp/>in<sp/>EndFrame()<sp/>to<sp/>reorder<sp/>windows<sp/>so<sp/>parents<sp/>are<sp/>kept<sp/>before<sp/>their<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiWindowStackData&gt;</ref><sp/>CurrentWindowStack;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowsById;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>window&apos;s<sp/>ImGuiID<sp/>to<sp/>ImGuiWindow*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowsActiveCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>unique<sp/>windows<sp/>submitted<sp/>by<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowsHoverPadding;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Padding<sp/>around<sp/>resizable<sp/>windows<sp/>for<sp/>which<sp/>hovering<sp/>on<sp/>counts<sp/>as<sp/>hovering<sp/>the<sp/>window<sp/>==<sp/>ImMax(style.TouchExtraPadding,<sp/>WINDOWS_HOVER_PADDING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>being<sp/>drawn<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>the<sp/>mouse<sp/>is<sp/>hovering.<sp/>Will<sp/>typically<sp/>catch<sp/>mouse<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredWindowUnderMovingWindow;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hovered<sp/>window<sp/>ignoring<sp/>MovingWindow.<sp/>Only<sp/>set<sp/>if<sp/>MovingWindow<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredDockNode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Debug]<sp/>Hovered<sp/>dock<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MovingWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>the<sp/>window<sp/>we<sp/>clicked<sp/>on<sp/>(in<sp/>order<sp/>to<sp/>preserve<sp/>focus).<sp/>The<sp/>actual<sp/>window<sp/>that<sp/>is<sp/>moved<sp/>is<sp/>generally<sp/>MovingWindow-&gt;RootWindowDockTree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelingWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>the<sp/>window<sp/>we<sp/>started<sp/>mouse-wheeling<sp/>on.<sp/>Until<sp/>a<sp/>timer<sp/>elapse<sp/>or<sp/>mouse<sp/>has<sp/>moved,<sp/>generally<sp/>keep<sp/>scrolling<sp/>the<sp/>same<sp/>window<sp/>even<sp/>if<sp/>during<sp/>the<sp/>course<sp/>of<sp/>scrolling<sp/>the<sp/>mouse<sp/>ends<sp/>up<sp/>hovering<sp/>a<sp/>child<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelingWindowRefMousePos;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelingWindowTimer;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Item/widgets<sp/>state<sp/>and<sp/>tracking<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugHookIdInfo;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>call<sp/>core<sp/>hooks:<sp/>DebugHookIdInfo()<sp/>from<sp/>GetID<sp/>functions,<sp/>used<sp/>by<sp/>Stack<sp/>Tool<sp/>[next<sp/>HoveredId/ActiveId<sp/>to<sp/>not<sp/>pull<sp/>in<sp/>an<sp/>extra<sp/>cache-line]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hovered<sp/>widget,<sp/>filled<sp/>during<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdPreviousFrame;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdAllowOverlap;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdUsingMouseWheel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hovered<sp/>widget<sp/>will<sp/>use<sp/>mouse<sp/>wheel.<sp/>Blocks<sp/>scrolling<sp/>the<sp/>underlying<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdPreviousFrameUsingMouseWheel;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdDisabled;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>least<sp/>one<sp/>widget<sp/>passed<sp/>the<sp/>rect<sp/>test,<sp/>but<sp/>has<sp/>been<sp/>discarded<sp/>by<sp/>disabled<sp/>flag<sp/>or<sp/>popup<sp/>inhibit.<sp/>May<sp/>be<sp/>true<sp/>even<sp/>if<sp/>HoveredId<sp/>==<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdTimer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Measure<sp/>contiguous<sp/>hovering<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdNotActiveTimer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Measure<sp/>contiguous<sp/>hovering<sp/>time<sp/>where<sp/>the<sp/>item<sp/>has<sp/>not<sp/>been<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Active<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdIsAlive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Active<sp/>widget<sp/>has<sp/>been<sp/>seen<sp/>this<sp/>frame<sp/>(we<sp/>can&apos;t<sp/>use<sp/>a<sp/>bool<sp/>as<sp/>the<sp/>ActiveId<sp/>may<sp/>change<sp/>within<sp/>the<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdTimer;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdIsJustActivated;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>at<sp/>the<sp/>time<sp/>of<sp/>activation<sp/>for<sp/>one<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdAllowOverlap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Active<sp/>widget<sp/>allows<sp/>another<sp/>widget<sp/>to<sp/>steal<sp/>active<sp/>id<sp/>(generally<sp/>for<sp/>overlapping<sp/>widgets,<sp/>but<sp/>not<sp/>always)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdNoClearOnFocusLoss;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>losing<sp/>active<sp/>id<sp/>if<sp/>the<sp/>active<sp/>id<sp/>window<sp/>gets<sp/>unfocused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdHasBeenPressedBefore;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>whether<sp/>the<sp/>active<sp/>id<sp/>led<sp/>to<sp/>a<sp/>press<sp/>(this<sp/>is<sp/>to<sp/>allow<sp/>changing<sp/>between<sp/>PressOnClick<sp/>and<sp/>PressOnRelease<sp/>without<sp/>pressing<sp/>twice).<sp/>Used<sp/>by<sp/>range_select<sp/>branch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdHasBeenEditedBefore;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Was<sp/>the<sp/>value<sp/>associated<sp/>to<sp/>the<sp/>widget<sp/>Edited<sp/>over<sp/>the<sp/>course<sp/>of<sp/>the<sp/>Active<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdHasBeenEditedThisFrame;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdUsingMouseWheel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Active<sp/>widget<sp/>will<sp/>want<sp/>to<sp/>read<sp/>mouse<sp/>wheel.<sp/>Blocks<sp/>scrolling<sp/>the<sp/>underlying<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdUsingNavDirMask;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Active<sp/>widget<sp/>will<sp/>want<sp/>to<sp/>read<sp/>those<sp/>nav<sp/>move<sp/>requests<sp/>(e.g.<sp/>can<sp/>activate<sp/>a<sp/>button<sp/>and<sp/>move<sp/>away<sp/>from<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdUsingNavInputMask;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Active<sp/>widget<sp/>will<sp/>want<sp/>to<sp/>read<sp/>those<sp/>nav<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_bit_array" kindref="compound">ImBitArray&lt;ImGuiKey_NamedKey_COUNT&gt;</ref><sp/>ActiveIdUsingKeyInputMask;<sp/></highlight><highlight class="comment">//<sp/>Active<sp/>widget<sp/>will<sp/>want<sp/>to<sp/>read<sp/>those<sp/>key<sp/>inputs.<sp/>When<sp/>we<sp/>grow<sp/>the<sp/>ImGuiKey<sp/>enum<sp/>we&apos;ll<sp/>need<sp/>to<sp/>either<sp/>to<sp/>order<sp/>the<sp/>enum<sp/>to<sp/>make<sp/>useful<sp/>keys<sp/>come<sp/>first,<sp/>either<sp/>redesign<sp/>this<sp/>into<sp/>e.g.<sp/>a<sp/>small<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdClickOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clicked<sp/>offset<sp/>from<sp/>upper-left<sp/>corner,<sp/>if<sp/>applicable<sp/>(currently<sp/>only<sp/>set<sp/>by<sp/>ButtonBehavior)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdWindow;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdSource;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Activating<sp/>with<sp/>mouse<sp/>or<sp/>nav<sp/>(gamepad/keyboard)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdMouseButton;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrame;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrameIsAlive;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrameHasBeenEditedBefore;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrameWindow;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastActiveId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>last<sp/>non-zero<sp/>ActiveId,<sp/>useful<sp/>for<sp/>animation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastActiveIdTimer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>last<sp/>non-zero<sp/>ActiveId<sp/>timer<sp/>since<sp/>the<sp/>beginning<sp/>of<sp/>activation,<sp/>useful<sp/>for<sp/>animation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>window/item<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentItemFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>g.ItemFlagsStack.back()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_next_item_data" kindref="compound">ImGuiNextItemData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextItemData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>SetNextItem**<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastItemData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>last<sp/>submitted<sp/>item<sp/>(setup<sp/>by<sp/>ItemAdd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_next_window_data" kindref="compound">ImGuiNextWindowData</ref><sp/><sp/><sp/><sp/><sp/>NextWindowData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>SetNextWindow**<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shared<sp/>stacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiColorMod&gt;</ref><sp/>ColorStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>for<sp/>PushStyleColor()/PopStyleColor()<sp/>-<sp/>inherited<sp/>by<sp/>Begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiStyleMod&gt;</ref><sp/>StyleVarStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>for<sp/>PushStyleVar()/PopStyleVar()<sp/>-<sp/>inherited<sp/>by<sp/>Begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImFont*&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>for<sp/>PushFont()/PopFont()<sp/>-<sp/>inherited<sp/>by<sp/>Begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiID&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusScopeStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>for<sp/>PushFocusScope()/PopFocusScope()<sp/>-<sp/>not<sp/>inherited<sp/>by<sp/>Begin(),<sp/>unless<sp/>child<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiItemFlags&gt;</ref>ItemFlagsStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>for<sp/>PushItemFlag()/PopItemFlag()<sp/>-<sp/>inherited<sp/>by<sp/>Begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiGroupData&gt;</ref>GroupStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>for<sp/>BeginGroup()/EndGroup()<sp/>-<sp/>not<sp/>inherited<sp/>by<sp/>Begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiPopupData&gt;</ref>OpenPopupStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>popups<sp/>are<sp/>open<sp/>(persistent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiPopupData&gt;</ref>BeginPopupStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>level<sp/>of<sp/>BeginPopup()<sp/>we<sp/>are<sp/>in<sp/>(reset<sp/>every<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginMenuCount;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Viewports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiViewportP*&gt;</ref><sp/>Viewports;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Active<sp/>viewports<sp/>(always<sp/>1+,<sp/>and<sp/>generally<sp/>1<sp/>unless<sp/>multi-viewports<sp/>are<sp/>enabled).<sp/>Each<sp/>viewports<sp/>hold<sp/>their<sp/>copy<sp/>of<sp/>ImDrawData.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentDpiScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>CurrentViewport-&gt;DpiScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentViewport;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>track<sp/>changes<sp/>of<sp/>viewport<sp/>(happening<sp/>in<sp/>Begin)<sp/>so<sp/>we<sp/>can<sp/>call<sp/>Platform_OnChangedViewport()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseViewport;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseLastHoveredViewport;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>known<sp/>viewport<sp/>that<sp/>was<sp/>hovered<sp/>by<sp/>mouse<sp/>(even<sp/>if<sp/>we<sp/>are<sp/>not<sp/>hovering<sp/>any<sp/>viewport<sp/>any<sp/>more)<sp/>+<sp/>honoring<sp/>the<sp/>_NoInputs<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformLastFocusedViewportId;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_monitor" kindref="compound">ImGuiPlatformMonitor</ref><sp/><sp/><sp/><sp/>FallbackMonitor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Virtual<sp/>monitor<sp/>used<sp/>as<sp/>fallback<sp/>if<sp/>backend<sp/>doesn&apos;t<sp/>provide<sp/>monitor<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewportFrontMostStampCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Every<sp/>time<sp/>the<sp/>front-most<sp/>window<sp/>changes,<sp/>we<sp/>stamp<sp/>its<sp/>viewport<sp/>with<sp/>an<sp/>incrementing<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gamepad/keyboard<sp/>Navigation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Focused<sp/>window<sp/>for<sp/>navigation.<sp/>Could<sp/>be<sp/>called<sp/>&apos;FocusWindow&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Focused<sp/>item<sp/>for<sp/>navigation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavFocusScopeId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identify<sp/>a<sp/>selection<sp/>scope<sp/>(selection<sp/>code<sp/>often<sp/>wants<sp/>to<sp/>&quot;clear<sp/>other<sp/>items&quot;<sp/>when<sp/>landing<sp/>on<sp/>an<sp/>item<sp/>of<sp/>the<sp/>selection<sp/>set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavActivateId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~~<sp/>(g.ActiveId<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>IsNavInputPressed(ImGuiNavInput_Activate)<sp/>?<sp/>NavId<sp/>:<sp/>0,<sp/>also<sp/>set<sp/>when<sp/>calling<sp/>ActivateItem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavActivateDownId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~~<sp/>IsNavInputDown(ImGuiNavInput_Activate)<sp/>?<sp/>NavId<sp/>:<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavActivatePressedId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~~<sp/>IsNavInputPressed(ImGuiNavInput_Activate)<sp/>?<sp/>NavId<sp/>:<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavActivateInputId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~~<sp/>IsNavInputPressed(ImGuiNavInput_Input)<sp/>?<sp/>NavId<sp/>:<sp/>0;<sp/>ImGuiActivateFlags_PreferInput<sp/>will<sp/>be<sp/>set<sp/>and<sp/>NavActivateId<sp/>will<sp/>be<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiActivateFlags<sp/><sp/><sp/><sp/><sp/><sp/>NavActivateFlags;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavJustMovedToId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>navigated<sp/>to<sp/>this<sp/>id<sp/>(result<sp/>of<sp/>a<sp/>successfully<sp/>MoveRequest).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavJustMovedToFocusScopeId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>navigated<sp/>to<sp/>this<sp/>focus<sp/>scope<sp/>id<sp/>(result<sp/>of<sp/>a<sp/>successfully<sp/>MoveRequest).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiKeyModFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavJustMovedToKeyMods;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavNextActivateId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>by<sp/>ActivateItem(),<sp/>queued<sp/>until<sp/>next<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiActivateFlags<sp/><sp/><sp/><sp/><sp/><sp/>NavNextActivateFlags;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputSource<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInputSource;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keyboard<sp/>or<sp/>Gamepad<sp/>mode?<sp/>THIS<sp/>WILL<sp/>ONLY<sp/>BE<sp/>None<sp/>or<sp/>NavGamepad<sp/>or<sp/>NavKeyboard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavLayer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLayer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Layer<sp/>we<sp/>are<sp/>navigating<sp/>on.<sp/>For<sp/>now<sp/>the<sp/>system<sp/>is<sp/>hard-coded<sp/>for<sp/>0=main<sp/>contents<sp/>and<sp/>1=menu/title<sp/>bar,<sp/>may<sp/>expose<sp/>layers<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavIdIsAlive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nav<sp/>widget<sp/>has<sp/>been<sp/>seen<sp/>this<sp/>frame<sp/>~~<sp/>NavRectRel<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMousePosDirty;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>we<sp/>will<sp/>update<sp/>mouse<sp/>position<sp/>if<sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NavEnableSetMousePos)<sp/>if<sp/>set<sp/>(NB:<sp/>this<sp/>not<sp/>enabled<sp/>by<sp/>default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavDisableHighlight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>user<sp/>starts<sp/>using<sp/>mouse,<sp/>we<sp/>hide<sp/>gamepad/keyboard<sp/>highlight<sp/>(NB:<sp/>but<sp/>they<sp/>are<sp/>still<sp/>available,<sp/>which<sp/>is<sp/>why<sp/>NavDisableHighlight<sp/>isn&apos;t<sp/>always<sp/>!=<sp/>NavDisableMouseHover)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavDisableMouseHover;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>user<sp/>starts<sp/>using<sp/>gamepad/keyboard,<sp/>we<sp/>hide<sp/>mouse<sp/>hovering<sp/>highlight<sp/>until<sp/>mouse<sp/>is<sp/>touched<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Navigation:<sp/>Init<sp/>&amp;<sp/>Move<sp/>Requests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavAnyRequest;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~~<sp/>NavMoveRequest<sp/>||<sp/>NavInitRequest<sp/>this<sp/>is<sp/>to<sp/>perform<sp/>early<sp/>out<sp/>in<sp/>ItemAdd()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitRequest;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>request<sp/>for<sp/>appearing<sp/>window<sp/>to<sp/>select<sp/>first<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitRequestFromMove;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitResultId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>request<sp/>result<sp/>(first<sp/>item<sp/>of<sp/>the<sp/>window,<sp/>or<sp/>one<sp/>for<sp/>which<sp/>SetItemDefaultFocus()<sp/>was<sp/>called)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitResultRectRel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>request<sp/>result<sp/>rectangle<sp/>(relative<sp/>to<sp/>parent<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveSubmitted;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>request<sp/>submitted,<sp/>will<sp/>process<sp/>result<sp/>on<sp/>next<sp/>NewFrame()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveScoringItems;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>request<sp/>submitted,<sp/>still<sp/>scoring<sp/>incoming<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveForwardToNextFrame;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavMoveFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveFlags;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiScrollFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveScrollFlags;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiKeyModFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveKeyMods;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveDir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Direction<sp/>of<sp/>the<sp/>move<sp/>request<sp/>(left/right/up/down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveDirForDebug;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveClipDir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-NAV:<sp/>Describe<sp/>the<sp/>purpose<sp/>of<sp/>this<sp/>better.<sp/>Might<sp/>want<sp/>to<sp/>rename?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavScoringRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rectangle<sp/>used<sp/>for<sp/>scoring,<sp/>in<sp/>screen<sp/>space.<sp/>Based<sp/>of<sp/>window-&gt;NavRectRel[],<sp/>modified<sp/>for<sp/>directional<sp/>navigation<sp/>scoring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavScoringNoClipRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>nav<sp/>operations<sp/>(such<sp/>as<sp/>PageUp/PageDown)<sp/>enforce<sp/>a<sp/>region<sp/>which<sp/>clipper<sp/>will<sp/>attempt<sp/>to<sp/>always<sp/>keep<sp/>submitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavScoringDebugCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Metrics<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavTabbingDir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generally<sp/>-1<sp/>or<sp/>+1,<sp/>0<sp/>when<sp/>tabbing<sp/>without<sp/>a<sp/>nav<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavTabbingCounter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;0<sp/>when<sp/>counting<sp/>items<sp/>for<sp/>tabbing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveResultLocal;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Best<sp/>move<sp/>request<sp/>candidate<sp/>within<sp/>NavWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveResultLocalVisible;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Best<sp/>move<sp/>request<sp/>candidate<sp/>within<sp/>NavWindow<sp/>that<sp/>are<sp/>mostly<sp/>visible<sp/>(when<sp/>using<sp/>ImGuiNavMoveFlags_AlsoScoreVisibleSet<sp/>flag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveResultOther;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Best<sp/>move<sp/>request<sp/>candidate<sp/>within<sp/>NavWindow&apos;s<sp/>flattened<sp/>hierarchy<sp/>(when<sp/>using<sp/>ImGuiWindowFlags_NavFlattened<sp/>flag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavTabbingResultFirst;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>tabbing<sp/>request<sp/>candidate<sp/>within<sp/>NavWindow<sp/>and<sp/>flattened<sp/>hierarchy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Navigation:<sp/>Windowing<sp/>(CTRL+TAB<sp/>for<sp/>list,<sp/>or<sp/>Menu<sp/>button<sp/>+<sp/>keys<sp/>or<sp/>directional<sp/>pads<sp/>to<sp/>move/resize)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingTarget;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>window<sp/>when<sp/>doing<sp/>CTRL+Tab<sp/>(or<sp/>Pad<sp/>Menu<sp/>+<sp/>FocusPrev/Next),<sp/>this<sp/>window<sp/>is<sp/>temporarily<sp/>displayed<sp/>top-most!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingTargetAnim;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>of<sp/>last<sp/>valid<sp/>NavWindowingTarget<sp/>until<sp/>DimBgRatio<sp/>and<sp/>NavWindowingHighlightAlpha<sp/>becomes<sp/>0.0f,<sp/>so<sp/>the<sp/>fade-out<sp/>can<sp/>stay<sp/>on<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingListWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>window<sp/>actually<sp/>listing<sp/>the<sp/>CTRL+Tab<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingTimer;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingHighlightAlpha;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingToggleLayer;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DimBgRatio;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.0..1.0<sp/>animation<sp/>when<sp/>fading<sp/>in<sp/>a<sp/>dimming<sp/>background<sp/>(for<sp/>modal<sp/>window<sp/>and<sp/>CTRL+TAB<sp/>list)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiMouseCursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseCursor;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>and<sp/>Drop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropActive;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropWithinSource;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>within<sp/>a<sp/>BeginDragDropXXX/EndDragDropXXX<sp/>block<sp/>for<sp/>a<sp/>drag<sp/>source.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropWithinTarget;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>within<sp/>a<sp/>BeginDragDropXXX/EndDragDropXXX<sp/>block<sp/>for<sp/>a<sp/>drag<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDragDropFlags<sp/><sp/><sp/><sp/><sp/><sp/>DragDropSourceFlags;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropSourceFrameCount;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropMouseButton;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_payload" kindref="compound">ImGuiPayload</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropPayload;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropTargetRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>rectangle<sp/>of<sp/>current<sp/>target<sp/>candidate<sp/>(we<sp/>favor<sp/>small<sp/>targets<sp/>when<sp/>overlapping)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropTargetId;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDragDropFlags<sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptFlags;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptIdCurrRectSurface;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>item<sp/>surface<sp/>(we<sp/>resolve<sp/>overlapping<sp/>targets<sp/>by<sp/>prioritizing<sp/>the<sp/>smaller<sp/>surface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptIdCurr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>item<sp/>id<sp/>(set<sp/>at<sp/>the<sp/>time<sp/>of<sp/>accepting<sp/>the<sp/>payload)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptIdPrev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>item<sp/>id<sp/>from<sp/>previous<sp/>frame<sp/>(we<sp/>need<sp/>to<sp/>store<sp/>this<sp/>to<sp/>allow<sp/>for<sp/>overlapping<sp/>drag<sp/>and<sp/>drop<sp/>targets)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptFrameCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>time<sp/>a<sp/>target<sp/>expressed<sp/>a<sp/>desire<sp/>to<sp/>accept<sp/>the<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropHoldJustPressedId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>holding<sp/>a<sp/>payload<sp/>just<sp/>made<sp/>ButtonBehavior()<sp/>return<sp/>a<sp/>press.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;unsigned char&gt;</ref><sp/>DragDropPayloadBufHeap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>expose<sp/>the<sp/>ImVector&lt;&gt;<sp/>directly,<sp/>ImGuiPayload<sp/>only<sp/>holds<sp/>pointer+size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropPayloadBufLocal[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>buffer<sp/>for<sp/>small<sp/>payloads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clipper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipperTempDataStacked;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiListClipperData&gt;</ref><sp/><sp/>ClipperTempData;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentTable;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TablesTempDataStacked;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>table<sp/>data<sp/>size<sp/>(because<sp/>we<sp/>leave<sp/>previous<sp/>instances<sp/>undestructed,<sp/>we<sp/>generally<sp/>don&apos;t<sp/>use<sp/>TablesTempData.Size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiTableTempData&gt;</ref><sp/><sp/><sp/><sp/>TablesTempData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>table<sp/>data<sp/>(buffers<sp/>reused/shared<sp/>across<sp/>instances,<sp/>support<sp/>nesting)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_pool" kindref="compound">ImPool&lt;ImGuiTable&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tables;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Persistent<sp/>table<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;float&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TablesLastTimeActive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>used<sp/>timestamp<sp/>of<sp/>each<sp/>tables<sp/>(SOA,<sp/>for<sp/>efficient<sp/>GC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImDrawChannel&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawChannelsTempMergeBuffer;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tab<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentTabBar;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_pool" kindref="compound">ImPool&lt;ImGuiTabBar&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBars;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiPtrOrIndex&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentTabBarStack;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiShrinkWidthItem&gt;</ref><sp/><sp/>ShrinkWidthBuffer;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Widget<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseLastValidPos;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref><sp/><sp/><sp/><sp/><sp/>InputTextState;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputTextPasswordFont;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempInputId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>text<sp/>input<sp/>when<sp/>CTRL+clicking<sp/>on<sp/>a<sp/>slider,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/><sp/><sp/><sp/><sp/>ColorEditOptions;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>user<sp/>options<sp/>for<sp/>color<sp/>edit<sp/>widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditLastHue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>last<sp/>Hue<sp/>associated<sp/>to<sp/>LastColor,<sp/>so<sp/>we<sp/>can<sp/>restore<sp/>Hue<sp/>in<sp/>lossy<sp/>RGB&lt;&gt;HSV<sp/>round<sp/>trips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditLastSat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>last<sp/>Saturation<sp/>associated<sp/>to<sp/>LastColor,<sp/>so<sp/>we<sp/>can<sp/>restore<sp/>Saturation<sp/>in<sp/>lossy<sp/>RGB&lt;&gt;HSV<sp/>round<sp/>trips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditLastColor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RGB<sp/>value<sp/>with<sp/>alpha<sp/>set<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorPickerRef;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial/reference<sp/>color<sp/>at<sp/>the<sp/>time<sp/>of<sp/>opening<sp/>the<sp/>color<sp/>picker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_combo_preview_data" kindref="compound">ImGuiComboPreviewData</ref><sp/><sp/><sp/>ComboPreviewData;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SliderCurrentAccum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulated<sp/>slider<sp/>delta<sp/>when<sp/>using<sp/>navigation<sp/>controls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SliderCurrentAccumDirty;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>the<sp/>accumulated<sp/>slider<sp/>delta<sp/>changed<sp/>since<sp/>last<sp/>time<sp/>we<sp/>tried<sp/>to<sp/>apply<sp/>it?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragCurrentAccumDirty;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragCurrentAccum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulator<sp/>for<sp/>dragging<sp/>modification.<sp/>Always<sp/>high-precision,<sp/>not<sp/>rounded<sp/>by<sp/>end-user<sp/>precision<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragSpeedDefaultRatio;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>speed<sp/>==<sp/>0.0f,<sp/>uses<sp/>(max-min)<sp/>*<sp/>DragSpeedDefaultRatio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollbarClickDeltaToGrabCenter;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>between<sp/>mouse<sp/>and<sp/>center<sp/>of<sp/>grab<sp/>box,<sp/>normalized<sp/>in<sp/>parent<sp/>space.<sp/>Use<sp/>storage?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisabledAlphaBackup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>for<sp/>style.Alpha<sp/>for<sp/>BeginDisabled()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisabledStackSize;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TooltipOverrideCount;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TooltipSlowDelay;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>before<sp/>slow<sp/>tooltips<sp/>appears<sp/>(FIXME:<sp/>This<sp/>is<sp/>temporary<sp/>until<sp/>we<sp/>merge<sp/>in<sp/>tooltip<sp/>timer+priority<sp/>work)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;char&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipboardHandlerData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>custom<sp/>clipboard<sp/>handler<sp/>is<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiID&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MenusIdSubmittedThisFrame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>list<sp/>of<sp/>menu<sp/>IDs<sp/>that<sp/>were<sp/>rendered<sp/>at<sp/>least<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Platform<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_ime_data" kindref="compound">ImGuiPlatformImeData</ref><sp/><sp/><sp/><sp/>PlatformImeData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>updated<sp/>by<sp/>current<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_ime_data" kindref="compound">ImGuiPlatformImeData</ref><sp/><sp/><sp/><sp/>PlatformImeDataPrev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previous<sp/>frame<sp/>data<sp/>(when<sp/>changing<sp/>we<sp/>will<sp/>call<sp/>io.SetPlatformImeDataFn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformImeViewport;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformLocaleDecimalPoint;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;.&apos;<sp/>or<sp/>*localeconv()-&gt;decimal_point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>could<sp/>provide<sp/>an<sp/>API<sp/>to<sp/>register<sp/>one<sp/>slot<sp/>in<sp/>an<sp/>array<sp/>held<sp/>in<sp/>ImGuiContext?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_context" kindref="compound">ImGuiDockContext</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContext;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsLoaded;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsDirtyTimer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>.ini<sp/>Settings<sp/>to<sp/>memory<sp/>when<sp/>time<sp/>reaches<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_text_buffer" kindref="compound">ImGuiTextBuffer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsIniData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>memory<sp/>.ini<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiSettingsHandler&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/>SettingsHandlers;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>.ini<sp/>settings<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_chunk_stream" kindref="compound">ImChunkStream&lt;ImGuiWindowSettings&gt;</ref><sp/><sp/>SettingsWindows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiWindow<sp/>.ini<sp/>settings<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_chunk_stream" kindref="compound">ImChunkStream&lt;ImGuiTableSettings&gt;</ref><sp/><sp/><sp/>SettingsTables;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiTable<sp/>.ini<sp/>settings<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiContextHook&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hooks;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hooks<sp/>for<sp/>extensions<sp/>(e.g.<sp/>test<sp/>engine)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HookIdNext;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>available<sp/>HookId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capture/Logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogEnabled;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>capturing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLogType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capture<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFileHandle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>!=<sp/>NULL<sp/>log<sp/>to<sp/>stdout/<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_text_buffer" kindref="compound">ImGuiTextBuffer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogBuffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulation<sp/>buffer<sp/>when<sp/>log<sp/>to<sp/>clipboard.<sp/>This<sp/>is<sp/>pointer<sp/>so<sp/>our<sp/>GImGui<sp/>static<sp/>constructor<sp/>doesn&apos;t<sp/>call<sp/>heap<sp/>allocators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogNextPrefix;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogNextSuffix;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogLinePosY;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogLineFirstItem;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogDepthRef;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogDepthToExpand;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogDepthToExpandDefault;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default/stored<sp/>value<sp/>for<sp/>LogDepthMaxExpand<sp/>if<sp/>not<sp/>specified<sp/>in<sp/>the<sp/>LogXXX<sp/>function<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Debug<sp/>Tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugItemPickerActive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Item<sp/>picker<sp/>is<sp/>active<sp/>(started<sp/>with<sp/>DebugStartItemPicker())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugItemPickerBreakId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>call<sp/>IM_DEBUG_BREAK()<sp/>when<sp/>encountering<sp/>this<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_metrics_config" kindref="compound">ImGuiMetricsConfig</ref><sp/><sp/><sp/><sp/><sp/><sp/>DebugMetricsConfig;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_stack_tool" kindref="compound">ImGuiStackTool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugStackTool;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Misc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FramerateSecPerFrame[120];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>estimate<sp/>of<sp/>framerate<sp/>for<sp/>user<sp/>over<sp/>the<sp/>last<sp/>2<sp/>seconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FramerateSecPerFrameIdx;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FramerateSecPerFrameCount;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FramerateSecPerFrameAccum;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantCaptureMouseNextFrame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicit<sp/>capture<sp/>via<sp/>CaptureKeyboardFromApp()/CaptureMouseFromApp()<sp/>sets<sp/>those<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantCaptureKeyboardNextFrame;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantTextInputNextFrame;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempBuffer[1024<sp/>*<sp/>3<sp/>+<sp/>1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>text<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>shared_font_atlas)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigFlagsCurrFrame<sp/>=<sp/>ConfigFlagsLastFrame<sp/>=<sp/>ImGuiConfigFlags_None;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontAtlasOwnedByContext<sp/>=<sp/>shared_font_atlas<sp/>?<sp/>false<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Font<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontSize<sp/>=<sp/>FontBaseSize<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IO.Fonts<sp/>=<sp/>shared_font_atlas<sp/>?<sp/>shared_font_atlas<sp/>:<sp/>IM_NEW(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>)();</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameCountEnded<sp/>=<sp/>FrameCountPlatformEnded<sp/>=<sp/>FrameCountRendered<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WithinFrameScope<sp/>=<sp/>WithinFrameScopeWithImplicitWindow<sp/>=<sp/>WithinEndChild<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GcCompactAll<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestEngineHookItems<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestEngine<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowsActiveCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredWindowUnderMovingWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredDockNode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MovingWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelingWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelingWindowTimer<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugHookIdInfo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredId<sp/>=<sp/>HoveredIdPreviousFrame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdAllowOverlap<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdUsingMouseWheel<sp/>=<sp/>HoveredIdPreviousFrameUsingMouseWheel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdDisabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredIdTimer<sp/>=<sp/>HoveredIdNotActiveTimer<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdIsAlive<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdTimer<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdIsJustActivated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdAllowOverlap<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdNoClearOnFocusLoss<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdHasBeenPressedBefore<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdHasBeenEditedBefore<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdHasBeenEditedThisFrame<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdUsingMouseWheel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdUsingNavDirMask<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdUsingNavInputMask<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdUsingKeyInputMask.ClearAllBits();</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdClickOffset<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdSource<sp/>=<sp/>ImGuiInputSource_None;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdMouseButton<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrameIsAlive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrameHasBeenEditedBefore<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveIdPreviousFrameWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastActiveId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastActiveIdTimer<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentItemFlags<sp/>=<sp/>ImGuiItemFlags_None;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginMenuCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentDpiScale<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentViewport<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseViewport<sp/>=<sp/>MouseLastHoveredViewport<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformLastFocusedViewportId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewportFrontMostStampCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavId<sp/>=<sp/>NavFocusScopeId<sp/>=<sp/>NavActivateId<sp/>=<sp/>NavActivateDownId<sp/>=<sp/>NavActivatePressedId<sp/>=<sp/>NavActivateInputId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavJustMovedToId<sp/>=<sp/>NavJustMovedToFocusScopeId<sp/>=<sp/>NavNextActivateId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavActivateFlags<sp/>=<sp/>NavNextActivateFlags<sp/>=<sp/>ImGuiActivateFlags_None;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavJustMovedToKeyMods<sp/>=<sp/>ImGuiKeyModFlags_None;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInputSource<sp/>=<sp/>ImGuiInputSource_None;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLayer<sp/>=<sp/>ImGuiNavLayer_Main;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavIdIsAlive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMousePosDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavDisableHighlight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavDisableMouseHover<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavAnyRequest<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitRequest<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitRequestFromMove<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitResultId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveSubmitted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveScoringItems<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveForwardToNextFrame<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveFlags<sp/>=<sp/>ImGuiNavMoveFlags_None;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveScrollFlags<sp/>=<sp/>ImGuiScrollFlags_None;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveKeyMods<sp/>=<sp/>ImGuiKeyModFlags_None;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveDir<sp/>=<sp/>NavMoveDirForDebug<sp/>=<sp/>NavMoveClipDir<sp/>=<sp/>ImGuiDir_None;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavScoringDebugCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavTabbingDir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavTabbingCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingTarget<sp/>=<sp/>NavWindowingTargetAnim<sp/>=<sp/>NavWindowingListWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingTimer<sp/>=<sp/>NavWindowingHighlightAlpha<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavWindowingToggleLayer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DimBgRatio<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseCursor<sp/>=<sp/>ImGuiMouseCursor_Arrow;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropActive<sp/>=<sp/>DragDropWithinSource<sp/>=<sp/>DragDropWithinTarget<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropSourceFlags<sp/>=<sp/>ImGuiDragDropFlags_None;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropSourceFrameCount<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropMouseButton<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropTargetId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptFlags<sp/>=<sp/>ImGuiDragDropFlags_None;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptIdCurrRectSurface<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptIdPrev<sp/>=<sp/>DragDropAcceptIdCurr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropAcceptFrameCount<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragDropHoldJustPressedId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(DragDropPayloadBufLocal,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DragDropPayloadBufLocal));</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipperTempDataStacked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentTable<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TablesTempDataStacked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentTabBar<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempInputId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditOptions<sp/>=<sp/>ImGuiColorEditFlags_DefaultOptions_;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditLastHue<sp/>=<sp/>ColorEditLastSat<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditLastColor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SliderCurrentAccum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SliderCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragCurrentAccum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragSpeedDefaultRatio<sp/>=<sp/>1.0f<sp/>/<sp/>100.0f;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisabledAlphaBackup<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisabledStackSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollbarClickDeltaToGrabCenter<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TooltipOverrideCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TooltipSlowDelay<sp/>=<sp/>0.50f;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformImeData.InputPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformImeDataPrev.InputPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-1.0f,<sp/>-1.0f);<sp/></highlight><highlight class="comment">//<sp/>Different<sp/>to<sp/>ensure<sp/>initial<sp/>submission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformImeViewport<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlatformLocaleDecimalPoint<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsLoaded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsDirtyTimer<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HookIdNext<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogType<sp/>=<sp/>ImGuiLogType_None;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogNextPrefix<sp/>=<sp/>LogNextSuffix<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogLinePosY<sp/>=<sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogLineFirstItem<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogDepthRef<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogDepthToExpand<sp/>=<sp/>LogDepthToExpandDefault<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugItemPickerActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugItemPickerBreakId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(FramerateSecPerFrame,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FramerateSecPerFrame));</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FramerateSecPerFrameIdx<sp/>=<sp/>FramerateSecPerFrameCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FramerateSecPerFrameAccum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantCaptureMouseNextFrame<sp/>=<sp/>WantCaptureKeyboardNextFrame<sp/>=<sp/>WantTextInputNextFrame<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(TempBuffer,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TempBuffer));</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImGuiWindowTempData,<sp/>ImGuiWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transient<sp/>per-window<sp/>data,<sp/>reset<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>frame.<sp/>This<sp/>used<sp/>to<sp/>be<sp/>called<sp/>ImGuiDrawContext,<sp/>hence<sp/>the<sp/>DC<sp/>variable<sp/>name<sp/>in<sp/>ImGuiWindow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(That&apos;s<sp/>theory,<sp/>in<sp/>practice<sp/>the<sp/>delimitation<sp/>between<sp/>ImGuiWindow<sp/>and<sp/>ImGuiWindowTempData<sp/>is<sp/>quite<sp/>tenuous<sp/>and<sp/>could<sp/>be<sp/>reconsidered..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(This<sp/>doesn&apos;t<sp/>need<sp/>a<sp/>constructor<sp/>because<sp/>we<sp/>zero-clear<sp/>it<sp/>as<sp/>part<sp/>of<sp/>ImGuiWindow<sp/>and<sp/>all<sp/>frame-temporary<sp/>data<sp/>are<sp/>setup<sp/>on<sp/>Begin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153" refid="struct_im_gui_window_temp_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_window_temp_data" kindref="compound">ImGuiWindowTempData</ref></highlight></codeline>
<codeline lineno="2154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>emitting<sp/>position,<sp/>in<sp/>absolute<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorPosPrevLine;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorStartPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>position<sp/>after<sp/>Begin(),<sp/>generally<sp/>~<sp/>window<sp/>position<sp/>+<sp/>WindowPadding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorMaxPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>implicitly<sp/>calculate<sp/>ContentSize<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>next<sp/>frame,<sp/>for<sp/>scrolling<sp/>range<sp/>and<sp/>auto-resize.<sp/>Always<sp/>growing<sp/>during<sp/>the<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdealMaxPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>implicitly<sp/>calculate<sp/>ContentSizeIdeal<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>next<sp/>frame,<sp/>for<sp/>auto-resize<sp/>only.<sp/>Always<sp/>growing<sp/>during<sp/>the<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrLineSize;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevLineSize;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrLineTextBaseOffset;<sp/></highlight><highlight class="comment">//<sp/>Baseline<sp/>offset<sp/>(0.0f<sp/>by<sp/>default<sp/>on<sp/>a<sp/>new<sp/>line,<sp/>generally<sp/>==<sp/>style.FramePadding.y<sp/>when<sp/>a<sp/>framed<sp/>item<sp/>has<sp/>been<sp/>added).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevLineTextBaseOffset;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indentation<sp/>/<sp/>start<sp/>position<sp/>from<sp/>left<sp/>of<sp/>window<sp/>(increased<sp/>by<sp/>TreePush/TreePop,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>to<sp/>the<sp/>current<sp/>column<sp/>(if<sp/>ColumnsCurrent<sp/>&gt;<sp/>0).<sp/>FIXME:<sp/>This<sp/>and<sp/>the<sp/>above<sp/>should<sp/>be<sp/>a<sp/>stack<sp/>to<sp/>allow<sp/>use<sp/>cases<sp/>like<sp/>Tree-&gt;Column-&gt;Tree.<sp/>Need<sp/>revamp<sp/>columns<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GroupOffset;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorStartPosLossyness;</highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>loss<sp/>of<sp/>precision<sp/>of<sp/>CursorStartPos<sp/>due<sp/>to<sp/>really<sp/>large<sp/>scrolling<sp/>amount.<sp/>This<sp/>is<sp/>used<sp/>by<sp/>clipper<sp/>to<sp/>compensentate<sp/>and<sp/>fix<sp/>the<sp/>most<sp/>common<sp/>use<sp/>case<sp/>of<sp/>large<sp/>scroll<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keyboard/Gamepad<sp/>navigation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavLayer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLayerCurrent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>layer,<sp/>0..31<sp/>(we<sp/>currently<sp/>only<sp/>use<sp/>0..1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLayersActiveMask;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>layers<sp/>have<sp/>been<sp/>written<sp/>to<sp/>(result<sp/>from<sp/>previous<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLayersActiveMaskNext;</highlight><highlight class="comment">//<sp/>Which<sp/>layers<sp/>have<sp/>been<sp/>written<sp/>to<sp/>(accumulator<sp/>for<sp/>current<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavFocusScopeIdCurrent;<sp/></highlight><highlight class="comment">//<sp/>Current<sp/>focus<sp/>scope<sp/>ID<sp/>while<sp/>appending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavHideHighlightOneFrame;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavHasScroll;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>scrolling<sp/>can<sp/>be<sp/>used<sp/>(ScrollMax<sp/>&gt;<sp/>0.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Miscellaneous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MenuBarAppending;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Remove<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MenuBarOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MenuBarOffset.x<sp/>is<sp/>sort<sp/>of<sp/>equivalent<sp/>of<sp/>a<sp/>per-layer<sp/>CursorPos.x,<sp/>saved/restored<sp/>as<sp/>we<sp/>switch<sp/>to<sp/>the<sp/>menu<sp/>bar.<sp/>The<sp/>only<sp/>situation<sp/>when<sp/>MenuBarOffset.y<sp/>is<sp/>&gt;<sp/>0<sp/>if<sp/>when<sp/>(SafeAreaPadding.y<sp/>&gt;<sp/>FramePadding.y),<sp/>often<sp/>used<sp/>on<sp/>TVs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_menu_columns" kindref="compound">ImGuiMenuColumns</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MenuColumns;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simplified<sp/>columns<sp/>storage<sp/>for<sp/>menu<sp/>items<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeDepth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>tree<sp/>depth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeJumpToParentOnPopMask;<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>a<sp/>copy<sp/>of<sp/>!g.NavIdIsAlive<sp/>for<sp/>TreeDepth<sp/>0..31..<sp/>Could<sp/>be<sp/>turned<sp/>into<sp/>a<sp/>ImU64<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiWindow*&gt;</ref><sp/><sp/>ChildWindows;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateStorage;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>persistent<sp/>per-window<sp/>storage<sp/>(store<sp/>e.g.<sp/>tree<sp/>node<sp/>open/close<sp/>state)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentColumns;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>columns<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentTableIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>table<sp/>index<sp/>(into<sp/>g.Tables)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLayoutType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LayoutType;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiLayoutType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParentLayoutType;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Layout<sp/>type<sp/>of<sp/>parent<sp/>window<sp/>at<sp/>the<sp/>time<sp/>of<sp/>Begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>parameters<sp/>stacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>store<sp/>the<sp/>current<sp/>settings<sp/>outside<sp/>of<sp/>the<sp/>vectors<sp/>to<sp/>increase<sp/>memory<sp/>locality<sp/>(reduce<sp/>cache<sp/>misses).<sp/>The<sp/>vectors<sp/>are<sp/>rarely<sp/>modified.<sp/>Also<sp/>it<sp/>allows<sp/>us<sp/>to<sp/>not<sp/>heap<sp/>allocate<sp/>for<sp/>short-lived<sp/>windows<sp/>which<sp/>are<sp/>not<sp/>using<sp/>those<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>item<sp/>width<sp/>(&gt;0.0:<sp/>width<sp/>in<sp/>pixels,<sp/>&lt;0.0:<sp/>align<sp/>xx<sp/>pixels<sp/>to<sp/>the<sp/>right<sp/>of<sp/>window).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextWrapPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>text<sp/>wrap<sp/>pos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;float&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemWidthStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>item<sp/>widths<sp/>to<sp/>restore<sp/>(attention:<sp/>.back()<sp/>is<sp/>not<sp/>==<sp/>ItemWidth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;float&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextWrapPosStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>text<sp/>wrap<sp/>pos<sp/>to<sp/>restore<sp/>(attention:<sp/>.back()<sp/>is<sp/>not<sp/>==<sp/>TextWrapPos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>one<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200" refid="struct_im_gui_window" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref></highlight></codeline>
<codeline lineno="2201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>name,<sp/>owned<sp/>by<sp/>the<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>ImHashStr(Name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags,<sp/>FlagsPreviousFrame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>enum<sp/>ImGuiWindowFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window_class" kindref="compound">ImGuiWindowClass</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowClass;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advanced<sp/>users<sp/>only.<sp/>Set<sp/>with<sp/>SetNextWindowClass()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Viewport;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>set<sp/>in<sp/>Begin(),<sp/>only<sp/>inactive<sp/>windows<sp/>may<sp/>have<sp/>a<sp/>NULL<sp/>value<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewportId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>backup<sp/>the<sp/>viewport<sp/>id<sp/>(since<sp/>the<sp/>viewport<sp/>may<sp/>disappear<sp/>or<sp/>never<sp/>be<sp/>created<sp/>if<sp/>the<sp/>window<sp/>is<sp/>inactive)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewportPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>backup<sp/>the<sp/>viewport<sp/>position<sp/>(since<sp/>the<sp/>viewport<sp/>may<sp/>disappear<sp/>or<sp/>never<sp/>be<sp/>created<sp/>if<sp/>the<sp/>window<sp/>is<sp/>inactive)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewportAllowPlatformMonitorExtend;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>to<sp/>-1<sp/>every<sp/>frame<sp/>(index<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>valid<sp/>between<sp/>NewFrame..EndFrame),<sp/>only<sp/>used<sp/>in<sp/>the<sp/>Appearing<sp/>frame<sp/>of<sp/>a<sp/>tooltip/popup<sp/>to<sp/>enforce<sp/>clamping<sp/>to<sp/>a<sp/>given<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>(always<sp/>rounded-up<sp/>to<sp/>nearest<sp/>pixel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>size<sp/>(==SizeFull<sp/>or<sp/>collapsed<sp/>title<sp/>bar<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeFull;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>when<sp/>non<sp/>collapsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>contents/scrollable<sp/>client<sp/>area<sp/>(calculated<sp/>from<sp/>the<sp/>extents<sp/>reach<sp/>of<sp/>the<sp/>cursor)<sp/>from<sp/>previous<sp/>frame.<sp/>Does<sp/>not<sp/>include<sp/>window<sp/>decoration<sp/>or<sp/>window<sp/>padding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentSizeIdeal;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentSizeExplicit;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>contents/scrollable<sp/>client<sp/>area<sp/>explicitly<sp/>request<sp/>by<sp/>the<sp/>user<sp/>via<sp/>SetNextWindowContentSize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowPadding;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>padding<sp/>at<sp/>the<sp/>time<sp/>of<sp/>Begin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowRounding;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>rounding<sp/>at<sp/>the<sp/>time<sp/>of<sp/>Begin().<sp/>May<sp/>be<sp/>clamped<sp/>lower<sp/>to<sp/>avoid<sp/>rendering<sp/>artifacts<sp/>with<sp/>title<sp/>bar,<sp/>menu<sp/>bar<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowBorderSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>border<sp/>size<sp/>at<sp/>the<sp/>time<sp/>of<sp/>Begin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NameBufLen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>buffer<sp/>storing<sp/>Name.<sp/>May<sp/>be<sp/>larger<sp/>than<sp/>strlen(Name)!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>window-&gt;GetID(&quot;#MOVE&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChildId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID<sp/>of<sp/>corresponding<sp/>item<sp/>in<sp/>parent<sp/>window<sp/>(for<sp/>navigation<sp/>to<sp/>return<sp/>from<sp/>child<sp/>window<sp/>to<sp/>parent<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scroll;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollMax;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollTarget;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>target<sp/>scroll<sp/>position.<sp/>stored<sp/>as<sp/>cursor<sp/>position<sp/>with<sp/>scrolling<sp/>canceled<sp/>out,<sp/>so<sp/>the<sp/>highest<sp/>point<sp/>is<sp/>always<sp/>0.0f.<sp/>(FLT_MAX<sp/>for<sp/>no<sp/>change)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollTargetCenterRatio;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.0f<sp/>=<sp/>scroll<sp/>so<sp/>that<sp/>target<sp/>position<sp/>is<sp/>at<sp/>top,<sp/>0.5f<sp/>=<sp/>scroll<sp/>so<sp/>that<sp/>target<sp/>position<sp/>is<sp/>centered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollTargetEdgeSnapDist;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.0f<sp/>=<sp/>no<sp/>snapping,<sp/>&gt;0.0f<sp/>snapping<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollbarSizes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>taken<sp/>by<sp/>each<sp/>scrollbars<sp/>on<sp/>their<sp/>smaller<sp/>axis.<sp/>Pay<sp/>attention!<sp/>ScrollbarSizes.x<sp/>==<sp/>width<sp/>of<sp/>the<sp/>vertical<sp/>scrollbar,<sp/>ScrollbarSizes.y<sp/>=<sp/>height<sp/>of<sp/>the<sp/>horizontal<sp/>scrollbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollbarX,<sp/>ScrollbarY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>scrollbars<sp/>visible?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewportOwned;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Active;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>true<sp/>on<sp/>Begin(),<sp/>unless<sp/>Collapsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WasActive;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteAccessed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>true<sp/>when<sp/>any<sp/>widget<sp/>access<sp/>the<sp/>current<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collapsed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>collapsing<sp/>window<sp/>to<sp/>become<sp/>only<sp/>title-bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantCollapseToggle;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SkipItems;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>items<sp/>can<sp/>safely<sp/>be<sp/>all<sp/>clipped<sp/>(e.g.<sp/>window<sp/>not<sp/>visible<sp/>or<sp/>collapsed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Appearing;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>during<sp/>the<sp/>frame<sp/>where<sp/>the<sp/>window<sp/>is<sp/>appearing<sp/>(or<sp/>re-appearing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hidden;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>display<sp/>(==<sp/>HiddenFrames***<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsFallbackWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>on<sp/>the<sp/>&quot;Debug##Default&quot;<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsExplicitChild;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>passed<sp/>_ChildWindow,<sp/>left<sp/>to<sp/>false<sp/>by<sp/>BeginDocked()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasCloseButton;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>the<sp/>window<sp/>has<sp/>a<sp/>close<sp/>button<sp/>(p_open<sp/>!=<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResizeBorderHeld;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>border<sp/>being<sp/>held<sp/>for<sp/>resize<sp/>(-1:<sp/>none,<sp/>otherwise<sp/>0-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>Begin()<sp/>during<sp/>the<sp/>current<sp/>frame<sp/>(generally<sp/>0<sp/>or<sp/>1,<sp/>1+<sp/>if<sp/>appending<sp/>via<sp/>multiple<sp/>Begin/End<sp/>pairs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginOrderWithinParent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin()<sp/>order<sp/>within<sp/>immediate<sp/>parent<sp/>window,<sp/>if<sp/>we<sp/>are<sp/>a<sp/>child<sp/>window.<sp/>Otherwise<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginOrderWithinContext;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin()<sp/>order<sp/>within<sp/>entire<sp/>imgui<sp/>context.<sp/>This<sp/>is<sp/>mostly<sp/>used<sp/>for<sp/>debugging<sp/>submission<sp/>order<sp/>related<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Order<sp/>within<sp/>WindowsFocusOrder[],<sp/>altered<sp/>when<sp/>windows<sp/>are<sp/>focused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopupId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID<sp/>in<sp/>the<sp/>popup<sp/>stack<sp/>when<sp/>this<sp/>window<sp/>is<sp/>used<sp/>as<sp/>a<sp/>popup/menu<sp/>(because<sp/>we<sp/>use<sp/>generic<sp/>Name/ID<sp/>for<sp/>recycling)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoFitFramesX,<sp/>AutoFitFramesY;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoFitChildAxises;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoFitOnlyGrows;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiDir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoPosLastDirection;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HiddenFramesCanSkipItems;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>the<sp/>window<sp/>for<sp/>N<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HiddenFramesCannotSkipItems;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>the<sp/>window<sp/>for<sp/>N<sp/>frames<sp/>while<sp/>allowing<sp/>items<sp/>to<sp/>be<sp/>submitted<sp/>so<sp/>we<sp/>can<sp/>measure<sp/>their<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HiddenFramesForRenderOnly;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>the<sp/>window<sp/>until<sp/>frame<sp/>N<sp/>at<sp/>Render()<sp/>time<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisableInputsFrames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>window<sp/>interactions<sp/>for<sp/>N<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowPosAllowFlags<sp/>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>acceptable<sp/>condition<sp/>flags<sp/>for<sp/>SetNextWindowPos()<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowSizeAllowFlags<sp/>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>acceptable<sp/>condition<sp/>flags<sp/>for<sp/>SetNextWindowSize()<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowCollapsedAllowFlags<sp/>:<sp/>8;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>acceptable<sp/>condition<sp/>flags<sp/>for<sp/>SetNextWindowCollapsed()<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiCond<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowDockAllowFlags<sp/>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>acceptable<sp/>condition<sp/>flags<sp/>for<sp/>SetNextWindowDock()<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowPosVal;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>window<sp/>position<sp/>when<sp/>using<sp/>a<sp/>non-zero<sp/>Pivot<sp/>(position<sp/>set<sp/>needs<sp/>to<sp/>be<sp/>processed<sp/>when<sp/>we<sp/>know<sp/>the<sp/>window<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowPosPivot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>window<sp/>pivot<sp/>for<sp/>positioning.<sp/>ImVec2(0,<sp/>0)<sp/>when<sp/>positioning<sp/>from<sp/>top-left<sp/>corner;<sp/>ImVec2(0.5f,<sp/>0.5f)<sp/>for<sp/>centering;<sp/>ImVec2(1,<sp/>1)<sp/>for<sp/>bottom<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiID&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDStack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID<sp/>stack.<sp/>ID<sp/>are<sp/>hashes<sp/>seeded<sp/>with<sp/>the<sp/>value<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack.<sp/>(In<sp/>theory<sp/>this<sp/>should<sp/>be<sp/>in<sp/>the<sp/>TempData<sp/>structure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window_temp_data" kindref="compound">ImGuiWindowTempData</ref><sp/><sp/><sp/><sp/><sp/>DC;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>per-window<sp/>data,<sp/>reset<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>frame.<sp/>This<sp/>used<sp/>to<sp/>be<sp/>called<sp/>ImGuiDrawContext,<sp/>hence<sp/>the<sp/>&quot;DC&quot;<sp/>variable<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>best<sp/>way<sp/>to<sp/>understand<sp/>what<sp/>those<sp/>rectangles<sp/>are<sp/>is<sp/>to<sp/>use<sp/>the<sp/>&apos;Metrics-&gt;Tools-&gt;Show<sp/>Windows<sp/>Rectangles&apos;<sp/>viewer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>&apos;OuterRect&apos;,<sp/>omitted<sp/>as<sp/>a<sp/>field,<sp/>is<sp/>window-&gt;Rect().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OuterRectClipped;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>Window-&gt;Rect()<sp/>just<sp/>after<sp/>setup<sp/>in<sp/>Begin().<sp/>==<sp/>window-&gt;Rect()<sp/>for<sp/>root<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inner<sp/>rectangle<sp/>(omit<sp/>title<sp/>bar,<sp/>menu<sp/>bar,<sp/>scroll<sp/>bar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerClipRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>InnerRect<sp/>shrunk<sp/>by<sp/>WindowPadding*0.5f<sp/>on<sp/>each<sp/>side,<sp/>clipped<sp/>within<sp/>viewport<sp/>or<sp/>parent<sp/>clip<sp/>rect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially<sp/>covers<sp/>the<sp/>whole<sp/>scrolling<sp/>region.<sp/>Reduced<sp/>by<sp/>containers<sp/>e.g<sp/>columns/tables<sp/>when<sp/>active.<sp/>Shrunk<sp/>by<sp/>WindowPadding*1.0f<sp/>on<sp/>each<sp/>side.<sp/>This<sp/>is<sp/>meant<sp/>to<sp/>replace<sp/>ContentRegionRect<sp/>over<sp/>time<sp/>(from<sp/>1.71+<sp/>onward).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParentWorkRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>WorkRect<sp/>before<sp/>entering<sp/>a<sp/>container<sp/>such<sp/>as<sp/>columns/tables.<sp/>Used<sp/>by<sp/>e.g.<sp/>SpanAllColumns<sp/>functions<sp/>to<sp/>easily<sp/>access.<sp/>Stacked<sp/>containers<sp/>are<sp/>responsible<sp/>for<sp/>maintaining<sp/>this.<sp/>//<sp/>FIXME-WORKRECT:<sp/>Could<sp/>be<sp/>a<sp/>stack?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>clipping/scissoring<sp/>rectangle,<sp/>evolve<sp/>as<sp/>we<sp/>are<sp/>using<sp/>PushClipRect(),<sp/>etc.<sp/>==<sp/>DrawList-&gt;clip_rect_stack.back().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentRegionRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>is<sp/>currently<sp/>confusing/misleading.<sp/>It<sp/>is<sp/>essentially<sp/>WorkRect<sp/>but<sp/>not<sp/>handling<sp/>of<sp/>scrolling.<sp/>We<sp/>currently<sp/>rely<sp/>on<sp/>it<sp/>as<sp/>right/bottom<sp/>aligned<sp/>sizing<sp/>operation<sp/>need<sp/>some<sp/>size<sp/>to<sp/>rely<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HitTestHoleSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>an<sp/>optional<sp/>rectangular<sp/>hole<sp/>where<sp/>mouse<sp/>will<sp/>pass-through<sp/>the<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2ih" kindref="compound">ImVec2ih</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HitTestHoleOffset;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameActive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>frame<sp/>number<sp/>the<sp/>window<sp/>was<sp/>Active.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameJustFocused;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>frame<sp/>number<sp/>the<sp/>window<sp/>was<sp/>made<sp/>Focused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastTimeActive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>timestamp<sp/>the<sp/>window<sp/>was<sp/>Active<sp/>(using<sp/>float<sp/>as<sp/>we<sp/>don&apos;t<sp/>need<sp/>high<sp/>precision<sp/>there)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemWidthDefault;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateStorage;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiOldColumns&gt;</ref><sp/>ColumnsStorage;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontWindowScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>scale<sp/>multiplier<sp/>per-window,<sp/>via<sp/>SetWindowFontScale()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontDpiScale;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>into<sp/>SettingsWindows[]<sp/>(offsets<sp/>are<sp/>always<sp/>valid<sp/>as<sp/>we<sp/>only<sp/>grow<sp/>the<sp/>array<sp/>from<sp/>the<sp/>back)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawList;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>&amp;DrawListInst<sp/>(for<sp/>backward<sp/>compatibility<sp/>reason<sp/>with<sp/>code<sp/>using<sp/>imgui_internal.h<sp/>we<sp/>keep<sp/>this<sp/>a<sp/>pointer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawListInst;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParentWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>a<sp/>child<sp/>_or_<sp/>popup<sp/>_or_<sp/>docked<sp/>window,<sp/>this<sp/>is<sp/>pointing<sp/>to<sp/>our<sp/>parent.<sp/>Otherwise<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParentWindowInBeginStack;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RootWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>to<sp/>ourself<sp/>or<sp/>first<sp/>ancestor<sp/>that<sp/>is<sp/>not<sp/>a<sp/>child<sp/>window.<sp/>Doesn&apos;t<sp/>cross<sp/>through<sp/>popups/dock<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RootWindowPopupTree;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>to<sp/>ourself<sp/>or<sp/>first<sp/>ancestor<sp/>that<sp/>is<sp/>not<sp/>a<sp/>child<sp/>window.<sp/>Cross<sp/>through<sp/>popups<sp/>parent&lt;&gt;child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RootWindowDockTree;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>to<sp/>ourself<sp/>or<sp/>first<sp/>ancestor<sp/>that<sp/>is<sp/>not<sp/>a<sp/>child<sp/>window.<sp/>Cross<sp/>through<sp/>dock<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RootWindowForTitleBarHighlight;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>to<sp/>ourself<sp/>or<sp/>first<sp/>ancestor<sp/>which<sp/>will<sp/>display<sp/>TitleBgActive<sp/>color<sp/>when<sp/>this<sp/>window<sp/>is<sp/>active.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RootWindowForNav;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>to<sp/>ourself<sp/>or<sp/>first<sp/>ancestor<sp/>which<sp/>doesn&apos;t<sp/>have<sp/>the<sp/>NavFlattened<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLastChildNavWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>going<sp/>to<sp/>the<sp/>menu<sp/>bar,<sp/>we<sp/>remember<sp/>the<sp/>child<sp/>window<sp/>we<sp/>came<sp/>from.<sp/>(This<sp/>could<sp/>probably<sp/>be<sp/>made<sp/>implicit<sp/>if<sp/>we<sp/>kept<sp/>g.Windows<sp/>sorted<sp/>by<sp/>last<sp/>focused<sp/>including<sp/>child<sp/>window.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLastIds[ImGuiNavLayer_COUNT];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>known<sp/>NavId<sp/>for<sp/>this<sp/>window,<sp/>per<sp/>layer<sp/>(0/1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavRectRel[ImGuiNavLayer_COUNT];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>rectangle,<sp/>in<sp/>window<sp/>relative<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryDrawListIdxCapacity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>last<sp/>idx/vtx<sp/>count,<sp/>so<sp/>when<sp/>waking<sp/>up<sp/>the<sp/>window<sp/>we<sp/>can<sp/>preallocate<sp/>and<sp/>avoid<sp/>iterative<sp/>alloc/copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryDrawListVtxCapacity;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryCompacted;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>window<sp/>extraneous<sp/>data<sp/>have<sp/>been<sp/>garbage<sp/>collected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Docking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockIsActive<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>docking<sp/>artifacts<sp/>are<sp/>actually<sp/>visible.<sp/>When<sp/>this<sp/>is<sp/>set,<sp/>DockNode<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>!=<sp/>NULL.<sp/>~~<sp/>(DockNode<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(DockNode-&gt;Windows.Size<sp/>&gt;<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNodeIsVisible<sp/><sp/><sp/>:1;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockTabIsVisible<sp/><sp/><sp/><sp/>:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>our<sp/>window<sp/>visible<sp/>this<sp/>frame?<sp/>~~<sp/>is<sp/>the<sp/>corresponding<sp/>tab<sp/>selected?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockTabWantClose<sp/><sp/><sp/><sp/>:1;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Order<sp/>of<sp/>the<sp/>last<sp/>time<sp/>the<sp/>window<sp/>was<sp/>visible<sp/>within<sp/>its<sp/>DockNode.<sp/>This<sp/>is<sp/>used<sp/>to<sp/>reorder<sp/>windows<sp/>that<sp/>are<sp/>reappearing<sp/>on<sp/>the<sp/>same<sp/>frame.<sp/>Same<sp/>value<sp/>between<sp/>windows<sp/>that<sp/>were<sp/>active<sp/>and<sp/>windows<sp/>that<sp/>were<sp/>none<sp/>are<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window_dock_style" kindref="compound">ImGuiWindowDockStyle</ref><sp/><sp/><sp/><sp/>DockStyle;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>node<sp/>are<sp/>we<sp/>docked<sp/>into.<sp/>Important:<sp/>Prefer<sp/>testing<sp/>DockIsActive<sp/>in<sp/>many<sp/>cases<sp/>as<sp/>this<sp/>will<sp/>still<sp/>be<sp/>set<sp/>when<sp/>the<sp/>dock<sp/>node<sp/>is<sp/>hidden.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNodeAsHost;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>node<sp/>are<sp/>we<sp/>owning<sp/>(for<sp/>parent<sp/>windows)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>last<sp/>valid<sp/>DockNode-&gt;ID,<sp/>so<sp/>single<sp/>window<sp/>remember<sp/>their<sp/>dock<sp/>node<sp/>id<sp/>even<sp/>when<sp/>they<sp/>are<sp/>not<sp/>bound<sp/>any<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags<sp/><sp/><sp/><sp/>DockTabItemStatusFlags;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockTabItemRect;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">~ImGuiWindow</ref>();</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>GetID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_end<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>GetID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>GetID(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>GetIDNoKeepAlive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_end<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>GetIDNoKeepAlive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>GetIDNoKeepAlive(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/>GetIDFromRectangle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r_abs);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>use<sp/>g.FontSize<sp/>because<sp/>the<sp/>window<sp/>may<sp/>be<sp/>!=<sp/>g.CurrentWidow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/>Rect()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(Pos.x,<sp/>Pos.y,<sp/>Pos.x<sp/>+<sp/>Size.x,<sp/>Pos.y<sp/>+<sp/>Size.y);<sp/>}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalcFontSize()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>g.FontBaseSize<sp/>*<sp/>FontWindowScale<sp/>*<sp/>FontDpiScale;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ParentWindow)<sp/>scale<sp/>*=<sp/>ParentWindow-&gt;FontWindowScale;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gtc__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6" kindref="member">scale</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TitleBarHeight()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Flags<sp/>&amp;<sp/>ImGuiWindowFlags_NoTitleBar)<sp/>?<sp/>0.0f<sp/>:<sp/>CalcFontSize()<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2.0f;<sp/>}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/>TitleBarRect()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(Pos,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(Pos.x<sp/>+<sp/>SizeFull.x,<sp/>Pos.y<sp/>+<sp/>TitleBarHeight()));<sp/>}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MenuBarHeight()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Flags<sp/>&amp;<sp/>ImGuiWindowFlags_MenuBar)<sp/>?<sp/>DC.MenuBarOffset.y<sp/>+<sp/>CalcFontSize()<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2.0f<sp/>:<sp/>0.0f;<sp/>}</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/>MenuBarRect()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>Pos.y<sp/>+<sp/>TitleBarHeight();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(Pos.x,<sp/>y1,<sp/>Pos.x<sp/>+<sp/>SizeFull.x,<sp/>y1<sp/>+<sp/>MenuBarHeight());<sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Tab<sp/>bar,<sp/>Tab<sp/>item<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiTabBarFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiTabBarFlagsPrivate_</highlight></codeline>
<codeline lineno="2345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabBarFlags_DockNode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20,<sp/><sp/></highlight><highlight class="comment">//<sp/>Part<sp/>of<sp/>a<sp/>dock<sp/>node<sp/>[we<sp/>don&apos;t<sp/>use<sp/>this<sp/>in<sp/>the<sp/>master<sp/>branch<sp/>but<sp/>it<sp/>facilitate<sp/>branch<sp/>syncing<sp/>to<sp/>keep<sp/>this<sp/>around]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabBarFlags_IsFocused<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>21,</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabBarFlags_SaveSettings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>22<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Settings<sp/>are<sp/>handled<sp/>by<sp/>the<sp/>docking<sp/>system,<sp/>this<sp/>only<sp/>request<sp/>the<sp/>tab<sp/>bar<sp/>to<sp/>mark<sp/>settings<sp/>dirty<sp/>when<sp/>reordering<sp/>tabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>ImGuiTabItemFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ImGuiTabItemFlagsPrivate_</highlight></codeline>
<codeline lineno="2353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabItemFlags_SectionMask_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImGuiTabItemFlags_Leading<sp/>|<sp/>ImGuiTabItemFlags_Trailing,</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabItemFlags_NoCloseButton<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20,<sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>whether<sp/>p_open<sp/>was<sp/>set<sp/>or<sp/>not<sp/>(we&apos;ll<sp/>need<sp/>this<sp/>info<sp/>on<sp/>the<sp/>next<sp/>frame<sp/>to<sp/>recompute<sp/>ContentWidth<sp/>during<sp/>layout)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabItemFlags_Button<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>21,<sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>by<sp/>TabItemButton,<sp/>change<sp/>the<sp/>tab<sp/>item<sp/>behavior<sp/>to<sp/>mimic<sp/>a<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabItemFlags_Unsorted<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>22,<sp/><sp/></highlight><highlight class="comment">//<sp/>[Docking]<sp/>Trailing<sp/>tabs<sp/>with<sp/>the<sp/>_Unsorted<sp/>flag<sp/>will<sp/>be<sp/>sorted<sp/>based<sp/>on<sp/>the<sp/>DockOrder<sp/>of<sp/>their<sp/>Window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabItemFlags_Preview<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>23<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Docking]<sp/>Display<sp/>tab<sp/>shape<sp/>for<sp/>docking<sp/>preview<sp/>(height<sp/>is<sp/>adjusted<sp/>slightly<sp/>to<sp/>compensate<sp/>for<sp/>the<sp/>yet<sp/>missing<sp/>tab<sp/>bar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>one<sp/>active<sp/>tab<sp/>item<sp/>(sizeof()<sp/>48<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362" refid="struct_im_gui_tab_item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref></highlight></codeline>
<codeline lineno="2363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabItemFlags<sp/><sp/><sp/>Flags;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>TabItem<sp/>is<sp/>part<sp/>of<sp/>a<sp/>DockNode&apos;s<sp/>TabBar,<sp/>we<sp/>hold<sp/>on<sp/>to<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameVisible;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameSelected;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>us<sp/>to<sp/>infer<sp/>an<sp/>ordered<sp/>list<sp/>of<sp/>the<sp/>last<sp/>activated<sp/>tabs<sp/>with<sp/>little<sp/>maintenance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Offset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>relative<sp/>to<sp/>beginning<sp/>of<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Width<sp/>currently<sp/>displayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Width<sp/>of<sp/>label,<sp/>stored<sp/>during<sp/>BeginTabItem()<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NameOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>Window==NULL,<sp/>offset<sp/>to<sp/>name<sp/>within<sp/>parent<sp/>ImGuiTabBar::TabsNames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BeginTabItem()<sp/>order,<sp/>used<sp/>to<sp/>re-order<sp/>tabs<sp/>after<sp/>toggling<sp/>ImGuiTabBarFlags_Reorderable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndexDuringLayout;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>only<sp/>used<sp/>during<sp/>TabBarLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantClose;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Marked<sp/>as<sp/>closed<sp/>by<sp/>SetTabItemClosed()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>LastFrameVisible<sp/>=<sp/>LastFrameSelected<sp/>=<sp/>-1;<sp/>NameOffset<sp/>=<sp/>-1;<sp/>BeginOrder<sp/>=<sp/>IndexDuringLayout<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>a<sp/>tab<sp/>bar<sp/>(sizeof()<sp/>152<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381" refid="struct_im_gui_tab_bar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref></highlight></codeline>
<codeline lineno="2382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiTabItem&gt;</ref><sp/>Tabs;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTabBarFlags<sp/><sp/><sp/><sp/>Flags;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>for<sp/>tab-bars<sp/>used<sp/>by<sp/>docking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectedTabId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Selected<sp/>tab/window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextSelectedTabId;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>selected<sp/>tab/window.<sp/>Will<sp/>also<sp/>trigger<sp/>a<sp/>scrolling<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VisibleTabId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>occasionally<sp/>be<sp/>!=<sp/>SelectedTabId<sp/>(e.g.<sp/>when<sp/>previewing<sp/>contents<sp/>for<sp/>CTRL+TAB<sp/>preview)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrFrameVisible;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevFrameVisible;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BarRect;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrTabsContentsHeight;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevTabsContentsHeight;<sp/></highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>height<sp/>of<sp/>contents<sp/>submitted<sp/>below<sp/>the<sp/>tab<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WidthAllTabs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>width<sp/>of<sp/>all<sp/>tabs<sp/>(locked<sp/>during<sp/>layout)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WidthAllTabsIdeal;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ideal<sp/>width<sp/>if<sp/>all<sp/>tabs<sp/>were<sp/>visible<sp/>and<sp/>not<sp/>clipped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollingAnim;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollingTarget;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollingTargetDistToVisibility;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollingSpeed;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollingRectMinX;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollingRectMaxX;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReorderRequestTabId;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReorderRequestOffset;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginCount;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantLayout;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VisibleTabWasSubmitted;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabsAddedNew;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>true<sp/>when<sp/>a<sp/>new<sp/>tab<sp/>item<sp/>or<sp/>button<sp/>has<sp/>been<sp/>added<sp/>to<sp/>the<sp/>tab<sp/>bar<sp/>during<sp/>last<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabsActiveCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>tabs<sp/>submitted<sp/>this<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastTabItemIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>last<sp/>BeginTabItem()<sp/>tab<sp/>for<sp/>use<sp/>by<sp/>EndTabItem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSpacingY;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FramePadding;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>style.FramePadding<sp/>locked<sp/>at<sp/>the<sp/>time<sp/>of<sp/>BeginTabBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackupCursorPos;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_text_buffer" kindref="compound">ImGuiTextBuffer</ref><sp/><sp/><sp/><sp/><sp/>TabsNames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>non-docking<sp/>tab<sp/>bar<sp/>we<sp/>re-append<sp/>names<sp/>in<sp/>a<sp/>contiguous<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>();</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetTabOrder(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab)</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tabs.index_from_ptr(tab);<sp/>}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetTabName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2418"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;Window)</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab-&gt;Window-&gt;Name;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(tab-&gt;NameOffset<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>tab-&gt;NameOffset<sp/>&lt;<sp/>TabsNames.Buf.Size);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TabsNames.Buf.Data<sp/>+<sp/>tab-&gt;NameOffset;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Table<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_COL32_DISABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_COL32(0,0,0,1)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>sentinel<sp/>code<sp/>which<sp/>cannot<sp/>be<sp/>used<sp/>as<sp/>a<sp/>regular<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_TABLE_MAX_COLUMNS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sizeof(ImU64)<sp/>*<sp/>8.<sp/>This<sp/>is<sp/>solely<sp/>because<sp/>we<sp/>frequently<sp/>encode<sp/>columns<sp/>set<sp/>in<sp/>a<sp/>ImU64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_TABLE_MAX_DRAW_CHANNELS<sp/><sp/><sp/>(4<sp/>+<sp/>64<sp/>*<sp/>2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>TableSetupDrawChannels()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>current<sp/>column<sp/>maximum<sp/>is<sp/>64<sp/>but<sp/>we<sp/>may<sp/>raise<sp/>that<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ImS8<sp/>ImGuiTableColumnIdx;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ImU8<sp/>ImGuiTableDrawChannelIdx;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Internal]<sp/>sizeof()<sp/>~<sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>the<sp/>terminology<sp/>&quot;Enabled&quot;<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>column<sp/>that<sp/>is<sp/>not<sp/>Hidden<sp/>by<sp/>user/api.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>the<sp/>terminology<sp/>&quot;Clipped&quot;<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>column<sp/>that<sp/>is<sp/>out<sp/>of<sp/>sight<sp/>because<sp/>of<sp/>scrolling/clipping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>in<sp/>contrast<sp/>with<sp/>some<sp/>user-facing<sp/>api<sp/>such<sp/>as<sp/>IsItemVisible()<sp/>/<sp/>IsRectVisible()<sp/>which<sp/>use<sp/>&quot;Visible&quot;<sp/>to<sp/>mean<sp/>&quot;not<sp/>clipped&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442" refid="struct_im_gui_table_column" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table_column" kindref="compound">ImGuiTableColumn</ref></highlight></codeline>
<codeline lineno="2443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnFlags<sp/><sp/><sp/>Flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flags<sp/>after<sp/>some<sp/>patching<sp/>(not<sp/>directly<sp/>same<sp/>as<sp/>provided<sp/>by<sp/>user).<sp/>See<sp/>ImGuiTableColumnFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WidthGiven;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Final/actual<sp/>width<sp/>visible<sp/>==<sp/>(MaxX<sp/>-<sp/>MinX),<sp/>locked<sp/>in<sp/>TableUpdateLayout().<sp/>May<sp/>be<sp/>&gt;<sp/>WidthRequest<sp/>to<sp/>honor<sp/>minimum<sp/>width,<sp/>may<sp/>be<sp/>&lt;<sp/>WidthRequest<sp/>to<sp/>honor<sp/>shrinking<sp/>columns<sp/>down<sp/>in<sp/>tight<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Absolute<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaxX;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WidthRequest;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Master<sp/>width<sp/>absolute<sp/>value<sp/>when<sp/>!(Flags<sp/>&amp;<sp/>_WidthStretch).<sp/>When<sp/>Stretch<sp/>this<sp/>is<sp/>derived<sp/>every<sp/>frame<sp/>from<sp/>StretchWeight<sp/>in<sp/>TableUpdateLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WidthAuto;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatic<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StretchWeight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Master<sp/>width<sp/>weight<sp/>when<sp/>(Flags<sp/>&amp;<sp/>_WidthStretch).<sp/>Often<sp/>around<sp/>~1.0f<sp/>initially.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitStretchWeightOrWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>passed<sp/>to<sp/>TableSetupColumn().<sp/>For<sp/>Width<sp/>it<sp/>is<sp/>a<sp/>content<sp/>width<sp/>(_without<sp/>padding_).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clipping<sp/>rectangle<sp/>for<sp/>the<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional,<sp/>value<sp/>passed<sp/>to<sp/>TableSetupColumn()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkMinX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contents<sp/>region<sp/>min<sp/>~(MinX<sp/>+<sp/>CellPaddingX<sp/>+<sp/>CellSpacingX1)<sp/>==<sp/>cursor<sp/>start<sp/>position<sp/>when<sp/>entering<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkMaxX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contents<sp/>region<sp/>max<sp/>~(MaxX<sp/>-<sp/>CellPaddingX<sp/>-<sp/>CellSpacingX2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>item<sp/>width<sp/>for<sp/>the<sp/>column,<sp/>preserved<sp/>across<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentMaxXFrozen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contents<sp/>maximum<sp/>position<sp/>for<sp/>frozen<sp/>rows<sp/>(apart<sp/>from<sp/>headers),<sp/>from<sp/>which<sp/>we<sp/>can<sp/>infer<sp/>content<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentMaxXUnfrozen;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentMaxXHeadersUsed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contents<sp/>maximum<sp/>position<sp/>for<sp/>headers<sp/>rows<sp/>(regardless<sp/>of<sp/>freezing).<sp/>TableHeader()<sp/>automatically<sp/>softclip<sp/>itself<sp/>+<sp/>report<sp/>ideal<sp/>desired<sp/>size,<sp/>to<sp/>avoid<sp/>creating<sp/>extraneous<sp/>draw<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContentMaxXHeadersIdeal;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NameOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>into<sp/>parent<sp/>ColumnsNames[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>DisplayOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>within<sp/>Table&apos;s<sp/>IndexToDisplayOrder[]<sp/>(column<sp/>may<sp/>be<sp/>reordered<sp/>by<sp/>users)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>IndexWithinEnabledSet;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>within<sp/>enabled/visible<sp/>set<sp/>(&lt;=<sp/>IndexToDisplayOrder)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>PrevEnabledColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>prev<sp/>enabled/visible<sp/>column<sp/>within<sp/>Columns[],<sp/>-1<sp/>if<sp/>first<sp/>enabled/visible<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>NextEnabledColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>next<sp/>enabled/visible<sp/>column<sp/>within<sp/>Columns[],<sp/>-1<sp/>if<sp/>last<sp/>enabled/visible<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>SortOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>this<sp/>column<sp/>within<sp/>sort<sp/>specs,<sp/>-1<sp/>if<sp/>not<sp/>sorting<sp/>on<sp/>this<sp/>column,<sp/>0<sp/>for<sp/>single-sort,<sp/>may<sp/>be<sp/>&gt;0<sp/>on<sp/>multi-sort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableDrawChannelIdx<sp/>DrawChannelCurrent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>within<sp/>DrawSplitter.Channels[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableDrawChannelIdx<sp/>DrawChannelFrozen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>channels<sp/>for<sp/>frozen<sp/>rows<sp/>(often<sp/>headers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableDrawChannelIdx<sp/>DrawChannelUnfrozen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>channels<sp/>for<sp/>unfrozen<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsEnabled;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IsUserEnabled<sp/>&amp;&amp;<sp/>(Flags<sp/>&amp;<sp/>ImGuiTableColumnFlags_Disabled)<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsUserEnabled;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>column<sp/>not<sp/>marked<sp/>Hidden<sp/>by<sp/>the<sp/>user?<sp/>(unrelated<sp/>to<sp/>being<sp/>off<sp/>view,<sp/>e.g.<sp/>clipped<sp/>by<sp/>scrolling).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsUserEnabledNextFrame;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsVisibleX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>actually<sp/>in<sp/>view<sp/>(e.g.<sp/>overlapping<sp/>the<sp/>host<sp/>window<sp/>clipping<sp/>rectangle,<sp/>not<sp/>scrolled).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsVisibleY;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsRequestOutput;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>for<sp/>TableSetColumnIndex()<sp/>/<sp/>TableNextColumn():<sp/>whether<sp/>we<sp/>request<sp/>user<sp/>to<sp/>output<sp/>contents<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsSkipItems;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>want<sp/>item<sp/>submissions<sp/>to<sp/>this<sp/>column<sp/>to<sp/>be<sp/>completely<sp/>ignored<sp/>(no<sp/>layout<sp/>will<sp/>happen).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsPreserveWidthAuto;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavLayerCurrent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiNavLayer<sp/>in<sp/>1<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoFitQueue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>of<sp/>8<sp/>values<sp/>for<sp/>the<sp/>next<sp/>8<sp/>frames<sp/>to<sp/>request<sp/>auto-fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CannotSkipItemsQueue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>of<sp/>8<sp/>values<sp/>for<sp/>the<sp/>next<sp/>8<sp/>frames<sp/>to<sp/>disable<sp/>Clipped/SkipItem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection<sp/>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiSortDirection_Ascending<sp/>or<sp/>ImGuiSortDirection_Descending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirectionsAvailCount<sp/>:<sp/>2;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>available<sp/>sort<sp/>directions<sp/>(0<sp/>to<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirectionsAvailMask<sp/>:<sp/>4;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mask<sp/>of<sp/>available<sp/>sort<sp/>directions<sp/>(1-bit<sp/>each)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirectionsAvailList;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ordered<sp/>of<sp/>available<sp/>sort<sp/>directions<sp/>(2-bits<sp/>each)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_column" kindref="compound">ImGuiTableColumn</ref>()</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StretchWeight<sp/>=<sp/>WidthRequest<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NameOffset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisplayOrder<sp/>=<sp/>IndexWithinEnabledSet<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevEnabledColumn<sp/>=<sp/>NextEnabledColumn<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortOrder<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection<sp/>=<sp/>ImGuiSortDirection_None;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawChannelCurrent<sp/>=<sp/>DrawChannelFrozen<sp/>=<sp/>DrawChannelUnfrozen<sp/>=<sp/>(ImU8)-1;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transient<sp/>cell<sp/>data<sp/>stored<sp/>per<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sizeof()<sp/>~<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501" refid="struct_im_gui_table_cell_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table_cell_data" kindref="compound">ImGuiTableCellData</ref></highlight></codeline>
<codeline lineno="2502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BgColor;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Column;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME-TABLE:<sp/>more<sp/>transient<sp/>data<sp/>could<sp/>be<sp/>stored<sp/>in<sp/>a<sp/>per-stacked<sp/>table<sp/>structure:<sp/>DrawSplitter,<sp/>SortSpecs,<sp/>incoming<sp/>RowData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508" refid="struct_im_gui_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref></highlight></codeline>
<codeline lineno="2509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RawData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single<sp/>allocation<sp/>to<sp/>hold<sp/>Columns[],<sp/>DisplayOrderToIndex[]<sp/>and<sp/>RowCellData[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_temp_data" kindref="compound">ImGuiTableTempData</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transient<sp/>data<sp/>while<sp/>table<sp/>is<sp/>active.<sp/>Point<sp/>within<sp/>g.CurrentTableStack[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_span" kindref="compound">ImSpan&lt;ImGuiTableColumn&gt;</ref><sp/><sp/><sp/><sp/>Columns;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>within<sp/>RawData[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_span" kindref="compound">ImSpan&lt;ImGuiTableColumnIdx&gt;</ref><sp/>DisplayOrderToIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>within<sp/>RawData[].<sp/>Store<sp/>display<sp/>order<sp/>of<sp/>columns<sp/>(when<sp/>not<sp/>reordered,<sp/>the<sp/>values<sp/>are<sp/>0...Count-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_span" kindref="compound">ImSpan&lt;ImGuiTableCellData&gt;</ref><sp/><sp/>RowCellData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>within<sp/>RawData[].<sp/>Store<sp/>cells<sp/>background<sp/>requests<sp/>for<sp/>current<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnabledMaskByDisplayOrder;<sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>DisplayOrder<sp/>-&gt;<sp/>IsEnabled<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnabledMaskByIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>Index<sp/>-&gt;<sp/>IsEnabled<sp/>map<sp/>(==<sp/>not<sp/>hidden<sp/>by<sp/>user/api)<sp/>in<sp/>a<sp/>format<sp/>adequate<sp/>for<sp/>iterating<sp/>column<sp/>without<sp/>touching<sp/>cold<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VisibleMaskByIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>Index<sp/>-&gt;<sp/>IsVisibleX|IsVisibleY<sp/>map<sp/>(==<sp/>not<sp/>hidden<sp/>by<sp/>user/api<sp/>&amp;&amp;<sp/>not<sp/>hidden<sp/>by<sp/>scrolling/cliprect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RequestOutputMaskByIndex;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>Index<sp/>-&gt;<sp/>IsVisible<sp/>||<sp/>AutoFit<sp/>(==<sp/>expect<sp/>user<sp/>to<sp/>submit<sp/>items)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsLoadedFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>data<sp/>were<sp/>loaded<sp/>from<sp/>the<sp/>.ini<sp/>file<sp/>(e.g.<sp/>when<sp/>order<sp/>is<sp/>not<sp/>altered<sp/>we<sp/>won&apos;t<sp/>save<sp/>order)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SettingsOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>in<sp/>g.SettingsTables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFrameActive;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>columns<sp/>declared<sp/>in<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentRow;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentColumn;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InstanceCurrent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>of<sp/>BeginTable()<sp/>calls<sp/>with<sp/>same<sp/>ID<sp/>in<sp/>the<sp/>same<sp/>frame<sp/>(generally<sp/>0).<sp/>This<sp/>is<sp/>a<sp/>little<sp/>bit<sp/>similar<sp/>to<sp/>BeginCount<sp/>for<sp/>a<sp/>window,<sp/>but<sp/>multiple<sp/>table<sp/>with<sp/>same<sp/>ID<sp/>look<sp/>are<sp/>multiple<sp/>tables,<sp/>they<sp/>are<sp/>just<sp/>synched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InstanceInteracted;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>which<sp/>instance<sp/>(generally<sp/>0)<sp/>of<sp/>the<sp/>same<sp/>ID<sp/>is<sp/>being<sp/>interacted<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowPosY1;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowPosY2;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowMinHeight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Height<sp/>submitted<sp/>to<sp/>TableNextRow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowTextBaseline;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowIndentOffsetX;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableRowFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowFlags<sp/>:<sp/>16;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>row<sp/>flags,<sp/>see<sp/>ImGuiTableRowFlags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableRowFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastRowFlags<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowBgColorCounter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Counter<sp/>for<sp/>alternating<sp/>background<sp/>colors<sp/>(can<sp/>be<sp/>fast-forwarded<sp/>by<sp/>e.g<sp/>clipper),<sp/>not<sp/>same<sp/>as<sp/>CurrentRow<sp/>because<sp/>header<sp/>rows<sp/>typically<sp/>don&apos;t<sp/>increase<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowBgColor[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Background<sp/>color<sp/>override<sp/>for<sp/>current<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BorderColorStrong;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BorderColorLight;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BorderX1;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BorderX2;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostIndentX;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinColumnWidth;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OuterPaddingX;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellPaddingX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Padding<sp/>from<sp/>each<sp/>borders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellPaddingY;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellSpacingX1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Spacing<sp/>between<sp/>non-bordered<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellSpacingX2;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastOuterHeight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outer<sp/>height<sp/>from<sp/>last<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFirstRowHeight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Height<sp/>of<sp/>first<sp/>row<sp/>from<sp/>last<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>value<sp/>passed<sp/>to<sp/>BeginTable(),<sp/>see<sp/>comments<sp/>at<sp/>the<sp/>top<sp/>of<sp/>BeginTable()<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsGivenWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>of<sp/>current<sp/>column<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsAutoFitWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>of<sp/>ideal<sp/>column<sp/>width<sp/>in<sp/>order<sp/>nothing<sp/>to<sp/>be<sp/>clipped,<sp/>used<sp/>for<sp/>auto-fitting<sp/>and<sp/>content<sp/>width<sp/>submission<sp/>in<sp/>outer<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResizedColumnNextWidth;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResizeLockMinContentsX2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>minimum<sp/>contents<sp/>width<sp/>while<sp/>resizing<sp/>down<sp/>in<sp/>order<sp/>to<sp/>not<sp/>create<sp/>feedback<sp/>loops.<sp/>But<sp/>we<sp/>allow<sp/>growing<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>scale<sp/>to<sp/>be<sp/>able<sp/>to<sp/>rescale<sp/>columns<sp/>on<sp/>font/dpi<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OuterRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>for<sp/>non-scrolling<sp/>table,<sp/>OuterRect.Max.y<sp/>is<sp/>often<sp/>FLT_MAX<sp/>until<sp/>EndTable(),<sp/>unless<sp/>a<sp/>height<sp/>has<sp/>been<sp/>specified<sp/>in<sp/>BeginTable().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InnerRect<sp/>but<sp/>without<sp/>decoration.<sp/>As<sp/>with<sp/>OuterRect,<sp/>for<sp/>non-scrolling<sp/>tables,<sp/>InnerRect.Max.y<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkRect;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerClipRect;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BgClipRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>this<sp/>to<sp/>cpu-clip<sp/>cell<sp/>background<sp/>color<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bg0ClipRectForDrawCmd;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>ImDrawCmd<sp/>clip<sp/>rect<sp/>for<sp/>BG0/1<sp/>channel.<sp/>This<sp/>tends<sp/>to<sp/>be<sp/>==<sp/>OuterWindow-&gt;ClipRect<sp/>at<sp/>BeginTable()<sp/>because<sp/>output<sp/>in<sp/>BG0/BG1<sp/>is<sp/>cpu-clipped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bg2ClipRectForDrawCmd;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>ImDrawCmd<sp/>clip<sp/>rect<sp/>for<sp/>BG2<sp/>channel.<sp/>This<sp/>tends<sp/>to<sp/>be<sp/>a<sp/>correct,<sp/>tight-fit,<sp/>because<sp/>output<sp/>to<sp/>BG2<sp/>are<sp/>done<sp/>by<sp/>widgets<sp/>relying<sp/>on<sp/>regular<sp/>ClipRect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostClipRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>to<sp/>check<sp/>if<sp/>we<sp/>can<sp/>eventually<sp/>merge<sp/>our<sp/>columns<sp/>draw<sp/>calls<sp/>into<sp/>the<sp/>current<sp/>draw<sp/>call<sp/>of<sp/>the<sp/>current<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupInnerClipRect;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>InnerWindow-&gt;ClipRect<sp/>during<sp/>PushTableBackground()/PopTableBackground()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OuterWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parent<sp/>window<sp/>for<sp/>the<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerWindow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>holding<sp/>the<sp/>table<sp/>data<sp/>(==<sp/>OuterWindow<sp/>or<sp/>a<sp/>child<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_text_buffer" kindref="compound">ImGuiTextBuffer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsNames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contiguous<sp/>buffer<sp/>holding<sp/>columns<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter" kindref="compound">ImDrawListSplitter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawSplitter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shortcut<sp/>to<sp/>TempData-&gt;DrawSplitter<sp/>while<sp/>in<sp/>table.<sp/>Isolate<sp/>draw<sp/>commands<sp/>per<sp/>columns<sp/>to<sp/>avoid<sp/>switching<sp/>clip<sp/>rect<sp/>constantly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_column_sort_specs" kindref="compound">ImGuiTableColumnSortSpecs</ref><sp/><sp/><sp/>SortSpecsSingle;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiTableColumnSortSpecs&gt;</ref><sp/>SortSpecsMulti;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Using<sp/>a<sp/>small-vector<sp/>pattern<sp/>would<sp/>be<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_sort_specs" kindref="compound">ImGuiTableSortSpecs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortSpecs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Public<sp/>facing<sp/>sorts<sp/>specs,<sp/>this<sp/>is<sp/>what<sp/>we<sp/>return<sp/>in<sp/>TableGetSortSpecs()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortSpecsCount;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsEnabledCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>enabled<sp/>columns<sp/>(&lt;=<sp/>ColumnsCount)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsEnabledFixedCount;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>enabled<sp/>columns<sp/>(&lt;=<sp/>ColumnsCount)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeclColumnsCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>calls<sp/>to<sp/>TableSetupColumn()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredColumnBody;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>column<sp/>whose<sp/>visible<sp/>region<sp/>is<sp/>being<sp/>hovered.<sp/>Important:<sp/>==<sp/>ColumnsCount<sp/>when<sp/>hovering<sp/>empty<sp/>region<sp/>after<sp/>the<sp/>right-most<sp/>column!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoveredColumnBorder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>column<sp/>whose<sp/>right-border<sp/>is<sp/>being<sp/>hovered<sp/>(for<sp/>resizing).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoFitSingleColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>single<sp/>column<sp/>requesting<sp/>auto-fit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResizedColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>column<sp/>being<sp/>resized.<sp/>Reset<sp/>when<sp/>InstanceCurrent==0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastResizedColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>column<sp/>being<sp/>resized<sp/>from<sp/>previous<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeldHeaderColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>column<sp/>header<sp/>being<sp/>held.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReorderColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>column<sp/>being<sp/>reordered.<sp/>(not<sp/>cleared)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReorderColumnDir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>or<sp/>+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeftMostEnabledColumn;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>left-most<sp/>non-hidden<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RightMostEnabledColumn;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>right-most<sp/>non-hidden<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeftMostStretchedColumn;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>left-most<sp/>stretched<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RightMostStretchedColumn;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>right-most<sp/>stretched<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContextPopupColumn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>right-clicked<sp/>on,<sp/>of<sp/>-1<sp/>if<sp/>opening<sp/>context<sp/>menu<sp/>from<sp/>a<sp/>neutral/empty<sp/>spot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreezeRowsRequest;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Requested<sp/>frozen<sp/>rows<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreezeRowsCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>frozen<sp/>row<sp/>count<sp/>(==<sp/>FreezeRowsRequest,<sp/>or<sp/>==<sp/>0<sp/>when<sp/>no<sp/>scrolling<sp/>offset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreezeColumnsRequest;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Requested<sp/>frozen<sp/>columns<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreezeColumnsCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>frozen<sp/>columns<sp/>count<sp/>(==<sp/>FreezeColumnsRequest,<sp/>or<sp/>==<sp/>0<sp/>when<sp/>no<sp/>scrolling<sp/>offset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowCellDataCurrent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>current<sp/>RowCellData[]<sp/>entry<sp/>in<sp/>current<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableDrawChannelIdx<sp/><sp/><sp/><sp/>DummyDrawChannel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redirect<sp/>non-visible<sp/>columns<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableDrawChannelIdx<sp/><sp/><sp/><sp/>Bg2DrawChannelCurrent;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>Selectable()<sp/>and<sp/>other<sp/>widgets<sp/>drawing<sp/>across<sp/>columns<sp/>after<sp/>the<sp/>freezing<sp/>line.<sp/>Index<sp/>within<sp/>DrawSplitter.Channels[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableDrawChannelIdx<sp/><sp/><sp/><sp/>Bg2DrawChannelUnfrozen;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsLayoutLocked;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>by<sp/>TableUpdateLayout()<sp/>which<sp/>is<sp/>called<sp/>when<sp/>beginning<sp/>the<sp/>first<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsInsideRow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>inside<sp/>TableBeginRow()/TableEndRow().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsInitializing;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsSortSpecsDirty;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsUsingHeaders;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>the<sp/>first<sp/>row<sp/>had<sp/>the<sp/>ImGuiTableRowFlags_Headers<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsContextPopupOpen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>default<sp/>context<sp/>menu<sp/>is<sp/>open<sp/>(also<sp/>see:<sp/>ContextPopupColumn,<sp/>InstanceInteracted).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsSettingsRequestLoad;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsSettingsDirty;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>table<sp/>settings<sp/>have<sp/>changed<sp/>and<sp/>needs<sp/>to<sp/>be<sp/>reported<sp/>into<sp/>ImGuiTableSetttings<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDefaultDisplayOrder;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>display<sp/>order<sp/>is<sp/>unchanged<sp/>from<sp/>default<sp/>(DisplayOrder<sp/>contains<sp/>0...Count-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsResetAllRequest;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsResetDisplayOrderRequest;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsUnfrozenRows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>we<sp/>got<sp/>past<sp/>the<sp/>frozen<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDefaultSizingPolicy;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>if<sp/>user<sp/>didn&apos;t<sp/>explicitly<sp/>set<sp/>a<sp/>sizing<sp/>policy<sp/>in<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryCompacted;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostSkipItems;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>InnerWindow-&gt;SkipItem<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable(),<sp/>because<sp/>we<sp/>will<sp/>overwrite<sp/>InnerWindow-&gt;SkipItem<sp/>on<sp/>a<sp/>per-column<sp/>basis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>LastFrameActive<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table" kindref="compound">~ImGuiTable</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_FREE(RawData);<sp/>}</highlight></codeline>
<codeline lineno="2616"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transient<sp/>data<sp/>that<sp/>are<sp/>only<sp/>needed<sp/>between<sp/>BeginTable()<sp/>and<sp/>EndTable(),<sp/>those<sp/>buffers<sp/>are<sp/>shared<sp/>(1<sp/>per<sp/>level<sp/>of<sp/>stacked<sp/>table).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Accessing<sp/>those<sp/>requires<sp/>chasing<sp/>an<sp/>extra<sp/>pointer<sp/>so<sp/>for<sp/>very<sp/>frequently<sp/>used<sp/>data<sp/>we<sp/>leave<sp/>them<sp/>in<sp/>the<sp/>main<sp/>table<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>also<sp/>leave<sp/>out<sp/>of<sp/>this<sp/>structure<sp/>data<sp/>that<sp/>tend<sp/>to<sp/>be<sp/>particularly<sp/>useful<sp/>for<sp/>debugging/metrics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621" refid="struct_im_gui_table_temp_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IMGUI_API<sp/><ref refid="struct_im_gui_table_temp_data" kindref="compound">ImGuiTableTempData</ref></highlight></codeline>
<codeline lineno="2622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>in<sp/>g.Tables.Buf[]<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastTimeActive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>timestamp<sp/>this<sp/>structure<sp/>was<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserOuterSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outer_size.x<sp/>passed<sp/>to<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter" kindref="compound">ImDrawListSplitter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawSplitter;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupWorkRect;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>InnerWindow-&gt;WorkRect<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupParentWorkRect;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>InnerWindow-&gt;ParentWorkRect<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupPrevLineSize;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>InnerWindow-&gt;DC.PrevLineSize<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupCurrLineSize;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>InnerWindow-&gt;DC.CurrLineSize<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupCursorMaxPos;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>InnerWindow-&gt;DC.CursorMaxPos<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec1" kindref="compound">ImVec1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupColumnsOffset;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>OuterWindow-&gt;DC.ColumnsOffset<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupItemWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>of<sp/>OuterWindow-&gt;DC.ItemWidth<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HostBackupItemWidthStackSize;</highlight><highlight class="comment">//Backup<sp/>of<sp/>OuterWindow-&gt;DC.ItemWidthStack.Size<sp/>at<sp/>the<sp/>end<sp/>of<sp/>BeginTable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_temp_data" kindref="compound">ImGuiTableTempData</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>LastTimeActive<sp/>=<sp/>-1.0f;<sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sizeof()<sp/>~<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642" refid="struct_im_gui_table_column_settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table_column_settings" kindref="compound">ImGuiTableColumnSettings</ref></highlight></codeline>
<codeline lineno="2643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WidthOrWeight;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserID;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>Index;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>DisplayOrder;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/>SortOrder;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsEnabled<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>&quot;Visible&quot;<sp/>in<sp/>ini<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsStretch<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_column_settings" kindref="compound">ImGuiTableColumnSettings</ref>()</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WidthOrWeight<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisplayOrder<sp/>=<sp/>SortOrder<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection<sp/>=<sp/>ImGuiSortDirection_None;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsEnabled<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsStretch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2663"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>designed<sp/>to<sp/>be<sp/>stored<sp/>in<sp/>a<sp/>single<sp/>ImChunkStream<sp/>(1<sp/>header<sp/>followed<sp/>by<sp/>N<sp/>ImGuiTableColumnSettings,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666" refid="struct_im_gui_table_settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_table_settings" kindref="compound">ImGuiTableSettings</ref></highlight></codeline>
<codeline lineno="2667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>0<sp/>to<sp/>invalidate/delete<sp/>the<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SaveFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>data<sp/>we<sp/>want<sp/>to<sp/>save<sp/>using<sp/>the<sp/>Resizable/Reorderable/Sortable/Hideable<sp/>flags<sp/>(could<sp/>be<sp/>using<sp/>its<sp/>own<sp/>flags..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>scale<sp/>to<sp/>be<sp/>able<sp/>to<sp/>rescale<sp/>columns<sp/>on<sp/>font/dpi<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsCount;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiTableColumnIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnsCountMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>columns<sp/>this<sp/>settings<sp/>instance<sp/>can<sp/>store,<sp/>we<sp/>can<sp/>recycle<sp/>a<sp/>settings<sp/>instance<sp/>with<sp/>lower<sp/>number<sp/>of<sp/>columns<sp/>but<sp/>not<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantApply;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>when<sp/>loaded<sp/>from<sp/>.ini<sp/>data<sp/>(to<sp/>enable<sp/>merging/loading<sp/>.ini<sp/>data<sp/>into<sp/>an<sp/>already<sp/>running<sp/>context)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_settings" kindref="compound">ImGuiTableSettings</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table_column_settings" kindref="compound">ImGuiTableColumnSettings</ref>*<sp/><sp/><sp/>GetColumnSettings()<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_table_column_settings" kindref="compound">ImGuiTableColumnSettings</ref>*)(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="2677"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImGui<sp/>internal<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>No<sp/>guarantee<sp/>of<sp/>forward<sp/>compatibility<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ImGui</highlight></codeline>
<codeline lineno="2685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>always<sp/>have<sp/>a<sp/>CurrentWindow<sp/>in<sp/>the<sp/>stack<sp/>(there<sp/>is<sp/>an<sp/>implicit<sp/>&quot;Debug&quot;<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>ever<sp/>crash<sp/>because<sp/>g.CurrentWindow<sp/>is<sp/>NULL<sp/>it<sp/>means<sp/>that<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>ImGui::NewFrame()<sp/>has<sp/>never<sp/>been<sp/>called,<sp/>which<sp/>is<sp/>illegal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>You<sp/>are<sp/>calling<sp/>ImGui<sp/>functions<sp/>after<sp/>ImGui::EndFrame()/ImGui::Render()<sp/>and<sp/>before<sp/>the<sp/>next<sp/>ImGui::NewFrame(),<sp/>which<sp/>is<sp/>also<sp/>illegal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/>GetCurrentWindowRead()<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.CurrentWindow;<sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/>GetCurrentWindow()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/>g.CurrentWindow-&gt;WriteAccessed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.CurrentWindow;<sp/>}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/>FindWindowByID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/>FindWindowByName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateWindowParentAndRootLinks(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiWindowFlags<sp/>flags,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>parent_window);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalcWindowNextAutoFitSize(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsWindowChildOf(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>potential_parent,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>popup_hierarchy,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dock_hierarchy);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsWindowWithinBeginStackOf(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>potential_parent);</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsWindowAbove(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>potential_above,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>potential_below);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsWindowNavFocusable(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowPos(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/>ImGuiCond<sp/>cond<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowSize(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/>ImGuiCond<sp/>cond<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowCollapsed(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>collapsed,<sp/>ImGuiCond<sp/>cond<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowHitTestHole(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowRectAbsToRel(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r)<sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>off<sp/>=<sp/>window-&gt;DC.CursorStartPos;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(r.Min.x<sp/>-<sp/>off.x,<sp/>r.Min.y<sp/>-<sp/>off.y,<sp/>r.Max.x<sp/>-<sp/>off.x,<sp/>r.Max.y<sp/>-<sp/>off.y);<sp/>}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowRectRelToAbs(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r)<sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>off<sp/>=<sp/>window-&gt;DC.CursorStartPos;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(r.Min.x<sp/>+<sp/>off.x,<sp/>r.Min.y<sp/>+<sp/>off.y,<sp/>r.Max.x<sp/>+<sp/>off.x,<sp/>r.Max.y<sp/>+<sp/>off.y);<sp/>}</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows:<sp/>Display<sp/>Order<sp/>and<sp/>Focus<sp/>Order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusTopMostWindowUnderOne(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>under_this_window,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>ignore_window);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BringWindowToFocusFront(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BringWindowToDisplayFront(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BringWindowToDisplayBack(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BringWindowToDisplayBehind(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>above_window);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindWindowDisplayIndex(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/>FindBottomMostVisibleWindowWithinBeginStack(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fonts,<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurrentFont(<ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDefaultFont()<sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.IO.FontDefault<sp/>?<sp/>g.IO.FontDefault<sp/>:<sp/>g.IO.Fonts-&gt;Fonts[0];<sp/>}</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>GetForegroundDrawList(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetForegroundDrawList(window-&gt;Viewport);<sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>context);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shutdown(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>context);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>1.60<sp/>this<sp/>is<sp/>a<sp/>_private_<sp/>function.<sp/>You<sp/>can<sp/>call<sp/>DestroyContext()<sp/>to<sp/>destroy<sp/>the<sp/>context<sp/>created<sp/>by<sp/>CreateContext().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NewFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateInputEvents(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trickle_fast_inputs);</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHoveredWindowAndCaptureFlags();</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartMouseMovingWindow(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartMouseMovingWindowOrNode(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>undock_floating_node);</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateMouseMovingWindowNewFrame();</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateMouseMovingWindowEndFrame();</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>context<sp/>hooks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddContextHook(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_context_hook" kindref="compound">ImGuiContextHook</ref>*<sp/>hook);</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveContextHook(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>context,<sp/>ImGuiID<sp/>hook_to_remove);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallContextHooks(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>context,<sp/>ImGuiContextHookType<sp/>type);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Viewports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TranslateWindowsInViewport(<ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>old_pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>new_pos);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScaleWindowsInViewport(<ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestroyPlatformWindow(<ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurrentViewport(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_platform_monitor" kindref="compound">ImGuiPlatformMonitor</ref>*<sp/><sp/><sp/>GetViewportPlatformMonitor(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindHoveredViewportFromPlatformWindowStack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>mouse_platform_pos);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkIniSettingsDirty();</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkIniSettingsDirty(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearIniSettings();</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window_settings" kindref="compound">ImGuiWindowSettings</ref>*<sp/><sp/>CreateNewWindowSettings(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window_settings" kindref="compound">ImGuiWindowSettings</ref>*<sp/><sp/>FindWindowSettings(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window_settings" kindref="compound">ImGuiWindowSettings</ref>*<sp/><sp/>FindOrCreateWindowSettings(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_settings_handler" kindref="compound">ImGuiSettingsHandler</ref>*<sp/>FindSettingsHandler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_name);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowScroll(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>scroll);<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>-1.0f<sp/>on<sp/>one<sp/>axis<sp/>to<sp/>leave<sp/>as-is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetScrollX(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scroll_x);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetScrollY(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scroll_y);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetScrollFromPosX(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>local_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_x_ratio);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetScrollFromPosY(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>local_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_y_ratio);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Early<sp/>work-in-progress<sp/>API<sp/>(ScrollToItem()<sp/>will<sp/>become<sp/>public)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollToItem(ImGuiScrollFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollToRect(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>rect,<sp/>ImGuiScrollFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollToRectEx(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>rect,<sp/>ImGuiScrollFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight><highlight class="comment">//#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollToBringRectIntoView(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>rect)<sp/>{<sp/>ScrollToRect(window,<sp/>rect,<sp/>ImGuiScrollFlags_KeepVisibleEdgeY);<sp/>}</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Accessors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetItemID()<sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.LastItemData.ID;<sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>ID<sp/>of<sp/>last<sp/>item<sp/>(~~<sp/>often<sp/>same<sp/>ImGui::GetID(label)<sp/>beforehand)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiItemStatusFlags<sp/>GetItemStatusFlags(){<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.LastItemData.StatusFlags;<sp/>}</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiItemFlags<sp/><sp/><sp/>GetItemFlags()<sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.LastItemData.InFlags;<sp/>}</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetActiveID()<sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.ActiveId;<sp/>}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFocusID()<sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.NavId;<sp/>}</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetHoveredID();</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetHoveredID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeepAliveID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>data<sp/>associated<sp/>to<sp/>given<sp/>item<sp/>as<sp/>&quot;edited&quot;,<sp/>used<sp/>by<sp/>IsItemDeactivatedAfterEdit()<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushOverrideID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>given<sp/>value<sp/>as-is<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>ID<sp/>stack<sp/>(whereas<sp/>PushID<sp/>combines<sp/>old<sp/>and<sp/>new<sp/>hashes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetIDWithSeed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id_end,<sp/>ImGuiID<sp/>seed);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Helpers<sp/>for<sp/>widget<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_baseline_y<sp/>=<sp/>-1.0f);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_baseline_y<sp/>=<sp/>-1.0f);</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemAdd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>*<sp/>nav_bb<sp/>=<sp/>NULL,<sp/>ImGuiItemFlags<sp/>extra_flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemHoverable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsClippedEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastItemData(ImGuiID<sp/>item_id,<sp/>ImGuiItemFlags<sp/>in_flags,<sp/>ImGuiItemStatusFlags<sp/>status_flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>item_rect);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalcItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_w,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_h);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalcWrapWidthForPos(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_pos_x);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushMultiItemsWidths(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width_full);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsItemToggledSelection();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Was<sp/>the<sp/>last<sp/>item<sp/>selection<sp/>toggled?<sp/>(after<sp/>Selectable(),<sp/>TreeNode()<sp/>etc.<sp/>We<sp/>only<sp/>returns<sp/>toggle<sp/>_event_<sp/>in<sp/>order<sp/>to<sp/>handle<sp/>clipping<sp/>correctly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetContentRegionMaxAbs();</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShrinkWidths(<ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref>*<sp/>items,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width_excess);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>stacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushItemFlag(ImGuiItemFlags<sp/><ref refid="structoption" kindref="compound">option</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopItemFlag();</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>refactoring<sp/>focus/nav/tabbing<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>have<sp/>old/custom<sp/>copy-and-pasted<sp/>widgets<sp/>that<sp/>used<sp/>FocusableItemRegister():</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(Old)<sp/>IMGUI_VERSION_NUM<sp/><sp/>&lt;<sp/>18209:<sp/>using<sp/>&apos;ItemAdd(....)&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>&apos;bool<sp/>tab_focused<sp/>=<sp/>FocusableItemRegister(...)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(Old)<sp/>IMGUI_VERSION_NUM<sp/>&gt;=<sp/>18209:<sp/>using<sp/>&apos;ItemAdd(...,<sp/>ImGuiItemAddFlags_Focusable)&apos;<sp/><sp/>and<sp/>&apos;bool<sp/>tab_focused<sp/>=<sp/>(GetItemStatusFlags()<sp/>&amp;<sp/>ImGuiItemStatusFlags_Focused)<sp/>!=<sp/>0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(New)<sp/>IMGUI_VERSION_NUM<sp/>&gt;=<sp/>18413:<sp/>using<sp/>&apos;ItemAdd(...,<sp/>ImGuiItemFlags_Inputable)&apos;<sp/><sp/><sp/><sp/><sp/>and<sp/>&apos;bool<sp/>tab_focused<sp/>=<sp/>(GetItemStatusFlags()<sp/>&amp;<sp/>ImGuiItemStatusFlags_FocusedTabbing)<sp/>!=<sp/>0<sp/>||<sp/>g.NavActivateInputId<sp/>==<sp/>id&apos;<sp/>(WIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Widget<sp/>code<sp/>are<sp/>simplified<sp/>as<sp/>there&apos;s<sp/>no<sp/>need<sp/>to<sp/>call<sp/>FocusableItemUnregister()<sp/>while<sp/>managing<sp/>the<sp/>transition<sp/>from<sp/>regular<sp/>widget<sp/>to<sp/>TempInputText()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FocusableItemRegister(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/><sp/>{<sp/>IM_ASSERT(0);<sp/>IM_UNUSED(window);<sp/>IM_UNUSED(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>pass<sp/>ImGuiItemAddFlags_Inputable<sp/>flag<sp/>to<sp/>ItemAdd()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FocusableItemUnregister(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(0);<sp/>IM_UNUSED(window);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>unnecessary:<sp/>TempInputText()<sp/>uses<sp/>ImGuiInputTextFlags_MergedItem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Logging/Capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogBegin(ImGuiLogType<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>auto_open_depth);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>BeginCapture()<sp/>when<sp/>we<sp/>design<sp/>v2<sp/>api,<sp/>for<sp/>now<sp/>stay<sp/>under<sp/>the<sp/>radar<sp/>by<sp/>using<sp/>the<sp/>old<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogToBuffer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>auto_open_depth<sp/>=<sp/>-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>logging/capturing<sp/>to<sp/>internal<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogRenderedText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>ref_pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>suffix);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Popups,<sp/>Modals,<sp/>Tooltips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginChildEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>border,<sp/>ImGuiWindowFlags<sp/>flags);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupEx(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiPopupFlags<sp/>popup_flags<sp/>=<sp/>ImGuiPopupFlags_None);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClosePopupToLevel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restore_focus_to_window_under_popup);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClosePopupsOverWindow(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>ref_window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restore_focus_to_window_under_popup);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClosePopupsExceptModals();</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsPopupOpen(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiPopupFlags<sp/>popup_flags);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginPopupEx(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiWindowFlags<sp/>extra_flags);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginTooltipEx(ImGuiTooltipFlags<sp/>tooltip_flags,<sp/>ImGuiWindowFlags<sp/>extra_window_flags);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPopupAllowedExtentRect(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/>GetTopMostPopupModal();</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/><sp/>GetTopMostAndVisiblePopupModal();</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindBestWindowPosForPopup(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindBestWindowPosForPopupEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>ref_pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/>ImGuiDir*<sp/>last_dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r_outer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r_avoid,<sp/>ImGuiPopupPositionPolicy<sp/>policy);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Menus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginViewportSideBar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/>ImGuiDir<sp/>dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/>ImGuiWindowFlags<sp/>window_flags);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginMenuEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>icon,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MenuItemEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>icon,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shortcut<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginComboPopup(ImGuiID<sp/>popup_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiComboFlags<sp/>flags);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginComboPreview();</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndComboPreview();</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gamepad/Keyboard<sp/>Navigation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitWindow(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_reinit);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavInitRequestApplyResult();</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestButNoResultYet();</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestSubmit(ImGuiDir<sp/>move_dir,<sp/>ImGuiDir<sp/>clip_dir,<sp/>ImGuiNavMoveFlags<sp/>move_flags,<sp/>ImGuiScrollFlags<sp/>scroll_flags);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestForward(ImGuiDir<sp/>move_dir,<sp/>ImGuiDir<sp/>clip_dir,<sp/>ImGuiNavMoveFlags<sp/>move_flags,<sp/>ImGuiScrollFlags<sp/>scroll_flags);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestResolveWithLastItem(<ref refid="struct_im_gui_nav_item_data" kindref="compound">ImGuiNavItemData</ref>*<sp/><ref refid="structresult" kindref="compound">result</ref>);</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestApplyResult();</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestTryWrapping(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiNavMoveFlags<sp/>move_flags);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>GetNavInputName(ImGuiNavInput<sp/>n);</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetNavInputAmount(ImGuiNavInput<sp/>n,<sp/>ImGuiInputReadMode<sp/>mode);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetNavInputAmount2d(ImGuiNavDirSourceFlags<sp/>dir_sources,<sp/>ImGuiInputReadMode<sp/>mode,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>slow_factor<sp/>=<sp/>0.0f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fast_factor<sp/>=<sp/>0.0f);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalcTypematicRepeatAmount(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>repeat_delay,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>repeat_rate);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActivateItem(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remotely<sp/>activate<sp/>a<sp/>button,<sp/>checkbox,<sp/>tree<sp/>node<sp/>etc.<sp/>given<sp/>its<sp/>unique<sp/>ID.<sp/>activation<sp/>is<sp/>queued<sp/>and<sp/>processed<sp/>on<sp/>the<sp/>next<sp/>frame<sp/>when<sp/>the<sp/>item<sp/>is<sp/>encountered<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNavID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiNavLayer<sp/>nav_layer,<sp/>ImGuiID<sp/>focus_scope_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>rect_rel);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Focus<sp/>Scope<sp/>(WIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>generally<sp/>used<sp/>to<sp/>identify<sp/>a<sp/>selection<sp/>set<sp/>(multiple<sp/>of<sp/>which<sp/>may<sp/>be<sp/>in<sp/>the<sp/>same<sp/>window),<sp/>as<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>patterns<sp/>generally<sp/>need<sp/>to<sp/>react<sp/>(e.g.<sp/>clear<sp/>selection)<sp/>when<sp/>landing<sp/>on<sp/>an<sp/>item<sp/>of<sp/>the<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushFocusScope(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopFocusScope();</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFocusedFocusScope()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.NavFocusScopeId;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Focus<sp/>scope<sp/>which<sp/>is<sp/>actually<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFocusScope()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.CurrentWindow-&gt;DC.NavFocusScopeIdCurrent;<sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Focus<sp/>scope<sp/>we<sp/>are<sp/>outputting<sp/>into,<sp/>set<sp/>by<sp/>PushFocusScope()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Eventually<sp/>we<sp/>should<sp/>aim<sp/>to<sp/>move<sp/>e.g.<sp/>IsActiveIdUsingKey()<sp/>into<sp/>IsKeyXXX<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsNamedKey(ImGuiKey<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key<sp/>&gt;=<sp/>ImGuiKey_NamedKey_BEGIN<sp/>&amp;&amp;<sp/>key<sp/>&lt;<sp/>ImGuiKey_NamedKey_END;<sp/>}</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsLegacyKey(ImGuiKey<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key<sp/>&gt;=<sp/>ImGuiKey_LegacyNativeKey_BEGIN<sp/>&amp;&amp;<sp/>key<sp/>&lt;<sp/>ImGuiKey_LegacyNativeKey_END;<sp/>}</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_key_data" kindref="compound">ImGuiKeyData</ref>*<sp/>GetKeyData(ImGuiKey<sp/>key);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetItemUsingMouseWheel();</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingNavAndKeys();</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsActiveIdUsingNavDir(ImGuiDir<sp/>dir)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(g.ActiveIdUsingNavDirMask<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>dir))<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsActiveIdUsingNavInput(ImGuiNavInput<sp/>input)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(g.ActiveIdUsingNavInputMask<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>input))<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsActiveIdUsingKey(ImGuiKey<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(IsNamedKey(key));<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.ActiveIdUsingKeyInputMask.TestBit(key<sp/>-<sp/>ImGuiKey_NamedKey_BEGIN);<sp/>}</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingKey(ImGuiKey<sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(IsNamedKey(key));<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/>g.ActiveIdUsingKeyInputMask.SetBit(key<sp/>-<sp/>ImGuiKey_NamedKey_BEGIN);<sp/>}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsMouseDragPastThreshold(ImGuiMouseButton<sp/>button,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lock_threshold<sp/>=<sp/>-1.0f);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsNavInputDown(ImGuiNavInput<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.IO.NavInputs[n]<sp/>&gt;<sp/>0.0f;<sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsNavInputTest(ImGuiNavInput<sp/>n,<sp/>ImGuiInputReadMode<sp/>rm)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(GetNavInputAmount(n,<sp/>rm)<sp/>&gt;<sp/>0.0f);<sp/>}</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiKeyModFlags<sp/>GetMergedKeyModFlags();</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_KEYIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsKeyPressedMap(ImGuiKey<sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gtx__wrap_1ga809650c6310ea7c42666e918c117fb6f" kindref="member">repeat</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>IM_ASSERT(IsNamedKey(key));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsKeyPressed(key,<sp/><ref refid="group__gtx__wrap_1ga809650c6310ea7c42666e918c117fb6f" kindref="member">repeat</ref>);<sp/>}</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Docking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(some<sp/>functions<sp/>are<sp/>only<sp/>declared<sp/>in<sp/>imgui.cpp,<sp/>see<sp/>Docking<sp/>section)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextInitialize(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextShutdown(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextClearNodes(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/>ImGuiID<sp/>root_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_settings_refs);<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>root_id==0<sp/>to<sp/>clear<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextRebuildNodes(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextNewFrameUpdateUndocking(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextNewFrameUpdateDocking(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx);</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextEndFrame(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextGenNodeID(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx);</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextQueueDock(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>target,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>target_node,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>payload,<sp/>ImGuiDir<sp/>split_dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>split_ratio,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split_outer);</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextQueueUndockWindow(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextQueueUndockNode(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextCalcDropPosForDocking(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>target,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>target_node,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>payload,<sp/>ImGuiDir<sp/>split_dir,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split_outer,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>out_pos);</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNodeBeginAmendTabBar(<ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNodeEndAmendTabBar();</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/>DockNodeGetRootNode(<ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;ParentNode)<sp/>node<sp/>=<sp/>node-&gt;ParentNode;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;<sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNodeIsInHierarchyOf(<ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>parent)<sp/>{<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>parent)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>node<sp/>=<sp/>node-&gt;ParentNode;<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNodeGetDepth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;ParentNode)<sp/>{<sp/>node<sp/>=<sp/>node-&gt;ParentNode;<sp/>depth++;<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>depth;<sp/>}</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockNodeGetWindowMenuButtonId(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImHashStr(</highlight><highlight class="stringliteral">&quot;#COLLAPSE&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>node-&gt;ID);<sp/>}</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/>GetWindowDockNode()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.CurrentWindow-&gt;DockNode;<sp/>}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWindowAlwaysWantOwnTabBar(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDocked(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p_open);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDockableDragDropSource(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDockableDragDropTarget(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowDock(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiID<sp/>dock_id,<sp/>ImGuiCond<sp/>cond);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Docking<sp/>-<sp/>Builder<sp/>function<sp/>needs<sp/>to<sp/>be<sp/>generally<sp/>called<sp/>before<sp/>the<sp/>node<sp/>is<sp/>used/submitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>DockBuilderXXX<sp/>functions<sp/>are<sp/>designed<sp/>to<sp/>_eventually_<sp/>become<sp/>a<sp/>public<sp/>API,<sp/>but<sp/>it<sp/>is<sp/>too<sp/>early<sp/>to<sp/>expose<sp/>it<sp/>and<sp/>guarantee<sp/>stability.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Do<sp/>not<sp/>hold<sp/>on<sp/>ImGuiDockNode*<sp/>pointers!<sp/>They<sp/>may<sp/>be<sp/>invalidated<sp/>by<sp/>any<sp/>split/merge/remove<sp/>operation<sp/>and<sp/>every<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>To<sp/>create<sp/>a<sp/>DockSpace()<sp/>node,<sp/>make<sp/>sure<sp/>to<sp/>set<sp/>the<sp/>ImGuiDockNodeFlags_DockSpace<sp/>flag<sp/>when<sp/>calling<sp/>DockBuilderAddNode().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>You<sp/>can<sp/>create<sp/>dockspace<sp/>nodes<sp/>(attached<sp/>to<sp/>a<sp/>window)<sp/>_or_<sp/>floating<sp/>nodes<sp/>(carry<sp/>its<sp/>own<sp/>window)<sp/>with<sp/>this<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>DockBuilderSplitNode()<sp/>create<sp/>2<sp/>child<sp/>nodes<sp/>within<sp/>1<sp/>node.<sp/>The<sp/>initial<sp/>node<sp/>becomes<sp/>a<sp/>parent<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>you<sp/>intend<sp/>to<sp/>split<sp/>the<sp/>node<sp/>immediately<sp/>after<sp/>creation<sp/>using<sp/>DockBuilderSplitNode(),<sp/>make<sp/>sure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>call<sp/>DockBuilderSetNodeSize()<sp/>beforehand.<sp/>If<sp/>you<sp/>don&apos;t,<sp/>the<sp/>resulting<sp/>split<sp/>sizes<sp/>may<sp/>not<sp/>be<sp/>reliable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>DockBuilderFinish()<sp/>after<sp/>you<sp/>are<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderDockWindow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>window_name,<sp/>ImGuiID<sp/>node_id);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*DockBuilderGetNode(ImGuiID<sp/>node_id);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/><sp/><sp/>DockBuilderGetCentralNode(ImGuiID<sp/>node_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node<sp/>=<sp/>DockBuilderGetNode(node_id);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DockNodeGetRootNode(node)-&gt;CentralNode;<sp/>}</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderAddNode(ImGuiID<sp/>node_id<sp/>=<sp/>0,<sp/>ImGuiDockNodeFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderRemoveNode(ImGuiID<sp/>node_id);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>node<sp/>and<sp/>all<sp/>its<sp/>child,<sp/>undock<sp/>all<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderRemoveNodeDockedWindows(ImGuiID<sp/>node_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_settings_refs<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderRemoveNodeChildNodes(ImGuiID<sp/>node_id);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>all<sp/>split/hierarchy.<sp/>All<sp/>remaining<sp/>docked<sp/>windows<sp/>will<sp/>be<sp/>re-docked<sp/>to<sp/>the<sp/>remaining<sp/>root<sp/>node<sp/>(node_id).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderSetNodePos(ImGuiID<sp/>node_id,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderSetNodeSize(ImGuiID<sp/>node_id,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderSplitNode(ImGuiID<sp/>node_id,<sp/>ImGuiDir<sp/>split_dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_ratio_for_node_at_dir,<sp/>ImGuiID*<sp/>out_id_at_dir,<sp/>ImGuiID*<sp/>out_id_at_opposite_dir);<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>2<sp/>child<sp/>nodes<sp/>in<sp/>this<sp/>parent<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderCopyDockSpace(ImGuiID<sp/>src_dockspace_id,<sp/>ImGuiID<sp/>dst_dockspace_id,<sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;const char*&gt;</ref>*<sp/>in_window_remap_pairs);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderCopyNode(ImGuiID<sp/>src_node_id,<sp/>ImGuiID<sp/>dst_node_id,<sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiID&gt;</ref>*<sp/>out_node_remap_pairs);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderCopyWindowSettings(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dst_name);</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockBuilderFinish(ImGuiID<sp/>node_id);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>and<sp/>Drop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDragDropTargetCustom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearDragDrop();</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDragDropPayloadBeingAccepted();</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>Columns<sp/>API<sp/>(this<sp/>is<sp/>not<sp/>exposed<sp/>because<sp/>we<sp/>will<sp/>encourage<sp/>transitioning<sp/>to<sp/>the<sp/>Tables<sp/>API)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowClipRectBeforeSetChannel(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>clip_rect);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginColumns(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>ImGuiOldColumnFlags<sp/>flags<sp/>=<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>setup<sp/>number<sp/>of<sp/>columns.<sp/>use<sp/>an<sp/>identifier<sp/>to<sp/>distinguish<sp/>multiple<sp/>column<sp/>sets.<sp/>close<sp/>with<sp/>EndColumns().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndColumns();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushColumnClipRect(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_index);</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushColumnsBackground();</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopColumnsBackground();</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetColumnsID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>*<sp/>FindOrCreateColumns(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetColumnOffsetFromNorm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>*<sp/>columns,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>offset_norm);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetColumnNormFromOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>*<sp/>columns,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tables:<sp/>Candidates<sp/>for<sp/>public<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableOpenContextMenu(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSetColumnWidth(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSetColumnSortDirection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n,<sp/>ImGuiSortDirection<sp/>sort_direction,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append_to_sort_specs);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGetHoveredColumn();<sp/></highlight><highlight class="comment">//<sp/>May<sp/>use<sp/>(TableGetColumnFlags()<sp/>&amp;<sp/>ImGuiTableColumnFlags_IsHovered)<sp/>instead.<sp/>Return<sp/>hovered<sp/>column.<sp/>return<sp/>-1<sp/>when<sp/>table<sp/>is<sp/>not<sp/>hovered.<sp/>return<sp/>columns_count<sp/>if<sp/>the<sp/>unused<sp/>space<sp/>at<sp/>the<sp/>right<sp/>of<sp/>visible<sp/>columns<sp/>is<sp/>hovered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGetHeaderRowHeight();</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TablePushBackgroundChannel();</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TablePopBackgroundChannel();</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tables:<sp/>Internals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><sp/><sp/>GetCurrentTable()<sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.CurrentTable;<sp/>}</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><sp/><sp/>TableFindByID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginTableEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns_count,<sp/>ImGuiTableFlags<sp/>flags<sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>outer_size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inner_width<sp/>=<sp/>0.0f);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableBeginInitMemory(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns_count);</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableBeginApplyRequests(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSetupDrawChannels(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableUpdateLayout(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableUpdateBorders(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableUpdateColumnsWeightFromWidth(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableDrawBorders(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableDrawContextMenu(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableMergeDrawChannels(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSortSpecsSanitize(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSortSpecsBuild(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiSortDirection<sp/>TableGetColumnNextSortDirection(<ref refid="struct_im_gui_table_column" kindref="compound">ImGuiTableColumn</ref>*<sp/>column);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableFixColumnSortDirection(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/><ref refid="struct_im_gui_table_column" kindref="compound">ImGuiTableColumn</ref>*<sp/>column);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGetColumnWidthAuto(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/><ref refid="struct_im_gui_table_column" kindref="compound">ImGuiTableColumn</ref>*<sp/>column);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableBeginRow(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableEndRow(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableBeginCell(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableEndCell(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGetCellBgRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>TableGetColumnName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGetColumnResizeID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instance_no<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGetMaxColumnWidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSetColumnWidthAutoSingle(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_n);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSetColumnWidthAutoAll(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableRemove(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGcCompactTransientBuffers(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGcCompactTransientBuffers(<ref refid="struct_im_gui_table_temp_data" kindref="compound">ImGuiTableTempData</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableGcCompactSettings();</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tables:<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableLoadSettings(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSaveSettings(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableResetSettings(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_table_settings" kindref="compound">ImGuiTableSettings</ref>*<sp/><sp/><sp/>TableGetBoundSettings(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableSettingsInstallHandler(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>context);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_table_settings" kindref="compound">ImGuiTableSettings</ref>*<sp/><sp/><sp/>TableSettingsCreate(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns_count);</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_table_settings" kindref="compound">ImGuiTableSettings</ref>*<sp/><sp/><sp/>TableSettingsFindByID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tab<sp/>Bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginTabBarEx(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiTabBarFlags<sp/>flags,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>dock_node);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>TabBarFindTabByID(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiID<sp/>tab_id);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>TabBarFindMostRecentlySelectedTabForActiveWindow(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarAddTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiTabItemFlags<sp/>tab_flags,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarRemoveTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiID<sp/>tab_id);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarCloseTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarQueueReorder(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarQueueReorderFromMousePos(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>mouse_pos);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarProcessReorder(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabItemEx(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p_open,<sp/>ImGuiTabItemFlags<sp/>flags,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>docked_window);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabItemCalcSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_close_button);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabItemBackground(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiTabItemFlags<sp/>flags,<sp/>ImU32<sp/>col);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabItemLabelAndCloseButton(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiTabItemFlags<sp/>flags,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>frame_padding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiID<sp/>tab_id,<sp/>ImGuiID<sp/>close_button_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_contents_visible,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_just_closed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_text_clipped);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AVOID<sp/>USING<sp/>OUTSIDE<sp/>OF<sp/>IMGUI.CPP!<sp/>NOT<sp/>FOR<sp/>PUBLIC<sp/>CONSUMPTION.<sp/>THOSE<sp/>FUNCTIONS<sp/>ARE<sp/>A<sp/>MESS.<sp/>THEIR<sp/>SIGNATURE<sp/>AND<sp/>BEHAVIOR<sp/>WILL<sp/>CHANGE,<sp/>THEY<sp/>NEED<sp/>TO<sp/>BE<sp/>REFACTORED<sp/>INTO<sp/>SOMETHING<sp/>DECENT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>All<sp/>position<sp/>are<sp/>in<sp/>absolute<sp/>pixels<sp/>coordinates<sp/>(we<sp/>are<sp/>never<sp/>using<sp/>window<sp/>coordinates<sp/>internally)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hide_text_after_hash<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextWrapped(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_width);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextClipped(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>text_size_if_known,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>align<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>*<sp/>clip_rect<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextClippedEx(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>text_size_if_known,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>align<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>*<sp/>clip_rect<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextEllipsis(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos_max,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>clip_max_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ellipsis_max_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>text_size_if_known);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrame(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_max,<sp/>ImU32<sp/>fill_col,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>border<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding<sp/>=<sp/>0.0f);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrameBorder(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_max,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding<sp/>=<sp/>0.0f);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderColorRectWithAlphaCheckerboard(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_max,<sp/>ImU32<sp/>fill_col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grid_step,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>grid_off,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding<sp/>=<sp/>0.0f,<sp/>ImDrawFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderNavHighlight(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiNavHighlightFlags<sp/>flags<sp/>=<sp/>ImGuiNavHighlightFlags_TypeDefault);<sp/></highlight><highlight class="comment">//<sp/>Navigation<sp/>highlight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>FindRenderedTextEnd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end<sp/>=<sp/>NULL);<sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>optional<sp/>##<sp/>from<sp/>which<sp/>we<sp/>stop<sp/>displaying<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>helpers<sp/>(those<sp/>functions<sp/>don&apos;t<sp/>access<sp/>any<sp/>ImGui<sp/>state!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrow(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/>ImU32<sp/>col,<sp/>ImGuiDir<sp/>dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1.0f);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderBullet(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/>ImU32<sp/>col);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderCheckMark(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/>ImU32<sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderMouseCursor(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/>ImGuiMouseCursor<sp/>mouse_cursor,<sp/>ImU32<sp/>col_fill,<sp/>ImU32<sp/>col_border,<sp/>ImU32<sp/>col_shadow);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrowPointingAt(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>half_sz,<sp/>ImGuiDir<sp/>direction,<sp/>ImU32<sp/>col);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrowDockMenu(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sz,<sp/>ImU32<sp/>col);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderRectFilledRangeH(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>rect,<sp/>ImU32<sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_start_norm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_end_norm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderRectFilledWithHole(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>outer,<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>inner,<sp/>ImU32<sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding);</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImDrawFlags<sp/><sp/><sp/>CalcRoundingFlagsForRectInRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>r_outer,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[1.71:<sp/>2019/06/07:<sp/>Updating<sp/>prototypes<sp/>of<sp/>some<sp/>of<sp/>the<sp/>internal<sp/>functions.<sp/>Leaving<sp/>those<sp/>for<sp/>reference<sp/>for<sp/>a<sp/>short<sp/>while]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RenderArrow(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/>ImGuiDir<sp/>dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale=1.0f)<sp/>{<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();<sp/>RenderArrow(window-&gt;DrawList,<sp/>pos,<sp/>GetColorU32(ImGuiCol_Text),<sp/>dir,<sp/>scale);<sp/>}</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RenderBullet(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();<sp/>RenderBullet(window-&gt;DrawList,<sp/>pos,<sp/>GetColorU32(ImGuiCol_Text));<sp/>}</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end<sp/>=<sp/>NULL,<sp/>ImGuiTextFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ButtonEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/>ImGuiButtonFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseButton(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CollapseButton(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>dock_node);</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrowButtonEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/>ImGuiDir<sp/>dir,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size_arg,<sp/>ImGuiButtonFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scrollbar(ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScrollbarEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>,<sp/>ImS64*<sp/>p_scroll_v,<sp/>ImS64<sp/>avail_v,<sp/>ImS64<sp/>contents_v,<sp/>ImDrawFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageButtonEx(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImTextureID<sp/>texture_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>padding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>bg_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>tint_col);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWindowScrollbarRect(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWindowScrollbarID(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWindowResizeCornerID(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);<sp/></highlight><highlight class="comment">//<sp/>0..3:<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/>ImGuiID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWindowResizeBorderID(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiDir<sp/>dir);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SeparatorEx(ImGuiSeparatorFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckboxFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImS64*<sp/>flags,<sp/>ImS64<sp/>flags_value);</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckboxFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImU64*<sp/>flags,<sp/>ImU64<sp/>flags_value);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Widgets<sp/>low-level<sp/>behaviors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ButtonBehavior(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_hovered,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_held,<sp/>ImGuiButtonFlags<sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragBehavior(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SliderBehavior(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags,<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>*<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplitterBehavior(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="group__gtx__std__based__type_1gaf471290b8165697d088a943263fc8af1" kindref="member">size1</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="group__gtx__std__based__type_1ga432937b68775c79e4556150e769c6e6b" kindref="member">size2</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_size1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_size2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hover_extend<sp/>=<sp/>0.0f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hover_visibility_delay<sp/>=<sp/>0.0f,<sp/>ImU32<sp/>bg_col<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeNodeBehavior(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiTreeNodeFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeNodeBehaviorIsOpen(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiTreeNodeFlags<sp/>flags<sp/>=<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consume<sp/>previous<sp/>SetNextItemOpen()<sp/>data,<sp/>if<sp/>any.<sp/>May<sp/>return<sp/>true<sp/>when<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreePushOverrideID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Template<sp/>functions<sp/>are<sp/>instantiated<sp/>in<sp/>imgui_widgets.cpp<sp/>for<sp/>a<sp/>finite<sp/>number<sp/>of<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>them<sp/>externally<sp/>(for<sp/>custom<sp/>widget)<sp/>you<sp/>may<sp/>need<sp/>an<sp/>&quot;extern<sp/>template&quot;<sp/>statement<sp/>in<sp/>your<sp/>code<sp/>in<sp/>order<sp/>to<sp/>link<sp/>to<sp/>existing<sp/>instances<sp/>and<sp/>silence<sp/>Clang<sp/>warnings<sp/>(see<sp/>#2036).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>&quot;<sp/>extern<sp/>template<sp/>IMGUI_API<sp/>float<sp/>RoundScalarWithFormatT&lt;float,<sp/>float&gt;(const<sp/>char*<sp/>format,<sp/>ImGuiDataType<sp/>data_type,<sp/>float<sp/>v);<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNED_T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOAT_T&gt;<sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ScaleRatioFromValueT(ImGuiDataType<sp/>data_type,<sp/>T<sp/>v,<sp/>T<sp/>v_min,<sp/>T<sp/>v_max,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_logarithmic,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logarithmic_zero_epsilon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_deadzone_size);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNED_T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOAT_T&gt;<sp/><sp/><sp/>IMGUI_API<sp/>T<sp/><sp/><sp/><sp/><sp/>ScaleValueFromRatioT(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t,<sp/>T<sp/>v_min,<sp/>T<sp/>v_max,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_logarithmic,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logarithmic_zero_epsilon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_deadzone_size);</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNED_T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOAT_T&gt;<sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>DragBehaviorT(ImGuiDataType<sp/>data_type,<sp/>T*<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/>T<sp/>v_min,<sp/>T<sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNED_T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOAT_T&gt;<sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>SliderBehaviorT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType<sp/>data_type,<sp/>T*<sp/>v,<sp/>T<sp/>v_min,<sp/>T<sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags,<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>*<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNED_T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_API<sp/>T<sp/><sp/><sp/><sp/><sp/>RoundScalarWithFormatT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiDataType<sp/>data_type,<sp/>T<sp/>v);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>CheckboxFlagsT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>T*<sp/>flags,<sp/>T<sp/>flags_value);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>type<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_data_type_info" kindref="compound">ImGuiDataTypeInfo</ref>*<sp/><sp/>DataTypeGetInfo(ImGuiDataType<sp/>data_type);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeFormatString(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeApplyOp(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg_1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg_2);</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeApplyOpFromText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>initial_value_buf,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format);</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeCompare(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg_1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg_2);</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeClamp(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InputText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputTextEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hint,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempInputText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/>ImGuiInputTextFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempInputScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_clamp_min<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_clamp_max<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempInputIsActive(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.TempInputId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>GetInputTextState(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(g.InputTextState.ID<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>?<sp/>&amp;g.InputTextState<sp/>:<sp/>NULL;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>input<sp/>text<sp/>state<sp/>if<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorTooltip(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>col,<sp/>ImGuiColorEditFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditOptionsPopup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>col,<sp/>ImGuiColorEditFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorPickerOptionsPopup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>ref_col,<sp/>ImGuiColorEditFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlotEx(ImGuiPlotType<sp/>plot_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>(*values_getter)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>overlay_text,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_max,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>frame_size);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shade<sp/>functions<sp/>(write<sp/>over<sp/>already<sp/>created<sp/>vertices)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShadeVertsLinearColorGradientKeepAlpha(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_start_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_end_idx,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>gradient_p0,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>gradient_p1,<sp/>ImU32<sp/>col0,<sp/>ImU32<sp/>col1);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShadeVertsLinearUV(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_start_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_end_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_b,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clamp);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Garbage<sp/>collection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GcCompactTransientMiscBuffers();</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GcCompactTransientWindowBuffers(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GcAwakeTransientWindowBuffers(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Debug<sp/>Tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ErrorCheckEndFrameRecover(ImGuiErrorLogCallback<sp/>log_callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ErrorCheckEndWindowRecover(ImGuiErrorLogCallback<sp/>log_callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugDrawItemRect(ImU32<sp/>col<sp/>=<sp/>IM_COL32(255,0,0,255))<sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;<sp/>GetForegroundDrawList(window)-&gt;AddRect(g.LastItemData.Rect.Min,<sp/>g.LastItemData.Rect.Max,<sp/>col);<sp/>}</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugStartItemPicker()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/>g.DebugItemPickerActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowFontAtlas(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas);</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugHookIdInfo(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data_id_end);</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeColumns(<ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>*<sp/>columns);</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeDockNode(<ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeDrawList(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeDrawCmdShowMeshAndBoundingBox(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>out_draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_cmd" kindref="compound">ImDrawCmd</ref>*<sp/>draw_cmd,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_mesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_aabb);</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeFont(<ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeStorage(<ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref>*<sp/>storage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label);</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeTabBar(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeTable(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeTableSettings(<ref refid="struct_im_gui_table_settings" kindref="compound">ImGuiTableSettings</ref>*<sp/>settings);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeWindow(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeWindowSettings(<ref refid="struct_im_gui_window_settings" kindref="compound">ImGuiWindowSettings</ref>*<sp/>settings);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeWindowsList(<ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImGuiWindow*&gt;</ref>*<sp/>windows,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label);</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeWindowsListByBeginStackParent(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>**<sp/>windows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windows_size,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>parent_in_begin_stack);</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugNodeViewport(<ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport);</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugRenderViewportThumbnail(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb);</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ImGui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontAtlas<sp/>internal<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>structure<sp/>is<sp/>likely<sp/>to<sp/>evolve<sp/>as<sp/>we<sp/>add<sp/>support<sp/>for<sp/>incremental<sp/>atlas<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157" refid="struct_im_font_builder_i_o" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_font_builder_i_o" kindref="compound">ImFontBuilderIO</ref></highlight></codeline>
<codeline lineno="3158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/><sp/><sp/><sp/>(*FontBuilder_Build)(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas);</highlight></codeline>
<codeline lineno="3160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>for<sp/>font<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_STB_TRUETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_builder_i_o" kindref="compound">ImFontBuilderIO</ref>*<sp/>ImFontAtlasGetBuilderForStbTruetype();</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildInit(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildSetupFont(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font,<sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_config,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ascent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>descent);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildPackCustomRects(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stbrp_context_opaque);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildFinish(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildRender8bppRectFromString(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>in_marker_char,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>in_marker_pixel_value);</highlight></codeline>
<codeline lineno="3171"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildRender32bppRectFromString(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>in_marker_char,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_marker_pixel_value);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildMultiplyCalcLookupTable(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>out_table[256],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>in_multiply_factor);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal">IMGUI_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImFontAtlasBuildMultiplyRectAlpha8(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structtable" kindref="compound">table</ref>[256],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Test<sp/>Engine<sp/>specific<sp/>hooks<sp/>(imgui_test_engine)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_TEST_ENGINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiTestEngineHook_ItemAdd(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiTestEngineHook_ItemInfo(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiItemStatusFlags<sp/>flags);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiTestEngineHook_Log(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...);</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>ImGuiTestEngine_FindItemDebugLabel(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_TEST_ENGINE_ITEM_ADD(_BB,_ID)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(g.TestEngineHookItems)<sp/>ImGuiTestEngineHook_ItemAdd(&amp;g,<sp/>_BB,<sp/>_ID)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>item<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_TEST_ENGINE_ITEM_INFO(_ID,_LABEL,_FLAGS)<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(g.TestEngineHookItems)<sp/>ImGuiTestEngineHook_ItemInfo(&amp;g,<sp/>_ID,<sp/>_LABEL,<sp/>_FLAGS)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>item<sp/>label<sp/>and<sp/>status<sp/>flags<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_TEST_ENGINE_LOG(_FMT,...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(g.TestEngineHookItems)<sp/>ImGuiTestEngineHook_Log(&amp;g,<sp/>_FMT,<sp/>__VA_ARGS__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>log<sp/>entry<sp/>from<sp/>user<sp/>land<sp/>into<sp/>test<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_TEST_ENGINE_ITEM_INFO(_ID,_LABEL,_FLAGS)<sp/><sp/><sp/><sp/><sp/><sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_internal.h"/>
  </compounddef>
</doxygen>
