<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="glm_2glm_2simd_2common_8h" kind="file" language="C++">
    <compoundname>common.h</compoundname>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includedby refid="geometric_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/simd/geometric.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/simd/common.h</label>
        <link refid="glm_2glm_2simd_2common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_geometric_simd.inl</label>
        <link refid="func__geometric__simd_8inl"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/simd/common.h</label>
        <link refid="glm_2glm_2simd_2common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/simd/geometric.h</label>
        <link refid="geometric_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/simd/matrix.h</label>
        <link refid="matrix_8h"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>simd </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_SSE2_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_add(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_add_ps(a,<sp/>b);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec1_add(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_add_ss(a,<sp/>b);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_sub(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_sub_ps(a,<sp/>b);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec1_sub(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_sub_ss(a,<sp/>b);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_mul(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_mul_ps(a,<sp/>b);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec1_mul(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_mul_ss(a,<sp/>b);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_div(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_div_ps(a,<sp/>b);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec1_div(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_div_ss(a,<sp/>b);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_div_lowp(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glm_vec4_mul(a,<sp/>_mm_rcp_ps(b));</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_swizzle_xyzw(glm_vec4<sp/>a)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_AVX2_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_permute_ps(a,<sp/>_MM_SHUFFLE(3,<sp/>2,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_shuffle_ps(a,<sp/>a,<sp/>_MM_SHUFFLE(3,<sp/>2,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec1_fma(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b,<sp/>glm_vec4<sp/>c)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>(GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_AVX2_BIT)<sp/>&amp;&amp;<sp/>!(GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_CLANG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_fmadd_ss(a,<sp/>b,<sp/>c);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_add_ss(_mm_mul_ss(a,<sp/>b),<sp/>c);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_fma(glm_vec4<sp/>a,<sp/>glm_vec4<sp/>b,<sp/>glm_vec4<sp/>c)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>(GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_AVX2_BIT)<sp/>&amp;&amp;<sp/>!(GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_CLANG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_fmadd_ps(a,<sp/>b,<sp/>c);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glm_vec4_add(glm_vec4_mul(a,<sp/>b),<sp/>c);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_abs(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_and_ps(x,<sp/>_mm_castsi128_ps(_mm_set1_epi32(0x7FFFFFFF)));</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_ivec4<sp/>glm_ivec4_abs(glm_ivec4<sp/>x)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_SSSE3_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_sign_epi32(x,<sp/>x);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sgn0<sp/>=<sp/>_mm_srai_epi32(x,<sp/>31);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>inv0<sp/>=<sp/>_mm_xor_si128(x,<sp/>sgn0);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>_mm_sub_epi32(inv0,<sp/>sgn0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_sign(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zro0<sp/>=<sp/>_mm_setzero_ps();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cmp0<sp/>=<sp/>_mm_cmplt_ps(x,<sp/>zro0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cmp1<sp/>=<sp/>_mm_cmpgt_ps(x,<sp/>zro0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>and0<sp/>=<sp/>_mm_and_ps(cmp0,<sp/>_mm_set1_ps(-1.0f));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>and1<sp/>=<sp/>_mm_and_ps(cmp1,<sp/>_mm_set1_ps(1.0f));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>or0<sp/>=<sp/>_mm_or_ps(and0,<sp/>and1);;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>or0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_round(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_SSE41_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_round_ps(x,<sp/>_MM_FROUND_TO_NEAREST_INT);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sgn0<sp/>=<sp/>_mm_castsi128_ps(_mm_set1_epi32(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(0x80000000)));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>and0<sp/>=<sp/>_mm_and_ps(sgn0,<sp/>x);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>or0<sp/>=<sp/>_mm_or_ps(and0,<sp/>_mm_set_ps1(8388608.0f));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add0<sp/>=<sp/>glm_vec4_add(x,<sp/>or0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>glm_vec4_sub(add0,<sp/>or0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_floor(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_SSE41_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_floor_ps(x);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rnd0<sp/>=<sp/>glm_vec4_round(x);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cmp0<sp/>=<sp/>_mm_cmplt_ps(x,<sp/>rnd0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>and0<sp/>=<sp/>_mm_and_ps(cmp0,<sp/>_mm_set1_ps(1.0f));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>glm_vec4_sub(rnd0,<sp/>and0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>trunc<sp/>TODO</highlight></codeline>
<codeline lineno="138"><highlight class="comment">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_trunc(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="139"><highlight class="comment">{</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>glm_vec4();</highlight></codeline>
<codeline lineno="141"><highlight class="comment">}</highlight></codeline>
<codeline lineno="142"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//roundEven</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_roundEven(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sgn0<sp/>=<sp/>_mm_castsi128_ps(_mm_set1_epi32(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(0x80000000)));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>and0<sp/>=<sp/>_mm_and_ps(sgn0,<sp/>x);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>or0<sp/>=<sp/>_mm_or_ps(and0,<sp/>_mm_set_ps1(8388608.0f));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add0<sp/>=<sp/>glm_vec4_add(x,<sp/>or0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>glm_vec4_sub(add0,<sp/>or0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_ceil(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_SSE41_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_ceil_ps(x);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rnd0<sp/>=<sp/>glm_vec4_round(x);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cmp0<sp/>=<sp/>_mm_cmpgt_ps(x,<sp/>rnd0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>and0<sp/>=<sp/>_mm_and_ps(cmp0,<sp/>_mm_set1_ps(1.0f));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add0<sp/>=<sp/>glm_vec4_add(rnd0,<sp/>and0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>add0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_fract(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flr0<sp/>=<sp/>glm_vec4_floor(x);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>glm_vec4_sub(x,<sp/>flr0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_mod(glm_vec4<sp/>x,<sp/>glm_vec4<sp/>y)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>div0<sp/>=<sp/>glm_vec4_div(x,<sp/>y);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flr0<sp/>=<sp/>glm_vec4_floor(div0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mul0<sp/>=<sp/>glm_vec4_mul(y,<sp/>flr0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>glm_vec4_sub(x,<sp/>mul0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_clamp(glm_vec4<sp/>v,<sp/>glm_vec4<sp/>minVal,<sp/>glm_vec4<sp/>maxVal)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>min0<sp/>=<sp/>_mm_min_ps(v,<sp/>maxVal);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>max0<sp/>=<sp/>_mm_max_ps(min0,<sp/>minVal);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_mix(glm_vec4<sp/>v1,<sp/>glm_vec4<sp/>v2,<sp/>glm_vec4<sp/>a)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>glm_vec4_sub(_mm_set1_ps(1.0f),<sp/>a);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mul0<sp/>=<sp/>glm_vec4_mul(v1,<sp/>sub0);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mad0<sp/>=<sp/>glm_vec4_fma(v2,<sp/>a,<sp/>mul0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mad0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_step(glm_vec4<sp/>edge,<sp/>glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>_mm_cmple_ps(x,<sp/>edge);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_movemask_ps(cmp)<sp/>==<sp/>0<sp/>?<sp/>_mm_set1_ps(1.0f)<sp/>:<sp/>_mm_setzero_ps();</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_smoothstep(glm_vec4<sp/>edge0,<sp/>glm_vec4<sp/>edge1,<sp/>glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub0<sp/>=<sp/>glm_vec4_sub(x,<sp/>edge0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub1<sp/>=<sp/>glm_vec4_sub(edge1,<sp/>edge0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>div0<sp/>=<sp/>glm_vec4_sub(sub0,<sp/>sub1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clp0<sp/>=<sp/>glm_vec4_clamp(div0,<sp/>_mm_setzero_ps(),<sp/>_mm_set1_ps(1.0f));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mul0<sp/>=<sp/>glm_vec4_mul(_mm_set1_ps(2.0f),<sp/>clp0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sub2<sp/>=<sp/>glm_vec4_sub(_mm_set1_ps(3.0f),<sp/>mul0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mul1<sp/>=<sp/>glm_vec4_mul(clp0,<sp/>clp0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_vec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mul2<sp/>=<sp/>glm_vec4_mul(mul1,<sp/>sub2);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mul2;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Agner<sp/>Fog<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_nan(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>_mm_castps_si128(x);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reinterpret<sp/>as<sp/>32-bit<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>_mm_sll_epi32(t1,<sp/>_mm_cvtsi32_si128(1));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>out<sp/>sign<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t3<sp/>=<sp/>_mm_set1_epi32(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(0xFF000000));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exponent<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t4<sp/>=<sp/>_mm_and_si128(t2,<sp/>t3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exponent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t5<sp/>=<sp/>_mm_andnot_si128(t3,<sp/>t2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Equal<sp/>=<sp/>_mm_cmpeq_epi32(t3,<sp/>t4);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Nequal<sp/>=<sp/>_mm_cmpeq_epi32(t5,<sp/>_mm_setzero_si128());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>And<sp/>=<sp/>_mm_and_si128(Equal,<sp/>Nequal);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_castsi128_ps(And);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exponent<sp/>=<sp/>all<sp/>1s<sp/>and<sp/>fraction<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Agner<sp/>Fog<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">GLM_FUNC_QUALIFIER<sp/>glm_vec4<sp/>glm_vec4_inf(glm_vec4<sp/>x)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>_mm_castps_si128(x);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reinterpret<sp/>as<sp/>32-bit<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>glm_ivec4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>_mm_sll_epi32(t1,<sp/>_mm_cvtsi32_si128(1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>out<sp/>sign<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mm_castsi128_ps(_mm_cmpeq_epi32(t2,<sp/>_mm_set1_epi32(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(0xFF000000))));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exponent<sp/>is<sp/>all<sp/>1s,<sp/>fraction<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//GLM_ARCH<sp/>&amp;<sp/>GLM_ARCH_SSE2_BIT</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/simd/common.h"/>
  </compounddef>
</doxygen>
