<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtc__packing" kind="group">
    <compoundname>gtc_packing</compoundname>
    <title>GLM_GTC_packing</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtc__packing_1ga2f9963e5d762b10085b280d3662017ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint8</type>
        <definition>GLM_FUNC_QUALIFIER uint8 glm::packUnorm1x8</definition>
        <argsstring>(float v)</argsstring>
        <name>packUnorm1x8</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the normalized floating-point value v into a 8-bit integer value. Then, the results are packed into the returned 8-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packUnorm1x8: round(clamp(c, 0, +1) * 255.0)</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packUnorm2x8(vec2 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUnorm4x8(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm4x8.xml">GLSL packUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="355" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="355" bodyend="358" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="39" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga32f3f2642df2ea87449d59fb614a8305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL float</type>
        <definition>GLM_FUNC_QUALIFIER float glm::unpackUnorm1x8</definition>
        <argsstring>(uint8 p)</argsstring>
        <name>unpackUnorm1x8</name>
        <param>
          <type>uint8</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a single 8-bit integer to a normalized floating-point value.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackUnorm4x8: f / 255.0</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackUnorm2x8(uint16 p) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackUnorm4x8(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm4x8.xml">GLSL unpackUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="360" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="360" bodyend="364" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="51" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga833288fc0d4a79f19d0db75a6843bfe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packUnorm2x8</definition>
        <argsstring>(vec2 const &amp;v)</argsstring>
        <name>packUnorm2x8</name>
        <param>
          <type>vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 8-bit integer values. Then, the results are packed into the returned 16-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packUnorm2x8: round(clamp(c, 0, +1) * 255.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint8 packUnorm1x8(float const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUnorm4x8(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm4x8.xml">GLSL packUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="366" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="366" bodyend="373" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="67" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga96ce0c24339ee676e28a027fffd1edf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec2</type>
        <definition>GLM_FUNC_QUALIFIER vec2 glm::unpackUnorm2x8</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackUnorm2x8</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 16-bit unsigned integer p into a pair of 8-bit unsigned integers. Then, each component is converted to a normalized floating-point value to generate the returned two-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackUnorm4x8: f / 255.0</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>float unpackUnorm1x8(uint8 v) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackUnorm4x8(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm4x8.xml">GLSL unpackUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="375" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="375" bodyend="380" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="83" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga26b6cd7a35c46c4b6a342f3b97b47423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint8</type>
        <definition>GLM_FUNC_QUALIFIER uint8 glm::packSnorm1x8</definition>
        <argsstring>(float s)</argsstring>
        <name>packSnorm1x8</name>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the normalized floating-point value v into 8-bit integer value. Then, the results are packed into the returned 8-bit unsigned integer.</para>
<para>The conversion to fixed point is done as follows: packSnorm1x8: round(clamp(s, -1, +1) * 127.0)</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packSnorm2x8(vec2 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm4x8(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm4x8.xml">GLSL packSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="382" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="382" bodyend="388" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="96" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga6f2bebf536fbf7c8b97d4b306bb3354e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL float</type>
        <definition>GLM_FUNC_QUALIFIER float glm::unpackSnorm1x8</definition>
        <argsstring>(uint8 p)</argsstring>
        <name>unpackSnorm1x8</name>
        <param>
          <type>uint8</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 8-bit unsigned integer p into a single 8-bit signed integers. Then, the value is converted to a normalized floating-point value to generate the returned scalar.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm1x8: clamp(f / 127.0, -1, +1)</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackSnorm2x8(uint16 p) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackSnorm4x8(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm4x8.xml">GLSL unpackSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="390" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="390" bodyend="397" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="109" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga05d08a82923166ec7cd5d0e6154c9953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packSnorm2x8</definition>
        <argsstring>(vec2 const &amp;v)</argsstring>
        <name>packSnorm2x8</name>
        <param>
          <type>vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 8-bit integer values. Then, the results are packed into the returned 16-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packSnorm2x8: round(clamp(c, -1, +1) * 127.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint8 packSnorm1x8(float const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm4x8(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm4x8.xml">GLSL packSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="399" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="399" bodyend="405" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="125" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga27f30f0281b88e152b0895f5e2ead878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec2</type>
        <definition>GLM_FUNC_QUALIFIER vec2 glm::unpackSnorm2x8</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackSnorm2x8</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 16-bit unsigned integer p into a pair of 8-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned two-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm2x8: clamp(f / 127.0, -1, +1)</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>float unpackSnorm1x8(uint8 p) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackSnorm4x8(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm4x8.xml">GLSL unpackSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="407" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="407" bodyend="414" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="141" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga60c7d915f5653559ae02c2f79a8c5c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packUnorm1x16</definition>
        <argsstring>(float v)</argsstring>
        <name>packUnorm1x16</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the normalized floating-point value v into a 16-bit integer value. Then, the results are packed into the returned 16-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packUnorm1x16: round(clamp(c, 0, +1) * 65535.0)</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packSnorm1x16(float const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint64 packSnorm4x16(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm4x8.xml">GLSL packUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="416" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="416" bodyend="419" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="154" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga7770e3ade4f4764cc1b2eb42ac4ec188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL float</type>
        <definition>GLM_FUNC_QUALIFIER float glm::unpackUnorm1x16</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackUnorm1x16</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 16-bit unsigned integer p into a of 16-bit unsigned integers. Then, the value is converted to a normalized floating-point value to generate the returned scalar.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackUnorm1x16: f / 65535.0</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackUnorm2x16(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackUnorm4x16(uint64 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm2x16.xml">GLSL unpackUnorm2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="421" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="421" bodyend="425" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="167" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gac561f06c908b7302537a8ef29fcb409e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint64</type>
        <definition>GLM_FUNC_QUALIFIER uint64 glm::packUnorm4x16</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packUnorm4x16</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 16-bit integer values. Then, the results are packed into the returned 64-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packUnorm4x16: round(clamp(c, 0, +1) * 65535.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packUnorm1x16(float const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUnorm2x16(vec2 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm4x8.xml">GLSL packUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="427" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="427" bodyend="433" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="183" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gafb2b502bc406031a5618ce930139a9e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec4</type>
        <definition>GLM_FUNC_QUALIFIER vec4 glm::unpackUnorm4x16</definition>
        <argsstring>(uint64 p)</argsstring>
        <name>unpackUnorm4x16</name>
        <param>
          <type>uint64</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 64-bit unsigned integer p into four 16-bit unsigned integers. Then, each component is converted to a normalized floating-point value to generate the returned four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackUnormx4x16: f / 65535.0</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>float unpackUnorm1x16(uint16 p) </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackUnorm2x16(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm2x16.xml">GLSL unpackUnorm2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="435" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="435" bodyend="440" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="199" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gac29411d6c0f6ed0fe9f0396dfe92e0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packSnorm1x16</definition>
        <argsstring>(float v)</argsstring>
        <name>packSnorm1x16</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the normalized floating-point value v into 16-bit integer value. Then, the results are packed into the returned 16-bit unsigned integer.</para>
<para>The conversion to fixed point is done as follows: packSnorm1x8: round(clamp(s, -1, +1) * 32767.0)</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm2x16(vec2 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint64 packSnorm4x16(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm4x8.xml">GLSL packSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="442" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="442" bodyend="448" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="212" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga246f451cebf590726324f7a283e3d65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL float</type>
        <definition>GLM_FUNC_QUALIFIER float glm::unpackSnorm1x16</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackSnorm1x16</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 16-bit unsigned integer p into a single 16-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned scalar.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm1x16: clamp(f / 32767.0, -1, +1)</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackSnorm2x16(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackSnorm4x16(uint64 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm1x16.xml">GLSL unpackSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="450" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="450" bodyend="457" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="225" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga9b237d7c66b7a71964e6d1f4dc06539f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint64</type>
        <definition>GLM_FUNC_QUALIFIER uint64 glm::packSnorm4x16</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packSnorm4x16</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 16-bit integer values. Then, the results are packed into the returned 64-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packSnorm2x8: round(clamp(c, -1, +1) * 32767.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packSnorm1x16(float const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm2x16(vec2 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm4x8.xml">GLSL packSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="459" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="459" bodyend="465" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="241" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga1bfaa3f217fd7a4b6b9d3117ecb3fcac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec4</type>
        <definition>GLM_FUNC_QUALIFIER vec4 glm::unpackSnorm4x16</definition>
        <argsstring>(uint64 p)</argsstring>
        <name>unpackSnorm4x16</name>
        <param>
          <type>uint64</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 64-bit unsigned integer p into four 16-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm4x16: clamp(f / 32767.0, -1, +1)</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>float unpackSnorm1x16(uint16 p) </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackSnorm2x16(uint32 p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm2x16.xml">GLSL unpackSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="467" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="467" bodyend="474" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="257" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaba534b320836a35372e00af5771dd1a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packHalf1x16</definition>
        <argsstring>(float v)</argsstring>
        <name>packHalf1x16</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an unsigned integer obtained by converting the components of a floating-point scalar to the 16-bit floating-point representation found in the OpenGL Specification, and then packing this 16-bit value into a 16-bit unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packHalf2x16(vec2 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint64 packHalf4x16(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packHalf2x16.xml">GLSL packHalf2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="476" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="476" bodyend="482" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="268" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaa6eebcdfc746584b7d1823f1d5344fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL float</type>
        <definition>GLM_FUNC_QUALIFIER float glm::unpackHalf1x16</definition>
        <argsstring>(uint16 v)</argsstring>
        <name>unpackHalf1x16</name>
        <param>
          <type>uint16</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a floating-point scalar with components obtained by unpacking a 16-bit unsigned integer into a 16-bit value, interpreted as a 16-bit floating-point number according to the OpenGL Specification, and converting it to 32-bit floating-point values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackHalf2x16(uint32 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackHalf4x16(uint64 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackHalf2x16.xml">GLSL unpackHalf2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="484" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="484" bodyend="489" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="279" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga8104f0b719b7792491f2b789a6dd6f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint64</type>
        <definition>GLM_FUNC_QUALIFIER uint64 glm::packHalf4x16</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packHalf4x16</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an unsigned integer obtained by converting the components of a four-component floating-point vector to the 16-bit floating-point representation found in the OpenGL Specification, and then packing these four 16-bit values into a 64-bit unsigned integer. The first vector component specifies the 16 least-significant bits of the result; the forth component specifies the 16 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packHalf1x16(float const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packHalf2x16(vec2 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packHalf2x16.xml">GLSL packHalf2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="491" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="491" bodyend="501" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="292" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaea526d6491ad40401eac34803984bf27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec4</type>
        <definition>GLM_FUNC_QUALIFIER glm::vec4 glm::unpackHalf4x16</definition>
        <argsstring>(uint64 p)</argsstring>
        <name>unpackHalf4x16</name>
        <param>
          <type>uint64</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a four-component floating-point vector with components obtained by unpacking a 64-bit unsigned integer into four 16-bit values, interpreting those values as 16-bit floating-point numbers according to the OpenGL Specification, and converting them to 32-bit floating-point values. The first component of the vector is obtained from the 16 least-significant bits of v; the forth component is obtained from the 16 most-significant bits of v.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>float unpackHalf1x16(uint16 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackHalf2x16(uint32 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackHalf2x16.xml">GLSL unpackHalf2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="503" column="30" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="503" bodyend="512" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="305" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga032e18fa5bc5b8f3897104aeb2f1e195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint32</type>
        <definition>GLM_FUNC_QUALIFIER uint32 glm::packI3x10_1x2</definition>
        <argsstring>(ivec4 const &amp;v)</argsstring>
        <name>packI3x10_1x2</name>
        <param>
          <type>ivec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an unsigned integer obtained by converting the components of a four-component signed integer vector to the 10-10-10-2-bit signed integer representation found in the OpenGL Specification, and then packing these four values into a 32-bit unsigned integer. The first vector component specifies the 10 least-significant bits of the result; the forth component specifies the 2 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packI3x10_1x2(uvec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>ivec4 unpackI3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="514" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="514" bodyend="522" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="318" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga08bcd34cf9c34701d658dd861ee6e300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL ivec4</type>
        <definition>GLM_FUNC_QUALIFIER ivec4 glm::unpackI3x10_1x2</definition>
        <argsstring>(uint32 p)</argsstring>
        <name>unpackI3x10_1x2</name>
        <param>
          <type>uint32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpacks a single 32-bit unsigned integer p into three 10-bit and one 2-bit signed integers.</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packU3x10_1x2(uvec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackSnorm3x10_1x2(uint32 const&amp; p); </para>
</simplesect>
<simplesect kind="see"><para>uvec4 unpackI3x10_1x2(uint32 const&amp; p); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="524" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="524" bodyend="533" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="329" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaf656d8862628f96b20de7a36eaa1fe56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint32</type>
        <definition>GLM_FUNC_QUALIFIER uint32 glm::packU3x10_1x2</definition>
        <argsstring>(uvec4 const &amp;v)</argsstring>
        <name>packU3x10_1x2</name>
        <param>
          <type>uvec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an unsigned integer obtained by converting the components of a four-component unsigned integer vector to the 10-10-10-2-bit unsigned integer representation found in the OpenGL Specification, and then packing these four values into a 32-bit unsigned integer. The first vector component specifies the 10 least-significant bits of the result; the forth component specifies the 2 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packI3x10_1x2(ivec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>ivec4 unpackU3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="535" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="535" bodyend="543" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="342" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga119aa2d7d55952f9dc4214390a6ffefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uvec4</type>
        <definition>GLM_FUNC_QUALIFIER uvec4 glm::unpackU3x10_1x2</definition>
        <argsstring>(uint32 p)</argsstring>
        <name>unpackU3x10_1x2</name>
        <param>
          <type>uint32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpacks a single 32-bit unsigned integer p into three 10-bit and one 2-bit unsigned integers.</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packU3x10_1x2(uvec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackSnorm3x10_1x2(uint32 const&amp; p); </para>
</simplesect>
<simplesect kind="see"><para>uvec4 unpackI3x10_1x2(uint32 const&amp; p); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="545" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="545" bodyend="554" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="353" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga0d4157cec37c0312216a7be1cc92df54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint32</type>
        <definition>GLM_FUNC_QUALIFIER uint32 glm::packSnorm3x10_1x2</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packSnorm3x10_1x2</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the first three components of the normalized floating-point value v into 10-bit signed integer values. Then, converts the forth component of the normalized floating-point value v into 2-bit signed integer values. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packSnorm3x10_1x2(xyz): round(clamp(c, -1, +1) * 511.0) packSnorm3x10_1x2(w): round(clamp(c, -1, +1) * 1.0)</para>
<para>The first vector component specifies the 10 least-significant bits of the result; the forth component specifies the 2 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackSnorm3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packU3x10_1x2(uvec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packI3x10_1x2(ivec4 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="556" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="556" bodyend="566" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="371" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga8b8bb827a3743ca553d8702d3e337101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec4</type>
        <definition>GLM_FUNC_QUALIFIER vec4 glm::unpackSnorm3x10_1x2</definition>
        <argsstring>(uint32 p)</argsstring>
        <name>unpackSnorm3x10_1x2</name>
        <param>
          <type>uint32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into four 16-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm3x10_1x2(xyz): clamp(f / 511.0, -1, +1) unpackSnorm3x10_1x2(w): clamp(f / 511.0, -1, +1)</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackUnorm3x10_1x2(uint32 const&amp; p)) </para>
</simplesect>
<simplesect kind="see"><para>uvec4 unpackI3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
<simplesect kind="see"><para>uvec4 unpackU3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="568" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="568" bodyend="576" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="388" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga2cf2d11b40bd48639110456fd74c2e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint32</type>
        <definition>GLM_FUNC_QUALIFIER uint32 glm::packUnorm3x10_1x2</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packUnorm3x10_1x2</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the first three components of the normalized floating-point value v into 10-bit unsigned integer values. Then, converts the forth component of the normalized floating-point value v into 2-bit signed uninteger values. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packUnorm3x10_1x2(xyz): round(clamp(c, 0, +1) * 1023.0) packUnorm3x10_1x2(w): round(clamp(c, 0, +1) * 3.0)</para>
<para>The first vector component specifies the 10 least-significant bits of the result; the forth component specifies the 2 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackUnorm3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packU3x10_1x2(uvec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>uint32 packI3x10_1x2(ivec4 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="578" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="578" bodyend="588" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="406" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaf69ace2b5e9234f8afb4e99c3df1193d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec4</type>
        <definition>GLM_FUNC_QUALIFIER vec4 glm::unpackUnorm3x10_1x2</definition>
        <argsstring>(uint32 p)</argsstring>
        <name>unpackUnorm3x10_1x2</name>
        <param>
          <type>uint32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into four 16-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm3x10_1x2(xyz): clamp(f / 1023.0, 0, +1) unpackSnorm3x10_1x2(w): clamp(f / 3.0, 0, +1)</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packSnorm3x10_1x2(vec4 const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackInorm3x10_1x2(uint32 const&amp; p)) </para>
</simplesect>
<simplesect kind="see"><para>uvec4 unpackI3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
<simplesect kind="see"><para>uvec4 unpackU3x10_1x2(uint32 const&amp; p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="590" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="590" bodyend="597" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="423" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga8c2a0eeee677ca4dafd9e093d9e81062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint32</type>
        <definition>GLM_FUNC_QUALIFIER uint32 glm::packF2x11_1x10</definition>
        <argsstring>(vec3 const &amp;v)</argsstring>
        <name>packF2x11_1x10</name>
        <param>
          <type>vec3 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the first two components of the normalized floating-point value v into 11-bit signless floating-point values. Then, converts the third component of the normalized floating-point value v into a 10-bit signless floating-point value. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The first vector component specifies the 11 least-significant bits of the result; the last component specifies the 10 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec3 unpackF2x11_1x10(uint32 const&amp; p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="599" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="599" bodyend="605" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="434" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga8b9c7991eb021d95c778bf5c0b2f7824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec3</type>
        <definition>GLM_FUNC_QUALIFIER vec3 glm::unpackF2x11_1x10</definition>
        <argsstring>(uint32 p)</argsstring>
        <name>unpackF2x11_1x10</name>
        <param>
          <type>uint32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into two 11-bit signless floating-point values and one 10-bit signless floating-point value . Then, each component is converted to a normalized floating-point value to generate the returned three-component vector.</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packF2x11_1x10(vec3 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="607" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="607" bodyend="613" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="444" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga0984f9598edc648d59a9643d9a61b121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint32</type>
        <definition>GLM_FUNC_QUALIFIER uint32 glm::packF3x9_E1x5</definition>
        <argsstring>(vec3 const &amp;v)</argsstring>
        <name>packF3x9_E1x5</name>
        <param>
          <type>vec3 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts the first two components of the normalized floating-point value v into 11-bit signless floating-point values. Then, converts the third component of the normalized floating-point value v into a 10-bit signless floating-point value. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The first vector component specifies the 11 least-significant bits of the result; the last component specifies the 10 most-significant bits.</para>
<para>packF3x9_E1x5 allows encoding into RGBE / RGB9E5 format</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec3 unpackF3x9_E1x5(uint32 const&amp; p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="615" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="615" bodyend="633" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="458" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga15d8845a31e1e55d493803d0c8cb5910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec3</type>
        <definition>GLM_FUNC_QUALIFIER vec3 glm::unpackF3x9_E1x5</definition>
        <argsstring>(uint32 p)</argsstring>
        <name>unpackF3x9_E1x5</name>
        <param>
          <type>uint32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into two 11-bit signless floating-point values and one 10-bit signless floating-point value . Then, each component is converted to a normalized floating-point value to generate the returned three-component vector.</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para>unpackF3x9_E1x5 allows decoding RGBE / RGB9E5 data</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packF3x9_E1x5(vec3 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="635" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="635" bodyend="641" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="470" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga41bf9d8daf1bb553fbffb6d2762853b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::packRGBM</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;rgb)</argsstring>
        <name>packRGBM</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an unsigned integer vector obtained by converting the components of a floating-point vector to the 16-bit floating-point representation found in the OpenGL Specification. The first vector component specifies the 16 least-significant bits of the result; the forth component specifies the 16 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref> unpackRGBM(vec&lt;4, T, Q&gt; const&amp; p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="481" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="645" bodyend="651" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="481" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gafba3d7070c4918ad1ce3ac3112b30a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::unpackRGBM</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;rgbm)</argsstring>
        <name>unpackRGBM</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>rgbm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a floating-point vector with components obtained by reinterpreting an integer vector as 16-bit floating-point numbers and converting them to 32-bit floating-point values. The first component of the vector is obtained from the 16 least-significant bits of v; the forth component is obtained from the 16 most-significant bits of v.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structglm_1_1vec_3_014_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;4, T, Q&gt;</ref> packRGBM(vec&lt;3, float, Q&gt; const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="491" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="654" bodyend="657" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="491" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga72b41f62169feb06d2c86613b8e1e6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, uint16, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, uint16, Q &gt; glm::packHalf</definition>
        <argsstring>(vec&lt; L, float, Q &gt; const &amp;v)</argsstring>
        <name>packHalf</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, float, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an unsigned integer vector obtained by converting the components of a floating-point vector to the 16-bit floating-point representation found in the OpenGL Specification. The first vector component specifies the 16 least-significant bits of the result; the forth component specifies the 16 most-significant bits.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec&lt;L, float, Q&gt; unpackHalf(vec&lt;L, uint16, Q&gt; const&amp; p) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="502" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="660" bodyend="663" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="502" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga7b2b3383bd086048acad804fe9dd4685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, float, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, float, Q &gt; glm::unpackHalf</definition>
        <argsstring>(vec&lt; L, uint16, Q &gt; const &amp;p)</argsstring>
        <name>unpackHalf</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, uint16, Q &gt; const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a floating-point vector with components obtained by reinterpreting an integer vector as 16-bit floating-point numbers and converting them to 32-bit floating-point values. The first component of the vector is obtained from the 16 least-significant bits of v; the forth component is obtained from the 16 most-significant bits of v.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec&lt;L, uint16, Q&gt; packHalf(vec&lt;L, float, Q&gt; const&amp; v) </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="512" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="666" bodyend="669" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="512" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga224c97fa9cec9235173084d851fbd78e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename uintType</type>
          </param>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename floatType</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, uintType, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, uintType, Q &gt; glm::packUnorm</definition>
        <argsstring>(vec&lt; L, floatType, Q &gt; const &amp;v)</argsstring>
        <name>packUnorm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, floatType, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component of the normalized floating-point vector into unsigned integer values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec&lt;L, floatType, Q&gt; unpackUnorm(vec&lt;L, intType, Q&gt; const&amp; p); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="519" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="672" bodyend="678" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="519" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga620ed87ba2ddf15f641e93a9b0257e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename floatType</type>
          </param>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename uintType</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, floatType, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, floatType, Q &gt; glm::unpackUnorm</definition>
        <argsstring>(vec&lt; L, uintType, Q &gt; const &amp;v)</argsstring>
        <name>unpackUnorm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, uintType, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer to a normalized floating-point vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec&lt;L, intType, Q&gt; packUnorm(vec&lt;L, floatType, Q&gt; const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="526" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="681" bodyend="687" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="526" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga4063fe32d0d7ac6aff3b4001429e7c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename intType</type>
          </param>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename floatType</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, intType, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, intType, Q &gt; glm::packSnorm</definition>
        <argsstring>(vec&lt; L, floatType, Q &gt; const &amp;v)</argsstring>
        <name>packSnorm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, floatType, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component of the normalized floating-point vector into signed integer values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec&lt;L, floatType, Q&gt; unpackSnorm(vec&lt;L, intType, Q&gt; const&amp; p); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="533" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="690" bodyend="696" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="533" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga5ea23187b1b7d15b53cf06ef286a8f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename floatType</type>
          </param>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename intType</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, floatType, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, floatType, Q &gt; glm::unpackSnorm</definition>
        <argsstring>(vec&lt; L, intType, Q &gt; const &amp;v)</argsstring>
        <name>unpackSnorm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, intType, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer to a normalized floating-point vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec&lt;L, intType, Q&gt; packSnorm(vec&lt;L, floatType, Q&gt; const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" line="540" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="699" bodyend="705" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="540" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gad68eb2f848ba867192b8787998c0595a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint8</type>
        <definition>GLM_FUNC_QUALIFIER uint8 glm::packUnorm2x4</definition>
        <argsstring>(vec2 const &amp;v)</argsstring>
        <name>packUnorm2x4</name>
        <param>
          <type>vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component of the normalized floating-point vector into unsigned integer values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec2 unpackUnorm2x4(uint8 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="707" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="707" bodyend="714" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="546" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga3afb0452954320f2d83fe6f38cb24147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec2</type>
        <definition>GLM_FUNC_QUALIFIER vec2 glm::unpackUnorm2x4</definition>
        <argsstring>(uint8 p)</argsstring>
        <name>unpackUnorm2x4</name>
        <param>
          <type>uint8</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer to a normalized floating-point vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint8 packUnorm2x4(vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="716" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="716" bodyend="722" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="552" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gad493c9f130e91dd8a4b360b05dcea573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packUnorm4x4</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packUnorm4x4</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component of the normalized floating-point vector into unsigned integer values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackUnorm4x4(uint16 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="724" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="724" bodyend="733" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="558" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga38a0a518d53e15a9481c31dc1e574a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec4</type>
        <definition>GLM_FUNC_QUALIFIER vec4 glm::unpackUnorm4x4</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackUnorm4x4</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer to a normalized floating-point vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packUnorm4x4(vec4 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="735" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="735" bodyend="741" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="564" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga0fcb493167d540aca105d11df5c55503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packUnorm1x5_1x6_1x5</definition>
        <argsstring>(vec3 const &amp;v)</argsstring>
        <name>packUnorm1x5_1x6_1x5</name>
        <param>
          <type>vec3 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component of the normalized floating-point vector into unsigned integer values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec3 unpackUnorm1x5_1x6_1x5(uint16 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="743" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="743" bodyend="751" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="570" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga6804d0525daf68bcac226f46fbb3b24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec3</type>
        <definition>GLM_FUNC_QUALIFIER vec3 glm::unpackUnorm1x5_1x6_1x5</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackUnorm1x5_1x6_1x5</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer to a normalized floating-point vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packUnorm1x5_1x6_1x5(vec3 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="753" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="753" bodyend="759" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="576" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga1b41375846ed66768da78ca299d8d010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packUnorm3x5_1x1</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packUnorm3x5_1x1</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component of the normalized floating-point vector into unsigned integer values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec4 unpackUnorm3x5_1x1(uint16 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="761" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="761" bodyend="770" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="582" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaab3b476e8f320670717fd518f350ce28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec4</type>
        <definition>GLM_FUNC_QUALIFIER vec4 glm::unpackUnorm3x5_1x1</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackUnorm3x5_1x1</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer to a normalized floating-point vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packUnorm3x5_1x1(vec4 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="772" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="772" bodyend="778" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="588" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga0acca4eb99c300fe2edeef7ebd8fa08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint8</type>
        <definition>GLM_FUNC_QUALIFIER uint8 glm::packUnorm2x3_1x2</definition>
        <argsstring>(vec3 const &amp;v)</argsstring>
        <name>packUnorm2x3_1x2</name>
        <param>
          <type>vec3 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component of the normalized floating-point vector into unsigned integer values.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>vec3 unpackUnorm2x3_1x2(uint8 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="780" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="780" bodyend="788" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="594" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaeeacc5275329100c50fe8fc0871eb423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL vec3</type>
        <definition>GLM_FUNC_QUALIFIER vec3 glm::unpackUnorm2x3_1x2</definition>
        <argsstring>(uint8 p)</argsstring>
        <name>unpackUnorm2x3_1x2</name>
        <param>
          <type>uint8</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer to a normalized floating-point vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint8 packUnorm2x3_1x2(vec3 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="790" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="790" bodyend="796" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="600" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga532b06d8915c6c65649f828e9106a1d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL int16</type>
        <definition>GLM_FUNC_QUALIFIER int16 glm::packInt2x8</definition>
        <argsstring>(i8vec2 const &amp;v)</argsstring>
        <name>packInt2x8</name>
        <param>
          <type>i8vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>i8vec2 unpackInt2x8(int16 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="798" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="798" bodyend="803" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="608" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga55b4670bffab6ddb39d4a0fbf98718c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL i8vec2</type>
        <definition>GLM_FUNC_QUALIFIER i8vec2 glm::unpackInt2x8</definition>
        <argsstring>(int16 p)</argsstring>
        <name>unpackInt2x8</name>
        <param>
          <type>int16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>int16 packInt2x8(i8vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="805" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="805" bodyend="810" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="614" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga4a431a30aa5dfb425be3ea84fe561844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint16</type>
        <definition>GLM_FUNC_QUALIFIER uint16 glm::packUint2x8</definition>
        <argsstring>(u8vec2 const &amp;v)</argsstring>
        <name>packUint2x8</name>
        <param>
          <type>u8vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>u8vec2 unpackInt2x8(uint16 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="812" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="812" bodyend="817" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="620" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga060e0e7e299aa73ff869c197ebf44210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL u8vec2</type>
        <definition>GLM_FUNC_QUALIFIER u8vec2 glm::unpackUint2x8</definition>
        <argsstring>(uint16 p)</argsstring>
        <name>unpackUint2x8</name>
        <param>
          <type>uint16</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint16 packInt2x8(u8vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="819" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="819" bodyend="824" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="626" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gac04277b39f9ca1ae2ca4840a3cb987e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL int32</type>
        <definition>GLM_FUNC_QUALIFIER int32 glm::packInt4x8</definition>
        <argsstring>(i8vec4 const &amp;v)</argsstring>
        <name>packInt4x8</name>
        <param>
          <type>i8vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>i8vec4 unpackInt4x8(int32 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="826" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="826" bodyend="831" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="632" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaeed27076c5d26f4cca0d06637d3e878c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL i8vec4</type>
        <definition>GLM_FUNC_QUALIFIER i8vec4 glm::unpackInt4x8</definition>
        <argsstring>(int32 p)</argsstring>
        <name>unpackInt4x8</name>
        <param>
          <type>int32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>int32 packInt2x8(i8vec4 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="833" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="833" bodyend="838" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="638" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaeb4262f799821affa62edf7067deaef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint32</type>
        <definition>GLM_FUNC_QUALIFIER uint32 glm::packUint4x8</definition>
        <argsstring>(u8vec4 const &amp;v)</argsstring>
        <name>packUint4x8</name>
        <param>
          <type>u8vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>u8vec4 unpackUint4x8(uint32 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="840" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="840" bodyend="845" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="644" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga99229dc6cb31d82c39a324d5753792c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL u8vec4</type>
        <definition>GLM_FUNC_QUALIFIER u8vec4 glm::unpackUint4x8</definition>
        <argsstring>(uint32 p)</argsstring>
        <name>unpackUint4x8</name>
        <param>
          <type>uint32</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint32 packUint4x8(u8vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="847" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="847" bodyend="852" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="650" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga0182984c14b2b59fd74e72af3f3b4bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL int</type>
        <definition>GLM_FUNC_QUALIFIER int glm::packInt2x16</definition>
        <argsstring>(i16vec2 const &amp;v)</argsstring>
        <name>packInt2x16</name>
        <param>
          <type>i16vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>i16vec2 unpackInt2x16(int p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="854" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="854" bodyend="859" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="656" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga639c216b452fc364b32c15eb5b8b6a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL i16vec2</type>
        <definition>GLM_FUNC_QUALIFIER i16vec2 glm::unpackInt2x16</definition>
        <argsstring>(int p)</argsstring>
        <name>unpackInt2x16</name>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>int packInt2x16(i16vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="861" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="861" bodyend="866" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="662" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gac3ef78d62735b5c34503c33e37e401c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL int64</type>
        <definition>GLM_FUNC_QUALIFIER int64 glm::packInt4x16</definition>
        <argsstring>(i16vec4 const &amp;v)</argsstring>
        <name>packInt4x16</name>
        <param>
          <type>i16vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>i16vec4 unpackInt4x16(int64 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="868" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="868" bodyend="873" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="668" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga625619888b95299a1ee0d9e50469c482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL i16vec4</type>
        <definition>GLM_FUNC_QUALIFIER i16vec4 glm::unpackInt4x16</definition>
        <argsstring>(int64 p)</argsstring>
        <name>unpackInt4x16</name>
        <param>
          <type>int64</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>int64 packInt4x16(i16vec4 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="875" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="875" bodyend="880" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="674" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gad5ca2e64edae3c233657c9fb0d18a9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint</type>
        <definition>GLM_FUNC_QUALIFIER uint glm::packUint2x16</definition>
        <argsstring>(u16vec2 const &amp;v)</argsstring>
        <name>packUint2x16</name>
        <param>
          <type>u16vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>u16vec2 unpackUint2x16(uint p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="882" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="882" bodyend="887" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="680" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga7778efa924e6efc386cb9f373bb06b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL u16vec2</type>
        <definition>GLM_FUNC_QUALIFIER u16vec2 glm::unpackUint2x16</definition>
        <argsstring>(uint p)</argsstring>
        <name>unpackUint2x16</name>
        <param>
          <type>uint</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint packUint2x16(u16vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="889" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="889" bodyend="894" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="686" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga19813cb34dd7102f9612ba6c0d9ef377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint64</type>
        <definition>GLM_FUNC_QUALIFIER uint64 glm::packUint4x16</definition>
        <argsstring>(u16vec4 const &amp;v)</argsstring>
        <name>packUint4x16</name>
        <param>
          <type>u16vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>u16vec4 unpackUint4x16(uint64 p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="896" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="896" bodyend="901" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="692" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gaf1eea82404af955004aae19a2dcb55f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL u16vec4</type>
        <definition>GLM_FUNC_QUALIFIER u16vec4 glm::unpackUint4x16</definition>
        <argsstring>(uint64 p)</argsstring>
        <name>unpackUint4x16</name>
        <param>
          <type>uint64</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>uint64 packUint4x16(u16vec4 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="903" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="903" bodyend="908" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="698" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga1d6c24ff4f2b198eb2c4a2e4dcf7c336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL int64</type>
        <definition>GLM_FUNC_QUALIFIER int64 glm::packInt2x32</definition>
        <argsstring>(i32vec2 const &amp;v)</argsstring>
        <name>packInt2x32</name>
        <param>
          <type>i32vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>i32vec2 unpackInt2x32(int p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="910" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="910" bodyend="915" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="704" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga6410b50fa48d15e70b2c34174ee4a3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL i32vec2</type>
        <definition>GLM_FUNC_QUALIFIER i32vec2 glm::unpackInt2x32</definition>
        <argsstring>(int64 p)</argsstring>
        <name>unpackInt2x32</name>
        <param>
          <type>int64</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>int packInt2x16(i32vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="917" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="917" bodyend="922" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="710" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1ga4c4e4d6ab81a6b14cf066b40b6967c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint64</type>
        <definition>GLM_FUNC_QUALIFIER uint64 glm::packUint2x32</definition>
        <argsstring>(u32vec2 const &amp;v)</argsstring>
        <name>packUint2x32</name>
        <param>
          <type>u32vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert each component from an integer vector into a packed unsigned integer.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>u32vec2 unpackUint2x32(int p) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="924" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="924" bodyend="929" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="716" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__packing_1gab211ea5f8cf86f00efa4fd53cb302c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL u32vec2</type>
        <definition>GLM_FUNC_QUALIFIER u32vec2 glm::unpackUint2x32</definition>
        <argsstring>(uint64 p)</argsstring>
        <name>unpackUint2x32</name>
        <param>
          <type>uint64</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a packed integer into an integer vector.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__packing" kindref="compound">GLM_GTC_packing</ref> </para>
</simplesect>
<simplesect kind="see"><para>int packUint2x16(u32vec2 const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" line="931" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.inl" bodystart="931" bodyend="936" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/packing.hpp" declline="722" declcolumn="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="gtc_2packing_8hpp" kindref="compound">glm/gtc/packing.hpp</ref>&gt; to use the features of this extension.</para>
<para>This extension provides a set of function to convert vertors to packed formats. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
