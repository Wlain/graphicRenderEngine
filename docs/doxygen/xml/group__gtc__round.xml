<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtc__round" kind="group">
    <compoundname>gtc_round</compoundname>
    <title>GLM_GTC_round</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtc__round_1gadf491730354aa7da67fbe23d4d688763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genIUType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isPowerOfTwo</definition>
        <argsstring>(genIUType v)</argsstring>
        <name>isPowerOfTwo</name>
        <param>
          <type>genIUType</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the value is a power of two number.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="37" column="20" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="37" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga9a0d8af79a4e2b2965251024fa845eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::isPowerOfTwo</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>isPowerOfTwo</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the value is a power of two number.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="47" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="223" bodyend="227" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="47" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga5c3ef36ae32aa4271f1544f92bd578b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genIUType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genIUType</type>
        <definition>GLM_FUNC_DECL genIUType glm::ceilPowerOfTwo</definition>
        <argsstring>(genIUType v)</argsstring>
        <name>ceilPowerOfTwo</name>
        <param>
          <type>genIUType</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the power of two number which value is just higher the input value, round up to a power of two.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="54" column="25" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="54" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga3a5e7bfb29cceb676d8cb06b7c694b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::ceilPowerOfTwo</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>ceilPowerOfTwo</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the power of two number which value is just higher the input value, round up to a power of two.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="65" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="239" bodyend="242" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="65" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gafe273a57935d04c9db677bf67f9a71f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genIUType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genIUType</type>
        <definition>GLM_FUNC_DECL genIUType glm::floorPowerOfTwo</definition>
        <argsstring>(genIUType v)</argsstring>
        <name>floorPowerOfTwo</name>
        <param>
          <type>genIUType</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the power of two number which value is just lower the input value, round down to a power of two.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="72" column="25" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="72" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga4ec38a4d3f773b14639ee80f08cd0e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::floorPowerOfTwo</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>floorPowerOfTwo</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the power of two number which value is just lower the input value, round down to a power of two.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="83" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="254" bodyend="257" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="83" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gae4e1bf5d1cd179f59261a7342bdcafca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genIUType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genIUType</type>
        <definition>GLM_FUNC_DECL genIUType glm::roundPowerOfTwo</definition>
        <argsstring>(genIUType v)</argsstring>
        <name>roundPowerOfTwo</name>
        <param>
          <type>genIUType</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the power of two number which value is the closet to the input value.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="89" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="263" bodyend="271" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="89" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gaac3675b95a8a779727495fae80e75473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::roundPowerOfTwo</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>roundPowerOfTwo</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the power of two number which value is the closet to the input value.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="99" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="274" bodyend="277" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="99" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gaec593d33956a8fe43f78fccc63ddde9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genIUType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isMultiple</definition>
        <argsstring>(genIUType v, genIUType Multiple)</argsstring>
        <name>isMultiple</name>
        <param>
          <type>genIUType</type>
          <declname>v</declname>
        </param>
        <param>
          <type>genIUType</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the &apos;Value&apos; is a multiple of &apos;Multiple&apos;.</para>
<para><simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="105" column="20" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="105" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gaf5df688edbddd96e62fcc90c63324c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::isMultiple</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v, T Multiple)</argsstring>
        <name>isMultiple</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the &apos;Value&apos; is a multiple of &apos;Multiple&apos;.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="115" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="289" bodyend="292" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="115" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga183930f0d851542157b27eb45d7b4a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::isMultiple</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v, vec&lt; L, T, Q &gt; const &amp;Multiple)</argsstring>
        <name>isMultiple</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the &apos;Value&apos; is a multiple of &apos;Multiple&apos;.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="125" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="295" bodyend="298" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="125" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga1d89ac88582aaf4d5dfa5feb4a376fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::ceilMultiple</definition>
        <argsstring>(genType v, genType Multiple)</argsstring>
        <name>ceilMultiple</name>
        <param>
          <type>genType</type>
          <declname>v</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Higher multiple number of Source.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value to which is applied the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Multiple</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be a null or positive value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="136" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="304" bodyend="307" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="136" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gab64c67a2324df67f158c8b8291183a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::ceilMultiple</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v, vec&lt; L, T, Q &gt; const &amp;Multiple)</argsstring>
        <name>ceilMultiple</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Higher multiple number of Source.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Source values to which is applied the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Multiple</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be a null or positive value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="149" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="310" bodyend="313" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="149" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga2ffa3cd5f2ea746ee1bf57c46da6315e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::floorMultiple</definition>
        <argsstring>(genType v, genType Multiple)</argsstring>
        <name>floorMultiple</name>
        <param>
          <type>genType</type>
          <declname>v</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lower multiple number of Source.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value to which is applied the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Multiple</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be a null or positive value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="160" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="319" bodyend="322" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="160" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gafa34260a7ab2a200a99593176b589f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::floorMultiple</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v, vec&lt; L, T, Q &gt; const &amp;Multiple)</argsstring>
        <name>floorMultiple</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lower multiple number of Source.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Source values to which is applied the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Multiple</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be a null or positive value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="173" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="325" bodyend="328" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="173" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1gab892defcc9c0b0618df7251253dc0fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::roundMultiple</definition>
        <argsstring>(genType v, genType Multiple)</argsstring>
        <name>roundMultiple</name>
        <param>
          <type>genType</type>
          <declname>v</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lower multiple number of Source.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value to which is applied the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Multiple</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be a null or positive value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="184" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="334" bodyend="337" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="184" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__round_1ga07e3a3709fc96462033ff8fea1ce9e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::roundMultiple</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v, vec&lt; L, T, Q &gt; const &amp;Multiple)</argsstring>
        <name>roundMultiple</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Multiple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lower multiple number of Source.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Source values to which is applied the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Multiple</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be a null or positive value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtc__round" kindref="compound">GLM_GTC_round</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" line="197" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.inl" bodystart="340" bodyend="343" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/round.hpp" declline="197" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="round_8hpp" kindref="compound">glm/gtc/round.hpp</ref>&gt; to use the features of this extension.</para>
<para>Rounding value to specific boundings </para>
    </detaileddescription>
  </compounddef>
</doxygen>
