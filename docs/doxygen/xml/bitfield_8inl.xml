<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="bitfield_8inl" kind="file" language="C++">
    <compoundname>bitfield.inl</compoundname>
    <includes refid="integer_8h" local="yes">../simd/integer.h</includes>
    <includedby refid="bitfield_8hpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/bitfield.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/bitfield.inl</label>
        <link refid="bitfield_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../simd/integer.h</label>
        <link refid="integer_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext.hpp</label>
        <link refid="ext_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/bitfield.hpp</label>
        <link refid="bitfield_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/bitfield.inl</label>
        <link refid="bitfield_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/bit.hpp</label>
        <link refid="bit_8hpp"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_setup_force_cxx98.cpp</label>
        <link refid="core__setup__force__cxx98_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_setup_force_size_t_length.cpp</label>
        <link refid="core__setup__force__size__t__length_8cpp_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_setup_precision.cpp</label>
        <link refid="core__setup__precision_8cpp_source"/>
      </node>
      <node id="10">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtc/gtc_bitfield.cpp</label>
        <link refid="gtc__bitfield_8cpp_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx.cpp</label>
        <link refid="gtx_8cpp_source"/>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_quaternion.cpp</label>
        <link refid="gtx__quaternion_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceglm">glm</innernamespace>
    <innernamespace refid="namespaceglm_1_1detail">glm::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="group__gtc__bitfield" kindref="compound">GLM_GTC_bitfield</ref> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../simd/integer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">glm{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PARAM,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RET&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_DECL<sp/>RET<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(PARAM<sp/>x,<sp/>PARAM<sp/>y);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PARAM,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RET&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_DECL<sp/>RET<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(PARAM<sp/>x,<sp/>PARAM<sp/>y,<sp/>PARAM<sp/>z);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PARAM,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RET&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_DECL<sp/>RET<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(PARAM<sp/>x,<sp/>PARAM<sp/>y,<sp/>PARAM<sp/>z,<sp/>PARAM<sp/>w);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>y)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint16&gt;(0x0F0F);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint16&gt;(0x0F0F);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint16&gt;(0x3333);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint16&gt;(0x3333);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>1)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint16&gt;(0x5555);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>1)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint16&gt;(0x5555);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(REG2<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>y)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x00FF00FF);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x00FF00FF);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x0F0F0F0F);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x0F0F0F0F);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x33333333);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x33333333);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>1)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x55555555);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>1)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x55555555);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/>(REG2<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>y)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0000FFFF0000FFFFull);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0000FFFF0000FFFFull);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF00FF00FF00FFull);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF00FF00FF00FFull);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0F0F0F0F0F0F0F0Full);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0F0F0F0F0F0F0F0Full);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x3333333333333333ull);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x3333333333333333ull);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>1)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x5555555555555555ull);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>1)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x5555555555555555ull);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/>(REG2<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>z)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG3(z);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0xFF0000FFu);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0xFF0000FFu);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0xFF0000FFu);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x0F00F00Fu);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x0F00F00Fu);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x0F00F00Fu);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0xC30C30C3u);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0xC30C30C3u);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0xC30C30C3u);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x49249249u);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x49249249u);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x49249249u);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/>(REG2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>(REG3<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>z)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG3(z);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/>(REG2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>(REG3<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>z)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG3(z);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>2)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/>(REG2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>(REG3<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>z,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">glm::uint8</ref><sp/>w)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG3(z);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">glm::uint32</ref><sp/>REG4(w);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x000F000Fu);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x000F000Fu);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x000F000Fu);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG4<sp/>=<sp/>((REG4<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG4)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x000F000Fu);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x03030303u);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x03030303u);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x03030303u);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG4<sp/>=<sp/>((REG4<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG4)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x03030303u);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x11111111u);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x11111111u);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x11111111u);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG4<sp/>=<sp/>((REG4<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG4)<sp/>&amp;<sp/>static_cast&lt;glm::uint32&gt;(0x11111111u);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/>(REG2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>(REG3<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>(REG4<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>z,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">glm::uint16</ref><sp/>w)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG1(x);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG2(y);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG3(z);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">glm::uint64</ref><sp/>REG4(w);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG4<sp/>=<sp/>((REG4<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>REG4)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG4<sp/>=<sp/>((REG4<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>REG4)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG4<sp/>=<sp/>((REG4<sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>REG4)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG1<sp/>=<sp/>((REG1<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG1)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG2<sp/>=<sp/>((REG2<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG2)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG3<sp/>=<sp/>((REG3<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG3)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG4<sp/>=<sp/>((REG4<sp/>&lt;&lt;<sp/><sp/>3)<sp/>|<sp/>REG4)<sp/>&amp;<sp/>static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>REG1<sp/>|<sp/>(REG2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>(REG3<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>(REG4<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="226" refid="group__gtc__bitfield_1gad7eba518a0b71662114571ee76939f8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genIUType<sp/><ref refid="group__gtc__bitfield_1gacff475cae073684e95b207beac9ad165" kindref="member">mask</ref>(genIUType<sp/>Bits)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;genIUType&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;mask&apos;<sp/>accepts<sp/>only<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Bits<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(genIUType)<sp/>*<sp/>8<sp/>?<sp/>~</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIUType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0)<sp/>:<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIUType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/>Bits)<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIUType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="234" refid="group__gtc__bitfield_1gacff475cae073684e95b207beac9ad165" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__gtc__bitfield_1gacff475cae073684e95b207beac9ad165" kindref="member">mask</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;mask&apos;<sp/>accepts<sp/>only<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1functor1" kindref="compound">detail::functor1&lt;L, T, T, Q&gt;::call</ref>(<ref refid="structmask" kindref="compound">mask</ref>,<sp/>v);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIType&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genIType<sp/><ref refid="group__gtc__bitfield_1ga979ef526f27d7bca4b0f3d56e3e2a9ac" kindref="member">bitfieldRotateRight</ref>(genIType<sp/>In,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Shift)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;genIType&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;bitfieldRotateRight&apos;<sp/>accepts<sp/>only<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BitSize<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(genIType)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(In<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Shift))<sp/>|<sp/>(In<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(BitSize<sp/>-<sp/>Shift));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="251" refid="group__gtc__bitfield_1ga979ef526f27d7bca4b0f3d56e3e2a9ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__gtc__bitfield_1ga979ef526f27d7bca4b0f3d56e3e2a9ac" kindref="member">bitfieldRotateRight</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>In,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Shift)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;bitfieldRotateRight&apos;<sp/>accepts<sp/>only<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BitSize<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(In<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Shift))<sp/>|<sp/>(In<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(BitSize<sp/>-<sp/>Shift));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIType&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genIType<sp/><ref refid="group__gtc__bitfield_1ga70511f6d3d025c829ad92de45073365f" kindref="member">bitfieldRotateLeft</ref>(genIType<sp/>In,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Shift)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;genIType&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;bitfieldRotateLeft&apos;<sp/>accepts<sp/>only<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BitSize<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(genIType)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(In<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Shift))<sp/>|<sp/>(In<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(BitSize<sp/>-<sp/>Shift));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="269" refid="group__gtc__bitfield_1ga70511f6d3d025c829ad92de45073365f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__gtc__bitfield_1ga70511f6d3d025c829ad92de45073365f" kindref="member">bitfieldRotateLeft</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>In,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Shift)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;bitfieldRotateLeft&apos;<sp/>accepts<sp/>only<sp/>integer<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BitSize<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(In<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Shift))<sp/>|<sp/>(In<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(BitSize<sp/>-<sp/>Shift));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="278" refid="group__gtc__bitfield_1ga46f9295abe3b5c7658f5b13c7f819f0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genIUType<sp/><ref refid="group__gtc__bitfield_1gaaca9b79b515fcd52df90247e4061943f" kindref="member">bitfieldFillOne</ref>(genIUType<sp/>Value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FirstBit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BitCount)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIUType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__gtc__bitfield_1gacff475cae073684e95b207beac9ad165" kindref="member">mask</ref>(BitCount)<sp/>&lt;&lt;<sp/>FirstBit);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="284" refid="group__gtc__bitfield_1gaaca9b79b515fcd52df90247e4061943f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__gtc__bitfield_1gaaca9b79b515fcd52df90247e4061943f" kindref="member">bitfieldFillOne</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FirstBit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BitCount)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__gtc__bitfield_1gacff475cae073684e95b207beac9ad165" kindref="member">mask</ref>(BitCount)<sp/>&lt;&lt;<sp/>FirstBit);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genIUType&gt;</highlight></codeline>
<codeline lineno="290" refid="group__gtc__bitfield_1ga697b86998b7d74ee0a69d8e9f8819fee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genIUType<sp/><ref refid="group__gtc__bitfield_1gad035072dc0f2318e5b40fd24c3060149" kindref="member">bitfieldFillZero</ref>(genIUType<sp/>Value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FirstBit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BitCount)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">genIUType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(~(<ref refid="group__gtc__bitfield_1gacff475cae073684e95b207beac9ad165" kindref="member">mask</ref>(BitCount)<sp/>&lt;&lt;<sp/>FirstBit));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="296" refid="group__gtc__bitfield_1gad035072dc0f2318e5b40fd24c3060149" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__gtc__bitfield_1gad035072dc0f2318e5b40fd24c3060149" kindref="member">bitfieldFillZero</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FirstBit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BitCount)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(~(<ref refid="group__gtc__bitfield_1gacff475cae073684e95b207beac9ad165" kindref="member">mask</ref>(BitCount)<sp/>&lt;&lt;<sp/>FirstBit));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>y)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign8</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>i;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>u;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign16</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>i;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>u;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="group__gtc__bitfield_1ga0700a3ceb088a0ecc23d76c154096061" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>y)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint8,<sp/>uint16&gt;(x,<sp/>y);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group__gtc__bitfield_1ga1a0264598647ae00a596865af4e1e878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>y)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign16</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>i;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>u;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign32</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>i;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>u;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="group__gtc__bitfield_1ga19ef8360379483e3ee245e89cb62ff93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>y)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint16,<sp/>uint32&gt;(x,<sp/>y);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="group__gtc__bitfield_1ga0de51d5985e6a703f305a5a61479babd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>y)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign32</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>i;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>u;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign64</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/>i;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/>u;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="group__gtc__bitfield_1ga2bc87fd66f6f8471c1a46888360cef12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>y)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint32,<sp/>uint64&gt;(x,<sp/>y);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="group__gtc__bitfield_1ga6dee2ce1c45805063bb7fc5f6fd8f5ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>z)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign8</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>i;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>u;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y,<sp/>sign_z;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign32</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>i;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>u;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_z.i<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u,<sp/>sign_z.u);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="group__gtc__bitfield_1gab9d593a2e916beb8f8137a0dbeae3afe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>z)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint8,<sp/>uint32&gt;(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="group__gtc__bitfield_1gaf898f842ac089fcc8d6201c32702584a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>z)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign16</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>i;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>u;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y,<sp/>sign_z;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign64</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/>i;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/>u;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_z.i<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u,<sp/>sign_z.u);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="group__gtc__bitfield_1ga3c170e2ec54f2faab5e1c5bb693d718d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>z)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint32,<sp/>uint64&gt;(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="group__gtc__bitfield_1ga64e2d84f6560af3cc639644b1e628c42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>z)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign16</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>i;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>u;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y,<sp/>sign_z;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign64</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/>i;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/>u;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_z.i<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u,<sp/>sign_z.u);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="group__gtc__bitfield_1ga7c10eb37f608365cfaef5ca2c476e1ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>z)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint32,<sp/>uint64&gt;(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="group__gtc__bitfield_1ga7da84ecc2b3a46c9c08a9f40012359cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>z,<sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>w)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign8</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga96254f9c1c4506fc8eb5cf3301ce8565" kindref="member">int8</ref><sp/>i;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>u;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y,<sp/>sign_z,<sp/>sign_w;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign32</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">int32</ref><sp/>i;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/>u;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_z.i<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_w.i<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u,<sp/>sign_z.u,<sp/>sign_w.u);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="group__gtc__bitfield_1ga447c0bbed9d60c14578626d8f03f3755" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga202b6a53c105fcb7e531f9b443518451" kindref="member">uint32</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>z,<sp/><ref refid="group__gtc__type__precision_1ga1a7dcd8aac97cc8020817c94049deff2" kindref="member">uint8</ref><sp/>w)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint8,<sp/>uint32&gt;(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="group__gtc__bitfield_1ga09ee0be0fac790a1607a711e597dd9bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>z,<sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>w)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign16</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga2945a61d12771f8954994fcddf02b021" kindref="member">int16</ref><sp/>i;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>u;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>sign_x,<sp/>sign_y,<sp/>sign_z,<sp/>sign_w;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">sign64</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga435d75819cce297cc5fa21bd84ef89a5" kindref="member">int64</ref><sp/>i;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/>u;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_x.i<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_y.i<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_z.i<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_w.i<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref>.u<sp/>=<sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(sign_x.u,<sp/>sign_y.u,<sp/>sign_z.u,<sp/>sign_w.u);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>.i;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="group__gtc__bitfield_1gac8a926a7bfd9b23c22a4f685193fbfe1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="group__gtc__type__precision_1gae3632bf9b37da66233d78930dd06378a" kindref="member">uint64</ref><sp/><ref refid="group__gtc__bitfield_1ga479134317bc95d99f2b2e235d3db287b" kindref="member">bitfieldInterleave</ref>(<ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>x,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>y,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>z,<sp/><ref refid="group__gtc__type__precision_1gad8c2939e1fdd8e5828b31d95c52255d5" kindref="member">uint16</ref><sp/>w)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::bitfieldInterleave&lt;uint16,<sp/>uint64&gt;(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>glm</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/bitfield.inl"/>
  </compounddef>
</doxygen>
