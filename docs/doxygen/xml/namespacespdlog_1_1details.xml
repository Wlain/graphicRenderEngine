<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacespdlog_1_1details" kind="namespace" language="C++">
    <compoundname>spdlog::details</compoundname>
    <innerclass refid="classspdlog_1_1details_1_1a__formatter" prot="public">spdlog::details::a_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_a__formatter" prot="public">spdlog::details::A_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1aggregate__formatter" prot="public">spdlog::details::aggregate_formatter</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1async__msg" prot="public">spdlog::details::async_msg</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_b__formatter" prot="public">spdlog::details::B_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1b__formatter" prot="public">spdlog::details::b_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1backtracer" prot="public">spdlog::details::backtracer</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_c__formatter" prot="public">spdlog::details::C_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1c__formatter" prot="public">spdlog::details::c_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1ch__formatter" prot="public">spdlog::details::ch_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1circular__q" prot="public">spdlog::details::circular_q</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1color__start__formatter" prot="public">spdlog::details::color_start_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1color__stop__formatter" prot="public">spdlog::details::color_stop_formatter</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1console__mutex" prot="public">spdlog::details::console_mutex</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1console__nullmutex" prot="public">spdlog::details::console_nullmutex</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1d__formatter" prot="public">spdlog::details::d_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_d__formatter" prot="public">spdlog::details::D_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1dump__info" prot="public">spdlog::details::dump_info</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_e__formatter" prot="public">spdlog::details::E_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1e__formatter" prot="public">spdlog::details::e_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1elapsed__formatter" prot="public">spdlog::details::elapsed_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_f__formatter" prot="public">spdlog::details::F_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1f__formatter" prot="public">spdlog::details::f_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1file__helper" prot="public">spdlog::details::file_helper</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1flag__formatter" prot="public">spdlog::details::flag_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1full__formatter" prot="public">spdlog::details::full_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_h__formatter" prot="public">spdlog::details::H_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_i__formatter" prot="public">spdlog::details::I_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1level__formatter" prot="public">spdlog::details::level_formatter</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1log__msg" prot="public">spdlog::details::log_msg</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1log__msg__buffer" prot="public">spdlog::details::log_msg_buffer</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1m__formatter" prot="public">spdlog::details::m_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_m__formatter" prot="public">spdlog::details::M_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1mpmc__blocking__queue" prot="public">spdlog::details::mpmc_blocking_queue</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1name__formatter" prot="public">spdlog::details::name_formatter</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1null__atomic__int" prot="public">spdlog::details::null_atomic_int</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1null__mutex" prot="public">spdlog::details::null_mutex</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1null__scoped__padder" prot="public">spdlog::details::null_scoped_padder</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1p__formatter" prot="public">spdlog::details::p_formatter</innerclass>
    <innerclass refid="structspdlog_1_1details_1_1padding__info" prot="public">spdlog::details::padding_info</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1periodic__worker" prot="public">spdlog::details::periodic_worker</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1pid__formatter" prot="public">spdlog::details::pid_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1r__formatter" prot="public">spdlog::details::r_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_r__formatter" prot="public">spdlog::details::R_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1registry" prot="public">spdlog::details::registry</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_s__formatter" prot="public">spdlog::details::S_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1scoped__padder" prot="public">spdlog::details::scoped_padder</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1short__filename__formatter" prot="public">spdlog::details::short_filename_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1short__level__formatter" prot="public">spdlog::details::short_level_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1source__filename__formatter" prot="public">spdlog::details::source_filename_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1source__funcname__formatter" prot="public">spdlog::details::source_funcname_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1source__linenum__formatter" prot="public">spdlog::details::source_linenum_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1source__location__formatter" prot="public">spdlog::details::source_location_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1t__formatter" prot="public">spdlog::details::t_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_t__formatter" prot="public">spdlog::details::T_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1tcp__client" prot="public">spdlog::details::tcp_client</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1thread__pool" prot="public">spdlog::details::thread_pool</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1udp__client" prot="public">spdlog::details::udp_client</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1v__formatter" prot="public">spdlog::details::v_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1_y__formatter" prot="public">spdlog::details::Y_formatter</innerclass>
    <innerclass refid="classspdlog_1_1details_1_1z__formatter" prot="public">spdlog::details::z_formatter</innerclass>
    <innernamespace refid="namespacespdlog_1_1details_1_1fmt__helper">spdlog::details::fmt_helper</innernamespace>
    <innernamespace refid="namespacespdlog_1_1details_1_1os">spdlog::details::os</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="thread__pool_8h_1a22274995cf879a5d0a08d1f7513ee4fb" prot="public" static="no" strong="yes">
        <type></type>
        <name>async_msg_type</name>
        <enumvalue id="thread__pool_8h_1a22274995cf879a5d0a08d1f7513ee4fbadc1d71bbb5c4d2a5e936db79ef10c19f" prot="public">
          <name>log</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="thread__pool_8h_1a22274995cf879a5d0a08d1f7513ee4fba86f354b8575a1a736775ae003fa344e5" prot="public">
          <name>flush</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="thread__pool_8h_1a22274995cf879a5d0a08d1f7513ee4fba1459e53d3fbaa95cebaf90860dd7a259" prot="public">
          <name>terminate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/details/thread_pool.h" line="23" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/details/thread_pool.h" bodystart="24" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="spdlog_2include_2spdlog_2common_8h_1a5b09637931bbed81cffaf8b128725bbf" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>class T</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>typename std::enable_if&lt; B, T &gt;::type</type>
        <definition>using spdlog::details::enable_if_t = typedef typename std::enable_if&lt;B, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/common.h" line="325" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/common.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="thread__pool_8h_1a9b6989c16b6150f7e4658ea2aee01bc2" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classspdlog_1_1async__logger" kindref="compound">spdlog::async_logger</ref> &gt;</type>
        <definition>using spdlog::details::async_logger_ptr = typedef std::shared_ptr&lt;spdlog::async_logger&gt;</definition>
        <argsstring></argsstring>
        <name>async_logger_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/details/thread_pool.h" line="21" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/details/thread_pool.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="async_8h_1a050e412794a5af8916ef36e4ed100c25" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t spdlog::details::default_async_q_size</definition>
        <argsstring></argsstring>
        <name>default_async_q_size</name>
        <initializer>= 8192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async.h" line="28" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pattern__formatter-inl_8h_1a5a7be08dfeaa6df919a3c3f59a978563" prot="public" static="yes" mutable="no">
        <type>std::array&lt; const char *, 7 &gt;</type>
        <definition>std::array&lt;const char *, 7&gt; spdlog::details::days</definition>
        <argsstring></argsstring>
        <name>days</name>
        <initializer>{{&quot;Sun&quot;, &quot;Mon&quot;, &quot;Tue&quot;, &quot;Wed&quot;, &quot;Thu&quot;, &quot;Fri&quot;, &quot;Sat&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" line="170" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pattern__formatter-inl_8h_1acbb41e6d546bcb447a768fb7662e81b4" prot="public" static="yes" mutable="no">
        <type>std::array&lt; const char *, 7 &gt;</type>
        <definition>std::array&lt;const char *, 7&gt; spdlog::details::full_days</definition>
        <argsstring></argsstring>
        <name>full_days</name>
        <initializer>{{&quot;Sunday&quot;, &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" line="189" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pattern__formatter-inl_8h_1a4016edf7500d96ba064cab1e298c8920" prot="public" static="yes" mutable="no">
        <type>const std::array&lt; const char *, 12 &gt;</type>
        <definition>const std::array&lt;const char *, 12&gt; spdlog::details::months</definition>
        <argsstring></argsstring>
        <name>months</name>
        <initializer>{{&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sept&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" line="208" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pattern__formatter-inl_8h_1ad678132d6d6104f16b39ec5e49f46745" prot="public" static="yes" mutable="no">
        <type>const std::array&lt; const char *, 12 &gt;</type>
        <definition>const std::array&lt;const char *, 12&gt; spdlog::details::full_months</definition>
        <argsstring></argsstring>
        <name>full_months</name>
        <initializer>{
    {&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;August&quot;, &quot;September&quot;, &quot;October&quot;, &quot;November&quot;, &quot;December&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" line="227" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="spdlog_2include_2spdlog_2common_8h_1a472da71c59b8e23bb35dd107e555a597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; T &gt;</type>
        <definition>std::unique_ptr&lt; T &gt; spdlog::details::make_unique</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>make_unique</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/common.h" line="328" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/common.h" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="spdlog_2include_2spdlog_2common_8h_1a9e7a73da3084fa85f7a13d92dc9533c2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>enable_if_t&lt;!std::is_same&lt; T, U &gt;::<ref refid="classvalue" kindref="compound">value</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T spdlog::details::conditional_static_cast</definition>
        <argsstring>(U value)</argsstring>
        <name>conditional_static_cast</name>
        <param>
          <type>U</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/common.h" line="337" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/common.h" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="pattern__formatter-inl_8h_1aa5f666593d38ddf15a34c81b3d222061" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * spdlog::details::ampm</definition>
        <argsstring>(const tm &amp;t)</argsstring>
        <name>ampm</name>
        <param>
          <type>const tm &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" line="159" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="pattern__formatter-inl_8h_1adc1e7c142665b3801b5797f9c8b77bfa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int spdlog::details::to12h</definition>
        <argsstring>(const tm &amp;t)</argsstring>
        <name>to12h</name>
        <param>
          <type>const tm &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" line="164" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/pattern_formatter-inl.h" bodystart="164" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/async.h" line="27" column="1"/>
  </compounddef>
</doxygen>
