<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classre_1_1_material" kind="class" language="C++" prot="public">
    <compoundname>re::Material</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classre_1_1_material_1ae1e5616e69ca91186c042f0ea89cefa3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string re::Material::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="56" column="17" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_material_1a73dbbbb80689526461444b262777b730" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Shader&gt; re::Material::m_shader</definition>
        <argsstring></argsstring>
        <name>m_shader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="57" column="21" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classre_1_1_material_1a649fa3be24b407d804428610247fd6ed" prot="private" static="no" mutable="no">
        <type><ref refid="classre_1_1_uniform_set" kindref="compound">UniformSet</ref></type>
        <definition>UniformSet re::Material::m_uniformMap</definition>
        <argsstring></argsstring>
        <name>m_uniformMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="58" column="16" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classre_1_1_material_1a03c2d524ace9ade9c3f55b43c99bcea1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Shader</definition>
        <argsstring></argsstring>
        <name>Shader</name>
        <param>
          <type><ref refid="classre_1_1_shader" kindref="compound">Shader</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="59" column="18" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classre_1_1_material_1aa8ab806874e69ead344abef1c5e76aa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class RenderPass</definition>
        <argsstring></argsstring>
        <name>RenderPass</name>
        <param>
          <type><ref refid="classre_1_1_render_pass" kindref="compound">RenderPass</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="60" column="18" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classre_1_1_material_1ab292179c964011a644ac1dd2dbd355d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::Material::Material</definition>
        <argsstring>()=delete</argsstring>
        <name>Material</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1adfa3baebf8bc3301c038212dd36eddc2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::Material::Material</definition>
        <argsstring>(const std::shared_ptr&lt; Shader &gt; &amp;shader)</argsstring>
        <name>Material</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt; &amp;</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="22" column="14" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1aae98fa50c19eb423f36d4be558b3e5b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>re::Material::~Material</definition>
        <argsstring>()</argsstring>
        <name>~Material</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1ab17e6e2b2ba885fa54cbbbc84ea71450" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; Shader &gt; &amp; re::Material::getShader</definition>
        <argsstring>() const</argsstring>
        <name>getShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="24" column="28" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a516af3167c566ae9fc34416cfb015221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Material::setShader</definition>
        <argsstring>(const std::shared_ptr&lt; Shader &gt; &amp;shader)</argsstring>
        <name>setShader</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classre_1_1_shader" kindref="compound">Shader</ref> &gt; &amp;</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="25" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="32" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a20d819a7c160864811d1fd75099df143" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; re::Material::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="26" column="24" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a334b6d966c4bfd971b1d4f591ccaeaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Material::setName</definition>
        <argsstring>(std::string_view name)</argsstring>
        <name>setName</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="27" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1aaba2004d7f51529a7493b704e3fb2b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classre_1_1_color" kindref="compound">Color</ref></type>
        <definition>Color re::Material::getColor</definition>
        <argsstring>()</argsstring>
        <name>getColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="29" column="11" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a60c4699d58ecc3fda4e446a3e7bbc1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::setColor</definition>
        <argsstring>(const Color &amp;color)</argsstring>
        <name>setColor</name>
        <param>
          <type>const <ref refid="classre_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="30" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1ad71cf86d511c689e2995a3220efe81b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classre_1_1_color" kindref="compound">Color</ref></type>
        <definition>Color re::Material::getSpecularity</definition>
        <argsstring>()</argsstring>
        <name>getSpecularity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="31" column="11" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a8908f7092bd476b1a824fb9aa4eb5667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::setSpecularity</definition>
        <argsstring>(Color specularity)</argsstring>
        <name>setSpecularity</name>
        <param>
          <type><ref refid="classre_1_1_color" kindref="compound">Color</ref></type>
          <declname>specularity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="32" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1af0cda2d5efad8cc0d594a86b13cd217b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::vec2</type>
        <definition>glm::vec2 re::Material::getMetallicRoughness</definition>
        <argsstring>()</argsstring>
        <name>getMetallicRoughness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="33" column="15" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a7b170771dd38f85e9015ea9a65f42674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::setMetallicRoughness</definition>
        <argsstring>(glm::vec2 metallicRoughness)</argsstring>
        <name>setMetallicRoughness</name>
        <param>
          <type>glm::vec2</type>
          <declname>metallicRoughness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="35" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1adf49e9d2c7c77541547b65b9d3d3d76c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture &gt; re::Material::getMetallicRoughnessTexture</definition>
        <argsstring>()</argsstring>
        <name>getMetallicRoughnessTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="36" column="21" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1acdbfe047a07d279fefb196d6accff534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::setMetallicRoughnessTexture</definition>
        <argsstring>(std::shared_ptr&lt; Texture &gt; texture)</argsstring>
        <name>setMetallicRoughnessTexture</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classre_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="37" column="11" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a8cc240143b15d44e4d281c3d2aab89bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture &gt; re::Material::getTexture</definition>
        <argsstring>()</argsstring>
        <name>getTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="38" column="21" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1ad033584df345b35e16b0b77a3ca90ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::setTexture</definition>
        <argsstring>(const std::shared_ptr&lt; Texture &gt; &amp;texture)</argsstring>
        <name>setTexture</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classre_1_1_texture" kindref="compound">Texture</ref> &gt; &amp;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="39" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a0d47d41bf35b0b2d84664a89f37ce7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, const glm::vec4 &amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>const glm::vec4 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="40" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="238" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1aa7155e4d2ffb94f5a847128481e5f59a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, Color value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type><ref refid="classre_1_1_color" kindref="compound">Color</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="41" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="245" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1aec3d7a1bd7b4965b12b03f1a46aa7fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, float value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="42" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="252" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a3e117259c2f5883fe3b0453a765102d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, int value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="43" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="259" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a475db91f944634913622d3dd8722ffcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, const glm::mat3 &amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>const glm::mat3 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="44" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1a75483280db15165be3af8734ad6ff6f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, const glm::mat4 &amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>const glm::mat4 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="45" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1afad97634de665fe31484b9badbe11732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, const std::shared_ptr&lt; Texture &gt; &amp;texture)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classre_1_1_texture" kindref="compound">Texture</ref> &gt; &amp;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="46" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="266" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1ae1f19015a1f4008a9b45e876345b4aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, const std::shared_ptr&lt; std::vector&lt; glm::mat3 &gt; &gt; &amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; std::vector&lt; glm::mat3 &gt; &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="47" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="273" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1acc96633d0e46b01eb4931f49d534363f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool re::Material::set</definition>
        <argsstring>(std::string_view uniformName, const std::shared_ptr&lt; std::vector&lt; glm::mat4 &gt; &gt; &amp;value)</argsstring>
        <name>set</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; std::vector&lt; glm::mat4 &gt; &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="48" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1ac8ad0ed22c0516187ea4697a2e8c281a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T re::Material::get</definition>
        <argsstring>(std::string_view uniformName)</argsstring>
        <name>get</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="50" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classre_1_1_material_1ac0ab82edcaadc216c29d9728e75fb7c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="classre_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; std::vector&lt; glm::mat4 &gt; &gt; re::Material::get</definition>
        <argsstring>(std::string_view uniformName)</argsstring>
        <name>get</name>
        <param>
          <type>std::string_view</type>
          <declname>uniformName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" line="86" column="17" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="86" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classre_1_1_material_1aa5d20685451b020396fd9f8dd339fa96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void re::Material::bind</definition>
        <argsstring>()</argsstring>
        <name>bind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="53" column="10" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" line="18" column="1" bodyfile="/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h" bodystart="19" bodyend="61"/>
    <listofallmembers>
      <member refid="classre_1_1_material_1aa5d20685451b020396fd9f8dd339fa96" prot="private" virt="non-virtual"><scope>re::Material</scope><name>bind</name></member>
      <member refid="classre_1_1_material_1ac8ad0ed22c0516187ea4697a2e8c281a" prot="public" virt="non-virtual"><scope>re::Material</scope><name>get</name></member>
      <member refid="classre_1_1_material_1ac0ab82edcaadc216c29d9728e75fb7c6" prot="public" virt="non-virtual"><scope>re::Material</scope><name>get</name></member>
      <member refid="classre_1_1_material_1aaba2004d7f51529a7493b704e3fb2b33" prot="public" virt="non-virtual"><scope>re::Material</scope><name>getColor</name></member>
      <member refid="classre_1_1_material_1af0cda2d5efad8cc0d594a86b13cd217b" prot="public" virt="non-virtual"><scope>re::Material</scope><name>getMetallicRoughness</name></member>
      <member refid="classre_1_1_material_1adf49e9d2c7c77541547b65b9d3d3d76c" prot="public" virt="non-virtual"><scope>re::Material</scope><name>getMetallicRoughnessTexture</name></member>
      <member refid="classre_1_1_material_1a20d819a7c160864811d1fd75099df143" prot="public" virt="non-virtual"><scope>re::Material</scope><name>getName</name></member>
      <member refid="classre_1_1_material_1ab17e6e2b2ba885fa54cbbbc84ea71450" prot="public" virt="non-virtual"><scope>re::Material</scope><name>getShader</name></member>
      <member refid="classre_1_1_material_1ad71cf86d511c689e2995a3220efe81b7" prot="public" virt="non-virtual"><scope>re::Material</scope><name>getSpecularity</name></member>
      <member refid="classre_1_1_material_1a8cc240143b15d44e4d281c3d2aab89bc" prot="public" virt="non-virtual"><scope>re::Material</scope><name>getTexture</name></member>
      <member refid="classre_1_1_material_1ae1e5616e69ca91186c042f0ea89cefa3" prot="private" virt="non-virtual"><scope>re::Material</scope><name>m_name</name></member>
      <member refid="classre_1_1_material_1a73dbbbb80689526461444b262777b730" prot="private" virt="non-virtual"><scope>re::Material</scope><name>m_shader</name></member>
      <member refid="classre_1_1_material_1a649fa3be24b407d804428610247fd6ed" prot="private" virt="non-virtual"><scope>re::Material</scope><name>m_uniformMap</name></member>
      <member refid="classre_1_1_material_1ab292179c964011a644ac1dd2dbd355d2" prot="public" virt="non-virtual"><scope>re::Material</scope><name>Material</name></member>
      <member refid="classre_1_1_material_1adfa3baebf8bc3301c038212dd36eddc2" prot="public" virt="non-virtual"><scope>re::Material</scope><name>Material</name></member>
      <member refid="classre_1_1_material_1aa8ab806874e69ead344abef1c5e76aa0" prot="private" virt="non-virtual"><scope>re::Material</scope><name>RenderPass</name></member>
      <member refid="classre_1_1_material_1a0d47d41bf35b0b2d84664a89f37ce7a0" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1aa7155e4d2ffb94f5a847128481e5f59a" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1aec3d7a1bd7b4965b12b03f1a46aa7fa2" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1a3e117259c2f5883fe3b0453a765102d6" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1a475db91f944634913622d3dd8722ffcf" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1a75483280db15165be3af8734ad6ff6f6" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1afad97634de665fe31484b9badbe11732" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1ae1f19015a1f4008a9b45e876345b4aef" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1acc96633d0e46b01eb4931f49d534363f" prot="public" virt="non-virtual"><scope>re::Material</scope><name>set</name></member>
      <member refid="classre_1_1_material_1a60c4699d58ecc3fda4e446a3e7bbc1e6" prot="public" virt="non-virtual"><scope>re::Material</scope><name>setColor</name></member>
      <member refid="classre_1_1_material_1a7b170771dd38f85e9015ea9a65f42674" prot="public" virt="non-virtual"><scope>re::Material</scope><name>setMetallicRoughness</name></member>
      <member refid="classre_1_1_material_1acdbfe047a07d279fefb196d6accff534" prot="public" virt="non-virtual"><scope>re::Material</scope><name>setMetallicRoughnessTexture</name></member>
      <member refid="classre_1_1_material_1a334b6d966c4bfd971b1d4f591ccaeaeb" prot="public" virt="non-virtual"><scope>re::Material</scope><name>setName</name></member>
      <member refid="classre_1_1_material_1a516af3167c566ae9fc34416cfb015221" prot="public" virt="non-virtual"><scope>re::Material</scope><name>setShader</name></member>
      <member refid="classre_1_1_material_1a8908f7092bd476b1a824fb9aa4eb5667" prot="public" virt="non-virtual"><scope>re::Material</scope><name>setSpecularity</name></member>
      <member refid="classre_1_1_material_1ad033584df345b35e16b0b77a3ca90ce2" prot="public" virt="non-virtual"><scope>re::Material</scope><name>setTexture</name></member>
      <member refid="classre_1_1_material_1a03c2d524ace9ade9c3f55b43c99bcea1" prot="private" virt="non-virtual"><scope>re::Material</scope><name>Shader</name></member>
      <member refid="classre_1_1_material_1aae98fa50c19eb423f36d4be558b3e5b4" prot="public" virt="non-virtual"><scope>re::Material</scope><name>~Material</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
