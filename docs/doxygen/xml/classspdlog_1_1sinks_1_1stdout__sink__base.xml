<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classspdlog_1_1sinks_1_1stdout__sink__base" kind="class" language="C++" prot="public">
    <compoundname>spdlog::sinks::stdout_sink_base</compoundname>
    <basecompoundref refid="classspdlog_1_1sinks_1_1sink" prot="public" virt="non-virtual">spdlog::sinks::sink</basecompoundref>
    <derivedcompoundref refid="classspdlog_1_1sinks_1_1stderr__sink" prot="public" virt="non-virtual">spdlog::sinks::stderr_sink&lt; ConsoleMutex &gt;</derivedcompoundref>
    <derivedcompoundref refid="classspdlog_1_1sinks_1_1stdout__sink" prot="public" virt="non-virtual">spdlog::sinks::stdout_sink&lt; ConsoleMutex &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename ConsoleMutex</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classspdlog_1_1sinks_1_1stdout__sink__base_1aef02ee2f4bc9886ef7e42ebc0900c4df" prot="public" static="no">
        <type>typename ConsoleMutex::mutex_t</type>
        <definition>using spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::mutex_t =  typename ConsoleMutex::mutex_t</definition>
        <argsstring></argsstring>
        <name>mutex_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="23" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a5bbce9284f19a7a4089912e53557756a" prot="protected" static="no" mutable="no">
        <type>mutex_t &amp;</type>
        <definition>mutex_t&amp; spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="40" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a0e8721f25867741bcf4aa7ff4bfa92a7" prot="protected" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::file_</definition>
        <argsstring></argsstring>
        <name>file_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="41" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1sinks_1_1stdout__sink__base_1af3b413197a78722b0e46b29c1f2e6d87" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classspdlog_1_1formatter" kindref="compound">spdlog::formatter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;spdlog::formatter&gt; spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::formatter_</definition>
        <argsstring></argsstring>
        <name>formatter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="42" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a7044a6f292088dbc525961deec8a3823" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPDLOG_INLINE spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::stdout_sink_base</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>stdout_sink_base</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="24" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks-inl.h" bodystart="32" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1aeb0388a8cca62aba6be6e595d3976c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::~stdout_sink_base</definition>
        <argsstring>() override=default</argsstring>
        <name>~stdout_sink_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a4a8e344fe8ace2a6dc92e9ec4babc6d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::stdout_sink_base</definition>
        <argsstring>(const stdout_sink_base &amp;other)=delete</argsstring>
        <name>stdout_sink_base</name>
        <param>
          <type>const <ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">stdout_sink_base</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a26dc131471e14678e1826360e78dac27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::stdout_sink_base</definition>
        <argsstring>(stdout_sink_base &amp;&amp;other)=delete</argsstring>
        <name>stdout_sink_base</name>
        <param>
          <type><ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">stdout_sink_base</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1ab798504cb786684ff2877694f070864d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">stdout_sink_base</ref> &amp;</type>
        <definition>stdout_sink_base &amp; spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::operator=</definition>
        <argsstring>(const stdout_sink_base &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">stdout_sink_base</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="30" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a382a43b74d1532840170e39632b18ee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">stdout_sink_base</ref> &amp;</type>
        <definition>stdout_sink_base &amp; spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::operator=</definition>
        <argsstring>(stdout_sink_base &amp;&amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">stdout_sink_base</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="31" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a42b184a292ea3ccaceaacbc2da70ec53" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::log</definition>
        <argsstring>(const details::log_msg &amp;msg) override</argsstring>
        <name>log</name>
        <reimplements refid="classspdlog_1_1sinks_1_1sink_1a51d8f34ad79064e0dc13c6013236e427">log</reimplements>
        <param>
          <type>const <ref refid="structspdlog_1_1details_1_1log__msg" kindref="compound">details::log_msg</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="33" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks-inl.h" bodystart="53" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a362e6d15b80bfc0becd264d23197d7db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::flush</definition>
        <argsstring>() override</argsstring>
        <name>flush</name>
        <reimplements refid="classspdlog_1_1sinks_1_1sink_1a8a0674ae3bca8f1617aef820e23a2ccd">flush</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="34" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks-inl.h" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1a4b9a3b76512cc571be1f4a02b9a0463d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::set_pattern</definition>
        <argsstring>(const std::string &amp;pattern) override</argsstring>
        <name>set_pattern</name>
        <reimplements refid="classspdlog_1_1sinks_1_1sink_1a7e5cfd4b683c8bfa8fbd602d7f409632">set_pattern</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="35" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks-inl.h" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1sinks_1_1stdout__sink__base_1aca9265b7d7c22c6a3cbc81e7363c6a0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;::set_formatter</definition>
        <argsstring>(std::unique_ptr&lt; spdlog::formatter &gt; sink_formatter) override</argsstring>
        <name>set_formatter</name>
        <reimplements refid="classspdlog_1_1sinks_1_1sink_1ac410f2229e583a75337a5fdf45d020be">set_formatter</reimplements>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classspdlog_1_1formatter" kindref="compound">spdlog::formatter</ref> &gt;</type>
          <declname>sink_formatter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="37" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks-inl.h" bodystart="95" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>spdlog::sinks::sink</label>
        <link refid="classspdlog_1_1sinks_1_1sink"/>
      </node>
      <node id="3">
        <label>spdlog::sinks::stderr_sink&lt; ConsoleMutex &gt;</label>
        <link refid="classspdlog_1_1sinks_1_1stderr__sink"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>spdlog::sinks::stdout_sink&lt; ConsoleMutex &gt;</label>
        <link refid="classspdlog_1_1sinks_1_1stdout__sink"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;</label>
        <link refid="classspdlog_1_1sinks_1_1stdout__sink__base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>spdlog::sinks::sink</label>
        <link refid="classspdlog_1_1sinks_1_1sink"/>
      </node>
      <node id="1">
        <label>spdlog::sinks::stdout_sink_base&lt; ConsoleMutex &gt;</label>
        <link refid="classspdlog_1_1sinks_1_1stdout__sink__base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" line="20" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/sinks/stdout_sinks.h" bodystart="21" bodyend="46"/>
    <listofallmembers>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a0e8721f25867741bcf4aa7ff4bfa92a7" prot="protected" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>file_</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a362e6d15b80bfc0becd264d23197d7db" prot="public" virt="virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>flush</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1af3b413197a78722b0e46b29c1f2e6d87" prot="protected" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>formatter_</name></member>
      <member refid="classspdlog_1_1sinks_1_1sink_1a8b9693e7ea883ce02234bed0e3b3348d" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>level</name></member>
      <member refid="classspdlog_1_1sinks_1_1sink_1a435da07b59e1165b38d53635cdada30a" prot="protected" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>level_</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a42b184a292ea3ccaceaacbc2da70ec53" prot="public" virt="virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>log</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a5bbce9284f19a7a4089912e53557756a" prot="protected" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>mutex_</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1aef02ee2f4bc9886ef7e42ebc0900c4df" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>mutex_t</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1ab798504cb786684ff2877694f070864d" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>operator=</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a382a43b74d1532840170e39632b18ee6" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>operator=</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1aca9265b7d7c22c6a3cbc81e7363c6a0e" prot="public" virt="virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>set_formatter</name></member>
      <member refid="classspdlog_1_1sinks_1_1sink_1a862aa1ac5ed27de35f1bd3b1aaeb7dc1" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>set_level</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a4b9a3b76512cc571be1f4a02b9a0463d" prot="public" virt="virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>set_pattern</name></member>
      <member refid="classspdlog_1_1sinks_1_1sink_1a9e6824420e6352e0f5cbb436a0b5d0a4" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>should_log</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a7044a6f292088dbc525961deec8a3823" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>stdout_sink_base</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a4a8e344fe8ace2a6dc92e9ec4babc6d6" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>stdout_sink_base</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1a26dc131471e14678e1826360e78dac27" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>stdout_sink_base</name></member>
      <member refid="classspdlog_1_1sinks_1_1sink_1a2637af0973ac863eedd76ee683279c0b" prot="public" virt="virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>~sink</name></member>
      <member refid="classspdlog_1_1sinks_1_1stdout__sink__base_1aeb0388a8cca62aba6be6e595d3976c6c" prot="public" virt="non-virtual"><scope>spdlog::sinks::stdout_sink_base</scope><name>~stdout_sink_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
