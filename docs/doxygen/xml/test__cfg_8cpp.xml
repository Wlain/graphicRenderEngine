<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__cfg_8cpp" kind="file" language="C++">
    <compoundname>test_cfg.cpp</compoundname>
    <includes refid="includes_8h" local="yes">includes.h</includes>
    <includes refid="test__sink_8h" local="yes">test_sink.h</includes>
    <includes refid="env_8h" local="no">spdlog/cfg/env.h</includes>
    <includes refid="argv_8h" local="no">spdlog/cfg/argv.h</includes>
    <incdepgraph>
      <node id="52">
        <label>spdlog/async.h</label>
        <link refid="async_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>spdlog/async_logger.h</label>
        <link refid="async__logger_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>spdlog/cfg/argv.h</label>
        <link refid="argv_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>spdlog/cfg/env.h</label>
        <link refid="env_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>spdlog/cfg/helpers.h</label>
        <link refid="helpers_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>common-inl.h</label>
        <link refid="common-inl_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>spdlog/common.h</label>
        <link refid="spdlog_2include_2spdlog_2common_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>spdlog/details/backtracer.h</label>
        <link refid="backtracer_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>spdlog/details/circular_q.h</label>
        <link refid="circular__q_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spdlog/details/console_globals.h</label>
        <link refid="console__globals_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>spdlog/details/file_helper.h</label>
        <link refid="file__helper_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>spdlog/details/log_msg.h</label>
        <link refid="log__msg_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>spdlog/details/log_msg_buffer.h</label>
        <link refid="log__msg__buffer_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>spdlog/details/mpmc_blocking_q.h</label>
        <link refid="mpmc__blocking__q_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>spdlog/details/null_mutex.h</label>
        <link refid="null__mutex_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>spdlog/details/os.h</label>
        <link refid="details_2os_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>spdlog/details/registry.h</label>
        <link refid="registry_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>spdlog/details/synchronous_factory.h</label>
        <link refid="synchronous__factory_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>spdlog/details/thread_pool.h</label>
        <link refid="thread__pool_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>spdlog/fmt/bundled/chrono.h</label>
        <link refid="bundled_2chrono_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>spdlog/fmt/bundled/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>spdlog/fmt/bundled/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>spdlog/fmt/chrono.h</label>
        <link refid="chrono_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>spdlog/fmt/fmt.h</label>
        <link refid="fmt_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>spdlog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>spdlog/logger.h</label>
        <link refid="3rdparty_2spdlog_2include_2spdlog_2logger_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>spdlog/pattern_formatter.h</label>
        <link refid="pattern__formatter_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spdlog/sinks/ansicolor_sink.h</label>
        <link refid="ansicolor__sink_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>spdlog/sinks/base_sink.h</label>
        <link refid="base__sink_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>spdlog/sinks/basic_file_sink.h</label>
        <link refid="basic__file__sink_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>spdlog/sinks/daily_file_sink.h</label>
        <link refid="daily__file__sink_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>spdlog/sinks/null_sink.h</label>
        <link refid="null__sink_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>spdlog/sinks/ostream_sink.h</label>
        <link refid="ostream__sink_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>spdlog/sinks/rotating_file_sink.h</label>
        <link refid="rotating__file__sink_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>spdlog/sinks/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
        <link refid="stdout__color__sinks_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>spdlog/spdlog.h</label>
        <link refid="spdlog_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>spdlog/tweakme.h</label>
        <link refid="tweakme_8h_source"/>
      </node>
      <node id="50">
        <label>spdlog/version.h</label>
        <link refid="version_8h_source"/>
      </node>
      <node id="3">
        <label>catch.hpp</label>
        <link refid="catch_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>includes.h</label>
        <link refid="includes_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp</label>
        <link refid="test__cfg_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>test_sink.h</label>
        <link refid="test__sink_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>utils.h</label>
        <link refid="3rdparty_2spdlog_2tests_2utils_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="76">
        <label>array</label>
      </node>
      <node id="30">
        <label>atomic</label>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="38">
        <label>cmath</label>
      </node>
      <node id="56">
        <label>condition_variable</label>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="20">
        <label>cstdio</label>
      </node>
      <node id="34">
        <label>cstring</label>
      </node>
      <node id="58">
        <label>ctime</label>
      </node>
      <node id="14">
        <label>exception</label>
      </node>
      <node id="21">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>functional</label>
      </node>
      <node id="31">
        <label>initializer_list</label>
      </node>
      <node id="24">
        <label>iomanip</label>
      </node>
      <node id="4">
        <label>iosfwd</label>
      </node>
      <node id="22">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>iterator</label>
      </node>
      <node id="36">
        <label>limits</label>
      </node>
      <node id="69">
        <label>locale</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="44">
        <label>mutex</label>
      </node>
      <node id="11">
        <label>ostream</label>
      </node>
      <node id="18">
        <label>random</label>
      </node>
      <node id="23">
        <label>sstream</label>
      </node>
      <node id="39">
        <label>stdexcept</label>
      </node>
      <node id="25">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="40">
        <label>system_error</label>
      </node>
      <node id="59">
        <label>thread</label>
      </node>
      <node id="62">
        <label>tuple</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="43">
        <label>unordered_map</label>
      </node>
      <node id="17">
        <label>utility</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__cfg_8cpp_1ac7e3f90244986e385a4b57c12a9e36ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;env&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;env&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="12" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="12" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a66543c239a663b8f619e6599c704294c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;argv1&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;argv1&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="27" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="27" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a6f2f3a0a1179493df8d3a22d5b46b788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;argv2&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;argv2&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="37" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a5145e2ddbdd60112488cf605c57d7a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;argv3&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;argv3&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="47" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="47" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1af5cfec544901797dc342f42114cb06c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;argv4&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;argv4&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="59" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="59" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a1b52477e8503e479b709955be7c97743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;argv5&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;argv5&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="69" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="69" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a81b1f8b26d8e9dc1ba63f20db64de9e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;argv6&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;argv6&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="81" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a265f9d7914cfce3dbe37d61aad0db53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;argv7&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;argv7&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="90" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a60939bbd187cc86d67ac7255e3117446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;level-not-set-test1&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;level-not-set-test1&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="99" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="99" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a3c1cbe84bef8a775c16acf57aae259ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;level-not-set-test2&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;level-not-set-test2&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="110" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="110" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1ab87d0faddfbe164e0b0eeeb026165bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;level-not-set-test3&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;level-not-set-test3&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="128" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="128" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a46f9a28f09a8909f26cc19a8eb028aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;level-not-set-test4&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;level-not-set-test4&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="144" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="144" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1a109ebed7b5b171dafa860034f3424db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;level-not-set-test5&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;level-not-set-test5&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="160" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="160" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="test__cfg_8cpp_1aef198a284403f199318565db90f69bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;restore-to-default&quot;, &quot;[cfg]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;restore-to-default&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cfg]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" line="176" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp" bodystart="176" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;includes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_sink.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/cfg/env.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/cfg/argv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>spdlog::cfg::load_argv_levels;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>spdlog::cfg::load_env_levels;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classspdlog_1_1sinks_1_1test__sink" kindref="compound">spdlog::sinks::test_sink_st</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;env&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CATCH_PLATFORM_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>_putenv_s(</highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;l1=warn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>setenv(</highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;l1=warn&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>load_env_levels();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_default_logger(spdlog::create&lt;test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;cfg-default&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;argv1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=l1=warn&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;argv2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=l1=warn,trace&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;argv3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::trace);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=junk_name=warn&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;argv4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::info);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=junk&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;argv5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::info);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=l1=warn,trace&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(3,<sp/>argv);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::info);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;argv6&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::err);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(1,<sp/>argv);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::err);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::info);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;argv7&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::err);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(0,<sp/>argv);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::err);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::set_level(spdlog::level::info);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;level-not-set-test1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>l1-&gt;set_level(spdlog::level::trace);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;level-not-set-test2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=l1=trace&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>l1-&gt;set_level(spdlog::level::warn);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>l2-&gt;set_level(spdlog::level::warn);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l2-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;level-not-set-test3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=l1=trace&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l2-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;level-not-set-test4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=l1=trace,warn&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::trace);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l2-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;level-not-set-test5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=l1=junk,warn&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>spdlog::create&lt;spdlog::sinks::test_sink_st&gt;(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l1-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(l2-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::warn);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;restore-to-default&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cfg]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::drop(</highlight><highlight class="stringliteral">&quot;l2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPDLOG_LEVEL=info&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>load_argv_levels(2,<sp/>argv);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(spdlog::default_logger()-&gt;level()<sp/>==<sp/>spdlog::level::info);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp"/>
  </compounddef>
</doxygen>
