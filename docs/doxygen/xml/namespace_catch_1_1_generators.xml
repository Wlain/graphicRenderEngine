<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespace_catch_1_1_generators" kind="namespace" language="C++">
    <compoundname>Catch::Generators</compoundname>
    <innerclass refid="struct_catch_1_1_generators_1_1as" prot="public">Catch::Generators::as</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_chunk_generator" prot="public">Catch::Generators::ChunkGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_filter_generator" prot="public">Catch::Generators::FilterGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_fixed_values_generator" prot="public">Catch::Generators::FixedValuesGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_generators" prot="public">Catch::Generators::Generators</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_generator_untyped_base" prot="public">Catch::Generators::GeneratorUntypedBase</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_generator_wrapper" prot="public">Catch::Generators::GeneratorWrapper</innerclass>
    <innerclass refid="struct_catch_1_1_generators_1_1_i_generator" prot="public">Catch::Generators::IGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_iterator_generator" prot="public">Catch::Generators::IteratorGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_map_generator" prot="public">Catch::Generators::MapGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_random_floating_generator" prot="public">Catch::Generators::RandomFloatingGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_random_integer_generator" prot="public">Catch::Generators::RandomIntegerGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_range_generator" prot="public">Catch::Generators::RangeGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_repeat_generator" prot="public">Catch::Generators::RepeatGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_single_value_generator" prot="public">Catch::Generators::SingleValueGenerator</innerclass>
    <innerclass refid="class_catch_1_1_generators_1_1_take_generator" prot="public">Catch::Generators::TakeGenerator</innerclass>
    <innernamespace refid="namespace_catch_1_1_generators_1_1pf">Catch::Generators::pf</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="catch_8hpp_1a1519f304113619d7d18670e2f08276c0" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="class_catch_1_1_generators_1_1_generator_untyped_base" kindref="compound">GeneratorUntypedBase</ref> &gt;</type>
        <definition>using Catch::Generators::GeneratorBasePtr = typedef std::unique_ptr&lt;GeneratorUntypedBase&gt;</definition>
        <argsstring></argsstring>
        <name>GeneratorBasePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3853" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3853" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="catch_8hpp_1a3b2efc97978cf37951b75394aae1a3fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::value</definition>
        <argsstring>(T &amp;&amp;value)</argsstring>
        <name>value</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3999" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3999" bodyend="4001"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1aff55717239311a0e8352a4de5d29967f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::values</definition>
        <argsstring>(std::initializer_list&lt; T &gt; values)</argsstring>
        <name>values</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4003" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4003" bodyend="4005"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1ae980a8b181bc56242a73161a05b312ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; std::tuple&lt; Ts... &gt; &gt;</type>
        <definition>GeneratorWrapper&lt; std::tuple&lt; Ts... &gt; &gt; Catch::Generators::table</definition>
        <argsstring>(std::initializer_list&lt; std::tuple&lt; typename std::decay&lt; Ts &gt;::type... &gt; &gt; tuples)</argsstring>
        <name>table</name>
        <param>
          <type>std::initializer_list&lt; std::tuple&lt; typename std::decay&lt; Ts &gt;::type... &gt; &gt;</type>
          <declname>tuples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4052" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4052" bodyend="4054"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a7cc95d72b060e2819b2edbbdbf8c646b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Gs</declname>
            <defname>Gs</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::Generators::makeGenerators</definition>
        <argsstring>(GeneratorWrapper&lt; T &gt; &amp;&amp;generator, Gs &amp;&amp;... moreGenerators) -&gt; Generators&lt; T &gt;</argsstring>
        <name>makeGenerators</name>
        <param>
          <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>Gs &amp;&amp;...</type>
          <declname>moreGenerators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4061" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4061" bodyend="4063"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1abefb1a0fab3c669b98a53037b3286d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::Generators::makeGenerators</definition>
        <argsstring>(GeneratorWrapper&lt; T &gt; &amp;&amp;generator) -&gt; Generators&lt; T &gt;</argsstring>
        <name>makeGenerators</name>
        <param>
          <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4065" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4065" bodyend="4067"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1ab22ab581e83e71530d8bbd1c14f94abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Gs</declname>
            <defname>Gs</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::Generators::makeGenerators</definition>
        <argsstring>(T &amp;&amp;val, Gs &amp;&amp;... moreGenerators) -&gt; Generators&lt; T &gt;</argsstring>
        <name>makeGenerators</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Gs &amp;&amp;...</type>
          <declname>moreGenerators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4069" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4069" bodyend="4071"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1aac8c5682b95d3467b013de492f21e7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Gs</declname>
            <defname>Gs</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::Generators::makeGenerators</definition>
        <argsstring>(as&lt; T &gt;, U &amp;&amp;val, Gs &amp;&amp;... moreGenerators) -&gt; Generators&lt; T &gt;</argsstring>
        <name>makeGenerators</name>
        <param>
          <type><ref refid="struct_catch_1_1_generators_1_1as" kindref="compound">as</ref>&lt; T &gt;</type>
        </param>
        <param>
          <type>U &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Gs &amp;&amp;...</type>
          <declname>moreGenerators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4073" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4073" bodyend="4075"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1ac1fe3550c5f97370fc6729e04d7571b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto Catch::Generators::acquireGeneratorTracker</definition>
        <argsstring>(StringRef generatorName, SourceLineInfo const &amp;lineInfo) -&gt; IGeneratorTracker &amp;</argsstring>
        <name>acquireGeneratorTracker</name>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref></type>
          <declname>generatorName</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_source_line_info" kindref="compound">SourceLineInfo</ref> const &amp;</type>
          <declname>lineInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4077" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="4077" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a3b0ab1f589b1d1e0e92afcd12cf4ab12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename L</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::Generators::generate</definition>
        <argsstring>(StringRef generatorName, SourceLineInfo const &amp;lineInfo, L const &amp;generatorExpression) -&gt; decltype(std::declval&lt; decltype(generatorExpression())&gt;().get())</argsstring>
        <name>generate</name>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref></type>
          <declname>generatorName</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_source_line_info" kindref="compound">SourceLineInfo</ref> const &amp;</type>
          <declname>lineInfo</declname>
        </param>
        <param>
          <type>L const &amp;</type>
          <declname>generatorExpression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4083" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4083" bodyend="4093"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1adedfdb318219078ce9107690745d2f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::take</definition>
        <argsstring>(size_t target, GeneratorWrapper&lt; T &gt; &amp;&amp;generator)</argsstring>
        <name>take</name>
        <param>
          <type>size_t</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4149" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4149" bodyend="4151"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a4df89be8072a9685ee89b6776a54bb93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Predicate</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::filter</definition>
        <argsstring>(Predicate &amp;&amp;pred, GeneratorWrapper&lt; T &gt; &amp;&amp;generator)</argsstring>
        <name>filter</name>
        <param>
          <type>Predicate &amp;&amp;</type>
          <declname>pred</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4188" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4188" bodyend="4190"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a510cc0d72a7bab8f967827e695b981ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::repeat</definition>
        <argsstring>(size_t repeats, GeneratorWrapper&lt; T &gt; &amp;&amp;generator)</argsstring>
        <name>repeat</name>
        <param>
          <type>size_t</type>
          <declname>repeats</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4244" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4244" bodyend="4246"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1af33fd06c51ac9173c3bee2ddee2559a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename T</type>
            <defval>FunctionReturnType&lt;Func, U&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::map</definition>
        <argsstring>(Func &amp;&amp;function, GeneratorWrapper&lt; U &gt; &amp;&amp;generator)</argsstring>
        <name>map</name>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; U &gt; &amp;&amp;</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4276" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4276" bodyend="4280"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1acb4654b4e840e438e3bc204ac4d8e157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; std::vector&lt; T &gt; &gt;</type>
        <definition>GeneratorWrapper&lt; std::vector&lt; T &gt; &gt; Catch::Generators::chunk</definition>
        <argsstring>(size_t size, GeneratorWrapper&lt; T &gt; &amp;&amp;generator)</argsstring>
        <name>chunk</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4326" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4326" bodyend="4330"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a079a48b510a5f171707e87f351328e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::<ref refid="classvalue" kindref="compound">value</ref> &amp;&amp;!std::is_same&lt; T, bool &gt;::<ref refid="classvalue" kindref="compound">value</ref>, <ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;!std::is_same&lt; T, bool &gt;::value, GeneratorWrapper&lt; T &gt; &gt;::type Catch::Generators::random</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>random</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4644" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4644" bodyend="4648"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a4dd41578e2ccba6d255d7f850ef211bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_floating_point&lt; T &gt;::<ref refid="classvalue" kindref="compound">value</ref>, <ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt; &gt;::type</type>
        <definition>std::enable_if&lt; std::is_floating_point&lt; T &gt;::value, GeneratorWrapper&lt; T &gt; &gt;::type Catch::Generators::random</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>random</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4653" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4653" bodyend="4657"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a6e53e65dfedc4d39febcb7b2b862afd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::range</definition>
        <argsstring>(T const &amp;start, T const &amp;end, T const &amp;step)</argsstring>
        <name>range</name>
        <param>
          <type>T const &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4693" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4693" bodyend="4696"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a758d34927bfde268b60ea6b7dc4be6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; T &gt;</type>
        <definition>GeneratorWrapper&lt; T &gt; Catch::Generators::range</definition>
        <argsstring>(T const &amp;start, T const &amp;end)</argsstring>
        <name>range</name>
        <param>
          <type>T const &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4699" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4699" bodyend="4702"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a62a768a07d44903a0691ec620d4f72c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename InputSentinel</type>
          </param>
          <param>
            <type>typename ResultType</type>
            <defval>typename std::iterator_traits&lt;InputIterator&gt;::value_type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; ResultType &gt;</type>
        <definition>GeneratorWrapper&lt; ResultType &gt; Catch::Generators::from_range</definition>
        <argsstring>(InputIterator from, InputSentinel to)</argsstring>
        <name>from_range</name>
        <param>
          <type>InputIterator</type>
          <declname>from</declname>
        </param>
        <param>
          <type>InputSentinel</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4733" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4733" bodyend="4735"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a68e6a1dcf08dbd4c4aa3244e59dfc0f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
          <param>
            <type>typename ResultType</type>
            <defval>typename Container::value_type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_generators_1_1_generator_wrapper" kindref="compound">GeneratorWrapper</ref>&lt; ResultType &gt;</type>
        <definition>GeneratorWrapper&lt; ResultType &gt; Catch::Generators::from_range</definition>
        <argsstring>(Container const &amp;cnt)</argsstring>
        <name>from_range</name>
        <param>
          <type>Container const &amp;</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="4739" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="4739" bodyend="4741"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3842" column="5"/>
  </compounddef>
</doxygen>
