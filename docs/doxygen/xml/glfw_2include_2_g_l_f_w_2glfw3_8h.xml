<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="glfw_2include_2_g_l_f_w_2glfw3_8h" kind="file" language="C++">
    <compoundname>glfw3.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">GL/gl.h</includes>
    <includedby refid="internal_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/internal.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h</label>
        <link refid="glfw_2include_2_g_l_f_w_2glfw3_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>GL/gl.h</label>
      </node>
      <node id="4">
        <label>limits.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h</label>
        <link refid="glfw_2include_2_g_l_f_w_2glfw3_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/cocoa_init.m</label>
        <link refid="cocoa__init_8m_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/cocoa_joystick.m</label>
        <link refid="cocoa__joystick_8m_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/cocoa_monitor.m</label>
        <link refid="cocoa__monitor_8m_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/cocoa_time.c</label>
        <link refid="cocoa__time_8c_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/cocoa_window.m</label>
        <link refid="cocoa__window_8m_source"/>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/context.c</label>
        <link refid="context_8c_source"/>
      </node>
      <node id="9">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/egl_context.c</label>
        <link refid="egl__context_8c_source"/>
      </node>
      <node id="10">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/glx_context.c</label>
        <link refid="glx__context_8c_source"/>
      </node>
      <node id="11">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c</label>
        <link refid="init_8c_source"/>
      </node>
      <node id="12">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c</label>
        <link refid="input_8c_source"/>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/internal.h</label>
        <link refid="internal_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/linux_joystick.c</label>
        <link refid="linux__joystick_8c_source"/>
      </node>
      <node id="14">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c</label>
        <link refid="monitor_8c_source"/>
      </node>
      <node id="15">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/nsgl_context.m</label>
        <link refid="nsgl__context_8m_source"/>
      </node>
      <node id="16">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/null_init.c</label>
        <link refid="null__init_8c_source"/>
      </node>
      <node id="17">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/null_joystick.c</label>
        <link refid="null__joystick_8c_source"/>
      </node>
      <node id="18">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/null_monitor.c</label>
        <link refid="null__monitor_8c_source"/>
      </node>
      <node id="19">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/null_window.c</label>
        <link refid="null__window_8c_source"/>
      </node>
      <node id="20">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/osmesa_context.c</label>
        <link refid="osmesa__context_8c_source"/>
      </node>
      <node id="21">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/posix_thread.c</label>
        <link refid="posix__thread_8c_source"/>
      </node>
      <node id="22">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/posix_time.c</label>
        <link refid="posix__time_8c_source"/>
      </node>
      <node id="23">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/vulkan.c</label>
        <link refid="vulkan_8c_source"/>
      </node>
      <node id="24">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wgl_context.c</label>
        <link refid="wgl__context_8c_source"/>
      </node>
      <node id="25">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/win32_init.c</label>
        <link refid="win32__init_8c_source"/>
      </node>
      <node id="26">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/win32_joystick.c</label>
        <link refid="win32__joystick_8c_source"/>
      </node>
      <node id="27">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/win32_monitor.c</label>
        <link refid="win32__monitor_8c_source"/>
      </node>
      <node id="28">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/win32_thread.c</label>
        <link refid="win32__thread_8c_source"/>
      </node>
      <node id="29">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/win32_time.c</label>
        <link refid="win32__time_8c_source"/>
      </node>
      <node id="30">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/win32_window.c</label>
        <link refid="win32__window_8c_source"/>
      </node>
      <node id="31">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c</label>
        <link refid="src_2window_8c_source"/>
      </node>
      <node id="32">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_init.c</label>
        <link refid="wl__init_8c_source"/>
      </node>
      <node id="33">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c</label>
        <link refid="wl__monitor_8c_source"/>
      </node>
      <node id="34">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_window.c</label>
        <link refid="wl__window_8c_source"/>
      </node>
      <node id="35">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/x11_init.c</label>
        <link refid="x11__init_8c_source"/>
      </node>
      <node id="36">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/x11_monitor.c</label>
        <link refid="x11__monitor_8c_source"/>
      </node>
      <node id="37">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/x11_window.c</label>
        <link refid="x11__window_8c_source"/>
      </node>
      <node id="38">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/xkb_unicode.c</label>
        <link refid="xkb__unicode_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_g_l_f_wvidmode" prot="public">GLFWvidmode</innerclass>
    <innerclass refid="struct_g_l_f_wgammaramp" prot="public">GLFWgammaramp</innerclass>
    <innerclass refid="struct_g_l_f_wimage" prot="public">GLFWimage</innerclass>
    <innerclass refid="struct_g_l_f_wgamepadstate" prot="public">GLFWgamepadstate</innerclass>
      <sectiondef kind="user-defined">
      <header>GLFW version macros</header>
      <memberdef kind="define" id="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" prot="public" static="no">
        <name>GLFW_VERSION_MAJOR</name>
        <initializer>3</initializer>
        <briefdescription>
<para>The major version number of the GLFW library. </para>
        </briefdescription>
        <detaileddescription>
<para>This is incremented when the API is changed in non-compatible ways. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="284" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" prot="public" static="no">
        <name>GLFW_VERSION_MINOR</name>
        <initializer>4</initializer>
        <briefdescription>
<para>The minor version number of the GLFW library. </para>
        </briefdescription>
        <detaileddescription>
<para>This is incremented when features are added to the API but it remains backward-compatible. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="291" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gab72ae2e2035d9ea461abc3495eac0502" prot="public" static="no">
        <name>GLFW_VERSION_REVISION</name>
        <initializer>0</initializer>
        <briefdescription>
<para>The revision number of the GLFW library. </para>
        </briefdescription>
        <detaileddescription>
<para>This is incremented when a bug fix release is made that does not contain any API changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="298" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Key and button actions</header>
      <memberdef kind="define" id="group__input_1gada11d965c4da13090ad336e030e4d11f" prot="public" static="no">
        <name>GLFW_RELEASE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>The key or mouse button was released. </para>
        </briefdescription>
        <detaileddescription>
<para>The key or mouse button was released. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="328" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__input_1ga2485743d0b59df3791c45951c4195265" prot="public" static="no">
        <name>GLFW_PRESS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>The key or mouse button was pressed. </para>
        </briefdescription>
        <detaileddescription>
<para>The key or mouse button was pressed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="335" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__input_1gac96fd3b9fc66c6f0eebaf6532595338f" prot="public" static="no">
        <name>GLFW_REPEAT</name>
        <initializer>2</initializer>
        <briefdescription>
<para>The key was held down until it repeated. </para>
        </briefdescription>
        <detaileddescription>
<para>The key was held down until it repeated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="342" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a428a91acf2c2439dc1a257708ee1f805" prot="public" static="no">
        <name>APIENTRY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="125" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a8a8538c5500308b4211844f2fb26c7b9" prot="public" static="no">
        <name>GLFW_APIENTRY_DEFINED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="127" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" prot="public" static="no">
        <name>GLFWAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="269" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1ga2744fbb29b5631bb28802dbe0cf36eba" prot="public" static="no">
        <name>GLFW_TRUE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>One. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only semantic sugar for the number 1. You can instead use <computeroutput>1</computeroutput> or <computeroutput>true</computeroutput> or <computeroutput>_True</computeroutput> or <computeroutput>GL_TRUE</computeroutput> or <computeroutput>VK_TRUE</computeroutput> or anything else that is equal to one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="309" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5" prot="public" static="no">
        <name>GLFW_FALSE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Zero. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only semantic sugar for the number 0. You can instead use <computeroutput>0</computeroutput> or <computeroutput>false</computeroutput> or <computeroutput>_False</computeroutput> or <computeroutput>GL_FALSE</computeroutput> or <computeroutput>VK_FALSE</computeroutput> or anything else that is equal to zero. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="318" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1gae2c0bcb7aec609e4736437554f6638fd" prot="public" static="no">
        <name>GLFW_HAT_CENTERED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="352" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1ga8c9720c76cd1b912738159ed74c85b36" prot="public" static="no">
        <name>GLFW_HAT_UP</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="353" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1ga252586e3bbde75f4b0e07ad3124867f5" prot="public" static="no">
        <name>GLFW_HAT_RIGHT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="354" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1gad60d1fd0dc85c18f2642cbae96d3deff" prot="public" static="no">
        <name>GLFW_HAT_DOWN</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="355" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1gac775f4b3154fdf5db93eb432ba546dff" prot="public" static="no">
        <name>GLFW_HAT_LEFT</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="356" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1ga94aea0ae241a8b902883536c592ee693" prot="public" static="no">
        <name>GLFW_HAT_RIGHT_UP</name>
        <initializer>(GLFW_HAT_RIGHT | GLFW_HAT_UP)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="357" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1gad7f0e4f52fd68d734863aaeadab3a3f5" prot="public" static="no">
        <name>GLFW_HAT_RIGHT_DOWN</name>
        <initializer>(GLFW_HAT_RIGHT | GLFW_HAT_DOWN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="358" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1ga638f0e20dc5de90de21a33564e8ce129" prot="public" static="no">
        <name>GLFW_HAT_LEFT_UP</name>
        <initializer>(GLFW_HAT_LEFT  | GLFW_HAT_UP)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="359" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hat__state_1ga76c02baf1ea345fcbe3e8ff176a73e19" prot="public" static="no">
        <name>GLFW_HAT_LEFT_DOWN</name>
        <initializer>(GLFW_HAT_LEFT  | GLFW_HAT_DOWN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="360" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga99aacc875b6b27a072552631e13775c7" prot="public" static="no">
        <name>GLFW_KEY_UNKNOWN</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="388" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaddb2c23772b97fd7e26e8ee66f1ad014" prot="public" static="no">
        <name>GLFW_KEY_SPACE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="391" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6059b0b048ba6980b6107fffbd3b4b24" prot="public" static="no">
        <name>GLFW_KEY_APOSTROPHE</name>
        <initializer>39  /* &apos; */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="392" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab3d5d72e59d3055f494627b0a524926c" prot="public" static="no">
        <name>GLFW_KEY_COMMA</name>
        <initializer>44  /* , */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="393" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac556b360f7f6fca4b70ba0aecf313fd4" prot="public" static="no">
        <name>GLFW_KEY_MINUS</name>
        <initializer>45  /* - */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="394" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga37e296b650eab419fc474ff69033d927" prot="public" static="no">
        <name>GLFW_KEY_PERIOD</name>
        <initializer>46  /* . */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="395" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadf3d753b2d479148d711de34b83fd0db" prot="public" static="no">
        <name>GLFW_KEY_SLASH</name>
        <initializer>47  /* / */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="396" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga50391730e9d7112ad4fd42d0bd1597c1" prot="public" static="no">
        <name>GLFW_KEY_0</name>
        <initializer>48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="397" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga05e4cae9ddb8d40cf6d82c8f11f2502f" prot="public" static="no">
        <name>GLFW_KEY_1</name>
        <initializer>49</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="398" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadc8e66b3a4c4b5c39ad1305cf852863c" prot="public" static="no">
        <name>GLFW_KEY_2</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="399" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga812f0273fe1a981e1fa002ae73e92271" prot="public" static="no">
        <name>GLFW_KEY_3</name>
        <initializer>51</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="400" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9e14b6975a9cc8f66cdd5cb3d3861356" prot="public" static="no">
        <name>GLFW_KEY_4</name>
        <initializer>52</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="401" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4d74ddaa5d4c609993b4d4a15736c924" prot="public" static="no">
        <name>GLFW_KEY_5</name>
        <initializer>53</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="402" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9ea4ab80c313a227b14d0a7c6f810b5d" prot="public" static="no">
        <name>GLFW_KEY_6</name>
        <initializer>54</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="403" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab79b1cfae7bd630cfc4604c1f263c666" prot="public" static="no">
        <name>GLFW_KEY_7</name>
        <initializer>55</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="404" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadeaa109a0f9f5afc94fe4a108e686f6f" prot="public" static="no">
        <name>GLFW_KEY_8</name>
        <initializer>56</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="405" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga2924cb5349ebbf97c8987f3521c44f39" prot="public" static="no">
        <name>GLFW_KEY_9</name>
        <initializer>57</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="406" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga84233de9ee5bb3e8788a5aa07d80af7d" prot="public" static="no">
        <name>GLFW_KEY_SEMICOLON</name>
        <initializer>59  /* ; */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="407" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae1a2de47240d6664423c204bdd91bd17" prot="public" static="no">
        <name>GLFW_KEY_EQUAL</name>
        <initializer>61  /* = */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="408" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga03e842608e1ea323370889d33b8f70ff" prot="public" static="no">
        <name>GLFW_KEY_A</name>
        <initializer>65</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="409" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8e3fb647ff3aca9e8dbf14fe66332941" prot="public" static="no">
        <name>GLFW_KEY_B</name>
        <initializer>66</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="410" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga00ccf3475d9ee2e679480d540d554669" prot="public" static="no">
        <name>GLFW_KEY_C</name>
        <initializer>67</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="411" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga011f7cdc9a654da984a2506479606933" prot="public" static="no">
        <name>GLFW_KEY_D</name>
        <initializer>68</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="412" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gabf48fcc3afbe69349df432b470c96ef2" prot="public" static="no">
        <name>GLFW_KEY_E</name>
        <initializer>69</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="413" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga5df402e02aca08444240058fd9b42a55" prot="public" static="no">
        <name>GLFW_KEY_F</name>
        <initializer>70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="414" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae74ecddf7cc96104ab23989b1cdab536" prot="public" static="no">
        <name>GLFW_KEY_G</name>
        <initializer>71</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="415" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad4cc98fc8f35f015d9e2fb94bf136076" prot="public" static="no">
        <name>GLFW_KEY_H</name>
        <initializer>72</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="416" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga274655c8bfe39742684ca393cf8ed093" prot="public" static="no">
        <name>GLFW_KEY_I</name>
        <initializer>73</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="417" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga65ff2aedb129a3149ad9cb3e4159a75f" prot="public" static="no">
        <name>GLFW_KEY_J</name>
        <initializer>74</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="418" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4ae8debadf6d2a691badae0b53ea3ba0" prot="public" static="no">
        <name>GLFW_KEY_K</name>
        <initializer>75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="419" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaaa8b54a13f6b1eed85ac86f82d550db2" prot="public" static="no">
        <name>GLFW_KEY_L</name>
        <initializer>76</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="420" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4d7f0260c82e4ea3d6ebc7a21d6e3716" prot="public" static="no">
        <name>GLFW_KEY_M</name>
        <initializer>77</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="421" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae00856dfeb5d13aafebf59d44de5cdda" prot="public" static="no">
        <name>GLFW_KEY_N</name>
        <initializer>78</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="422" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaecbbb79130df419d58dd7f09a169efe9" prot="public" static="no">
        <name>GLFW_KEY_O</name>
        <initializer>79</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="423" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8fc15819c1094fb2afa01d84546b33e1" prot="public" static="no">
        <name>GLFW_KEY_P</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="424" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafdd01e38b120d67cf51e348bb47f3964" prot="public" static="no">
        <name>GLFW_KEY_Q</name>
        <initializer>81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="425" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4ce6c70a0c98c50b3fe4ab9a728d4d36" prot="public" static="no">
        <name>GLFW_KEY_R</name>
        <initializer>82</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="426" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga1570e2ccaab036ea82bed66fc1dab2a9" prot="public" static="no">
        <name>GLFW_KEY_S</name>
        <initializer>83</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="427" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga90e0560422ec7a30e7f3f375bc9f37f9" prot="public" static="no">
        <name>GLFW_KEY_T</name>
        <initializer>84</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="428" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gacad52f3bf7d378fc0ffa72a76769256d" prot="public" static="no">
        <name>GLFW_KEY_U</name>
        <initializer>85</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="429" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga22c7763899ecf7788862e5f90eacce6b" prot="public" static="no">
        <name>GLFW_KEY_V</name>
        <initializer>86</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="430" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa06a712e6202661fc03da5bdb7b6e545" prot="public" static="no">
        <name>GLFW_KEY_W</name>
        <initializer>87</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="431" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac1c42c0bf4192cea713c55598b06b744" prot="public" static="no">
        <name>GLFW_KEY_X</name>
        <initializer>88</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="432" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafd9f115a549effdf8e372a787c360313" prot="public" static="no">
        <name>GLFW_KEY_Y</name>
        <initializer>89</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="433" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac489e208c26afda8d4938ed88718760a" prot="public" static="no">
        <name>GLFW_KEY_Z</name>
        <initializer>90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="434" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad1c8d9adac53925276ecb1d592511d8a" prot="public" static="no">
        <name>GLFW_KEY_LEFT_BRACKET</name>
        <initializer>91  /* [ */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="435" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab8155ea99d1ab27ff56f24f8dc73f8d1" prot="public" static="no">
        <name>GLFW_KEY_BACKSLASH</name>
        <initializer>92  /* \ */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="436" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga86ef225fd6a66404caae71044cdd58d8" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_BRACKET</name>
        <initializer>93  /* ] */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="437" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7a3701fb4e2a0b136ff4b568c3c8d668" prot="public" static="no">
        <name>GLFW_KEY_GRAVE_ACCENT</name>
        <initializer>96  /* ` */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="438" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadc78dad3dab76bcd4b5c20114052577a" prot="public" static="no">
        <name>GLFW_KEY_WORLD_1</name>
        <initializer>161 /* non-US #1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="439" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga20494bfebf0bb4fc9503afca18ab2c5e" prot="public" static="no">
        <name>GLFW_KEY_WORLD_2</name>
        <initializer>162 /* non-US #2 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="440" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaac6596c350b635c245113b81c2123b93" prot="public" static="no">
        <name>GLFW_KEY_ESCAPE</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="443" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9555a92ecbecdbc1f3435219c571d667" prot="public" static="no">
        <name>GLFW_KEY_ENTER</name>
        <initializer>257</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="444" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6908a4bda9950a3e2b73f794bbe985df" prot="public" static="no">
        <name>GLFW_KEY_TAB</name>
        <initializer>258</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="445" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6c0df1fe2f156bbd5a98c66d76ff3635" prot="public" static="no">
        <name>GLFW_KEY_BACKSPACE</name>
        <initializer>259</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="446" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga373ac7365435d6b0eb1068f470e34f47" prot="public" static="no">
        <name>GLFW_KEY_INSERT</name>
        <initializer>260</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="447" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadb111e4df74b8a715f2c05dad58d2682" prot="public" static="no">
        <name>GLFW_KEY_DELETE</name>
        <initializer>261</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="448" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga06ba07662e8c291a4a84535379ffc7ac" prot="public" static="no">
        <name>GLFW_KEY_RIGHT</name>
        <initializer>262</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="449" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae12a010d33c309a67ab9460c51eb2462" prot="public" static="no">
        <name>GLFW_KEY_LEFT</name>
        <initializer>263</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="450" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae2e3958c71595607416aa7bf082be2f9" prot="public" static="no">
        <name>GLFW_KEY_DOWN</name>
        <initializer>264</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="451" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga2f3342b194020d3544c67e3506b6f144" prot="public" static="no">
        <name>GLFW_KEY_UP</name>
        <initializer>265</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="452" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga3ab731f9622f0db280178a5f3cc6d586" prot="public" static="no">
        <name>GLFW_KEY_PAGE_UP</name>
        <initializer>266</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="453" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaee0a8fa442001cc2147812f84b59041c" prot="public" static="no">
        <name>GLFW_KEY_PAGE_DOWN</name>
        <initializer>267</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="454" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga41452c7287195d481e43207318c126a7" prot="public" static="no">
        <name>GLFW_KEY_HOME</name>
        <initializer>268</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="455" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga86587ea1df19a65978d3e3b8439bedd9" prot="public" static="no">
        <name>GLFW_KEY_END</name>
        <initializer>269</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="456" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga92c1d2c9d63485f3d70f94f688d48672" prot="public" static="no">
        <name>GLFW_KEY_CAPS_LOCK</name>
        <initializer>280</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="457" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf622b63b9537f7084c2ab649b8365630" prot="public" static="no">
        <name>GLFW_KEY_SCROLL_LOCK</name>
        <initializer>281</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="458" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga3946edc362aeff213b2be6304296cf43" prot="public" static="no">
        <name>GLFW_KEY_NUM_LOCK</name>
        <initializer>282</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="459" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf964c2e65e97d0cf785a5636ee8df642" prot="public" static="no">
        <name>GLFW_KEY_PRINT_SCREEN</name>
        <initializer>283</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="460" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8116b9692d87382afb5849b6d8907f18" prot="public" static="no">
        <name>GLFW_KEY_PAUSE</name>
        <initializer>284</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="461" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafb8d66c573acf22e364049477dcbea30" prot="public" static="no">
        <name>GLFW_KEY_F1</name>
        <initializer>290</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="462" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga0900750aff94889b940f5e428c07daee" prot="public" static="no">
        <name>GLFW_KEY_F2</name>
        <initializer>291</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="463" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaed7cd729c0147a551bb8b7bb36c17015" prot="public" static="no">
        <name>GLFW_KEY_F3</name>
        <initializer>292</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="464" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9b61ebd0c63b44b7332fda2c9763eaa6" prot="public" static="no">
        <name>GLFW_KEY_F4</name>
        <initializer>293</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="465" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf258dda9947daa428377938ed577c8c2" prot="public" static="no">
        <name>GLFW_KEY_F5</name>
        <initializer>294</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="466" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6dc2d3f87b9d51ffbbbe2ef0299d8e1d" prot="public" static="no">
        <name>GLFW_KEY_F6</name>
        <initializer>295</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="467" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gacca6ef8a2162c52a0ac1d881e8d9c38a" prot="public" static="no">
        <name>GLFW_KEY_F7</name>
        <initializer>296</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="468" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac9d39390336ae14e4a93e295de43c7e8" prot="public" static="no">
        <name>GLFW_KEY_F8</name>
        <initializer>297</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="469" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae40de0de1c9f21cd26c9afa3d7050851" prot="public" static="no">
        <name>GLFW_KEY_F9</name>
        <initializer>298</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="470" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga718d11d2f7d57471a2f6a894235995b1" prot="public" static="no">
        <name>GLFW_KEY_F10</name>
        <initializer>299</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="471" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga0bc04b11627e7d69339151e7306b2832" prot="public" static="no">
        <name>GLFW_KEY_F11</name>
        <initializer>300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="472" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf5908fa9b0a906ae03fc2c61ac7aa3e2" prot="public" static="no">
        <name>GLFW_KEY_F12</name>
        <initializer>301</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="473" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad637f4308655e1001bd6ad942bc0fd4b" prot="public" static="no">
        <name>GLFW_KEY_F13</name>
        <initializer>302</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="474" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf14c66cff3396e5bd46e803c035e6c1f" prot="public" static="no">
        <name>GLFW_KEY_F14</name>
        <initializer>303</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="475" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7f70970db6e8be1794da8516a6d14058" prot="public" static="no">
        <name>GLFW_KEY_F15</name>
        <initializer>304</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="476" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa582dbb1d2ba2050aa1dca0838095b27" prot="public" static="no">
        <name>GLFW_KEY_F16</name>
        <initializer>305</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="477" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga972ce5c365e2394b36104b0e3125c748" prot="public" static="no">
        <name>GLFW_KEY_F17</name>
        <initializer>306</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="478" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaebf6391058d5566601e357edc5ea737c" prot="public" static="no">
        <name>GLFW_KEY_F18</name>
        <initializer>307</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="479" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaec011d9ba044058cb54529da710e9791" prot="public" static="no">
        <name>GLFW_KEY_F19</name>
        <initializer>308</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="480" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga82b9c721ada04cd5ca8de767da38022f" prot="public" static="no">
        <name>GLFW_KEY_F20</name>
        <initializer>309</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="481" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga356afb14d3440ff2bb378f74f7ebc60f" prot="public" static="no">
        <name>GLFW_KEY_F21</name>
        <initializer>310</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="482" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga90960bd2a155f2b09675324d3dff1565" prot="public" static="no">
        <name>GLFW_KEY_F22</name>
        <initializer>311</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="483" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga43c21099aac10952d1be909a8ddee4d5" prot="public" static="no">
        <name>GLFW_KEY_F23</name>
        <initializer>312</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="484" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8150374677b5bed3043408732152dea2" prot="public" static="no">
        <name>GLFW_KEY_F24</name>
        <initializer>313</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="485" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa4bbd93ed73bb4c6ae7d83df880b7199" prot="public" static="no">
        <name>GLFW_KEY_F25</name>
        <initializer>314</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="486" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga10515dafc55b71e7683f5b4fedd1c70d" prot="public" static="no">
        <name>GLFW_KEY_KP_0</name>
        <initializer>320</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="487" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf3a29a334402c5eaf0b3439edf5587c3" prot="public" static="no">
        <name>GLFW_KEY_KP_1</name>
        <initializer>321</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="488" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf82d5a802ab8213c72653d7480c16f13" prot="public" static="no">
        <name>GLFW_KEY_KP_2</name>
        <initializer>322</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="489" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7e25ff30d56cd512828c1d4ae8d54ef2" prot="public" static="no">
        <name>GLFW_KEY_KP_3</name>
        <initializer>323</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="490" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gada7ec86778b85e0b4de0beea72234aea" prot="public" static="no">
        <name>GLFW_KEY_KP_4</name>
        <initializer>324</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="491" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9a5be274434866c51738cafbb6d26b45" prot="public" static="no">
        <name>GLFW_KEY_KP_5</name>
        <initializer>325</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="492" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafc141b0f8450519084c01092a3157faa" prot="public" static="no">
        <name>GLFW_KEY_KP_6</name>
        <initializer>326</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="493" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8882f411f05d04ec77a9563974bbfa53" prot="public" static="no">
        <name>GLFW_KEY_KP_7</name>
        <initializer>327</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="494" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab2ea2e6a12f89d315045af520ac78cec" prot="public" static="no">
        <name>GLFW_KEY_KP_8</name>
        <initializer>328</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="495" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafb21426b630ed4fcc084868699ba74c1" prot="public" static="no">
        <name>GLFW_KEY_KP_9</name>
        <initializer>329</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="496" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4e231d968796331a9ea0dbfb98d4005b" prot="public" static="no">
        <name>GLFW_KEY_KP_DECIMAL</name>
        <initializer>330</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="497" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gabca1733780a273d549129ad0f250d1e5" prot="public" static="no">
        <name>GLFW_KEY_KP_DIVIDE</name>
        <initializer>331</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="498" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9ada267eb0e78ed2ada8701dd24a56ef" prot="public" static="no">
        <name>GLFW_KEY_KP_MULTIPLY</name>
        <initializer>332</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="499" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa3dbd60782ff93d6082a124bce1fa236" prot="public" static="no">
        <name>GLFW_KEY_KP_SUBTRACT</name>
        <initializer>333</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="500" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad09c7c98acc79e89aa6a0a91275becac" prot="public" static="no">
        <name>GLFW_KEY_KP_ADD</name>
        <initializer>334</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="501" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4f728f8738f2986bd63eedd3d412e8cf" prot="public" static="no">
        <name>GLFW_KEY_KP_ENTER</name>
        <initializer>335</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="502" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaebdc76d4a808191e6d21b7e4ad2acd97" prot="public" static="no">
        <name>GLFW_KEY_KP_EQUAL</name>
        <initializer>336</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="503" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8a530a28a65c44ab5d00b759b756d3f6" prot="public" static="no">
        <name>GLFW_KEY_LEFT_SHIFT</name>
        <initializer>340</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="504" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9f97b743e81460ac4b2deddecd10a464" prot="public" static="no">
        <name>GLFW_KEY_LEFT_CONTROL</name>
        <initializer>341</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="505" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7f27dabf63a7789daa31e1c96790219b" prot="public" static="no">
        <name>GLFW_KEY_LEFT_ALT</name>
        <initializer>342</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="506" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafb1207c91997fc295afd1835fbc5641a" prot="public" static="no">
        <name>GLFW_KEY_LEFT_SUPER</name>
        <initializer>343</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="507" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaffca36b99c9dce1a19cb9befbadce691" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_SHIFT</name>
        <initializer>344</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="508" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad1ca2094b2694e7251d0ab1fd34f8519" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_CONTROL</name>
        <initializer>345</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="509" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga687b38009131cfdd07a8d05fff8fa446" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_ALT</name>
        <initializer>346</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="510" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad4547a3e8e247594acb60423fe6502db" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_SUPER</name>
        <initializer>347</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="511" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9845be48a745fc232045c9ec174d8820" prot="public" static="no">
        <name>GLFW_KEY_MENU</name>
        <initializer>348</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="512" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789" prot="public" static="no">
        <name>GLFW_KEY_LAST</name>
        <initializer>GLFW_KEY_MENU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="514" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1ga14994d3196c290aaa347248e51740274" prot="public" static="no">
        <name>GLFW_MOD_SHIFT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>If this bit is set one or more Shift keys were held down. </para>
        </briefdescription>
        <detaileddescription>
<para>If this bit is set one or more Shift keys were held down. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="530" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1ga6ed94871c3208eefd85713fa929d45aa" prot="public" static="no">
        <name>GLFW_MOD_CONTROL</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>If this bit is set one or more Control keys were held down. </para>
        </briefdescription>
        <detaileddescription>
<para>If this bit is set one or more Control keys were held down. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="535" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1gad2acd5633463c29e07008687ea73c0f4" prot="public" static="no">
        <name>GLFW_MOD_ALT</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>If this bit is set one or more Alt keys were held down. </para>
        </briefdescription>
        <detaileddescription>
<para>If this bit is set one or more Alt keys were held down. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="540" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1ga6b64ba10ea0227cf6f42efd0a220aba1" prot="public" static="no">
        <name>GLFW_MOD_SUPER</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>If this bit is set one or more Super keys were held down. </para>
        </briefdescription>
        <detaileddescription>
<para>If this bit is set one or more Super keys were held down. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="545" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1gaefeef8fcf825a6e43e241b337897200f" prot="public" static="no">
        <name>GLFW_MOD_CAPS_LOCK</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>If this bit is set the Caps Lock key is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>If this bit is set the Caps Lock key is enabled and the <ref refid="input_guide_1GLFW_LOCK_KEY_MODS" kindref="member">GLFW_LOCK_KEY_MODS</ref> input mode is set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="551" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1ga64e020b8a42af8376e944baf61feecbe" prot="public" static="no">
        <name>GLFW_MOD_NUM_LOCK</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>If this bit is set the Num Lock key is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>If this bit is set the Num Lock key is enabled and the <ref refid="input_guide_1GLFW_LOCK_KEY_MODS" kindref="member">GLFW_LOCK_KEY_MODS</ref> input mode is set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="557" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga181a6e875251fd8671654eff00f9112e" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_1</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="568" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga604b39b92c88ce9bd332e97fc3f4156c" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_2</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="569" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga0130d505563d0236a6f85545f19e1721" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_3</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="570" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga53f4097bb01d5521c7d9513418c91ca9" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_4</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="571" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gaf08c4ddecb051d3d9667db1d5e417c9c" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_5</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="572" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gae8513e06aab8aa393b595f22c6d8257a" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_6</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="573" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga8b02a1ab55dde45b3a3883d54ffd7dc7" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_7</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="574" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga35d5c4263e0dc0d0a4731ca6c562f32c" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_8</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="575" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gab1fd86a4518a9141ec7bcde2e15a2fdf" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_LAST</name>
        <initializer>GLFW_MOUSE_BUTTON_8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="576" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gaf37100431dcd5082d48f95ee8bc8cd56" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_LEFT</name>
        <initializer>GLFW_MOUSE_BUTTON_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="577" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga3e2f2cf3c4942df73cc094247d275e74" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_RIGHT</name>
        <initializer>GLFW_MOUSE_BUTTON_2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="578" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga34a4d2a701434f763fd93a2ff842b95a" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_MIDDLE</name>
        <initializer>GLFW_MOUSE_BUTTON_3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="579" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga34a0443d059e9f22272cd4669073f73d" prot="public" static="no">
        <name>GLFW_JOYSTICK_1</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="589" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga6eab65ec88e65e0850ef8413504cb50c" prot="public" static="no">
        <name>GLFW_JOYSTICK_2</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="590" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gae6f3eedfeb42424c2f5e3161efb0b654" prot="public" static="no">
        <name>GLFW_JOYSTICK_3</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="591" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga97ddbcad02b7f48d74fad4ddb08fff59" prot="public" static="no">
        <name>GLFW_JOYSTICK_4</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="592" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gae43281bc66d3fa5089fb50c3e7a28695" prot="public" static="no">
        <name>GLFW_JOYSTICK_5</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="593" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga74771620aa53bd68a487186dea66fd77" prot="public" static="no">
        <name>GLFW_JOYSTICK_6</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="594" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga20a9f4f3aaefed9ea5e66072fc588b87" prot="public" static="no">
        <name>GLFW_JOYSTICK_7</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="595" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga21a934c940bcf25db0e4c8fe9b364bdb" prot="public" static="no">
        <name>GLFW_JOYSTICK_8</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="596" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga87689d47df0ba6f9f5fcbbcaf7b3cecf" prot="public" static="no">
        <name>GLFW_JOYSTICK_9</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="597" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gaef55389ee605d6dfc31aef6fe98c54ec" prot="public" static="no">
        <name>GLFW_JOYSTICK_10</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="598" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gae7d26e3df447c2c14a569fcc18516af4" prot="public" static="no">
        <name>GLFW_JOYSTICK_11</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="599" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gab91bbf5b7ca6be8d3ac5c4d89ff48ac7" prot="public" static="no">
        <name>GLFW_JOYSTICK_12</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="600" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga5c84fb4e49bf661d7d7c78eb4018c508" prot="public" static="no">
        <name>GLFW_JOYSTICK_13</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="601" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga89540873278ae5a42b3e70d64164dc74" prot="public" static="no">
        <name>GLFW_JOYSTICK_14</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="602" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga7b02ab70daf7a78bcc942d5d4cc1dcf9" prot="public" static="no">
        <name>GLFW_JOYSTICK_15</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="603" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga453edeeabf350827646b6857df4f80ce" prot="public" static="no">
        <name>GLFW_JOYSTICK_16</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="604" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga9ca13ebf24c331dd98df17d84a4b72c9" prot="public" static="no">
        <name>GLFW_JOYSTICK_LAST</name>
        <initializer>GLFW_JOYSTICK_16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="605" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gae055a12fbf4b48b5954c8e1cd129b810" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_A</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="615" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga2228a6512fd5950cdb51ba07846546fa" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_B</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="616" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga52cc94785cf3fe9a12e246539259887c" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_X</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="617" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gafc931248bda494b530cbe057f386a5ed" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_Y</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="618" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga17d67b4f39a39d6b813bd1567a3507c3" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_LEFT_BUMPER</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="619" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gadfbc9ea9bf3aae896b79fa49fdc85c7f" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="620" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gabc7c0264ce778835b516a472b47f6caf" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_BACK</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="621" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga04606949dd9139434b8a1bedf4ac1021" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_START</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="622" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga7fa48c32e5b2f5db2f080aa0b8b573dc" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_GUIDE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="623" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga3e089787327454f7bfca7364d6ca206a" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_LEFT_THUMB</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="624" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga1c003f52b5aebb45272475b48953b21a" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_RIGHT_THUMB</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="625" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga4f1ed6f974a47bc8930d4874a283476a" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_DPAD_UP</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="626" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gae2a780d2a8c79e0b77c0b7b601ca57c6" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_DPAD_RIGHT</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="627" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga8f2b731b97d80f90f11967a83207665c" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_DPAD_DOWN</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="628" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gaf0697e0e8607b2ebe1c93b0c6befe301" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_DPAD_LEFT</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="629" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga5cc98882f4f81dacf761639a567f61eb" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_LAST</name>
        <initializer>GLFW_GAMEPAD_BUTTON_DPAD_LEFT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="630" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gaf08d0df26527c9305253422bd98ed63a" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_CROSS</name>
        <initializer>GLFW_GAMEPAD_BUTTON_A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="632" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gaaef094b3dacbf15f272b274516839b82" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_CIRCLE</name>
        <initializer>GLFW_GAMEPAD_BUTTON_B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="633" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1gafc7821e87d77d41ed2cd3e1f726ec35f" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_SQUARE</name>
        <initializer>GLFW_GAMEPAD_BUTTON_X</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="634" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__buttons_1ga3a7ef6bcb768a08cd3bf142f7f09f802" prot="public" static="no">
        <name>GLFW_GAMEPAD_BUTTON_TRIANGLE</name>
        <initializer>GLFW_GAMEPAD_BUTTON_Y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="635" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__axes_1ga544e396d092036a7d80c1e5f233f7a38" prot="public" static="no">
        <name>GLFW_GAMEPAD_AXIS_LEFT_X</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="645" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__axes_1ga64dcf2c6e9be50b7c556ff7671996dd5" prot="public" static="no">
        <name>GLFW_GAMEPAD_AXIS_LEFT_Y</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="646" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__axes_1gabd6785106cd3c5a044a6e49a395ee2fc" prot="public" static="no">
        <name>GLFW_GAMEPAD_AXIS_RIGHT_X</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="647" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__axes_1ga1cc20566d44d521b7183681a8e88e2e4" prot="public" static="no">
        <name>GLFW_GAMEPAD_AXIS_RIGHT_Y</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="648" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__axes_1ga6d79561dd8907c37354426242901b86e" prot="public" static="no">
        <name>GLFW_GAMEPAD_AXIS_LEFT_TRIGGER</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="649" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__axes_1ga121a7d5d20589a423cd1634dd6ee6eab" prot="public" static="no">
        <name>GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="650" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gamepad__axes_1ga0818fd9433e1359692b7443293e5ac86" prot="public" static="no">
        <name>GLFW_GAMEPAD_AXIS_LAST</name>
        <initializer>GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="651" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gafa30deee5db4d69c4c93d116ed87dbf4" prot="public" static="no">
        <name>GLFW_NO_ERROR</name>
        <initializer>0</initializer>
        <briefdescription>
<para>No error has occurred. </para>
        </briefdescription>
        <detaileddescription>
<para>No error has occurred.</para>
<para>@analysis Yay. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="667" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="667" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" prot="public" static="no">
        <name>GLFW_NOT_INITIALIZED</name>
        <initializer>0x00010001</initializer>
        <briefdescription>
<para>GLFW has not been initialized. </para>
        </briefdescription>
        <detaileddescription>
<para>This occurs if a GLFW function was called that must not be called unless the library is <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
<para>@analysis Application programmer error. Initialize GLFW before calling any function that requires initialization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="676" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" prot="public" static="no">
        <name>GLFW_NO_CURRENT_CONTEXT</name>
        <initializer>0x00010002</initializer>
        <briefdescription>
<para>No context is current for this thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This occurs if a GLFW function was called that needs and operates on the current OpenGL or OpenGL ES context but no context is current on the calling thread. One such function is <ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref>.</para>
<para>@analysis Application programmer error. Ensure a context is current before calling functions that require a current context. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="686" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" prot="public" static="no">
        <name>GLFW_INVALID_ENUM</name>
        <initializer>0x00010003</initializer>
        <briefdescription>
<para>One of the arguments to the function was an invalid enum value. </para>
        </briefdescription>
        <detaileddescription>
<para>One of the arguments to the function was an invalid enum value, for example requesting <ref refid="window_guide_1GLFW_RED_BITS" kindref="member">GLFW_RED_BITS</ref> with <ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>.</para>
<para>@analysis Application programmer error. Fix the offending call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="694" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" prot="public" static="no">
        <name>GLFW_INVALID_VALUE</name>
        <initializer>0x00010004</initializer>
        <briefdescription>
<para>One of the arguments to the function was an invalid value. </para>
        </briefdescription>
        <detaileddescription>
<para>One of the arguments to the function was an invalid value, for example requesting a non-existent OpenGL or OpenGL ES version like 2.7.</para>
<para>Requesting a valid but unavailable OpenGL or OpenGL ES version will instead result in a <ref refid="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" kindref="member">GLFW_VERSION_UNAVAILABLE</ref> error.</para>
<para>@analysis Application programmer error. Fix the offending call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="705" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga9023953a2bcb98c2906afd071d21ee7f" prot="public" static="no">
        <name>GLFW_OUT_OF_MEMORY</name>
        <initializer>0x00010005</initializer>
        <briefdescription>
<para>A memory allocation failed. </para>
        </briefdescription>
        <detaileddescription>
<para>A memory allocation failed.</para>
<para>@analysis A bug in GLFW or the underlying operating system. Report the bug to our <ulink url="https://github.com/glfw/glfw/issues">issue tracker</ulink>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="713" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga56882b290db23261cc6c053c40c2d08e" prot="public" static="no">
        <name>GLFW_API_UNAVAILABLE</name>
        <initializer>0x00010006</initializer>
        <briefdescription>
<para>GLFW could not find support for the requested API on the system. </para>
        </briefdescription>
        <detaileddescription>
<para>GLFW could not find support for the requested API on the system.</para>
<para>@analysis The installed graphics driver does not support the requested API, or does not support it via the chosen context creation backend. Below are a few examples.</para>
<para><simplesect kind="par"><title></title><para>Some pre-installed Windows graphics drivers do not support OpenGL. AMD only supports OpenGL ES via EGL, while Nvidia and Intel only support it via a WGL or GLX extension. macOS does not provide OpenGL ES at all. The Mesa EGL, OpenGL and OpenGL ES libraries do not interface with the Nvidia binary driver. Older graphics drivers do not support Vulkan. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="729" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" prot="public" static="no">
        <name>GLFW_VERSION_UNAVAILABLE</name>
        <initializer>0x00010007</initializer>
        <briefdescription>
<para>The requested OpenGL or OpenGL ES version is not available. </para>
        </briefdescription>
        <detaileddescription>
<para>The requested OpenGL or OpenGL ES version (including any requested context or framebuffer hints) is not available on this machine.</para>
<para>@analysis The machine does not support your requirements. If your application is sufficiently flexible, downgrade your requirements and try again. Otherwise, inform the user that their machine does not match your requirements.</para>
<para><simplesect kind="par"><title></title><para>Future invalid OpenGL and OpenGL ES versions, for example OpenGL 4.8 if 5.0 comes out before the 4.x series gets that far, also fail with this error and not <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>, because GLFW cannot know what future versions will exist. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="746" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" prot="public" static="no">
        <name>GLFW_PLATFORM_ERROR</name>
        <initializer>0x00010008</initializer>
        <briefdescription>
<para>A platform-specific error occurred that does not match any of the more specific categories. </para>
        </briefdescription>
        <detaileddescription>
<para>A platform-specific error occurred that does not match any of the more specific categories.</para>
<para>@analysis A bug or configuration error in GLFW, the underlying operating system or its drivers, or a lack of required resources. Report the issue to our <ulink url="https://github.com/glfw/glfw/issues">issue tracker</ulink>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="757" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga196e125ef261d94184e2b55c05762f14" prot="public" static="no">
        <name>GLFW_FORMAT_UNAVAILABLE</name>
        <initializer>0x00010009</initializer>
        <briefdescription>
<para>The requested format is not supported or available. </para>
        </briefdescription>
        <detaileddescription>
<para>If emitted during window creation, the requested pixel format is not supported.</para>
<para>If emitted when querying the clipboard, the contents of the clipboard could not be converted to the requested format.</para>
<para>@analysis If emitted during window creation, one or more <ref refid="window_guide_1window_hints_hard" kindref="member">hard constraints</ref> did not match any of the available pixel formats. If your application is sufficiently flexible, downgrade your requirements and try again. Otherwise, inform the user that their machine does not match your requirements.</para>
<para><simplesect kind="par"><title></title><para>If emitted when querying the clipboard, ignore the error or report it to the user, as appropriate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="776" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gacff24d2757da752ae4c80bf452356487" prot="public" static="no">
        <name>GLFW_NO_WINDOW_CONTEXT</name>
        <initializer>0x0001000A</initializer>
        <briefdescription>
<para>The specified window does not have an OpenGL or OpenGL ES context. </para>
        </briefdescription>
        <detaileddescription>
<para>A window that does not have an OpenGL or OpenGL ES context was passed to a function that requires it to have one.</para>
<para>@analysis Application programmer error. Fix the offending call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="784" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga09d6943923a70ddef3a085f5baee786c" prot="public" static="no">
        <name>GLFW_CURSOR_UNAVAILABLE</name>
        <initializer>0x0001000B</initializer>
        <briefdescription>
<para>The specified cursor Shape is not available. </para>
        </briefdescription>
        <detaileddescription>
<para>The specified standard cursor Shape is not available, either because the current system cursor theme does not provide it or because it is not available on the platform.</para>
<para>@analysis Platform or system settings limitation. Pick another <ref refid="group__shapes" kindref="compound">standard cursor shape</ref> or create a <ref refid="input_guide_1cursor_custom" kindref="member">custom cursor</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="795" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="795" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" prot="public" static="no">
        <name>GLFW_FEATURE_UNAVAILABLE</name>
        <initializer>0x0001000C</initializer>
        <briefdescription>
<para>The requested feature is not provided by the platform. </para>
        </briefdescription>
        <detaileddescription>
<para>The requested feature is not provided by the platform, so GLFW is unable to implement it. The documentation for each function notes if it could emit this error.</para>
<para>@analysis Platform or platform version limitation. The error can be ignored unless the feature is critical to the application.</para>
<para><simplesect kind="par"><title></title><para>A function call that emits this error has no effect other than the error and updating any existing out parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="809" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga5dda77e023e83151e8bd55a6758f946a" prot="public" static="no">
        <name>GLFW_FEATURE_UNIMPLEMENTED</name>
        <initializer>0x0001000D</initializer>
        <briefdescription>
<para>The requested feature is not implemented for the platform. </para>
        </briefdescription>
        <detaileddescription>
<para>The requested feature has not yet been implemented in GLFW for this platform.</para>
<para>@analysis An incomplete implementation of GLFW for this platform, hopefully fixed in a future release. The error can be ignored unless the feature is critical to the application.</para>
<para><simplesect kind="par"><title></title><para>A function call that emits this error has no effect other than the error and updating any existing out parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="822" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga54ddb14825a1541a56e22afb5f832a9e" prot="public" static="no">
        <name>GLFW_FOCUSED</name>
        <initializer>0x00020001</initializer>
        <briefdescription>
<para>Input focus window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Input focus <ref refid="window_guide_1GLFW_FOCUSED_hint" kindref="member">window hint</ref> or <ref refid="window_guide_1GLFW_FOCUSED_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="832" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga39d44b7c056e55e581355a92d240b58a" prot="public" static="no">
        <name>GLFW_ICONIFIED</name>
        <initializer>0x00020002</initializer>
        <briefdescription>
<para>Window iconification window attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window iconification <ref refid="window_guide_1GLFW_ICONIFIED_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="837" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="837" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d" prot="public" static="no">
        <name>GLFW_RESIZABLE</name>
        <initializer>0x00020003</initializer>
        <briefdescription>
<para>Window resize-ability window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window resize-ability <ref refid="window_guide_1GLFW_RESIZABLE_hint" kindref="member">window hint</ref> and <ref refid="window_guide_1GLFW_RESIZABLE_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="843" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4" prot="public" static="no">
        <name>GLFW_VISIBLE</name>
        <initializer>0x00020004</initializer>
        <briefdescription>
<para>Window visibility window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window visibility <ref refid="window_guide_1GLFW_VISIBLE_hint" kindref="member">window hint</ref> and <ref refid="window_guide_1GLFW_VISIBLE_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="849" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga21b854d36314c94d65aed84405b2f25e" prot="public" static="no">
        <name>GLFW_DECORATED</name>
        <initializer>0x00020005</initializer>
        <briefdescription>
<para>Window decoration window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window decoration <ref refid="window_guide_1GLFW_DECORATED_hint" kindref="member">window hint</ref> and <ref refid="window_guide_1GLFW_DECORATED_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="855" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="855" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga9d9874fc928200136a6dcdad726aa252" prot="public" static="no">
        <name>GLFW_AUTO_ICONIFY</name>
        <initializer>0x00020006</initializer>
        <briefdescription>
<para>Window auto-iconification window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window auto-iconification <ref refid="window_guide_1GLFW_AUTO_ICONIFY_hint" kindref="member">window hint</ref> and <ref refid="window_guide_1GLFW_AUTO_ICONIFY_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="861" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga7fb0be51407783b41adbf5bec0b09d80" prot="public" static="no">
        <name>GLFW_FLOATING</name>
        <initializer>0x00020007</initializer>
        <briefdescription>
<para>Window decoration window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window decoration <ref refid="window_guide_1GLFW_FLOATING_hint" kindref="member">window hint</ref> and <ref refid="window_guide_1GLFW_FLOATING_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="867" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="867" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gad8ccb396253ad0b72c6d4c917eb38a03" prot="public" static="no">
        <name>GLFW_MAXIMIZED</name>
        <initializer>0x00020008</initializer>
        <briefdescription>
<para>Window maximization window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window maximization <ref refid="window_guide_1GLFW_MAXIMIZED_hint" kindref="member">window hint</ref> and <ref refid="window_guide_1GLFW_MAXIMIZED_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="873" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77" prot="public" static="no">
        <name>GLFW_CENTER_CURSOR</name>
        <initializer>0x00020009</initializer>
        <briefdescription>
<para>Cursor centering window hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Cursor centering <ref refid="window_guide_1GLFW_CENTER_CURSOR_hint" kindref="member">window hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="878" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="878" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga60a0578c3b9449027d683a9c6abb9f14" prot="public" static="no">
        <name>GLFW_TRANSPARENT_FRAMEBUFFER</name>
        <initializer>0x0002000A</initializer>
        <briefdescription>
<para>Window framebuffer transparency hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Window framebuffer transparency <ref refid="window_guide_1GLFW_TRANSPARENT_FRAMEBUFFER_hint" kindref="member">window hint</ref> and <ref refid="window_guide_1GLFW_TRANSPARENT_FRAMEBUFFER_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="885" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="885" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a" prot="public" static="no">
        <name>GLFW_HOVERED</name>
        <initializer>0x0002000B</initializer>
        <briefdescription>
<para>Mouse cursor hover window attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Mouse cursor hover <ref refid="window_guide_1GLFW_HOVERED_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="890" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="890" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gafa94b1da34bfd6488c0d709761504dfc" prot="public" static="no">
        <name>GLFW_FOCUS_ON_SHOW</name>
        <initializer>0x0002000C</initializer>
        <briefdescription>
<para>Input focus on calling show window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Input focus <ref refid="window_guide_1GLFW_FOCUS_ON_SHOW_hint" kindref="member">window hint</ref> or <ref refid="window_guide_1GLFW_FOCUS_ON_SHOW_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="896" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="896" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga88981797d29800808ec242274ab5c03a" prot="public" static="no">
        <name>GLFW_MOUSE_PASSTHROUGH</name>
        <initializer>0x0002000D</initializer>
        <briefdescription>
<para>Mouse input transparency window hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Mouse input transparency <ref refid="window_guide_1GLFW_MOUSE_PASSTHROUGH_hint" kindref="member">window hint</ref> or <ref refid="window_guide_1GLFW_MOUSE_PASSTHROUGH_attrib" kindref="member">window attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="903" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gaf78ed8e417dbcc1e354906cc2708c982" prot="public" static="no">
        <name>GLFW_RED_BITS</name>
        <initializer>0x00021001</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_RED_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="909" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gafba3b72638c914e5fb8a237dd4c50d4d" prot="public" static="no">
        <name>GLFW_GREEN_BITS</name>
        <initializer>0x00021002</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_GREEN_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="914" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gab292ea403db6d514537b515311bf9ae3" prot="public" static="no">
        <name>GLFW_BLUE_BITS</name>
        <initializer>0x00021003</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_BLUE_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="919" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="919" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gafed79a3f468997877da86c449bd43e8c" prot="public" static="no">
        <name>GLFW_ALPHA_BITS</name>
        <initializer>0x00021004</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_ALPHA_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="924" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="924" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga318a55eac1fee57dfe593b6d38149d07" prot="public" static="no">
        <name>GLFW_DEPTH_BITS</name>
        <initializer>0x00021005</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_DEPTH_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="929" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="929" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d" prot="public" static="no">
        <name>GLFW_STENCIL_BITS</name>
        <initializer>0x00021006</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_STENCIL_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="934" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="934" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gaead34a9a683b2bc20eecf30ba738bfc6" prot="public" static="no">
        <name>GLFW_ACCUM_RED_BITS</name>
        <initializer>0x00021007</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_ACCUM_RED_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="939" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="939" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga65713cee1326f8e9d806fdf93187b471" prot="public" static="no">
        <name>GLFW_ACCUM_GREEN_BITS</name>
        <initializer>0x00021008</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_ACCUM_GREEN_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="944" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce" prot="public" static="no">
        <name>GLFW_ACCUM_BLUE_BITS</name>
        <initializer>0x00021009</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_ACCUM_BLUE_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="949" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="949" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gae829b55591c18169a40ab4067a041b1f" prot="public" static="no">
        <name>GLFW_ACCUM_ALPHA_BITS</name>
        <initializer>0x0002100A</initializer>
        <briefdescription>
<para>Framebuffer bit depth hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer bit depth <ref refid="window_guide_1GLFW_ACCUM_ALPHA_BITS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="954" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gab05108c5029443b371112b031d1fa174" prot="public" static="no">
        <name>GLFW_AUX_BUFFERS</name>
        <initializer>0x0002100B</initializer>
        <briefdescription>
<para>Framebuffer auxiliary buffer hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer auxiliary buffer <ref refid="window_guide_1GLFW_AUX_BUFFERS" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="959" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="959" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga83d991efca02537e2d69969135b77b03" prot="public" static="no">
        <name>GLFW_STEREO</name>
        <initializer>0x0002100C</initializer>
        <briefdescription>
<para>OpenGL stereoscopic rendering hint. </para>
        </briefdescription>
        <detaileddescription>
<para>OpenGL stereoscopic rendering <ref refid="window_guide_1GLFW_STEREO" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="964" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="964" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga2cdf86fdcb7722fb8829c4e201607535" prot="public" static="no">
        <name>GLFW_SAMPLES</name>
        <initializer>0x0002100D</initializer>
        <briefdescription>
<para>Framebuffer MSAA samples hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer MSAA samples <ref refid="window_guide_1GLFW_SAMPLES" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="969" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga444a8f00414a63220591f9fdb7b5642b" prot="public" static="no">
        <name>GLFW_SRGB_CAPABLE</name>
        <initializer>0x0002100E</initializer>
        <briefdescription>
<para>Framebuffer sRGB hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer sRGB <ref refid="window_guide_1GLFW_SRGB_CAPABLE" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="974" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="974" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga0f20825e6e47ee8ba389024519682212" prot="public" static="no">
        <name>GLFW_REFRESH_RATE</name>
        <initializer>0x0002100F</initializer>
        <briefdescription>
<para>Monitor refresh rate hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Monitor refresh rate <ref refid="window_guide_1GLFW_REFRESH_RATE" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="979" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga714a5d569e8a274ea58fdfa020955339" prot="public" static="no">
        <name>GLFW_DOUBLEBUFFER</name>
        <initializer>0x00021010</initializer>
        <briefdescription>
<para>Framebuffer double buffering hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Framebuffer double buffering <ref refid="window_guide_1GLFW_DOUBLEBUFFER" kindref="member">hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="984" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga649309cf72a3d3de5b1348ca7936c95b" prot="public" static="no">
        <name>GLFW_CLIENT_API</name>
        <initializer>0x00022001</initializer>
        <briefdescription>
<para>Context client API hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context client API <ref refid="window_guide_1GLFW_CLIENT_API_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CLIENT_API_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="991" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gafe5e4922de1f9932d7e9849bb053b0c0" prot="public" static="no">
        <name>GLFW_CONTEXT_VERSION_MAJOR</name>
        <initializer>0x00022002</initializer>
        <briefdescription>
<para>Context client API major version hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context client API major version <ref refid="window_guide_1GLFW_CONTEXT_VERSION_MAJOR_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CONTEXT_VERSION_MAJOR_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="997" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga31aca791e4b538c4e4a771eb95cc2d07" prot="public" static="no">
        <name>GLFW_CONTEXT_VERSION_MINOR</name>
        <initializer>0x00022003</initializer>
        <briefdescription>
<para>Context client API minor version hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context client API minor version <ref refid="window_guide_1GLFW_CONTEXT_VERSION_MINOR_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CONTEXT_VERSION_MINOR_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1003" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gafb9475071aa77c6fb05ca5a5c8678a08" prot="public" static="no">
        <name>GLFW_CONTEXT_REVISION</name>
        <initializer>0x00022004</initializer>
        <briefdescription>
<para>Context client API revision number hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context client API revision number <ref refid="window_guide_1GLFW_CONTEXT_REVISION_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1009" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gade3593916b4c507900aa2d6844810e00" prot="public" static="no">
        <name>GLFW_CONTEXT_ROBUSTNESS</name>
        <initializer>0x00022005</initializer>
        <briefdescription>
<para>Context robustness hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context client API revision number <ref refid="window_guide_1GLFW_CONTEXT_ROBUSTNESS_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CONTEXT_ROBUSTNESS_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1015" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga13d24b12465da8b28985f46c8557925b" prot="public" static="no">
        <name>GLFW_OPENGL_FORWARD_COMPAT</name>
        <initializer>0x00022006</initializer>
        <briefdescription>
<para>OpenGL forward-compatibility hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>OpenGL forward-compatibility <ref refid="window_guide_1GLFW_OPENGL_FORWARD_COMPAT_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_OPENGL_FORWARD_COMPAT_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1021" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f" prot="public" static="no">
        <name>GLFW_CONTEXT_DEBUG</name>
        <initializer>0x00022007</initializer>
        <briefdescription>
<para>Debug mode context hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Debug mode context <ref refid="window_guide_1GLFW_CONTEXT_DEBUG_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CONTEXT_DEBUG_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1027" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1027" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga87ec2df0b915201e950ca42d5d0831e1" prot="public" static="no">
        <name>GLFW_OPENGL_DEBUG_CONTEXT</name>
        <initializer><ref refid="group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f" kindref="member">GLFW_CONTEXT_DEBUG</ref></initializer>
        <briefdescription>
<para>Legacy name for compatibility. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an alias for compatibility with earlier versions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1032" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1032" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga44f3a6b4261fbe351e0b950b0f372e12" prot="public" static="no">
        <name>GLFW_OPENGL_PROFILE</name>
        <initializer>0x00022008</initializer>
        <briefdescription>
<para>OpenGL profile hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>OpenGL profile <ref refid="window_guide_1GLFW_OPENGL_PROFILE_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_OPENGL_PROFILE_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1038" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1038" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6" prot="public" static="no">
        <name>GLFW_CONTEXT_RELEASE_BEHAVIOR</name>
        <initializer>0x00022009</initializer>
        <briefdescription>
<para>Context flush-on-release hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context flush-on-release <ref refid="window_guide_1GLFW_CONTEXT_RELEASE_BEHAVIOR_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CONTEXT_RELEASE_BEHAVIOR_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1044" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1044" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga5a52fdfd46d8249c211f923675728082" prot="public" static="no">
        <name>GLFW_CONTEXT_NO_ERROR</name>
        <initializer>0x0002200A</initializer>
        <briefdescription>
<para>Context error suppression hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context error suppression <ref refid="window_guide_1GLFW_CONTEXT_NO_ERROR_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CONTEXT_NO_ERROR_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1050" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1050" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486" prot="public" static="no">
        <name>GLFW_CONTEXT_CREATION_API</name>
        <initializer>0x0002200B</initializer>
        <briefdescription>
<para>Context creation API hint and attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Context creation API <ref refid="window_guide_1GLFW_CONTEXT_CREATION_API_hint" kindref="member">hint</ref> and <ref refid="window_guide_1GLFW_CONTEXT_CREATION_API_attrib" kindref="member">attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1056" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1056" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga620bc4280c7eab81ac9f02204500ed47" prot="public" static="no">
        <name>GLFW_SCALE_TO_MONITOR</name>
        <initializer>0x0002200C</initializer>
        <briefdescription>
<para>Window content area scaling window <ref refid="window_guide_1GLFW_SCALE_TO_MONITOR" kindref="member">window hint</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1060" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1060" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gab6ef2d02eb55800d249ccf1af253c35e" prot="public" static="no">
        <name>GLFW_COCOA_RETINA_FRAMEBUFFER</name>
        <initializer>0x00023001</initializer>
        <briefdescription>
<para>macOS specific <ref refid="window_guide_1GLFW_COCOA_RETINA_FRAMEBUFFER_hint" kindref="member">window hint</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1064" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1064" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga70fa0fbc745de6aa824df79a580e84b5" prot="public" static="no">
        <name>GLFW_COCOA_FRAME_NAME</name>
        <initializer>0x00023002</initializer>
        <briefdescription>
<para>macOS specific <ref refid="window_guide_1GLFW_COCOA_FRAME_NAME_hint" kindref="member">window hint</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1068" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1068" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc" prot="public" static="no">
        <name>GLFW_COCOA_GRAPHICS_SWITCHING</name>
        <initializer>0x00023003</initializer>
        <briefdescription>
<para>macOS specific <ref refid="window_guide_1GLFW_COCOA_GRAPHICS_SWITCHING_hint" kindref="member">window hint</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1072" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1072" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gae5a9ea2fccccd92edbd343fc56461114" prot="public" static="no">
        <name>GLFW_X11_CLASS_NAME</name>
        <initializer>0x00024001</initializer>
        <briefdescription>
<para>X11 specific <ref refid="window_guide_1GLFW_X11_CLASS_NAME_hint" kindref="member">window hint</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1076" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1076" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1ga494c3c0d911e4b860b946530a3e389e8" prot="public" static="no">
        <name>GLFW_X11_INSTANCE_NAME</name>
        <initializer>0x00024002</initializer>
        <briefdescription>
<para>X11 specific <ref refid="window_guide_1GLFW_X11_CLASS_NAME_hint" kindref="member">window hint</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1080" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__window_1gaf65ea8dafdc0edb07b821b9a336d5043" prot="public" static="no">
        <name>GLFW_WIN32_KEYBOARD_MENU</name>
        <initializer>0x00025001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1081" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a8f6dcdc968d214ff14779564f1389264" prot="public" static="no">
        <name>GLFW_NO_API</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1084" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1084" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a01b3f66db266341425e9abee6b257db2" prot="public" static="no">
        <name>GLFW_OPENGL_API</name>
        <initializer>0x00030001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1085" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1085" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a28d9b3bc6c2a522d815c8e146595051f" prot="public" static="no">
        <name>GLFW_OPENGL_ES_API</name>
        <initializer>0x00030002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1086" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a8b306cb27f5bb0d6d67c7356a0e0fc34" prot="public" static="no">
        <name>GLFW_NO_ROBUSTNESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1088" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1088" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1aee84a679230d205005e22487ff678a85" prot="public" static="no">
        <name>GLFW_NO_RESET_NOTIFICATION</name>
        <initializer>0x00031001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1089" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1089" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1aec1132f245143fc915b2f0995228564c" prot="public" static="no">
        <name>GLFW_LOSE_CONTEXT_ON_RESET</name>
        <initializer>0x00031002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1090" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ad6f2335d6f21cc9bab96633b1c111d5f" prot="public" static="no">
        <name>GLFW_OPENGL_ANY_PROFILE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1092" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1092" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1af094bb16da76f66ebceb19ee213b3de8" prot="public" static="no">
        <name>GLFW_OPENGL_CORE_PROFILE</name>
        <initializer>0x00032001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1093" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1093" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ac06b663d79c8fcf04669cc8fcc0b7670" prot="public" static="no">
        <name>GLFW_OPENGL_COMPAT_PROFILE</name>
        <initializer>0x00032002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1094" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1aade31da5b884a84a7625c6b059b9132c" prot="public" static="no">
        <name>GLFW_CURSOR</name>
        <initializer>0x00033001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1096" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1096" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ae3bbe2315b7691ab088159eb6c9110fc" prot="public" static="no">
        <name>GLFW_STICKY_KEYS</name>
        <initializer>0x00033002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1097" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1097" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a4d7ce8ce71030c3b04e2b78145bc59d1" prot="public" static="no">
        <name>GLFW_STICKY_MOUSE_BUTTONS</name>
        <initializer>0x00033003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1098" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a07b84de0b52143e1958f88a7d9105947" prot="public" static="no">
        <name>GLFW_LOCK_KEY_MODS</name>
        <initializer>0x00033004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1099" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1aeeda1be76a44a1fc97c1282e06281fbb" prot="public" static="no">
        <name>GLFW_RAW_MOUSE_MOTION</name>
        <initializer>0x00033005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1100" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ae04dd25c8577e19fa8c97368561f6c68" prot="public" static="no">
        <name>GLFW_CURSOR_NORMAL</name>
        <initializer>0x00034001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1102" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ac4d5cb9d78de8573349c58763d53bf11" prot="public" static="no">
        <name>GLFW_CURSOR_HIDDEN</name>
        <initializer>0x00034002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1103" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88" prot="public" static="no">
        <name>GLFW_CURSOR_DISABLED</name>
        <initializer>0x00034003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1104" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a6b47d806f285efe9bfd7aeec667297ee" prot="public" static="no">
        <name>GLFW_ANY_RELEASE_BEHAVIOR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1106" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a999961d391db49cb4f949c1dece0e13b" prot="public" static="no">
        <name>GLFW_RELEASE_BEHAVIOR_FLUSH</name>
        <initializer>0x00035001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1107" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1afca09088eccacdce4b59036cfae349c5" prot="public" static="no">
        <name>GLFW_RELEASE_BEHAVIOR_NONE</name>
        <initializer>0x00035002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1108" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a0494c9bfd3f584ab41e6dbeeaa0e6a19" prot="public" static="no">
        <name>GLFW_NATIVE_CONTEXT_API</name>
        <initializer>0x00036001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1110" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a03cf65c9ab01fc8b872ba58842c531c9" prot="public" static="no">
        <name>GLFW_EGL_CONTEXT_API</name>
        <initializer>0x00036002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1111" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1afd34a473af9fa81f317910ea371b19e3" prot="public" static="no">
        <name>GLFW_OSMESA_CONTEXT_API</name>
        <initializer>0x00036003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1112" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ae78e673449c2a2b8c560ca1b1e283228" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE_NONE</name>
        <initializer>0x00037001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1114" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ad8d9e97ed7790811470366b338833623" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE_OPENGL</name>
        <initializer>0x00037002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1115" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a0003c089da020cbf957218e70245bb65" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE_OPENGLES</name>
        <initializer>0x00037003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1116" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a6e8fdc83113d247ad792bb5c4e82c894" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE_D3D9</name>
        <initializer>0x00037004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1117" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ad6eae659811a52a5cdc43c362aedfa33" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE_D3D11</name>
        <initializer>0x00037005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1118" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a579ac83506c7546709dad91960cc7ca1" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE_VULKAN</name>
        <initializer>0x00037007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1119" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1ab56d91b26cf223dc67590a93a2f8507d" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE_METAL</name>
        <initializer>0x00037008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1120" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" prot="public" static="no">
        <name>GLFW_ARROW_CURSOR</name>
        <initializer>0x00036001</initializer>
        <briefdescription>
<para>The regular arrow cursor Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The regular arrow cursor Shape. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1135" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga36185f4375eaada1b04e431244774c86" prot="public" static="no">
        <name>GLFW_IBEAM_CURSOR</name>
        <initializer>0x00036002</initializer>
        <briefdescription>
<para>The text input I-beam cursor Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The text input I-beam cursor Shape. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1140" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22" prot="public" static="no">
        <name>GLFW_CROSSHAIR_CURSOR</name>
        <initializer>0x00036003</initializer>
        <briefdescription>
<para>The crosshair cursor Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The crosshair cursor Shape. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1145" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0" prot="public" static="no">
        <name>GLFW_POINTING_HAND_CURSOR</name>
        <initializer>0x00036004</initializer>
        <briefdescription>
<para>The pointing hand cursor Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The pointing hand cursor Shape. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1150" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad" prot="public" static="no">
        <name>GLFW_RESIZE_EW_CURSOR</name>
        <initializer>0x00036005</initializer>
        <briefdescription>
<para>The horizontal resize/move arrow Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The horizontal resize/move arrow Shape. This is usually a horizontal double-headed arrow. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1156" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388" prot="public" static="no">
        <name>GLFW_RESIZE_NS_CURSOR</name>
        <initializer>0x00036006</initializer>
        <briefdescription>
<para>The vertical resize/move arrow Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The vertical resize/move Shape. This is usually a vertical double-headed arrow. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1162" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da" prot="public" static="no">
        <name>GLFW_RESIZE_NWSE_CURSOR</name>
        <initializer>0x00036007</initializer>
        <briefdescription>
<para>The top-left to bottom-right diagonal resize/move arrow Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The top-left to bottom-right diagonal resize/move Shape. This is usually a diagonal double-headed arrow.</para>
<para><simplesect kind="note"><para>@macos This Shape is provided by a private system API and may fail with <ref refid="group__errors_1ga09d6943923a70ddef3a085f5baee786c" kindref="member">GLFW_CURSOR_UNAVAILABLE</ref> in the future.</para>
</simplesect>
<simplesect kind="note"><para>@x11 This Shape is provided by a newer standard not supported by all cursor themes.</para>
</simplesect>
<simplesect kind="note"><para>@wayland This Shape is provided by a newer standard not supported by all cursor themes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1177" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gab06bba3b407f92807ba9b48de667a323" prot="public" static="no">
        <name>GLFW_RESIZE_NESW_CURSOR</name>
        <initializer>0x00036008</initializer>
        <briefdescription>
<para>The top-right to bottom-left diagonal resize/move arrow Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The top-right to bottom-left diagonal resize/move Shape. This is usually a diagonal double-headed arrow.</para>
<para><simplesect kind="note"><para>@macos This Shape is provided by a private system API and may fail with <ref refid="group__errors_1ga09d6943923a70ddef3a085f5baee786c" kindref="member">GLFW_CURSOR_UNAVAILABLE</ref> in the future.</para>
</simplesect>
<simplesect kind="note"><para>@x11 This Shape is provided by a newer standard not supported by all cursor themes.</para>
</simplesect>
<simplesect kind="note"><para>@wayland This Shape is provided by a newer standard not supported by all cursor themes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1192" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d" prot="public" static="no">
        <name>GLFW_RESIZE_ALL_CURSOR</name>
        <initializer>0x00036009</initializer>
        <briefdescription>
<para>The omni-directional resize/move cursor Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The omni-directional resize cursor/move Shape. This is usually either a combined horizontal and vertical double-headed arrow or a grabbing hand. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1198" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga297c503095b034bc8891393b637844b1" prot="public" static="no">
        <name>GLFW_NOT_ALLOWED_CURSOR</name>
        <initializer>0x0003600A</initializer>
        <briefdescription>
<para>The operation-not-allowed Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>The operation-not-allowed Shape. This is usually a circle with a diagonal line through it.</para>
<para><simplesect kind="note"><para>@x11 This Shape is provided by a newer standard not supported by all cursor themes.</para>
</simplesect>
<simplesect kind="note"><para>@wayland This Shape is provided by a newer standard not supported by all cursor themes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1210" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gabb3eb0109f11bb808fc34659177ca962" prot="public" static="no">
        <name>GLFW_HRESIZE_CURSOR</name>
        <initializer><ref refid="group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad" kindref="member">GLFW_RESIZE_EW_CURSOR</ref></initializer>
        <briefdescription>
<para>Legacy name for compatibility. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an alias for compatibility with earlier versions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1215" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gaf024f0e1ff8366fb2b5c260509a1fce5" prot="public" static="no">
        <name>GLFW_VRESIZE_CURSOR</name>
        <initializer><ref refid="group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388" kindref="member">GLFW_RESIZE_NS_CURSOR</ref></initializer>
        <briefdescription>
<para>Legacy name for compatibility. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an alias for compatibility with earlier versions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1220" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga1db35e20849e0837c82e3dc1fd797263" prot="public" static="no">
        <name>GLFW_HAND_CURSOR</name>
        <initializer><ref refid="group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0" kindref="member">GLFW_POINTING_HAND_CURSOR</ref></initializer>
        <briefdescription>
<para>Legacy name for compatibility. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an alias for compatibility with earlier versions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1225" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1abe11513fd1ffbee5bb9b173f06028b9e" prot="public" static="no">
        <name>GLFW_CONNECTED</name>
        <initializer>0x00040001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1228" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1aab64b25921ef21d89252d6f0a71bfc32" prot="public" static="no">
        <name>GLFW_DISCONNECTED</name>
        <initializer>0x00040002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1229" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gab9c0534709fda03ec8959201da3a9a18" prot="public" static="no">
        <name>GLFW_JOYSTICK_HAT_BUTTONS</name>
        <initializer>0x00050001</initializer>
        <briefdescription>
<para>Joystick hat buttons init hint. </para>
        </briefdescription>
        <detaileddescription>
<para>Joystick hat buttons <ref refid="intro_guide_1GLFW_JOYSTICK_HAT_BUTTONS" kindref="member">init hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1237" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gaec269b24cf549ab46292c0125d8bbdce" prot="public" static="no">
        <name>GLFW_ANGLE_PLATFORM_TYPE</name>
        <initializer>0x00050002</initializer>
        <briefdescription>
<para>ANGLE rendering backend init hint. </para>
        </briefdescription>
        <detaileddescription>
<para>ANGLE rendering backend <ref refid="intro_guide_1GLFW_ANGLE_PLATFORM_TYPE_hint" kindref="member">init hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1242" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gab937983147a3158d45f88fad7129d9f2" prot="public" static="no">
        <name>GLFW_COCOA_CHDIR_RESOURCES</name>
        <initializer>0x00051001</initializer>
        <briefdescription>
<para>macOS specific init hint. </para>
        </briefdescription>
        <detaileddescription>
<para>macOS specific <ref refid="intro_guide_1GLFW_COCOA_CHDIR_RESOURCES_hint" kindref="member">init hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1247" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1ga71e0b4ce2f2696a84a9b8c5e12dc70cf" prot="public" static="no">
        <name>GLFW_COCOA_MENUBAR</name>
        <initializer>0x00051002</initializer>
        <briefdescription>
<para>macOS specific init hint. </para>
        </briefdescription>
        <detaileddescription>
<para>macOS specific <ref refid="intro_guide_1GLFW_COCOA_MENUBAR_hint" kindref="member">init hint</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1252" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571" prot="public" static="no">
        <name>GLFW_DONT_CARE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1255" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw_2include_2_g_l_f_w_2glfw3_8h_1aa97755eb47e4bf2727ad45d610e18206" prot="public" static="no">
        <name>GLAPIENTRY</name>
        <initializer>APIENTRY</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="6051" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="6051" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWglproc) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>GLFWglproc</name>
        <briefdescription>
<para>Client API function pointer type. </para>
        </briefdescription>
        <detaileddescription>
<para>Generic function pointer used for returning client API function pointers without forcing a cast from a regular pointer.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_glext" kindref="member">OpenGL and OpenGL ES extensions</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1274" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vulkan_1ga70c01918dc9d233a4fbe0681a43018af" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWvkproc) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>GLFWvkproc</name>
        <briefdescription>
<para>Vulkan API function pointer type. </para>
        </briefdescription>
        <detaileddescription>
<para>Generic function pointer used for returning Vulkan API function pointers without forcing a cast from a regular pointer.</para>
<para><simplesect kind="see"><para><ref refid="vulkan_guide_1vulkan_proc" kindref="member">Querying Vulkan function pointers</ref> </para>
</simplesect>
<simplesect kind="see"><para>glfwGetInstanceProcAddress</para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1288" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" prot="public" static="no">
        <type>struct <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref></type>
        <definition>typedef struct GLFWmonitor GLFWmonitor</definition>
        <argsstring></argsstring>
        <name>GLFWmonitor</name>
        <briefdescription>
<para>Opaque monitor object. </para>
        </briefdescription>
        <detaileddescription>
<para>Opaque monitor object.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_object" kindref="member">Monitor objects</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1300" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" prot="public" static="no">
        <type>struct <ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref></type>
        <definition>typedef struct GLFWwindow GLFWwindow</definition>
        <argsstring></argsstring>
        <name>GLFWwindow</name>
        <briefdescription>
<para>Opaque window object. </para>
        </briefdescription>
        <detaileddescription>
<para>Opaque window object.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_object" kindref="member">Window objects</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1312" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" prot="public" static="no">
        <type>struct <ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref></type>
        <definition>typedef struct GLFWcursor GLFWcursor</definition>
        <argsstring></argsstring>
        <name>GLFWcursor</name>
        <briefdescription>
<para>Opaque cursor object. </para>
        </briefdescription>
        <detaileddescription>
<para>Opaque cursor object.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1324" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWerrorfun) (int, const char *)</definition>
        <argsstring>)(int, const char *)</argsstring>
        <name>GLFWerrorfun</name>
        <briefdescription>
<para>The function pointer type for error callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for error callbacks. An error callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>callback_name(int<sp/>error_code,<sp/>const<sp/>char*<sp/>description)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="group__errors" kindref="compound">error code</ref>. Future releases may add more error codes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">description</parametername>
</parameternamelist>
<parameterdescription>
<para>A UTF-8 encoded string describing the error.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@pointer_lifetime The error description string is valid until the callback function returns.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1error_handling" kindref="member">Error handling</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1ga746e2757d069eaea423349aca6ae097a" kindref="member">glfwSetErrorCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1348" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowposfun) (GLFWwindow *, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int)</argsstring>
        <name>GLFWwindowposfun</name>
        <briefdescription>
<para>The function pointer type for window position callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window position callbacks. A window position callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>callback_name(GLFWwindow*<sp/>window,<sp/>int<sp/>xpos,<sp/>int<sp/>ypos)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that was moved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the content area of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the content area of the window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_pos" kindref="member">Window position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6" kindref="member">glfwSetWindowPosCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1371" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowsizefun) (GLFWwindow *, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int)</argsstring>
        <name>GLFWwindowsizefun</name>
        <briefdescription>
<para>The function pointer type for window size callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window size callbacks. A window size callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>callback_name(GLFWwindow*<sp/>window,<sp/>int<sp/>width,<sp/>int<sp/>height)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that was resized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width, in screen coordinates, of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height, in screen coordinates, of the window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5" kindref="member">glfwSetWindowSizeCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1393" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga5c46f9d2435a22b531382ea642216a61" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowclosefun) (GLFWwindow *)</definition>
        <argsstring>)(GLFWwindow *)</argsstring>
        <name>GLFWwindowclosefun</name>
        <briefdescription>
<para>The function pointer type for window close callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window close callbacks. A window close callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that the user attempted to close.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_close" kindref="member">Window closing and close flag</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga693d778815971a06e1a5a7bcdeff3d36" kindref="member">glfwSetWindowCloseCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1413" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowrefreshfun) (GLFWwindow *)</definition>
        <argsstring>)(GLFWwindow *)</argsstring>
        <name>GLFWwindowrefreshfun</name>
        <briefdescription>
<para>The function pointer type for window content refresh callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window content refresh callbacks. A window content refresh callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose content needs to be refreshed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_refresh" kindref="member">Window damage and refresh</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga62bfa902c07a03b8ad9be37da31a4be7" kindref="member">glfwSetWindowRefreshCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1433" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowfocusfun) (GLFWwindow *, int)</definition>
        <argsstring>)(GLFWwindow *, int)</argsstring>
        <name>GLFWwindowfocusfun</name>
        <briefdescription>
<para>The function pointer type for window focus callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window focus callbacks. A window focus callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>focused)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that gained or lost input focus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">focused</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GLFW_FALSE</computeroutput> if it lost it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_focus" kindref="member">Window input focus</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">glfwSetWindowFocusCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1454" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowiconifyfun) (GLFWwindow *, int)</definition>
        <argsstring>)(GLFWwindow *, int)</argsstring>
        <name>GLFWwindowiconifyfun</name>
        <briefdescription>
<para>The function pointer type for window iconify callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window iconify callbacks. A window iconify callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>iconified)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that was iconified or restored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">iconified</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was iconified, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga3e9f355edb6b9247149ddea2335eda69" kindref="member">glfwSetWindowIconifyCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1475" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga82868db51248e7bc2deb2082336e6c70" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowmaximizefun) (GLFWwindow *, int)</definition>
        <argsstring>)(GLFWwindow *, int)</argsstring>
        <name>GLFWwindowmaximizefun</name>
        <briefdescription>
<para>The function pointer type for window maximize callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window maximize callbacks. A window maximize callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>maximized)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that was maximized or restored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maximized</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GLFW_TRUE</computeroutput> if the window was maximized, or <computeroutput>GLFW_FALSE</computeroutput> if it was restored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_maximize" kindref="member">Window maximization</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gae77b3960dcd40514fb7b2b8a6eb98137" kindref="member">glfwSetWindowMaximizeCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1496" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga54302eebe2f81518a544723a1d805388" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWframebuffersizefun) (GLFWwindow *, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int)</argsstring>
        <name>GLFWframebuffersizefun</name>
        <briefdescription>
<para>The function pointer type for framebuffer size callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for framebuffer size callbacks. A framebuffer size callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>width,<sp/>int<sp/>height)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose framebuffer was resized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width, in pixels, of the framebuffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height, in pixels, of the framebuffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_fbsize" kindref="member">Framebuffer size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0" kindref="member">glfwSetFramebufferSizeCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1517" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWwindowcontentscalefun) (GLFWwindow *, float, float)</definition>
        <argsstring>)(GLFWwindow *, float, float)</argsstring>
        <name>GLFWwindowcontentscalefun</name>
        <briefdescription>
<para>The function pointer type for window content scale callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for window content scale callbacks. A window content scale callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>float<sp/>xscale,<sp/>float<sp/>yscale)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose content scale changed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xscale</parametername>
</parameternamelist>
<parameterdescription>
<para>The new x-axis content scale of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yscale</parametername>
</parameternamelist>
<parameterdescription>
<para>The new y-axis content scale of the window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="window_guide_1window_scale" kindref="member">Window content scale</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gac6edcddbe785445d0d2b7b7be500836e" kindref="member">glfwSetWindowContentScaleCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1538" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1gac4312f2199caa15988cebb59ec530373" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWmousebuttonfun) (GLFWwindow *, int, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int, int)</argsstring>
        <name>GLFWmousebuttonfun</name>
        <briefdescription>
<para>The function pointer type for mouse button callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for mouse button callback functions. A mouse button callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>button,<sp/>int<sp/>action,<sp/>int<sp/>mods)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">button</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__buttons" kindref="compound">mouse button</ref> that was pressed or released. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>. Future releases may add more actions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit field describing which <ref refid="group__mods" kindref="compound">modifier keys</ref> were held down.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1input_mouse_button" kindref="member">Mouse button input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle and modifier mask parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1564" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga081a67dfb879e14707a5abd7de242b8a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWcursorposfun) (GLFWwindow *, double, double)</definition>
        <argsstring>)(GLFWwindow *, double, double)</argsstring>
        <name>GLFWcursorposfun</name>
        <briefdescription>
<para>The function pointer type for cursor position callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for cursor position callbacks. A cursor position callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>double<sp/>xpos,<sp/>double<sp/>ypos);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new cursor x-coordinate, relative to the left edge of the content area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new cursor y-coordinate, relative to the top edge of the content area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1cursor_pos" kindref="member">Cursor position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga74124d0eff27040fd10e4df9e17d129c" kindref="member">glfwSetCursorPosCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>GLFWmouseposfun</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1587" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga945bb284410b64c49ecc50195692720a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWcursorenterfun) (GLFWwindow *, int)</definition>
        <argsstring>)(GLFWwindow *, int)</argsstring>
        <name>GLFWcursorenterfun</name>
        <briefdescription>
<para>The function pointer type for cursor enter/leave callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for cursor enter/leave callbacks. A cursor enter/leave callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>entered)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entered</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GLFW_TRUE</computeroutput> if the cursor entered the window&apos;s content area, or <computeroutput>GLFW_FALSE</computeroutput> if it left it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1cursor_enter" kindref="member">Cursor enter/leave events</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gacdb3490e374c8bc08549c6f173ffa7c2" kindref="member">glfwSetCursorEnterCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1608" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga077345c3a10d906b2b3f2d550ae02971" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWscrollfun) (GLFWwindow *, double, double)</definition>
        <argsstring>)(GLFWwindow *, double, double)</argsstring>
        <name>GLFWscrollfun</name>
        <briefdescription>
<para>The function pointer type for scroll callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for scroll callbacks. A scroll callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>double<sp/>xoffset,<sp/>double<sp/>yoffset)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xoffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The scroll offset along the x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yoffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The scroll offset along the y-axis.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1scrolling" kindref="member">Scroll input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaa786b59f19ad8525d251cda8e0d7d29b" kindref="member">glfwSetScrollCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>GLFWmousewheelfun</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1629" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga9c6c9d019ac11d888e45b11b14772659" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWkeyfun) (GLFWwindow *, int, int, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int, int, int)</argsstring>
        <name>GLFWkeyfun</name>
        <briefdescription>
<para>The function pointer type for keyboard key callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for keyboard key callbacks. A keyboard key callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>key,<sp/>int<sp/>scancode,<sp/>int<sp/>action,<sp/>int<sp/>mods)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__keys" kindref="compound">keyboard key</ref> that was pressed or released. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scancode</parametername>
</parameternamelist>
<parameterdescription>
<para>The system-specific scancode of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GLFW_PRESS</computeroutput>, <computeroutput>GLFW_RELEASE</computeroutput> or <computeroutput>GLFW_REPEAT</computeroutput>. Future releases may add more actions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit field describing which <ref refid="group__mods" kindref="compound">modifier keys</ref> were held down.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1input_key" kindref="member">Key input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle, scancode and modifier mask parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1655" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWcharfun) (GLFWwindow *, unsigned int)</definition>
        <argsstring>)(GLFWwindow *, unsigned int)</argsstring>
        <name>GLFWcharfun</name>
        <briefdescription>
<para>The function pointer type for Unicode character callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for Unicode character callbacks. A Unicode character callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>unsigned<sp/>int<sp/>codepoint)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">codepoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unicode code point of the character.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1input_char" kindref="member">Text input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">glfwSetCharCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.4. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1676" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWcharmodsfun) (GLFWwindow *, unsigned int, int)</definition>
        <argsstring>)(GLFWwindow *, unsigned int, int)</argsstring>
        <name>GLFWcharmodsfun</name>
        <briefdescription>
<para>The function pointer type for Unicode character with modifiers callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for Unicode character with modifiers callbacks. It is called for each input character, regardless of what modifier keys are held down. A Unicode character with modifiers callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>unsigned<sp/>int<sp/>codepoint,<sp/>int<sp/>mods)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">codepoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unicode code point of the character. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit field describing which <ref refid="group__mods" kindref="compound">modifier keys</ref> were held down.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1input_char" kindref="member">Text input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga359a8529c2eb06e6e2173168f30ac99c" kindref="member">glfwSetCharModsCallback</ref></para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Scheduled for removal in version 4.0.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1703" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga76a7371bc7edc035212b86ce85390fd2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWdropfun) (GLFWwindow *, int, const char *[])</definition>
        <argsstring>)(GLFWwindow *, int, const char *[])</argsstring>
        <name>GLFWdropfun</name>
        <briefdescription>
<para>The function pointer type for path drop callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for path drop callbacks. A path drop callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>path_count,<sp/>const<sp/>char*<sp/>paths[])</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of dropped paths. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">paths</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-8 encoded file and/or directory path names.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@pointer_lifetime The path array and its strings are valid until the callback function returns.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1path_drop" kindref="member">Path drop input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga8bab819b7b0ef9bc1a38e58c577c1d13" kindref="member">glfwSetDropCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1727" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1gacc7165513fd258601c4cb763c1369693" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWmonitorfun) (GLFWmonitor *, int)</definition>
        <argsstring>)(GLFWmonitor *, int)</argsstring>
        <name>GLFWmonitorfun</name>
        <briefdescription>
<para>The function pointer type for monitor configuration callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for monitor configuration callbacks. A monitor callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWmonitor*<sp/>monitor,<sp/>int<sp/>event)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor that was connected or disconnected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CONNECTED</computeroutput> or <computeroutput>GLFW_DISCONNECTED</computeroutput>. Future releases may add more events.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="monitor_guide_1monitor_event" kindref="member">Monitor configuration changes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1" kindref="member">glfwSetMonitorCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1748" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLFWjoystickfun) (int, int)</definition>
        <argsstring>)(int, int)</argsstring>
        <name>GLFWjoystickfun</name>
        <briefdescription>
<para>The function pointer type for joystick configuration callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function pointer type for joystick configuration callbacks. A joystick configuration callback function has the following signature: <programlisting><codeline><highlight class="normal">void<sp/>function_name(int<sp/>jid,<sp/>int<sp/>event)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The joystick that was connected or disconnected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CONNECTED</computeroutput> or <computeroutput>GLFW_DISCONNECTED</computeroutput>. Future releases may add more events.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="input_guide_1joystick_event" kindref="member">Joystick configuration changes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gad90f60a4c0e04629928305b53e96154a" kindref="member">glfwSetJoystickCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1769" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" bodystart="1769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1ga902c2816ac9b34b757282daab59b2565" prot="public" static="no">
        <type>struct <ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref></type>
        <definition>typedef struct GLFWvidmode GLFWvidmode</definition>
        <argsstring></argsstring>
        <name>GLFWvidmode</name>
        <briefdescription>
<para>Video mode type. </para>
        </briefdescription>
        <detaileddescription>
<para>This describes a single video mode.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_modes" kindref="member">Video modes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e" kindref="member">glfwGetVideoMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga7eaea6132f15e9b5d47eb94f88547f79" kindref="member">glfwGetVideoModes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added refresh rate member. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1804" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1ga939cf093cb0af0498b7b54dc2e181404" prot="public" static="no">
        <type>struct <ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref></type>
        <definition>typedef struct GLFWgammaramp GLFWgammaramp</definition>
        <argsstring></argsstring>
        <name>GLFWgammaramp</name>
        <briefdescription>
<para>Gamma ramp. </para>
        </briefdescription>
        <detaileddescription>
<para>This describes the gamma ramp for a monitor.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_gamma" kindref="member">Gamma ramp</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1gafe7b41852c1a14fe978f0e5381969885" kindref="member">glfwGetGammaRamp</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" kindref="member">glfwSetGammaRamp</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1832" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga7cc0a09de172fa7250872046f8c4d2ca" prot="public" static="no">
        <type>struct <ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref></type>
        <definition>typedef struct GLFWimage GLFWimage</definition>
        <argsstring></argsstring>
        <name>GLFWimage</name>
        <briefdescription>
<para>Image data. </para>
        </briefdescription>
        <detaileddescription>
<para>This describes a single 2D image. See the documentation for each related function what the expected pixel format is.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_custom" kindref="member">Custom cursor creation</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="window_guide_1window_icon" kindref="member">Window icon</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.1. @glfw3 Removed format and bytes-per-pixel members. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1858" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga61acfb1f28f751438dd221225c5e725d" prot="public" static="no">
        <type>struct <ref refid="struct_g_l_f_wgamepadstate" kindref="compound">GLFWgamepadstate</ref></type>
        <definition>typedef struct GLFWgamepadstate GLFWgamepadstate</definition>
        <argsstring></argsstring>
        <name>GLFWgamepadstate</name>
        <briefdescription>
<para>Gamepad input state. </para>
        </briefdescription>
        <detaileddescription>
<para>This describes the input state of a gamepad.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1gamepad" kindref="member">Gamepad input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga6e138d3b0761546f5a12546f367501d6" kindref="member">glfwGetGamepadState</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1881" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwInit</definition>
        <argsstring>(void)</argsstring>
        <name>glfwInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes the GLFW library. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes the GLFW library. Before most GLFW functions can be used, GLFW must be initialized, and before an application terminates GLFW should be terminated in order to free any resources allocated during or after initialization.</para>
<para>If this function fails, it calls <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref> before returning. If it succeeds, you should call <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref> before the application exits.</para>
<para>Additional calls to this function after successful initialization but before termination will return <computeroutput>GLFW_TRUE</computeroutput> immediately.</para>
<para><simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if successful, or <computeroutput>GLFW_FALSE</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@macos This function will change the current directory of the application to the <computeroutput>Contents/Resources</computeroutput> subdirectory of the application&apos;s bundle, if present. This can be disabled with the <ref refid="group__init_1gab937983147a3158d45f88fad7129d9f2" kindref="member">GLFW_COCOA_CHDIR_RESOURCES</ref> init hint.</para>
</simplesect>
<simplesect kind="remark"><para>@macos This function will create the main menu and dock icon for the application. If GLFW finds a <computeroutput>MainMenu.nib</computeroutput> it is loaded and assumed to contain a menu bar. Otherwise a minimal menu bar is created manually with common commands like Hide, Quit and About. The About entry opens a minimal about dialog with information from the application&apos;s bundle. The menu bar and dock icon can be disabled entirely with the <ref refid="group__init_1ga71e0b4ce2f2696a84a9b8c5e12dc70cf" kindref="member">GLFW_COCOA_MENUBAR</ref> init hint.</para>
</simplesect>
<simplesect kind="remark"><para>@x11 This function will set the <computeroutput>LC_CTYPE</computeroutput> category of the application locale according to the current environment if that category is still &quot;C&quot;. This is because the &quot;C&quot; locale breaks Unicode text input.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_init" kindref="member">Initialization and termination</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function initializes the GLFW library. Before most GLFW functions can be used, GLFW must be initialized, and before an application terminates GLFW should be terminated in order to free any resources allocated during or after initialization.</para>
<para>If this function fails, it calls <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref> before returning. If it succeeds, you should call <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref> before the application exits.</para>
<para>Additional calls to this function after successful initialization but before termination will return <computeroutput>GLFW_TRUE</computeroutput> immediately.</para>
<para><simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if successful, or <computeroutput>GLFW_FALSE</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@osx This function will change the current directory of the application to the <computeroutput>Contents/Resources</computeroutput> subdirectory of the application&apos;s bundle, if present. This can be disabled with a compile-time option.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_init" kindref="member">Initialization and termination</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1932" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c" bodystart="232" bodyend="275" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="1932" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwTerminate</definition>
        <argsstring>(void)</argsstring>
        <name>glfwTerminate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Terminates the GLFW library. </para>
        </briefdescription>
        <detaileddescription>
<para>This function destroys all remaining windows and cursors, restores any modified gamma ramps and frees any other allocated resources. Once this function is called, you must again call <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref> successfully before you will be able to use most GLFW functions.</para>
<para>If GLFW has been successfully initialized, this function should be called before the application exits. If initialization fails, there is no need to call this function, as it is called by <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref> before it returns failure.</para>
<para>This function has no effect if GLFW is not initialized.</para>
<para>@errors Possible errors include <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
<simplesect kind="warning"><para>The contexts of any remaining windows must not be current on any other thread when this function is called.</para>
</simplesect>
@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_init" kindref="member">Initialization and termination</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function destroys all remaining windows and cursors, restores any modified gamma ramps and frees any other allocated resources. Once this function is called, you must again call <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref> successfully before you will be able to use most GLFW functions.</para>
<para>If GLFW has been successfully initialized, this function should be called before the application exits. If initialization fails, there is no need to call this function, as it is called by <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref> before it returns failure.</para>
<para>@errors Possible errors include <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
<simplesect kind="warning"><para>The contexts of any remaining windows must not be current on any other thread when this function is called.</para>
</simplesect>
@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_init" kindref="member">Initialization and termination</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1966" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c" bodystart="277" bodyend="283" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="1966" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1gac85e41aab1c2bd6fc740f4377d9e7e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwInitHint</definition>
        <argsstring>(int hint, int value)</argsstring>
        <name>glfwInitHint</name>
        <param>
          <type>int</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the specified init hint to the desired value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets hints for the next initialization of GLFW.</para>
<para>The values you set hints to are never reset by GLFW, but they only take effect during initialization. Once GLFW has been initialized, any values you set will be ignored until the library is terminated and initialized again.</para>
<para>Some hints are platform specific. These may be set on any platform but they will only affect their specific platform. Other platforms will ignore them. Setting these hints requires no platform specific headers or functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="intro_guide_1init_hints" kindref="member">init hint</ref> to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the init hint.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para>init_hints </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="1998" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c" bodystart="285" bodyend="305" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="1998" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1ga2402c7824ac0194c13722790ff9559ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetVersion</definition>
        <argsstring>(int *major, int *minor, int *rev)</argsstring>
        <name>glfwGetVersion</name>
        <param>
          <type>int *</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rev</declname>
        </param>
        <briefdescription>
<para>Retrieves the version of the GLFW library. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the major, minor and revision numbers of the GLFW library. It is intended for when you are using GLFW as a shared library and want to ensure that you are using the minimum required version.</para>
<para>Any or all of the version arguments may be <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">major</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the major version number, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">minor</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the minor version number, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rev</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the revision number, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors None.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_version" kindref="member">Version management</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gae5952184a0db36e24d1de7805b8b0945" kindref="member">glfwGetVersionString</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function retrieves the major, minor and revision numbers of the GLFW library. It is intended for when you are using GLFW as a shared library and want to ensure that you are using the minimum required version.</para>
<para>Any or all of the version arguments may be <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">major</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the major version number, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">minor</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the minor version number, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rev</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the revision number, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors None.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_version" kindref="member">Version management</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gae5952184a0db36e24d1de7805b8b0945" kindref="member">glfwGetVersionString</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2025" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c" bodystart="307" bodyend="315" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2025" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1gae5952184a0db36e24d1de7805b8b0945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char *</type>
        <definition>GLFWAPI const char * glfwGetVersionString</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetVersionString</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a string describing the compile-time configuration. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the compile-time generated <ref refid="intro_guide_1intro_version_string" kindref="member">version string</ref> of the GLFW library binary. It describes the version, platform, compiler and any platform-specific compile-time options. It should not be confused with the OpenGL or OpenGL ES version string, queried with <computeroutput>glGetString</computeroutput>.</para>
<para><bold>Do not use the version string</bold> to parse the GLFW library version. The <ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref> function provides the version of the running library binary in numerical format.</para>
<para><simplesect kind="return"><para>The ASCII encoded GLFW version string.</para>
</simplesect>
@errors None.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@pointer_lifetime The returned string is static and compile-time generated.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_version" kindref="member">Version management</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the compile-time generated <ref refid="intro_guide_1intro_version_string" kindref="member">version string</ref> of the GLFW library binary. It describes the version, platform, compiler and any platform-specific compile-time options. It should not be confused with the OpenGL or OpenGL ES version string, queried with <computeroutput>glGetString</computeroutput>.</para>
<para><bold>Do not use the version string</bold> to parse the GLFW library version. The <ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref> function provides the version of the running library binary in numerical format.</para>
<para><simplesect kind="return"><para>The ASCII encoded GLFW version string.</para>
</simplesect>
@errors None.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@pointer_lifetime The returned string is static and compile-time generated.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1intro_version" kindref="member">Version management</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2056" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c" bodystart="317" bodyend="320" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2056" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1gaee7bac4c7e1b2769207747c1b5ae2f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwGetError</definition>
        <argsstring>(const char **description)</argsstring>
        <name>glfwGetError</name>
        <param>
          <type>const char **</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Returns and clears the last error for the calling thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns and clears the <ref refid="group__errors" kindref="compound">error code</ref> of the last error that occurred on the calling thread, and optionally a UTF-8 encoded human-readable description of it. If no error has occurred since the last call, it returns <ref refid="group__errors_1gafa30deee5db4d69c4c93d116ed87dbf4" kindref="member">GLFW_NO_ERROR</ref> (zero) and the description pointer is set to <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">description</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the error description pointer, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The last error code for the calling thread, or <ref refid="group__errors_1gafa30deee5db4d69c4c93d116ed87dbf4" kindref="member">GLFW_NO_ERROR</ref> (zero).</para>
</simplesect>
@errors None.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is guaranteed to be valid only until the next error occurs or the library is terminated.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1error_handling" kindref="member">Error handling</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1ga746e2757d069eaea423349aca6ae097a" kindref="member">glfwSetErrorCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2087" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c" bodystart="322" bodyend="344" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2087" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1ga746e2757d069eaea423349aca6ae097a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" kindref="member">GLFWerrorfun</ref></type>
        <definition>GLFWAPI GLFWerrorfun glfwSetErrorCallback</definition>
        <argsstring>(GLFWerrorfun callback)</argsstring>
        <name>glfwSetErrorCallback</name>
        <param>
          <type><ref refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" kindref="member">GLFWerrorfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the error callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the error callback, which is called with an error code and a human-readable description each time a GLFW error occurs.</para>
<para>The error code is set before the callback is called. Calling <ref refid="group__init_1gaee7bac4c7e1b2769207747c1b5ae2f9e" kindref="member">glfwGetError</ref> from the error callback will return the same value as the error code argument.</para>
<para>The error callback is called on the thread where the error occurred. If you are using GLFW from multiple threads, your error callback needs to be written accordingly.</para>
<para>Because the description string may have been generated specifically for that error, it is not guaranteed to be valid after the callback has returned. If you wish to use it after the callback returns, you need to make a copy.</para>
<para>Once set, the error callback remains set even after the library has been terminated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>callback_name(int<sp/>error_code,<sp/>const<sp/>char*<sp/>description)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" kindref="member">callback pointer type</ref>.</para>
<para>@errors None.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1error_handling" kindref="member">Error handling</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gaee7bac4c7e1b2769207747c1b5ae2f9e" kindref="member">glfwGetError</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the error callback, which is called with an error code and a human-readable description each time a GLFW error occurs.</para>
<para>The error callback is called on the thread where the error occurred. If you are using GLFW from multiple threads, your error callback needs to be written accordingly.</para>
<para>Because the description string may have been generated specifically for that error, it is not guaranteed to be valid after the callback has returned. If you wish to use it after the callback returns, you need to make a copy.</para>
<para>Once set, the error callback remains set even after the library has been terminated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set.</para>
</simplesect>
@errors None.</para>
<para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="intro_guide_1error_handling" kindref="member">Error handling</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2133" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/init.c" bodystart="346" bodyend="350" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2133" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga8c78e5db186ee10d00c053faf81998af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> **</type>
        <definition>GLFWAPI GLFWmonitor ** glfwGetMonitors</definition>
        <argsstring>(int *count)</argsstring>
        <name>glfwGetMonitors</name>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the currently connected monitors. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns an array of handles for all currently connected monitors. The primary monitor is always first in the returned array. If no monitors were found, this function returns <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of monitors in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of monitor handles, or <computeroutput>NULL</computeroutput> if no monitors were found or if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is guaranteed to be valid only until the monitor configuration changes or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_monitors" kindref="member">Retrieving monitors</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="monitor_guide_1monitor_event" kindref="member">Monitor configuration changes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga34befff4f9f0fae09dd8de6fb0eb4f3e" kindref="member">glfwGetPrimaryMonitor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns an array of handles for all currently connected monitors. The primary monitor is always first in the returned array. If no monitors were found, this function returns <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of monitors in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of monitor handles, or <computeroutput>NULL</computeroutput> if no monitors were found or if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is guaranteed to be valid only until the monitor configuration changes or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_monitors" kindref="member">Retrieving monitors</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="monitor_guide_1monitor_event" kindref="member">Monitor configuration changes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga34befff4f9f0fae09dd8de6fb0eb4f3e" kindref="member">glfwGetPrimaryMonitor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2162" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="302" bodyend="312" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2162" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga34befff4f9f0fae09dd8de6fb0eb4f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
        <definition>GLFWAPI GLFWmonitor * glfwGetPrimaryMonitor</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetPrimaryMonitor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the primary monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the primary monitor. This is usually the monitor where elements like the task bar or global menu bar are located.</para>
<para><simplesect kind="return"><para>The primary monitor, or <computeroutput>NULL</computeroutput> if no monitors were found or if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="remark"><para>The primary monitor is always first in the array returned by <ref refid="group__monitor_1ga8c78e5db186ee10d00c053faf81998af" kindref="member">glfwGetMonitors</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="monitor_guide_1monitor_monitors" kindref="member">Retrieving monitors</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga8c78e5db186ee10d00c053faf81998af" kindref="member">glfwGetMonitors</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the primary monitor. This is usually the monitor where elements like the task bar or global menu bar are located.</para>
<para><simplesect kind="return"><para>The primary monitor, or <computeroutput>NULL</computeroutput> if no monitors were found or if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="remark"><para>The primary monitor is always first in the array returned by <ref refid="group__monitor_1ga8c78e5db186ee10d00c053faf81998af" kindref="member">glfwGetMonitors</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="monitor_guide_1monitor_monitors" kindref="member">Retrieving monitors</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga8c78e5db186ee10d00c053faf81998af" kindref="member">glfwGetMonitors</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2186" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="314" bodyend="322" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2186" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga45b5481a614ad7beb2aade9746d07563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetMonitorPos</definition>
        <argsstring>(GLFWmonitor *monitor, int *xpos, int *ypos)</argsstring>
        <name>glfwGetMonitorPos</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Returns the position of the monitor&apos;s viewport on the virtual screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the position, in screen coordinates, of the upper-left corner of the specified monitor.</para>
<para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor x-coordinate, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor y-coordinate, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_properties" kindref="member">Monitor properties</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2211" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="324" bodyend="337" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2211" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga5a3ac0f6e3786df47aabccfb5760b31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetMonitorWorkarea</definition>
        <argsstring>(GLFWmonitor *monitor, int *xpos, int *ypos, int *width, int *height)</argsstring>
        <name>glfwGetMonitorWorkarea</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ypos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Retrieves the work area of the monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the position, in screen coordinates, of the upper-left corner of the work area of the specified monitor along with the work area size in screen coordinates. The work area is defined as the area of the monitor not occluded by the operating system task bar where present. If no task bar exists then the work area is the monitor resolution in screen coordinates.</para>
<para>Any or all of the position and size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position and size arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor x-coordinate, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor y-coordinate, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor width, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor height, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_workarea" kindref="member">Work area</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2242" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="339" bodyend="358" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2242" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gad0e93a9e42b32394369cabbbdc1ab702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetMonitorPhysicalSize</definition>
        <argsstring>(GLFWmonitor *monitor, int *widthMM, int *heightMM)</argsstring>
        <name>glfwGetMonitorPhysicalSize</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>widthMM</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>heightMM</declname>
        </param>
        <briefdescription>
<para>Returns the physical size of the monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the size, in millimetres, of the display area of the specified monitor.</para>
<para>Some systems do not provide accurate monitor size information, either because the monitor <ulink url="https://en.wikipedia.org/wiki/Extended_display_identification_data">EDID</ulink> data is incorrect or because the driver does not report it accurately.</para>
<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">widthMM</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in millimetres, of the monitor&apos;s display area, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">heightMM</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in millimetres, of the monitor&apos;s display area, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para><simplesect kind="remark"><para>@win32 calculates the returned physical size from the current resolution and system DPI instead of querying the monitor EDID data.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_properties" kindref="member">Monitor properties</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2276" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="360" bodyend="376" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2276" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetMonitorContentScale</definition>
        <argsstring>(GLFWmonitor *monitor, float *xscale, float *yscale)</argsstring>
        <name>glfwGetMonitorContentScale</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xscale</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>yscale</declname>
        </param>
        <briefdescription>
<para>Retrieves the content scale for the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the content scale for the specified monitor. The content scale is the ratio between the current DPI and the platform&apos;s default DPI. This is especially important for text and any UI elements. If the pixel dimensions of your UI scaled by this look appropriate on your machine then it should appear at a reasonable size on other machines regardless of their DPI and scaling settings. This relies on the system DPI and scaling settings being somewhat correct.</para>
<para>The content scale may depend on both the monitor resolution and pixel density and on user settings. It may be very different from the raw DPI calculated from the physical size and current resolution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xscale</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the x-axis content scale, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">yscale</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the y-axis content scale, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_scale" kindref="member">Content scale</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee" kindref="member">glfwGetWindowContentScale</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2308" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="378" bodyend="391" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2308" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga6d0ee079c807cd123b56dc3fc01e8fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char *</type>
        <definition>GLFWAPI const char * glfwGetMonitorName</definition>
        <argsstring>(GLFWmonitor *monitor)</argsstring>
        <name>glfwGetMonitorName</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
<para>Returns the name of the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns a human-readable name, encoded as UTF-8, of the specified monitor. The name typically reflects the make and model of the monitor and is not guaranteed to be unique among the connected monitors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded name of the monitor, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_properties" kindref="member">Monitor properties</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2334" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="393" bodyend="400" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2334" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga6d89c74c1c293f0ab78a00c3c6d1ae44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetMonitorUserPointer</definition>
        <argsstring>(GLFWmonitor *monitor, void *pointer)</argsstring>
        <name>glfwSetMonitorUserPointer</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Sets the user pointer of the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the user-defined pointer of the specified monitor. The current value is retained until the monitor is disconnected. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para>This function may be called from the monitor callback, even for a monitor that is being disconnected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose pointer to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_userptr" kindref="member">User pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga13cb11e8f507dbc477e10a040f0fad7f" kindref="member">glfwGetMonitorUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2360" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="402" bodyend="409" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2360" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga13cb11e8f507dbc477e10a040f0fad7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void *</type>
        <definition>GLFWAPI void * glfwGetMonitorUserPointer</definition>
        <argsstring>(GLFWmonitor *monitor)</argsstring>
        <name>glfwGetMonitorUserPointer</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
<para>Returns the user pointer of the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the current value of the user-defined pointer of the specified monitor. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para>This function may be called from the monitor callback, even for a monitor that is being disconnected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose pointer to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_userptr" kindref="member">User pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga6d89c74c1c293f0ab78a00c3c6d1ae44" kindref="member">glfwSetMonitorUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2384" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="411" bodyend="418" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2384" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" kindref="member">GLFWmonitorfun</ref></type>
        <definition>GLFWAPI GLFWmonitorfun glfwSetMonitorCallback</definition>
        <argsstring>(GLFWmonitorfun callback)</argsstring>
        <name>glfwSetMonitorCallback</name>
        <param>
          <type><ref refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" kindref="member">GLFWmonitorfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the monitor configuration callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the monitor configuration callback, or removes the currently set callback. This is called when a monitor is connected to or disconnected from the system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWmonitor*<sp/>monitor,<sp/>int<sp/>event)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_event" kindref="member">Monitor configuration changes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the monitor configuration callback, or removes the currently set callback. This is called when a monitor is connected to or disconnected from the system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_event" kindref="member">Monitor configuration changes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2414" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="420" bodyend="425" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2414" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga7eaea6132f15e9b5d47eb94f88547f79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const <ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref> *</type>
        <definition>GLFWAPI const GLFWvidmode * glfwGetVideoModes</definition>
        <argsstring>(GLFWmonitor *monitor, int *count)</argsstring>
        <name>glfwGetVideoModes</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the available video modes for the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns an array of all video modes supported by the specified monitor. The returned array is sorted in ascending order, first by color bit depth (the sum of all channel depths) and then by resolution area (the product of width and height).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of video modes in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of video modes, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected, this function is called again for that monitor or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_modes" kindref="member">Video modes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e" kindref="member">glfwGetVideoMode</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Changed to return an array of modes for a specific monitor.</para>
</simplesect>
This function returns an array of all video modes supported by the specified monitor. The returned array is sorted in ascending order, first by color bit depth (the sum of all channel depths) and then by resolution area (the product of width and height).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of video modes in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of video modes, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected, this function is called again for that monitor or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_modes" kindref="member">Video modes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e" kindref="member">glfwGetVideoMode</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Changed to return an array of modes for a specific monitor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2447" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="427" bodyend="442" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2447" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const <ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref> *</type>
        <definition>GLFWAPI const GLFWvidmode * glfwGetVideoMode</definition>
        <argsstring>(GLFWmonitor *monitor)</argsstring>
        <name>glfwGetVideoMode</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
<para>Returns the current mode of the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the current video mode of the specified monitor. If you have created a full screen window for that monitor, the return value will depend on whether that window is iconified.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current mode of the monitor, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_modes" kindref="member">Video modes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga7eaea6132f15e9b5d47eb94f88547f79" kindref="member">glfwGetVideoModes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetDesktopMode</computeroutput>.</para>
</simplesect>
This function returns the current video mode of the specified monitor. If you have created a full screen window for that monitor, the return value will depend on whether that window is iconified.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current mode of the monitor, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_modes" kindref="member">Video modes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga7eaea6132f15e9b5d47eb94f88547f79" kindref="member">glfwGetVideoModes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetDesktopMode</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2475" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="444" bodyend="453" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2475" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga3e4ab484476c935b4cd0bf49a5c429d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetGamma</definition>
        <argsstring>(GLFWmonitor *monitor, float gamma)</argsstring>
        <name>glfwSetGamma</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Generates a gamma ramp and sets it for the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function generates an appropriately sized gamma ramp from the specified exponent and then calls <ref refid="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" kindref="member">glfwSetGammaRamp</ref> with it. The value must be a finite number greater than zero.</para>
<para>The software controlled gamma ramp is applied <emphasis>in addition</emphasis> to the hardware gamma correction, which today is usually an approximation of sRGB gamma. This means that setting a perfectly linear ramp, or gamma 1.0, will produce the default (usually sRGB-like) behavior.</para>
<para>For gamma correct rendering with OpenGL or OpenGL ES, see the <ref refid="window_guide_1GLFW_SRGB_CAPABLE" kindref="member">GLFW_SRGB_CAPABLE</ref> hint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose gamma ramp to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired exponent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@wayland Gamma handling is a privileged protocol, this function will thus never be implemented and emits <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_gamma" kindref="member">Gamma ramp</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function generates a 256-element gamma ramp from the specified exponent and then calls <ref refid="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" kindref="member">glfwSetGammaRamp</ref> with it. The value must be a finite number greater than zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose gamma ramp to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired exponent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_gamma" kindref="member">Gamma ramp</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2508" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="455" bodyend="500" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2508" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gafe7b41852c1a14fe978f0e5381969885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const <ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref> *</type>
        <definition>GLFWAPI const GLFWgammaramp * glfwGetGammaRamp</definition>
        <argsstring>(GLFWmonitor *monitor)</argsstring>
        <name>glfwGetGammaRamp</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
<para>Returns the current gamma ramp for the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the current gamma ramp of the specified monitor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current gamma ramp, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@wayland Gamma handling is a privileged protocol, this function will thus never be implemented and emits <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> while returning <computeroutput>NULL</computeroutput>.</para>
</simplesect>
@pointer_lifetime The returned structure and its arrays are allocated and freed by GLFW. You should not free them yourself. They are valid until the specified monitor is disconnected, this function is called again for that monitor or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_gamma" kindref="member">Gamma ramp</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the current gamma ramp of the specified monitor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current gamma ramp, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned structure and its arrays are allocated and freed by GLFW. You should not free them yourself. They are valid until the specified monitor is disconnected, this function is called again for that monitor or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_gamma" kindref="member">Gamma ramp</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2538" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="502" bodyend="514" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2538" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetGammaRamp</definition>
        <argsstring>(GLFWmonitor *monitor, const GLFWgammaramp *ramp)</argsstring>
        <name>glfwSetGammaRamp</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref> *</type>
          <declname>ramp</declname>
        </param>
        <briefdescription>
<para>Sets the current gamma ramp for the specified monitor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the current gamma ramp for the specified monitor. The original gamma ramp for that monitor is saved by GLFW the first time this function is called and is restored by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para>
<para>The software controlled gamma ramp is applied <emphasis>in addition</emphasis> to the hardware gamma correction, which today is usually an approximation of sRGB gamma. This means that setting a perfectly linear ramp, or gamma 1.0, will produce the default (usually sRGB-like) behavior.</para>
<para>For gamma correct rendering with OpenGL or OpenGL ES, see the <ref refid="window_guide_1GLFW_SRGB_CAPABLE" kindref="member">GLFW_SRGB_CAPABLE</ref> hint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose gamma ramp to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ramp</parametername>
</parameternamelist>
<parameterdescription>
<para>The gamma ramp to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>The size of the specified gamma ramp should match the size of the current ramp for that monitor.</para>
</simplesect>
<simplesect kind="remark"><para>@win32 The gamma ramp size must be 256.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland Gamma handling is a privileged protocol, this function will thus never be implemented and emits <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
</simplesect>
@pointer_lifetime The specified gamma ramp is copied before this function returns.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_gamma" kindref="member">Gamma ramp</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the current gamma ramp for the specified monitor. The original gamma ramp for that monitor is saved by GLFW the first time this function is called and is restored by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose gamma ramp to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ramp</parametername>
</parameternamelist>
<parameterdescription>
<para>The gamma ramp to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>Gamma ramp sizes other than 256 are not supported by all platforms or graphics hardware.</para>
</simplesect>
<simplesect kind="remark"><para>@win32 The gamma ramp size must be 256.</para>
</simplesect>
@pointer_lifetime The specified gamma ramp is copied before this function returns.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="monitor_guide_1monitor_gamma" kindref="member">Gamma ramp</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2579" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/monitor.c" bodystart="516" bodyend="543" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2579" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwDefaultWindowHints</definition>
        <argsstring>(void)</argsstring>
        <name>glfwDefaultWindowHints</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Resets all window hints to their default values. </para>
        </briefdescription>
        <detaileddescription>
<para>This function resets all window hints to their <ref refid="window_guide_1window_hints_values" kindref="member">default values</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hints" kindref="member">Window creation hints</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga3c2270562d7ba13d92680ba1090adafe" kindref="member">glfwWindowHintString</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function resets all window hints to their <ref refid="window_guide_1window_hints_values" kindref="member">default values</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hints" kindref="member">Window creation hints</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2598" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="253" bodyend="290" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2598" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga69c40728499720bef8a49aa925ea0efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwWindowHint</definition>
        <argsstring>(int hint, int value)</argsstring>
        <name>glfwWindowHint</name>
        <param>
          <type>int</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the specified window hint to the desired value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets hints for the next call to <ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>. The hints, once set, retain their values until changed by a call to this function or <ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref>, or until the library is terminated.</para>
<para>Only integer value hints can be set with this function. String value hints are set with <ref refid="group__window_1ga3c2270562d7ba13d92680ba1090adafe" kindref="member">glfwWindowHintString</ref>.</para>
<para>This function does not check whether the specified hint values are valid. If you set hints to invalid values this will instead be reported by the next call to <ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>.</para>
<para>Some hints are platform specific. These may be set on any platform but they will only affect their specific platform. Other platforms will ignore them. Setting these hints requires no platform specific headers or functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="window_guide_1window_hints" kindref="member">window hint</ref> to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the window hint.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hints" kindref="member">Window creation hints</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga3c2270562d7ba13d92680ba1090adafe" kindref="member">glfwWindowHintString</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwOpenWindowHint</computeroutput>.</para>
</simplesect>
This function sets hints for the next call to <ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>. The hints, once set, retain their values until changed by a call to <ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref> or <ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref>, or until the library is terminated.</para>
<para>This function does not check whether the specified hint values are valid. If you set hints to invalid values this will instead be reported by the next call to <ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="window_guide_1window_hints" kindref="member">window hint</ref> to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the window hint.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hints" kindref="member">Window creation hints</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwOpenWindowHint</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2633" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="292" bodyend="424" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2633" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga3c2270562d7ba13d92680ba1090adafe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwWindowHintString</definition>
        <argsstring>(int hint, const char *value)</argsstring>
        <name>glfwWindowHintString</name>
        <param>
          <type>int</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the specified window hint to the desired value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets hints for the next call to <ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>. The hints, once set, retain their values until changed by a call to this function or <ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref>, or until the library is terminated.</para>
<para>Only string type hints can be set with this function. Integer value hints are set with <ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>.</para>
<para>This function does not check whether the specified hint values are valid. If you set hints to invalid values this will instead be reported by the next call to <ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>.</para>
<para>Some hints are platform specific. These may be set on any platform but they will only affect their specific platform. Other platforms will ignore them. Setting these hints requires no platform specific headers or functions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="window_guide_1window_hints" kindref="member">window hint</ref> to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the window hint.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@pointer_lifetime The specified string is copied before this function returns.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hints" kindref="member">Window creation hints</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2671" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="426" bodyend="449" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2671" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
        <definition>GLFWAPI GLFWwindow * glfwCreateWindow</definition>
        <argsstring>(int width, int height, const char *title, GLFWmonitor *monitor, GLFWwindow *share)</argsstring>
        <name>glfwCreateWindow</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Creates a window and its associated context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates a window and its associated OpenGL or OpenGL ES context. Most of the options controlling how the window and its context should be created are specified with <ref refid="window_guide_1window_hints" kindref="member">window hints</ref>.</para>
<para>Successful creation does not change which context is current. Before you can use the newly created context, you need to <ref refid="context_guide_1context_current" kindref="member">make it current</ref>. For information about the <computeroutput>share</computeroutput> parameter, see <ref refid="context_guide_1context_sharing" kindref="member">Context object sharing</ref>.</para>
<para>The created window, framebuffer and context may differ from what you requested, as not all parameters and hints are <ref refid="window_guide_1window_hints_hard" kindref="member">hard constraints</ref>. This includes the size of the window, especially for full screen windows. To query the actual attributes of the created window, framebuffer and context, see <ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>, <ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref> and <ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>.</para>
<para>To create a full screen window, you need to specify the monitor the window will cover. If no monitor is specified, the window will be windowed mode. Unless you have a way for the user to choose a specific monitor, it is recommended that you pick the primary monitor. For more information on how to query connected monitors, see <ref refid="monitor_guide_1monitor_monitors" kindref="member">Retrieving monitors</ref>.</para>
<para>For full screen windows, the specified size becomes the resolution of the window&apos;s <emphasis>desired video mode</emphasis>. As long as a full screen window is not iconified, the supported video mode most closely matching the desired video mode is set for the specified monitor. For more information about full screen windows, including the creation of so called <emphasis>windowed full screen</emphasis> or <emphasis>borderless full screen</emphasis> windows, see <ref refid="window_guide_1window_windowed_full_screen" kindref="member">&quot;Windowed full screen&quot; windows</ref>.</para>
<para>Once you have created the window, you can switch it between windowed and full screen mode with <ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref>. This will not affect its OpenGL or OpenGL ES context.</para>
<para>By default, newly created windows use the placement recommended by the window system. To create the window at a specific position, make it initially invisible using the <ref refid="window_guide_1GLFW_VISIBLE_hint" kindref="member">GLFW_VISIBLE</ref> window hint, set its <ref refid="window_guide_1window_pos" kindref="member">position</ref> and then <ref refid="window_guide_1window_hide" kindref="member">show</ref> it.</para>
<para>As long as at least one full screen window is not iconified, the screensaver is prohibited from starting.</para>
<para>Window systems put limits on window sizes. Very large or very small window dimensions may be overridden by the window system on creation. Check the actual <ref refid="window_guide_1window_size" kindref="member">size</ref> after creation.</para>
<para>The <ref refid="window_guide_1buffer_swap" kindref="member">swap interval</ref> is not set during window creation and the initial value may vary depending on driver settings and defaults.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width, in screen coordinates, of the window. This must be greater than zero. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height, in screen coordinates, of the window. This must be greater than zero. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">title</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial, UTF-8 encoded window title. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to use for full screen mode, or <computeroutput>NULL</computeroutput> for windowed mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">share</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose context to share resources with, or <computeroutput>NULL</computeroutput> to not share resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handle of the created window, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>, <ref refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" kindref="member">GLFW_API_UNAVAILABLE</ref>, <ref refid="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" kindref="member">GLFW_VERSION_UNAVAILABLE</ref>, <ref refid="group__errors_1ga196e125ef261d94184e2b55c05762f14" kindref="member">GLFW_FORMAT_UNAVAILABLE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@win32 Window creation will fail if the Microsoft GDI software OpenGL implementation is the only one available.</para>
</simplesect>
<simplesect kind="remark"><para>@win32 If the executable has an icon resource named <computeroutput>GLFW_ICON,</computeroutput> it will be set as the initial icon for the window. If no such icon is present, the <computeroutput>IDI_APPLICATION</computeroutput> icon will be used instead. To set a different icon, see <ref refid="group__window_1ga182987a1a62a41a924842b9473d560df" kindref="member">glfwSetWindowIcon</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>@win32 The context to share resources with must not be current on any other thread.</para>
</simplesect>
<simplesect kind="remark"><para>@macos The OS only supports core profile contexts for OpenGL versions 3.2 and later. Before creating an OpenGL context of version 3.2 or later you must set the <ref refid="window_guide_1GLFW_OPENGL_PROFILE_hint" kindref="member">GLFW_OPENGL_PROFILE</ref> hint accordingly. OpenGL 3.0 and 3.1 contexts are not supported at all on macOS.</para>
</simplesect>
<simplesect kind="remark"><para>@macos The GLFW window has no icon, as it is not a document window, but the dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <ulink url="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</ulink> in the Mac Developer Library.</para>
</simplesect>
<simplesect kind="remark"><para>@macos On OS X 10.10 and later the window frame will not be rendered at full resolution on Retina displays unless the <ref refid="window_guide_1GLFW_COCOA_RETINA_FRAMEBUFFER_hint" kindref="member">GLFW_COCOA_RETINA_FRAMEBUFFER</ref> hint is <computeroutput>GLFW_TRUE</computeroutput> and the <computeroutput>NSHighResolutionCapable</computeroutput> key is enabled in the application bundle&apos;s <computeroutput>Info.plist</computeroutput>. For more information, see <ulink url="https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Explained/Explained.html">High Resolution Guidelines for OS X</ulink> in the Mac Developer Library. The GLFW test and example programs use a custom <computeroutput>Info.plist</computeroutput> template for this, which can be found as <computeroutput>CMake/Info.plist.in</computeroutput> in the source tree.</para>
</simplesect>
<simplesect kind="remark"><para>@macos When activating frame autosaving with <ref refid="window_guide_1GLFW_COCOA_FRAME_NAME_hint" kindref="member">GLFW_COCOA_FRAME_NAME</ref>, the specified window size and position may be overridden by previously saved values.</para>
</simplesect>
<simplesect kind="remark"><para>@x11 Some window managers will not respect the placement of initially hidden windows.</para>
</simplesect>
<simplesect kind="remark"><para>@x11 Due to the asynchronous nature of X11, it may take a moment for a window to reach its requested state. This means you may not be able to query the final size, position or other attributes directly after window creation.</para>
</simplesect>
<simplesect kind="remark"><para>@x11 The class part of the <computeroutput>WM_CLASS</computeroutput> window property will by default be set to the window title passed to this function. The instance part will use the contents of the <computeroutput>RESOURCE_NAME</computeroutput> environment variable, if present and not empty, or fall back to the window title. Set the <ref refid="window_guide_1GLFW_X11_CLASS_NAME_hint" kindref="member">GLFW_X11_CLASS_NAME</ref> and <ref refid="window_guide_1GLFW_X11_INSTANCE_NAME_hint" kindref="member">GLFW_X11_INSTANCE_NAME</ref> window hints to override this.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland Compositors should implement the xdg-decoration protocol for GLFW to decorate the window properly. If this protocol isn&apos;t supported, or if the compositor prefers client-side decorations, a very simple fallback frame will be drawn using the wp_viewporter protocol. A compositor can still emit close, maximize or fullscreen events, using for instance a keybind mechanism. If neither of these protocols is supported, the window won&apos;t be decorated.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland A full screen window will not attempt to change the mode, no matter what the requested size or refresh rate.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland Screensaver inhibition requires the idle-inhibit protocol to be implemented in the user&apos;s compositor.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_creation" kindref="member">Window creation</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwOpenWindow</computeroutput>.</para>
</simplesect>
This function creates a window and its associated OpenGL or OpenGL ES context. Most of the options controlling how the window and its context should be created are specified with <ref refid="window_guide_1window_hints" kindref="member">window hints</ref>.</para>
<para>Successful creation does not change which context is current. Before you can use the newly created context, you need to <ref refid="context_guide_1context_current" kindref="member">make it current</ref>. For information about the <computeroutput>share</computeroutput> parameter, see <ref refid="context_guide_1context_sharing" kindref="member">Context object sharing</ref>.</para>
<para>The created window, framebuffer and context may differ from what you requested, as not all parameters and hints are <ref refid="window_guide_1window_hints_hard" kindref="member">hard constraints</ref>. This includes the size of the window, especially for full screen windows. To query the actual attributes of the created window, framebuffer and context, see <ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>, <ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref> and <ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>.</para>
<para>To create a full screen window, you need to specify the monitor the window will cover. If no monitor is specified, the window will be windowed mode. Unless you have a way for the user to choose a specific monitor, it is recommended that you pick the primary monitor. For more information on how to query connected monitors, see <ref refid="monitor_guide_1monitor_monitors" kindref="member">Retrieving monitors</ref>.</para>
<para>For full screen windows, the specified size becomes the resolution of the window&apos;s <emphasis>desired video mode</emphasis>. As long as a full screen window is not iconified, the supported video mode most closely matching the desired video mode is set for the specified monitor. For more information about full screen windows, including the creation of so called <emphasis>windowed full screen</emphasis> or <emphasis>borderless full screen</emphasis> windows, see <ref refid="window_guide_1window_windowed_full_screen" kindref="member">&quot;Windowed full screen&quot; windows</ref>.</para>
<para>By default, newly created windows use the placement recommended by the window system. To create the window at a specific position, make it initially invisible using the <ref refid="window_guide_1window_hints_wnd" kindref="member">GLFW_VISIBLE</ref> window hint, set its <ref refid="window_guide_1window_pos" kindref="member">position</ref> and then <ref refid="window_guide_1window_hide" kindref="member">show</ref> it.</para>
<para>As long as at least one full screen window is not iconified, the screensaver is prohibited from starting.</para>
<para>Window systems put limits on window sizes. Very large or very small window dimensions may be overridden by the window system on creation. Check the actual <ref refid="window_guide_1window_size" kindref="member">size</ref> after creation.</para>
<para>The <ref refid="window_guide_1buffer_swap" kindref="member">swap interval</ref> is not set during window creation and the initial value may vary depending on driver settings and defaults.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width, in screen coordinates, of the window. This must be greater than zero. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height, in screen coordinates, of the window. This must be greater than zero. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">title</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial, UTF-8 encoded window title. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to use for full screen mode, or <computeroutput>NULL</computeroutput> for windowed mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">share</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose context to share resources with, or <computeroutput>NULL</computeroutput> to not share resources. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handle of the created window, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>, <ref refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" kindref="member">GLFW_API_UNAVAILABLE</ref>, <ref refid="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" kindref="member">GLFW_VERSION_UNAVAILABLE</ref>, <ref refid="group__errors_1ga196e125ef261d94184e2b55c05762f14" kindref="member">GLFW_FORMAT_UNAVAILABLE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@win32 Window creation will fail if the Microsoft GDI software OpenGL implementation is the only one available.</para>
</simplesect>
<simplesect kind="remark"><para>@win32 If the executable has an icon resource named <computeroutput>GLFW_ICON,</computeroutput> it will be set as the icon for the window. If no such icon is present, the <computeroutput>IDI_WINLOGO</computeroutput> icon will be used instead.</para>
</simplesect>
<simplesect kind="remark"><para>@win32 The context to share resources with must not be current on any other thread.</para>
</simplesect>
<simplesect kind="remark"><para>@osx The GLFW window has no icon, as it is not a document window, but the dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <ulink url="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</ulink> in the Mac Developer Library.</para>
</simplesect>
<simplesect kind="remark"><para>@osx The first time a window is created the menu bar is populated with common commands like Hide, Quit and About. The About entry opens a minimal about dialog with information from the application&apos;s bundle. The menu bar can be disabled with a compile-time option.</para>
</simplesect>
<simplesect kind="remark"><para>@osx On OS X 10.10 and later the window frame will not be rendered at full resolution on Retina displays unless the <computeroutput>NSHighResolutionCapable</computeroutput> key is enabled in the application bundle&apos;s <computeroutput>Info.plist</computeroutput>. For more information, see <ulink url="https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Explained/Explained.html">High Resolution Guidelines for OS X</ulink> in the Mac Developer Library. The GLFW test and example programs use a custom <computeroutput>Info.plist</computeroutput> template for this, which can be found as <computeroutput>CMake/MacOSXBundleInfo.plist.in</computeroutput> in the source tree.</para>
</simplesect>
<simplesect kind="remark"><para>@x11 There is no mechanism for setting the window icon yet.</para>
</simplesect>
<simplesect kind="remark"><para>@x11 Some window managers will not respect the placement of initially hidden windows.</para>
</simplesect>
<simplesect kind="remark"><para>@x11 Due to the asynchronous nature of X11, it may take a moment for a window to reach its requested state. This means you may not be able to query the final size, position or other attributes directly after window creation.</para>
</simplesect>
@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_creation" kindref="member">Window creation</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwOpenWindow</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2817" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="152" bodyend="251" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2817" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga806747476b7247d292be3711c323ea10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwDestroyWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwDestroyWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Destroys the specified window and its context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function destroys the specified window and its context. On calling this function, no further callbacks will be called for that window.</para>
<para>If the context of the specified window is current on the main thread, it is detached before being destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="note"><para>The context of the specified window must not be current on any other thread when this function is called.</para>
</simplesect>
@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_creation" kindref="member">Window creation</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwCloseWindow</computeroutput>.</para>
</simplesect>
This function destroys the specified window and its context. On calling this function, no further callbacks will be called for that window.</para>
<para>If the context of the specified window is current on the main thread, it is detached before being destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="note"><para>The context of the specified window must not be current on any other thread when this function is called.</para>
</simplesect>
@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_creation" kindref="member">Window creation</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwCloseWindow</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2846" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="451" bodyend="482" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2846" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaa6162f67dfa38b8beda2fea623649332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwWindowShouldClose</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwWindowShouldClose</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Checks the close flag of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the value of the close flag of the specified window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the close flag.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_close" kindref="member">Window closing and close flag</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2866" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="484" bodyend="491" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2866" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowShouldClose</definition>
        <argsstring>(GLFWwindow *window, int value)</argsstring>
        <name>glfwSetWindowShouldClose</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the close flag of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the value of the close flag of the specified window. This can be used to override the user&apos;s attempt to close the window, or to signal that it should be closed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose flag to change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_close" kindref="member">Window closing and close flag</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2888" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="493" bodyend="500" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2888" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga861ed3414ab8120e2f74151a666ed1dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowTitle</definition>
        <argsstring>(GLFWwindow *window, const char *title)</argsstring>
        <name>glfwSetWindowTitle</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Sets the title of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the window title, encoded as UTF-8, of the specified window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose title to change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">title</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-8 encoded window title.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@macos The window title will not be updated until the next time you process events.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_title" kindref="member">Window title</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</simplesect>
This function sets the window title, encoded as UTF-8, of the specified window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose title to change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">title</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-8 encoded window title.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@osx The window title will not be updated until the next time you process events.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_title" kindref="member">Window title</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2913" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="502" bodyend="510" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2913" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga182987a1a62a41a924842b9473d560df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowIcon</definition>
        <argsstring>(GLFWwindow *window, int count, const GLFWimage *images)</argsstring>
        <name>glfwSetWindowIcon</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref> *</type>
          <declname>images</declname>
        </param>
        <briefdescription>
<para>Sets the icon for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the icon of the specified window. If passed an array of candidate images, those of or closest to the sizes desired by the system are selected. If no images are specified, the window reverts to its default icon.</para>
<para>The pixels are 32-bit, little-endian, non-premultiplied RGBA, i.e. eight bits per channel with the red channel first. They are arranged canonically as packed sequential rows, starting from the top-left corner.</para>
<para>The desired image sizes varies depending on platform and system settings. The selected images will be rescaled as needed. Good sizes include 16x16, 32x32 and 48x48.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose icon to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of images in the specified array, or zero to revert to the default window icon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">images</parametername>
</parameternamelist>
<parameterdescription>
<para>The images to create the icon from. This is ignored if count is zero.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> and <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref> (see remarks).</para>
<para>@pointer_lifetime The specified image data is copied before this function returns.</para>
<para><simplesect kind="remark"><para>@macos Regular windows do not have icons on macOS. This function will emit <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>. The dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <ulink url="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</ulink> in the Mac Developer Library.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland There is no existing protocol to change an icon, the window will thus inherit the one defined in the application&apos;s desktop file. This function will emit <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_icon" kindref="member">Window icon</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function sets the icon of the specified window. If passed an array of candidate images, those of or closest to the sizes desired by the system are selected. If no images are specified, the window reverts to its default icon.</para>
<para>The desired image sizes varies depending on platform and system settings. The selected images will be rescaled as needed. Good sizes include 16x16, 32x32 and 48x48.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose icon to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of images in the specified array, or zero to revert to the default window icon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">images</parametername>
</parameternamelist>
<parameterdescription>
<para>The images to create the icon from. This is ignored if count is zero.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The specified image data is copied before this function returns.</para>
<para><simplesect kind="remark"><para>@osx The GLFW window has no icon, as it is not a document window, but the dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <ulink url="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</ulink> in the Mac Developer Library.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_icon" kindref="member">Window icon</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2960" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="512" bodyend="522" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2960" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga0076a8591ef7494d359730cf2250b45b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetWindowPos</definition>
        <argsstring>(GLFWwindow *window, int *xpos, int *ypos)</argsstring>
        <name>glfwGetWindowPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Retrieves the position of the content area of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the position of the client area of the specified window.</para>
<para>This function retrieves the position, in screen coordinates, of the upper-left corner of the content area of the specified window.</para>
<para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the x-coordinate of the upper-left corner of the content area, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the y-coordinate of the upper-left corner of the content area, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> and <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref> (see remarks).</para>
<para><simplesect kind="remark"><para>@wayland There is no way for an application to retrieve the global position of its windows. This function will emit <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_pos" kindref="member">Window position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function retrieves the position, in screen coordinates, of the upper-left corner of the client area of the specified window.</para>
<para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the x-coordinate of the upper-left corner of the client area, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the y-coordinate of the upper-left corner of the client area, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_pos" kindref="member">Window position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="2992" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="524" bodyend="536" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="2992" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowPos</definition>
        <argsstring>(GLFWwindow *window, int xpos, int ypos)</argsstring>
        <name>glfwSetWindowPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Sets the position of the content area of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the position of the client area of the specified window.</para>
<para>This function sets the position, in screen coordinates, of the upper-left corner of the content area of the specified windowed mode window. If the window is a full screen window, this function does nothing.</para>
<para><bold>Do not use this function</bold> to move an already visible window unless you have very good reasons for doing so, as it will confuse and annoy the user.</para>
<para>The window manager may put limits on what positions are allowed. GLFW cannot and should not override these limits.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the upper-left corner of the content area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the upper-left corner of the content area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> and <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref> (see remarks).</para>
<para><simplesect kind="remark"><para>@wayland There is no way for an application to set the global position of its windows. This function will emit <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_pos" kindref="member">Window position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</simplesect>
This function sets the position, in screen coordinates, of the upper-left corner of the client area of the specified windowed mode window. If the window is a full screen window, this function does nothing.</para>
<para><bold>Do not use this function</bold> to move an already visible window unless you have very good reasons for doing so, as it will confuse and annoy the user.</para>
<para>The window manager may put limits on what positions are allowed. GLFW cannot and should not override these limits.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the upper-left corner of the client area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the upper-left corner of the client area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_pos" kindref="member">Window position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3027" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="538" bodyend="549" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3027" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetWindowSize</definition>
        <argsstring>(GLFWwindow *window, int *width, int *height)</argsstring>
        <name>glfwGetWindowSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Retrieves the size of the content area of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the size of the client area of the specified window.</para>
<para>This function retrieves the size, in screen coordinates, of the content area of the specified window. If you wish to retrieve the size of the framebuffer of the window in pixels, see <ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>.</para>
<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose size to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in screen coordinates, of the content area, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in screen coordinates, of the content area, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</simplesect>
This function retrieves the size, in screen coordinates, of the client area of the specified window. If you wish to retrieve the size of the framebuffer of the window in pixels, see <ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>.</para>
<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose size to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in screen coordinates, of the client area, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in screen coordinates, of the client area, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3057" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="551" bodyend="563" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3057" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga8af814fc98d786d1de2505b40b707de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowSizeLimits</definition>
        <argsstring>(GLFWwindow *window, int minwidth, int minheight, int maxwidth, int maxheight)</argsstring>
        <name>glfwSetWindowSizeLimits</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minwidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minheight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxwidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxheight</declname>
        </param>
        <briefdescription>
<para>Sets the size limits of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the size limits of the content area of the specified window. If the window is full screen, the size limits only take effect once it is made windowed. If the window is not resizable, this function does nothing.</para>
<para>The size limits are applied immediately to a windowed mode window and may cause it to be resized.</para>
<para>The maximum dimensions must be greater than or equal to the minimum dimensions and all must be greater than or equal to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set limits for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">minwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum width, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">minheight</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum height, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum width, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxheight</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum height, in screen coordinates, of the content area, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>If you set size limits and an aspect ratio that conflict, the results are undefined.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland The size limits will not be applied until the window is actually resized, either by the user or by the compositor.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_sizelimits" kindref="member">Window size limits</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac" kindref="member">glfwSetWindowAspectRatio</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function sets the size limits of the client area of the specified window. If the window is full screen, the size limits only take effect if once it is made windowed. If the window is not resizable, this function does nothing.</para>
<para>The size limits are applied immediately to a windowed mode window and may cause it to be resized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set limits for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">minwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum width, in screen coordinates, of the client area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">minheight</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum height, in screen coordinates, of the client area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum width, in screen coordinates, of the client area, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxheight</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum height, in screen coordinates, of the client area, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>If you set size limits and an aspect ratio that conflict, the results are undefined.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_sizelimits" kindref="member">Window size limits</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac" kindref="member">glfwSetWindowAspectRatio</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3100" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="580" bodyend="623" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3100" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowAspectRatio</definition>
        <argsstring>(GLFWwindow *window, int numer, int denom)</argsstring>
        <name>glfwSetWindowAspectRatio</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>denom</declname>
        </param>
        <briefdescription>
<para>Sets the aspect ratio of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the required aspect ratio of the content area of the specified window. If the window is full screen, the aspect ratio only takes effect once it is made windowed. If the window is not resizable, this function does nothing.</para>
<para>The aspect ratio is specified as a numerator and a denominator and both values must be greater than zero. For example, the common 16:9 aspect ratio is specified as 16 and 9, respectively.</para>
<para>If the numerator and denominator is set to <computeroutput>GLFW_DONT_CARE</computeroutput> then the aspect ratio limit is disabled.</para>
<para>The aspect ratio is applied immediately to a windowed mode window and may cause it to be resized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set limits for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numer</parametername>
</parameternamelist>
<parameterdescription>
<para>The numerator of the desired aspect ratio, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">denom</parametername>
</parameternamelist>
<parameterdescription>
<para>The denominator of the desired aspect ratio, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>If you set size limits and an aspect ratio that conflict, the results are undefined.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland The aspect ratio will not be applied until the window is actually resized, either by the user or by the compositor.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_sizelimits" kindref="member">Window size limits</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga8af814fc98d786d1de2505b40b707de8" kindref="member">glfwSetWindowSizeLimits</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function sets the required aspect ratio of the client area of the specified window. If the window is full screen, the aspect ratio only takes effect once it is made windowed. If the window is not resizable, this function does nothing.</para>
<para>The aspect ratio is specified as a numerator and a denominator and both values must be greater than zero. For example, the common 16:9 aspect ratio is specified as 16 and 9, respectively.</para>
<para>If the numerator and denominator is set to <computeroutput>GLFW_DONT_CARE</computeroutput> then the aspect ratio limit is disabled.</para>
<para>The aspect ratio is applied immediately to a windowed mode window and may cause it to be resized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set limits for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numer</parametername>
</parameternamelist>
<parameterdescription>
<para>The numerator of the desired aspect ratio, or <computeroutput>GLFW_DONT_CARE</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">denom</parametername>
</parameternamelist>
<parameterdescription>
<para>The denominator of the desired aspect ratio, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>If you set size limits and an aspect ratio that conflict, the results are undefined.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_sizelimits" kindref="member">Window size limits</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga8af814fc98d786d1de2505b40b707de8" kindref="member">glfwSetWindowSizeLimits</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3143" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="625" bodyend="652" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3143" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowSize</definition>
        <argsstring>(GLFWwindow *window, int width, int height)</argsstring>
        <name>glfwSetWindowSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets the size of the content area of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the size of the client area of the specified window.</para>
<para>This function sets the size, in screen coordinates, of the content area of the specified window.</para>
<para>For full screen windows, this function updates the resolution of its desired video mode and switches to the video mode closest to it, without affecting the window&apos;s context. As the context is unaffected, the bit depths of the framebuffer remain unchanged.</para>
<para>If you wish to update the refresh rate of the desired video mode in addition to its resolution, see <ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref>.</para>
<para>The window manager may put limits on what sizes are allowed. GLFW cannot and should not override these limits.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to resize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width, in screen coordinates, of the window content area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height, in screen coordinates, of the window content area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@wayland A full screen window will not attempt to change the mode, no matter what the requested size.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</simplesect>
This function sets the size, in screen coordinates, of the client area of the specified window.</para>
<para>For full screen windows, this function updates the resolution of its desired video mode and switches to the video mode closest to it, without affecting the window&apos;s context. As the context is unaffected, the bit depths of the framebuffer remain unchanged.</para>
<para>If you wish to update the refresh rate of the desired video mode in addition to its resolution, see <ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref>.</para>
<para>The window manager may put limits on what sizes are allowed. GLFW cannot and should not override these limits.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to resize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width, in screen coordinates, of the window client area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height, in screen coordinates, of the window client area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3184" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="565" bodyend="578" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3184" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetFramebufferSize</definition>
        <argsstring>(GLFWwindow *window, int *width, int *height)</argsstring>
        <name>glfwGetFramebufferSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Retrieves the size of the framebuffer of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the size, in pixels, of the framebuffer of the specified window. If you wish to retrieve the size of the window in screen coordinates, see <ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>.</para>
<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose framebuffer to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_fbsize" kindref="member">Framebuffer size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0" kindref="member">glfwSetFramebufferSizeCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function retrieves the size, in pixels, of the framebuffer of the specified window. If you wish to retrieve the size of the window in screen coordinates, see <ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>.</para>
<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose framebuffer to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_fbsize" kindref="member">Framebuffer size</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0" kindref="member">glfwSetFramebufferSizeCallback</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3213" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="654" bodyend="666" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3213" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaad46cdaae2eb732f68d3a1499a7c5409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetWindowFrameSize</definition>
        <argsstring>(GLFWwindow *window, int *left, int *top, int *right, int *bottom)</argsstring>
        <name>glfwGetWindowFrameSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>right</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
<para>Retrieves the size of the frame of the window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the size, in screen coordinates, of each edge of the frame of the specified window. This size includes the title bar, if the window has one. The size of the frame may vary depending on the <ref refid="window_guide_1window_hints_wnd" kindref="member">window-related hints</ref> used to create it.</para>
<para>Because this function retrieves the size of each window frame edge and not the offset along a particular coordinate axis, the retrieved values will always be zero or positive.</para>
<para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose frame size to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">left</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the left edge of the window frame, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">top</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the top edge of the window frame, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">right</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the right edge of the window frame, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the bottom edge of the window frame, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3250" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="668" bodyend="686" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3250" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetWindowContentScale</definition>
        <argsstring>(GLFWwindow *window, float *xscale, float *yscale)</argsstring>
        <name>glfwGetWindowContentScale</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xscale</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>yscale</declname>
        </param>
        <briefdescription>
<para>Retrieves the content scale for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the content scale for the specified window. The content scale is the ratio between the current DPI and the platform&apos;s default DPI. This is especially important for text and any UI elements. If the pixel dimensions of your UI scaled by this look appropriate on your machine then it should appear at a reasonable size on other machines regardless of their DPI and scaling settings. This relies on the system DPI and scaling settings being somewhat correct.</para>
<para>On systems where each monitors can have its own content scale, the window content scale will depend on which monitor the system considers the window to be on.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xscale</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the x-axis content scale, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">yscale</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the y-axis content scale, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_scale" kindref="member">Window content scale</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gac6edcddbe785445d0d2b7b7be500836e" kindref="member">glfwSetWindowContentScaleCallback</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff" kindref="member">glfwGetMonitorContentScale</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3283" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="688" bodyend="701" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3283" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad124d57a1c1c519f60c9765cd0c2a89c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI float</type>
        <definition>GLFWAPI float glfwGetWindowOpacity</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwGetWindowOpacity</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the opacity of the whole window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the opacity of the window, including any decorations.</para>
<para>The opacity (or alpha) value is a positive finite number between zero and one, where zero is fully transparent and one is fully opaque. If the system does not support whole window transparency, this function always returns one.</para>
<para>The initial opacity value for newly created windows is one.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The opacity value of the specified window.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_transparency" kindref="member">Window transparency</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga62a784fe328f227727cbcd0d07480ff3" kindref="member">glfwSetWindowOpacity</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3310" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="703" bodyend="710" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3310" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga62a784fe328f227727cbcd0d07480ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowOpacity</definition>
        <argsstring>(GLFWwindow *window, float opacity)</argsstring>
        <name>glfwSetWindowOpacity</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>float</type>
          <declname>opacity</declname>
        </param>
        <briefdescription>
<para>Sets the opacity of the whole window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the opacity of the window, including any decorations.</para>
<para>The opacity (or alpha) value is a positive finite number between zero and one, where zero is fully transparent and one is fully opaque.</para>
<para>The initial opacity value for newly created windows is one.</para>
<para>A window created with framebuffer transparency may not use whole window transparency. The results of doing this are undefined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set the opacity for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">opacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired opacity of the specified window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> and <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref> (see remarks).</para>
<para><simplesect kind="remark"><para>@wayland There is no way to set an opacity factor for a window. This function will emit <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_transparency" kindref="member">Window transparency</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad124d57a1c1c519f60c9765cd0c2a89c" kindref="member">glfwGetWindowOpacity</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3342" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="712" bodyend="729" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3342" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwIconifyWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwIconifyWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Iconifies the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function iconifies (minimizes) the specified window if it was previously restored. If the window is already iconified, this function does nothing.</para>
<para>If the specified window is a full screen window, the original monitor resolution is restored until the window is restored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to iconify.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@wayland Once a window is iconified, <ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref> won’t be able to restore it. This is a design decision of the xdg-shell protocol.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga4f825a55367d3fabde3d06e7f30128e8" kindref="member">glfwMaximizeWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.1. @glfw3 Added window handle parameter.</para>
</simplesect>
This function iconifies (minimizes) the specified window if it was previously restored. If the window is already iconified, this function does nothing.</para>
<para>If the specified window is a full screen window, the original monitor resolution is restored until the window is restored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to iconify.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga4f825a55367d3fabde3d06e7f30128e8" kindref="member">glfwMaximizeWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.1. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3373" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="731" bodyend="738" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3373" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga1e29caf0b819f578b04db52fff17256c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwRestoreWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwRestoreWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Restores the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function restores the specified window if it was previously iconified (minimized) or maximized. If the window is already restored, this function does nothing.</para>
<para>If the specified window is a full screen window, the resolution chosen for the window is restored on the selected monitor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to restore.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" kindref="member">glfwIconifyWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga4f825a55367d3fabde3d06e7f30128e8" kindref="member">glfwMaximizeWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.1. @glfw3 Added window handle parameter.</para>
</simplesect>
This function restores the specified window if it was previously iconified (minimized) or maximized. If the window is already restored, this function does nothing.</para>
<para>If the specified window is a full screen window, the resolution chosen for the window is restored on the selected monitor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to restore.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" kindref="member">glfwIconifyWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga4f825a55367d3fabde3d06e7f30128e8" kindref="member">glfwMaximizeWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.1. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3400" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="740" bodyend="747" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3400" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga4f825a55367d3fabde3d06e7f30128e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwMaximizeWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwMaximizeWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Maximizes the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function maximizes the specified window if it was previously not maximized. If the window is already maximized, this function does nothing.</para>
<para>If the specified window is a full screen window, this function does nothing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to maximize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" kindref="member">glfwIconifyWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in GLFW 3.2.</para>
</simplesect>
This function maximizes the specified window if it was previously not maximized. If the window is already maximized, this function does nothing.</para>
<para>If the specified window is a full screen window, this function does nothing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to maximize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" kindref="member">glfwIconifyWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in GLFW 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3425" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="749" bodyend="760" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3425" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwShowWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwShowWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Makes the specified window visible. </para>
        </briefdescription>
        <detaileddescription>
<para>This function makes the specified window visible if it was previously hidden. If the window is already visible or is in full screen mode, this function does nothing.</para>
<para>By default, windowed mode windows are focused when shown Set the <ref refid="window_guide_1GLFW_FOCUS_ON_SHOW_hint" kindref="member">GLFW_FOCUS_ON_SHOW</ref> window hint to change this behavior for all newly created windows, or change the behavior for an existing window with <ref refid="group__window_1gad39f43f07856efcf3d656426a9284c75" kindref="member">glfwSetWindowAttrib</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to make visible.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hide" kindref="member">Window visibility</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gaa17e287d521544bdeceafa09ac036e20" kindref="member">glfwHideWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function makes the specified window visible if it was previously hidden. If the window is already visible or is in full screen mode, this function does nothing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to make visible.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hide" kindref="member">Window visibility</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gaa17e287d521544bdeceafa09ac036e20" kindref="member">glfwHideWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3452" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="762" bodyend="776" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3452" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaa17e287d521544bdeceafa09ac036e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwHideWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwHideWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Hides the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function hides the specified window if it was previously visible. If the window is already hidden or is in full screen mode, this function does nothing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to hide.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hide" kindref="member">Window visibility</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" kindref="member">glfwShowWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function hides the specified window if it was previously visible. If the window is already hidden or is in full screen mode, this function does nothing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to hide.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_hide" kindref="member">Window visibility</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" kindref="member">glfwShowWindow</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3474" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="788" bodyend="799" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3474" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga0da0e3daaa2d100f44a115c09077b510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwFocusWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwFocusWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Brings the specified window to front and sets input focus. </para>
        </briefdescription>
        <detaileddescription>
<para>This function brings the specified window to front and sets input focus. The window should already be visible and not iconified.</para>
<para>By default, both windowed and full screen mode windows are focused when initially created. Set the <ref refid="window_guide_1GLFW_FOCUSED_hint" kindref="member">GLFW_FOCUSED</ref> to disable this behavior.</para>
<para>Also by default, windowed mode windows are focused when shown with <ref refid="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" kindref="member">glfwShowWindow</ref>. Set the <ref refid="window_guide_1GLFW_FOCUS_ON_SHOW_hint" kindref="member">GLFW_FOCUS_ON_SHOW</ref> to disable this behavior.</para>
<para><bold>Do not use this function</bold> to steal focus from other applications unless you are certain that is what the user wants. Focus stealing can be extremely disruptive.</para>
<para>For a less disruptive way of getting the user&apos;s attention, see <ref refid="window_guide_1window_attention" kindref="member">attention requests</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to give input focus.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> and <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref> (see remarks).</para>
<para><simplesect kind="remark"><para>@wayland It is not possible for an application to set the input focus. This function will emit <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_focus" kindref="member">Window input focus</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="window_guide_1window_attention" kindref="member">Window attention request</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function brings the specified window to front and sets input focus. The window should already be visible and not iconified.</para>
<para>By default, both windowed and full screen mode windows are focused when initially created. Set the <ref refid="window_guide_1window_hints_wnd" kindref="member">GLFW_FOCUSED</ref> to disable this behavior.</para>
<para><bold>Do not use this function</bold> to steal focus from other applications unless you are certain that is what the user wants. Focus stealing can be extremely disruptive.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to give input focus.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_focus" kindref="member">Window input focus</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3513" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="801" bodyend="809" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3513" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad0c9629abb49447bedd28080642b8538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwRequestWindowAttention</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwRequestWindowAttention</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Requests user attention to the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function requests user attention to the specified window. On platforms where this is not supported, attention is requested to the application as a whole.</para>
<para>Once the user has given attention, usually by focusing the window or application, the system will end the request automatically.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to request attention to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@macos Attention is requested to the application as a whole, not the specific window.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_attention" kindref="member">Window attention request</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3540" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="778" bodyend="786" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3540" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad441645a53bc9274a0ee163d40f0c637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
        <definition>GLFWAPI GLFWmonitor * glfwGetWindowMonitor</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwGetWindowMonitor</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the monitor that the window uses for full screen mode. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the handle of the monitor that the specified window is in full screen on.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The monitor, or <computeroutput>NULL</computeroutput> if the window is in windowed mode or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_monitor" kindref="member">Window monitor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the handle of the monitor that the specified window is in full screen on.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The monitor, or <computeroutput>NULL</computeroutput> if the window is in windowed mode or an error occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_monitor" kindref="member">Window monitor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3562" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="912" bodyend="919" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3562" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowMonitor</definition>
        <argsstring>(GLFWwindow *window, GLFWmonitor *monitor, int xpos, int ypos, int width, int height, int refreshRate)</argsstring>
        <name>glfwSetWindowMonitor</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ypos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>refreshRate</declname>
        </param>
        <briefdescription>
<para>Sets the mode, monitor, video mode and placement of a window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the monitor that the window uses for full screen mode or, if the monitor is <computeroutput>NULL</computeroutput>, makes it windowed mode.</para>
<para>When setting a monitor, this function updates the width, height and refresh rate of the desired video mode and switches to the video mode closest to it. The window position is ignored when setting a monitor.</para>
<para>When the monitor is <computeroutput>NULL</computeroutput>, the position, width and height are used to place the window content area. The refresh rate is ignored when no monitor is specified.</para>
<para>If you only wish to update the resolution of a full screen window or the size of a windowed mode window, see <ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref>.</para>
<para>When a window transitions from full screen to windowed mode, this function restores any previous window settings such as whether it is decorated, floating, resizable, has size or aspect ratio limits, etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose monitor, size or video mode to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired monitor, or <computeroutput>NULL</computeroutput> to set windowed mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate of the upper-left corner of the content area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate of the upper-left corner of the content area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired with, in screen coordinates, of the content area or video mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height, in screen coordinates, of the content area or video mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">refreshRate</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired refresh rate, in Hz, of the video mode, or <computeroutput>GLFW_DONT_CARE</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>The OpenGL or OpenGL ES context will not be destroyed or otherwise affected by any resizing or mode switching, although you may need to update your viewport if the framebuffer size has changed.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland The desired window position is ignored, as there is no way for an application to set this property.</para>
</simplesect>
<simplesect kind="remark"><para>@wayland Setting the window to full screen will not attempt to change the mode, no matter what the requested size or refresh rate.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_monitor" kindref="member">Window monitor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="window_guide_1window_full_screen" kindref="member">Full screen windows</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad441645a53bc9274a0ee163d40f0c637" kindref="member">glfwGetWindowMonitor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function sets the monitor that the window uses for full screen mode or, if the monitor is <computeroutput>NULL</computeroutput>, makes it windowed mode.</para>
<para>When setting a monitor, this function updates the width, height and refresh rate of the desired video mode and switches to the video mode closest to it. The window position is ignored when setting a monitor.</para>
<para>When the monitor is <computeroutput>NULL</computeroutput>, the position, width and height are used to place the window client area. The refresh rate is ignored when no monitor is specified.</para>
<para>If you only wish to update the resolution of a full screen window or the size of a windowed mode window, see <ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref>.</para>
<para>When a window transitions from full screen to windowed mode, this function restores any previous window settings such as whether it is decorated, floating, resizable, has size or aspect ratio limits, etc..</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose monitor, size or video mode to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired monitor, or <computeroutput>NULL</computeroutput> to set windowed mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate of the upper-left corner of the client area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate of the upper-left corner of the client area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired with, in screen coordinates, of the client area or video mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height, in screen coordinates, of the client area or video mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">refreshRate</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired refresh rate, in Hz, of the video mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_monitor" kindref="member">Window monitor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="window_guide_1window_full_screen" kindref="member">Full screen windows</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad441645a53bc9274a0ee163d40f0c637" kindref="member">glfwGetWindowMonitor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3621" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="921" bodyend="958" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3621" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga1bb0c7e100418e284dbb800789c63d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwGetWindowAttrib</definition>
        <argsstring>(GLFWwindow *window, int attrib)</argsstring>
        <name>glfwGetWindowAttrib</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>attrib</declname>
        </param>
        <briefdescription>
<para>Returns an attribute of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the value of an attribute of the specified window or its OpenGL or OpenGL ES context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attrib</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="window_guide_1window_attribs" kindref="member">window attribute</ref> whose value to return. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the attribute, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>Framebuffer related hints are not window attributes. See <ref refid="window_guide_1window_attribs_fb" kindref="member">Framebuffer related attributes</ref> for more information.</para>
</simplesect>
<simplesect kind="remark"><para>Zero is a valid value for many window and context related attributes so you cannot use a return value of zero as an indication of errors. However, this function should not fail as long as it is passed valid arguments and the library has been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_attribs" kindref="member">Window attributes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad39f43f07856efcf3d656426a9284c75" kindref="member">glfwSetWindowAttrib</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetWindowParam</computeroutput> and <computeroutput>glfwGetGLVersion</computeroutput>.</para>
</simplesect>
This function returns the value of an attribute of the specified window or its OpenGL or OpenGL ES context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attrib</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="window_guide_1window_attribs" kindref="member">window attribute</ref> whose value to return. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the attribute, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>Framebuffer related hints are not window attributes. See <ref refid="window_guide_1window_attribs_fb" kindref="member">Framebuffer related attributes</ref> for more information.</para>
</simplesect>
<simplesect kind="remark"><para>Zero is a valid value for many window and context related attributes so you cannot use a return value of zero as an indication of errors. However, this function should not fail as long as it is passed valid arguments and the library has been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_attribs" kindref="member">Window attributes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetWindowParam</computeroutput> and <computeroutput>glfwGetGLVersion</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3655" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="811" bodyend="870" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3655" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad39f43f07856efcf3d656426a9284c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowAttrib</definition>
        <argsstring>(GLFWwindow *window, int attrib, int value)</argsstring>
        <name>glfwSetWindowAttrib</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>attrib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets an attribute of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the value of an attribute of the specified window.</para>
<para>The supported attributes are <ref refid="window_guide_1GLFW_DECORATED_attrib" kindref="member">GLFW_DECORATED</ref>, <ref refid="window_guide_1GLFW_RESIZABLE_attrib" kindref="member">GLFW_RESIZABLE</ref>, <ref refid="window_guide_1GLFW_FLOATING_attrib" kindref="member">GLFW_FLOATING</ref>, <ref refid="window_guide_1GLFW_AUTO_ICONIFY_attrib" kindref="member">GLFW_AUTO_ICONIFY</ref> and <ref refid="window_guide_1GLFW_FOCUS_ON_SHOW_attrib" kindref="member">GLFW_FOCUS_ON_SHOW</ref>. <ref refid="window_guide_1GLFW_MOUSE_PASSTHROUGH_attrib" kindref="member">GLFW_MOUSE_PASSTHROUGH</ref></para>
<para>Some of these attributes are ignored for full screen windows. The new value will take effect if the window is later made windowed.</para>
<para>Some of these attributes are ignored for windowed mode windows. The new value will take effect if the window is later made full screen.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set the attribute for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attrib</parametername>
</parameternamelist>
<parameterdescription>
<para>A supported window attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GLFW_TRUE</computeroutput> or <computeroutput>GLFW_FALSE</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>Calling <ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref> will always return the latest value, even if that value is ignored by the current mode of the window.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_attribs" kindref="member">Window attributes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3693" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="872" bodyend="910" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3693" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gacc9e68faee3c1763b54cd9bc405cf43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetWindowUserPointer</definition>
        <argsstring>(GLFWwindow *window, void *pointer)</argsstring>
        <name>glfwSetWindowUserPointer</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Sets the user pointer of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the user-defined pointer of the specified window. The current value is retained until the window is destroyed. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose pointer to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_userptr" kindref="member">User pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad07c1ae8809c4f47e55ad8cc3f60e794" kindref="member">glfwGetWindowUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the user-defined pointer of the specified window. The current value is retained until the window is destroyed. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose pointer to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_userptr" kindref="member">User pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad07c1ae8809c4f47e55ad8cc3f60e794" kindref="member">glfwGetWindowUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3716" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="960" bodyend="967" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3716" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad07c1ae8809c4f47e55ad8cc3f60e794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void *</type>
        <definition>GLFWAPI void * glfwGetWindowUserPointer</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwGetWindowUserPointer</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the user pointer of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the current value of the user-defined pointer of the specified window. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose pointer to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_userptr" kindref="member">User pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gacc9e68faee3c1763b54cd9bc405cf43e" kindref="member">glfwSetWindowUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the current value of the user-defined pointer of the specified window. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose pointer to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_userptr" kindref="member">User pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gacc9e68faee3c1763b54cd9bc405cf43e" kindref="member">glfwSetWindowUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3737" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="969" bodyend="976" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3737" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" kindref="member">GLFWwindowposfun</ref></type>
        <definition>GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowposfun callback)</argsstring>
        <name>glfwSetWindowPosCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" kindref="member">GLFWwindowposfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the position callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the position callback of the specified window, which is called when the window is moved. The callback is provided with the position, in screen coordinates, of the upper-left corner of the content area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>xpos,<sp/>int<sp/>ypos)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para><simplesect kind="remark"><para>@wayland This callback will never be called, as there is no way for an application to know its global position.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_pos" kindref="member">Window position</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the position callback of the specified window, which is called when the window is moved. The callback is provided with the screen position of the upper-left corner of the client area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_pos" kindref="member">Window position</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3772" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="978" bodyend="987" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3772" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" kindref="member">GLFWwindowsizefun</ref></type>
        <definition>GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowsizefun callback)</argsstring>
        <name>glfwSetWindowSizeCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" kindref="member">GLFWwindowsizefun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the size callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the size callback of the specified window, which is called when the window is resized. The callback is provided with the size, in screen coordinates, of the content area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>width,<sp/>int<sp/>height)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter and return value.</para>
</simplesect>
This function sets the size callback of the specified window, which is called when the window is resized. The callback is provided with the size, in screen coordinates, of the client area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_size" kindref="member">Window size</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter and return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3804" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="989" bodyend="998" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3804" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga693d778815971a06e1a5a7bcdeff3d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1ga5c46f9d2435a22b531382ea642216a61" kindref="member">GLFWwindowclosefun</ref></type>
        <definition>GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowclosefun callback)</argsstring>
        <name>glfwSetWindowCloseCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga5c46f9d2435a22b531382ea642216a61" kindref="member">GLFWwindowclosefun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the close callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the close callback of the specified window, which is called when the user attempts to close the window, for example by clicking the close widget in the title bar.</para>
<para>The close flag is set before this callback is called, but you can modify it at any time with <ref refid="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" kindref="member">glfwSetWindowShouldClose</ref>.</para>
<para>The close callback is not triggered by <ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1ga5c46f9d2435a22b531382ea642216a61" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para><simplesect kind="remark"><para>@macos Selecting Quit from the application menu will trigger the close callback for all windows.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_close" kindref="member">Window closing and close flag</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5. @glfw3 Added window handle parameter and return value.</para>
</simplesect>
This function sets the close callback of the specified window, which is called when the user attempts to close the window, for example by clicking the close widget in the title bar.</para>
<para>The close flag is set before this callback is called, but you can modify it at any time with <ref refid="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" kindref="member">glfwSetWindowShouldClose</ref>.</para>
<para>The close callback is not triggered by <ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para><simplesect kind="remark"><para>@osx Selecting Quit from the application menu will trigger the close callback for all windows.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_close" kindref="member">Window closing and close flag</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5. @glfw3 Added window handle parameter and return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3844" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1000" bodyend="1009" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3844" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga62bfa902c07a03b8ad9be37da31a4be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" kindref="member">GLFWwindowrefreshfun</ref></type>
        <definition>GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowrefreshfun callback)</argsstring>
        <name>glfwSetWindowRefreshCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" kindref="member">GLFWwindowrefreshfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the refresh callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the refresh callback of the specified window, which is called when the content area of the window needs to be redrawn, for example if the window has been exposed after having been covered by another window.</para>
<para>On compositing window systems such as Aero, Compiz, Aqua or Wayland, where the window contents are saved off-screen, this callback may be called only very infrequently or never at all.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window);</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_refresh" kindref="member">Window damage and refresh</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5. @glfw3 Added window handle parameter and return value.</para>
</simplesect>
This function sets the refresh callback of the specified window, which is called when the client area of the window needs to be redrawn, for example if the window has been exposed after having been covered by another window.</para>
<para>On compositing window systems such as Aero, Compiz or Aqua, where the window contents are saved off-screen, this callback may be called only very infrequently or never at all.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_refresh" kindref="member">Window damage and refresh</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5. @glfw3 Added window handle parameter and return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3880" column="30" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1011" bodyend="1020" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3880" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" kindref="member">GLFWwindowfocusfun</ref></type>
        <definition>GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowfocusfun callback)</argsstring>
        <name>glfwSetWindowFocusCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" kindref="member">GLFWwindowfocusfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the focus callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the focus callback of the specified window, which is called when the window gains or loses input focus.</para>
<para>After the focus callback is called for a window that lost input focus, synthetic key and mouse button release events will be generated for all such that had been pressed. For more information, see <ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref> and <ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>focused)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_focus" kindref="member">Window input focus</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the focus callback of the specified window, which is called when the window gains or loses input focus.</para>
<para>After the focus callback is called for a window that lost input focus, synthetic key and mouse button release events will be generated for all such that had been pressed. For more information, see <ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref> and <ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_focus" kindref="member">Window input focus</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3915" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1022" bodyend="1031" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3915" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga3e9f355edb6b9247149ddea2335eda69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" kindref="member">GLFWwindowiconifyfun</ref></type>
        <definition>GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowiconifyfun callback)</argsstring>
        <name>glfwSetWindowIconifyCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" kindref="member">GLFWwindowiconifyfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the iconify callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the iconification callback of the specified window, which is called when the window is iconified or restored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>iconified)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the iconification callback of the specified window, which is called when the window is iconified or restored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_iconify" kindref="member">Window iconification</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3945" column="30" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1033" bodyend="1042" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3945" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gae77b3960dcd40514fb7b2b8a6eb98137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1ga82868db51248e7bc2deb2082336e6c70" kindref="member">GLFWwindowmaximizefun</ref></type>
        <definition>GLFWAPI GLFWwindowmaximizefun glfwSetWindowMaximizeCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowmaximizefun callback)</argsstring>
        <name>glfwSetWindowMaximizeCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga82868db51248e7bc2deb2082336e6c70" kindref="member">GLFWwindowmaximizefun</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Sets the maximize callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the maximization callback of the specified window, which is called when the window is maximized or restored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>maximized)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1ga82868db51248e7bc2deb2082336e6c70" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_maximize" kindref="member">Window maximization</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="3975" column="31" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1044" bodyend="1053" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="3975" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1ga54302eebe2f81518a544723a1d805388" kindref="member">GLFWframebuffersizefun</ref></type>
        <definition>GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWframebuffersizefun callback)</argsstring>
        <name>glfwSetFramebufferSizeCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga54302eebe2f81518a544723a1d805388" kindref="member">GLFWframebuffersizefun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the framebuffer resize callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the framebuffer resize callback of the specified window, which is called when the framebuffer of the specified window is resized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>width,<sp/>int<sp/>height)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1ga54302eebe2f81518a544723a1d805388" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_fbsize" kindref="member">Framebuffer size</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the framebuffer resize callback of the specified window, which is called when the framebuffer of the specified window is resized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_fbsize" kindref="member">Framebuffer size</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4005" column="32" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1055" bodyend="1064" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4005" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gac6edcddbe785445d0d2b7b7be500836e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" kindref="member">GLFWwindowcontentscalefun</ref></type>
        <definition>GLFWAPI GLFWwindowcontentscalefun glfwSetWindowContentScaleCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowcontentscalefun callback)</argsstring>
        <name>glfwSetWindowContentScaleCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" kindref="member">GLFWwindowcontentscalefun</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Sets the window content scale callback for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the window content scale callback of the specified window, which is called when the content scale of the specified window changes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>float<sp/>xscale,<sp/>float<sp/>yscale)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1window_scale" kindref="member">Window content scale</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee" kindref="member">glfwGetWindowContentScale</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4036" column="35" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1066" bodyend="1075" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4036" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga872d16e4c77f58c0436f356255920cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwPollEvents</definition>
        <argsstring>(void)</argsstring>
        <name>glfwPollEvents</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Processes all pending events. </para>
        </briefdescription>
        <detaileddescription>
<para>This function processes only those events that are already in the event queue and then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>
<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the <ref refid="window_guide_1window_refresh" kindref="member">window refresh callback</ref> to redraw the contents of your window when necessary during such operations.</para>
<para>Do not assume that callbacks you set will <emphasis>only</emphasis> be called in response to event processing functions like this one. While it is necessary to poll for events, window systems that require GLFW to register callbacks of its own can pass events to GLFW in response to many window system function calls. GLFW will pass those events on to the application callbacks before returning.</para>
<para>Event processing is not required for joystick input to work.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga05223a0a4c5e50f10f289e60398153aa" kindref="member">glfwWaitEventsTimeout</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function processes only those events that are already in the event queue and then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>
<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the <ref refid="window_guide_1window_refresh" kindref="member">window refresh callback</ref> to redraw the contents of your window when necessary during such operations.</para>
<para>On some platforms, certain events are sent directly to the application without going through the event queue, causing callbacks to be called outside of a call to one of the event processing functions.</para>
<para>Event processing is not required for joystick input to work.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga05223a0a4c5e50f10f289e60398153aa" kindref="member">glfwWaitEventsTimeout</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4074" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1077" bodyend="1081" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4074" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga6e042d05823c11e11c7339b81a237738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwWaitEvents</definition>
        <argsstring>(void)</argsstring>
        <name>glfwWaitEvents</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Waits until events are queued and processes them. </para>
        </briefdescription>
        <detaileddescription>
<para>This function puts the calling thread to sleep until at least one event is available in the event queue. Once one or more events are available, it behaves exactly like <ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>, i.e. the events in the queue are processed and the function then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>
<para>Since not all events are associated with callbacks, this function may return without a callback having been called even if you are monitoring all callbacks.</para>
<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the <ref refid="window_guide_1window_refresh" kindref="member">window refresh callback</ref> to redraw the contents of your window when necessary during such operations.</para>
<para>Do not assume that callbacks you set will <emphasis>only</emphasis> be called in response to event processing functions like this one. While it is necessary to poll for events, window systems that require GLFW to register callbacks of its own can pass events to GLFW in response to many window system function calls. GLFW will pass those events on to the application callbacks before returning.</para>
<para>Event processing is not required for joystick input to work.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga05223a0a4c5e50f10f289e60398153aa" kindref="member">glfwWaitEventsTimeout</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5.</para>
</simplesect>
This function puts the calling thread to sleep until at least one event is available in the event queue. Once one or more events are available, it behaves exactly like <ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>, i.e. the events in the queue are processed and the function then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>
<para>Since not all events are associated with callbacks, this function may return without a callback having been called even if you are monitoring all callbacks.</para>
<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the <ref refid="window_guide_1window_refresh" kindref="member">window refresh callback</ref> to redraw the contents of your window when necessary during such operations.</para>
<para>On some platforms, certain callbacks may be called outside of a call to one of the event processing functions.</para>
<para>If no windows exist, this function returns immediately. For synchronization of threads in applications that do not create windows, use your threading library of choice.</para>
<para>Event processing is not required for joystick input to work.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga05223a0a4c5e50f10f289e60398153aa" kindref="member">glfwWaitEventsTimeout</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.5. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4119" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1083" bodyend="1087" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4119" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga05223a0a4c5e50f10f289e60398153aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwWaitEventsTimeout</definition>
        <argsstring>(double timeout)</argsstring>
        <name>glfwWaitEventsTimeout</name>
        <param>
          <type>double</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Waits with timeout until events are queued and processes them. </para>
        </briefdescription>
        <detaileddescription>
<para>This function puts the calling thread to sleep until at least one event is available in the event queue, or until the specified timeout is reached. If one or more events are available, it behaves exactly like <ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>, i.e. the events in the queue are processed and the function then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>
<para>The timeout value must be a positive finite number.</para>
<para>Since not all events are associated with callbacks, this function may return without a callback having been called even if you are monitoring all callbacks.</para>
<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the <ref refid="window_guide_1window_refresh" kindref="member">window refresh callback</ref> to redraw the contents of your window when necessary during such operations.</para>
<para>Do not assume that callbacks you set will <emphasis>only</emphasis> be called in response to event processing functions like this one. While it is necessary to poll for events, window systems that require GLFW to register callbacks of its own can pass events to GLFW in response to many window system function calls. GLFW will pass those events on to the application callbacks before returning.</para>
<para>Event processing is not required for joystick input to work.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum amount of time, in seconds, to wait.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function puts the calling thread to sleep until at least one event is available in the event queue, or until the specified timeout is reached. If one or more events are available, it behaves exactly like <ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>, i.e. the events in the queue are processed and the function then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para>
<para>The timeout value must be a positive finite number.</para>
<para>Since not all events are associated with callbacks, this function may return without a callback having been called even if you are monitoring all callbacks.</para>
<para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the <ref refid="window_guide_1window_refresh" kindref="member">window refresh callback</ref> to redraw the contents of your window when necessary during such operations.</para>
<para>On some platforms, certain callbacks may be called outside of a call to one of the event processing functions.</para>
<para>If no windows exist, this function returns immediately. For synchronization of threads in applications that do not create windows, use your threading library of choice.</para>
<para>Event processing is not required for joystick input to work.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum amount of time, in seconds, to wait.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4168" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1089" bodyend="1103" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4168" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad6f6b997278c91c43b35970eb9713d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwPostEmptyEvent</definition>
        <argsstring>(void)</argsstring>
        <name>glfwPostEmptyEvent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Posts an empty event to the event queue. </para>
        </briefdescription>
        <detaileddescription>
<para>This function posts an empty event from the current thread to the event queue, causing <ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref> or <ref refid="group__window_1ga05223a0a4c5e50f10f289e60398153aa" kindref="member">glfwWaitEventsTimeout</ref> to return.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga05223a0a4c5e50f10f289e60398153aa" kindref="member">glfwWaitEventsTimeout</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1.</para>
</simplesect>
This function posts an empty event from the current thread to the event queue, causing <ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref> to return.</para>
<para>If no windows exist, this function returns immediately. For synchronization of threads in applications that do not create windows, use your threading library of choice.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1events" kindref="member">Event processing</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4188" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/window.c" bodystart="1105" bodyend="1109" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4188" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga1248dd5b1e566b2817e71547564d6af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwGetInputMode</definition>
        <argsstring>(GLFWwindow *window, int mode)</argsstring>
        <name>glfwGetInputMode</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Returns the value of an input option for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the value of an input option for the specified window. The mode must be one of <ref refid="input_guide_1GLFW_CURSOR" kindref="member">GLFW_CURSOR</ref>, <ref refid="input_guide_1GLFW_STICKY_KEYS" kindref="member">GLFW_STICKY_KEYS</ref>, <ref refid="input_guide_1GLFW_STICKY_MOUSE_BUTTONS" kindref="member">GLFW_STICKY_MOUSE_BUTTONS</ref>, <ref refid="input_guide_1GLFW_LOCK_KEY_MODS" kindref="member">GLFW_LOCK_KEY_MODS</ref> or <ref refid="input_guide_1GLFW_RAW_MOUSE_MOTION" kindref="member">GLFW_RAW_MOUSE_MOTION</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput>, <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>, <computeroutput>GLFW_LOCK_KEY_MODS</computeroutput> or <computeroutput>GLFW_RAW_MOUSE_MOTION</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the value of an input option for the specified window. The mode must be one of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4213" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="489" bodyend="512" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4213" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetInputMode</definition>
        <argsstring>(GLFWwindow *window, int mode, int value)</argsstring>
        <name>glfwSetInputMode</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets an input option for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets an input mode option for the specified window. The mode must be one of <ref refid="input_guide_1GLFW_CURSOR" kindref="member">GLFW_CURSOR</ref>, <ref refid="input_guide_1GLFW_STICKY_KEYS" kindref="member">GLFW_STICKY_KEYS</ref>, <ref refid="input_guide_1GLFW_STICKY_MOUSE_BUTTONS" kindref="member">GLFW_STICKY_MOUSE_BUTTONS</ref>, <ref refid="input_guide_1GLFW_LOCK_KEY_MODS" kindref="member">GLFW_LOCK_KEY_MODS</ref> or <ref refid="input_guide_1GLFW_RAW_MOUSE_MOTION" kindref="member">GLFW_RAW_MOUSE_MOTION</ref>.</para>
<para>If the mode is <computeroutput>GLFW_CURSOR</computeroutput>, the value must be one of the following cursor modes:<itemizedlist>
<listitem><para><computeroutput>GLFW_CURSOR_NORMAL</computeroutput> makes the cursor visible and behaving normally.</para>
</listitem><listitem><para><computeroutput>GLFW_CURSOR_HIDDEN</computeroutput> makes the cursor invisible when it is over the content area of the window but does not restrict the cursor from leaving.</para>
</listitem><listitem><para><computeroutput>GLFW_CURSOR_DISABLED</computeroutput> hides and grabs the cursor, providing virtual and unlimited cursor movement. This is useful for implementing for example 3D camera controls.</para>
</listitem></itemizedlist>
</para>
<para>If the mode is <computeroutput>GLFW_STICKY_KEYS</computeroutput>, the value must be either <computeroutput>GLFW_TRUE</computeroutput> to enable sticky keys, or <computeroutput>GLFW_FALSE</computeroutput> to disable it. If sticky keys are enabled, a key press will ensure that <ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref> returns <computeroutput>GLFW_PRESS</computeroutput> the next time it is called even if the key had been released before the call. This is useful when you are only interested in whether keys have been pressed but not when or in which order.</para>
<para>If the mode is <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>, the value must be either <computeroutput>GLFW_TRUE</computeroutput> to enable sticky mouse buttons, or <computeroutput>GLFW_FALSE</computeroutput> to disable it. If sticky mouse buttons are enabled, a mouse button press will ensure that <ref refid="group__input_1ga6da5efb04f700c312a57a169fa9393a0" kindref="member">glfwGetMouseButton</ref> returns <computeroutput>GLFW_PRESS</computeroutput> the next time it is called even if the mouse button had been released before the call. This is useful when you are only interested in whether mouse buttons have been pressed but not when or in which order.</para>
<para>If the mode is <computeroutput>GLFW_LOCK_KEY_MODS</computeroutput>, the value must be either <computeroutput>GLFW_TRUE</computeroutput> to enable lock key modifier bits, or <computeroutput>GLFW_FALSE</computeroutput> to disable them. If enabled, callbacks that receive modifier bits will also have the <ref refid="group__mods_1gaefeef8fcf825a6e43e241b337897200f" kindref="member">GLFW_MOD_CAPS_LOCK</ref> bit set when the event was generated with Caps Lock on, and the <ref refid="group__mods_1ga64e020b8a42af8376e944baf61feecbe" kindref="member">GLFW_MOD_NUM_LOCK</ref> bit when Num Lock was on.</para>
<para>If the mode is <computeroutput>GLFW_RAW_MOUSE_MOTION</computeroutput>, the value must be either <computeroutput>GLFW_TRUE</computeroutput> to enable raw (unscaled and unaccelerated) mouse motion when the cursor is disabled, or <computeroutput>GLFW_FALSE</computeroutput> to disable it. If raw motion is not supported, attempting to set this will emit <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>. Call <ref refid="group__input_1ga9b83d8957a566b22b3b768c7d1d4be03" kindref="member">glfwRawMouseMotionSupported</ref> to check for support.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose input mode to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput>, <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>, <computeroutput>GLFW_LOCK_KEY_MODS</computeroutput> or <computeroutput>GLFW_RAW_MOUSE_MOTION</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the specified input mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>, <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> and <ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref> (see above).</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="group__input_1ga1248dd5b1e566b2817e71547564d6af9" kindref="member">glfwGetInputMode</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwEnable</computeroutput> and <computeroutput>glfwDisable</computeroutput>.</para>
</simplesect>
This function sets an input mode option for the specified window. The mode must be one of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>.</para>
<para>If the mode is <computeroutput>GLFW_CURSOR</computeroutput>, the value must be one of the following cursor modes:<itemizedlist>
<listitem><para><computeroutput>GLFW_CURSOR_NORMAL</computeroutput> makes the cursor visible and behaving normally.</para>
</listitem><listitem><para><computeroutput>GLFW_CURSOR_HIDDEN</computeroutput> makes the cursor invisible when it is over the client area of the window but does not restrict the cursor from leaving.</para>
</listitem><listitem><para><computeroutput>GLFW_CURSOR_DISABLED</computeroutput> hides and grabs the cursor, providing virtual and unlimited cursor movement. This is useful for implementing for example 3D camera controls.</para>
</listitem></itemizedlist>
</para>
<para>If the mode is <computeroutput>GLFW_STICKY_KEYS</computeroutput>, the value must be either <computeroutput>GLFW_TRUE</computeroutput> to enable sticky keys, or <computeroutput>GLFW_FALSE</computeroutput> to disable it. If sticky keys are enabled, a key press will ensure that <ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref> returns <computeroutput>GLFW_PRESS</computeroutput> the next time it is called even if the key had been released before the call. This is useful when you are only interested in whether keys have been pressed but not when or in which order.</para>
<para>If the mode is <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>, the value must be either <computeroutput>GLFW_TRUE</computeroutput> to enable sticky mouse buttons, or <computeroutput>GLFW_FALSE</computeroutput> to disable it. If sticky mouse buttons are enabled, a mouse button press will ensure that <ref refid="group__input_1ga6da5efb04f700c312a57a169fa9393a0" kindref="member">glfwGetMouseButton</ref> returns <computeroutput>GLFW_PRESS</computeroutput> the next time it is called even if the mouse button had been released before the call. This is useful when you are only interested in whether mouse buttons have been pressed but not when or in which order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose input mode to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the specified input mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="group__input_1ga1248dd5b1e566b2817e71547564d6af9" kindref="member">glfwGetInputMode</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwEnable</computeroutput> and <computeroutput>glfwDisable</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4276" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="514" bodyend="605" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4276" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga9b83d8957a566b22b3b768c7d1d4be03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwRawMouseMotionSupported</definition>
        <argsstring>(void)</argsstring>
        <name>glfwRawMouseMotionSupported</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns whether raw mouse motion is supported. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns whether raw mouse motion is supported on the current system. This status does not change after GLFW has been initialized so you only need to check this once. If you attempt to enable raw motion on a system that does not support it, <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref> will be emitted.</para>
<para>Raw mouse motion is closer to the actual motion of the mouse across a surface. It is not affected by the scaling and acceleration applied to the motion of the desktop cursor. That processing is suitable for a cursor while raw motion is better for controlling for example a 3D camera. Because of this, raw mouse motion is only provided when the cursor is disabled.</para>
<para><simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if raw mouse motion is supported on the current machine, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1raw_mouse_motion" kindref="member">Raw mouse motion</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4305" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="607" bodyend="611" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4305" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga98293ec4493cfe8e7df8ff22ee402b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char *</type>
        <definition>GLFWAPI const char * glfwGetKeyName</definition>
        <argsstring>(int key, int scancode)</argsstring>
        <name>glfwGetKeyName</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <briefdescription>
<para>Returns the layout-specific name of the specified printable key. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the localized name of the specified printable key.</para>
<para>This function returns the name of the specified printable key, encoded as UTF-8. This is typically the character that key would produce without any modifier keys, intended for displaying key bindings to the user. For dead keys, it is typically the diacritic it would add to a character.</para>
<para><bold>Do not use this function</bold> for <ref refid="input_guide_1input_char" kindref="member">text input</ref>. You will break text input for many languages even if it happens to work for yours.</para>
<para>If the key is <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>, the scancode is used to identify the key, otherwise the scancode is ignored. If you specify a non-printable key, or <computeroutput>GLFW_KEY_UNKNOWN</computeroutput> and a scancode that maps to a non-printable key, this function returns <computeroutput>NULL</computeroutput> but does not emit an error.</para>
<para>This behavior allows you to always pass in the arguments in the <ref refid="input_guide_1input_key" kindref="member">key callback</ref> without modification.</para>
<para>The printable keys are:<itemizedlist>
<listitem><para><computeroutput>GLFW_KEY_APOSTROPHE</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_COMMA</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_MINUS</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_PERIOD</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_SLASH</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_SEMICOLON</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_EQUAL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_LEFT_BRACKET</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_RIGHT_BRACKET</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_BACKSLASH</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_WORLD_1</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_WORLD_2</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_0</computeroutput> to <computeroutput>GLFW_KEY_9</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_A</computeroutput> to <computeroutput>GLFW_KEY_Z</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_0</computeroutput> to <computeroutput>GLFW_KEY_KP_9</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_DECIMAL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_DIVIDE</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_MULTIPLY</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_SUBTRACT</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_ADD</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_EQUAL</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>Names for printable keys depend on keyboard layout, while names for non-printable keys are the same across layouts but depend on the application language and should be localized along with other user interface text.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to query, or <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scancode</parametername>
</parameternamelist>
<parameterdescription>
<para>The scancode of the key to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded, layout-specific name of the key, or <computeroutput>NULL</computeroutput>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>The contents of the returned string may change when a keyboard layout change event is received.</para>
</simplesect>
@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_key_name" kindref="member">Key names</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function returns the localized name of the specified printable key. This is intended for displaying key bindings to the user.</para>
<para>If the key is <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>, the scancode is used instead, otherwise the scancode is ignored. If a non-printable key or (if the key is <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>) a scancode that maps to a non-printable key is specified, this function returns <computeroutput>NULL</computeroutput>. <linebreak/>
</para>
<para>This behavior allows you to pass in the arguments passed to the <ref refid="input_guide_1input_key" kindref="member">key callback</ref> without modification.</para>
<para>The printable keys are:<itemizedlist>
<listitem><para><computeroutput>GLFW_KEY_APOSTROPHE</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_COMMA</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_MINUS</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_PERIOD</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_SLASH</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_SEMICOLON</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_EQUAL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_LEFT_BRACKET</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_RIGHT_BRACKET</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_BACKSLASH</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_WORLD_1</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_WORLD_2</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_0</computeroutput> to <computeroutput>GLFW_KEY_9</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_A</computeroutput> to <computeroutput>GLFW_KEY_Z</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_0</computeroutput> to <computeroutput>GLFW_KEY_KP_9</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_DECIMAL</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_DIVIDE</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_MULTIPLY</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_SUBTRACT</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_ADD</computeroutput></para>
</listitem><listitem><para><computeroutput>GLFW_KEY_KP_EQUAL</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to query, or <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scancode</parametername>
</parameternamelist>
<parameterdescription>
<para>The scancode of the key to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The localized name of the key, or <computeroutput>NULL</computeroutput>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the next call to <ref refid="group__input_1ga98293ec4493cfe8e7df8ff22ee402b46" kindref="member">glfwGetKeyName</ref>, or until the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_key_name" kindref="member">Key names</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4373" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="613" bodyend="630" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4373" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga3ea3b9d74f8352506068620980e01fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwGetKeyScancode</definition>
        <argsstring>(int key)</argsstring>
        <name>glfwGetKeyScancode</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns the platform-specific scancode of the specified key. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the platform-specific scancode of the specified key.</para>
<para>If the key is <computeroutput>GLFW_KEY_UNKNOWN</computeroutput> or does not exist on the keyboard this method will return <computeroutput>-1</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Any <ref refid="group__keys" kindref="compound">named key</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The platform-specific scancode for the key, or <computeroutput>-1</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_key" kindref="member">Key input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4397" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="632" bodyend="643" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4397" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwGetKey</definition>
        <argsstring>(GLFWwindow *window, int key)</argsstring>
        <name>glfwGetKey</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns the last reported state of a keyboard key for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the last state reported for the specified key to the specified window. The returned state is one of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>. The higher-level action <computeroutput>GLFW_REPEAT</computeroutput> is only reported to the key callback.</para>
<para>If the <ref refid="input_guide_1GLFW_STICKY_KEYS" kindref="member">GLFW_STICKY_KEYS</ref> input mode is enabled, this function returns <computeroutput>GLFW_PRESS</computeroutput> the first time you call it for a key that was pressed, even if that key has already been released.</para>
<para>The key functions deal with physical keys, with <ref refid="group__keys" kindref="compound">key tokens</ref> named after their use on the standard US keyboard layout. If you want to input text, use the Unicode character callback instead.</para>
<para>The <ref refid="group__mods" kindref="compound">modifier key bit masks</ref> are not key tokens and cannot be used with this function.</para>
<para><bold>Do not use this function</bold> to implement <ref refid="input_guide_1input_char" kindref="member">text input</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <ref refid="group__keys" kindref="compound">keyboard key</ref>. <computeroutput>GLFW_KEY_UNKNOWN</computeroutput> is not a valid key for this function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_key" kindref="member">Key input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</simplesect>
This function returns the last state reported for the specified key to the specified window. The returned state is one of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>. The higher-level action <computeroutput>GLFW_REPEAT</computeroutput> is only reported to the key callback.</para>
<para>If the <computeroutput>GLFW_STICKY_KEYS</computeroutput> input mode is enabled, this function returns <computeroutput>GLFW_PRESS</computeroutput> the first time you call it for a key that was pressed, even if that key has already been released.</para>
<para>The key functions deal with physical keys, with <ref refid="group__keys" kindref="compound">key tokens</ref> named after their use on the standard US keyboard layout. If you want to input text, use the Unicode character callback instead.</para>
<para>The <ref refid="group__mods" kindref="compound">modifier key bit masks</ref> are not key tokens and cannot be used with this function.</para>
<para><bold>Do not use this function</bold> to implement <ref refid="input_guide_1input_char" kindref="member">text input</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <ref refid="group__keys" kindref="compound">keyboard key</ref>. <computeroutput>GLFW_KEY_UNKNOWN</computeroutput> is not a valid key for this function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_key" kindref="member">Key input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4437" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="645" bodyend="666" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4437" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga6da5efb04f700c312a57a169fa9393a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwGetMouseButton</definition>
        <argsstring>(GLFWwindow *window, int button)</argsstring>
        <name>glfwGetMouseButton</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Returns the last reported state of a mouse button for the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the last state reported for the specified mouse button to the specified window. The returned state is one of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
<para>If the <ref refid="input_guide_1GLFW_STICKY_MOUSE_BUTTONS" kindref="member">GLFW_STICKY_MOUSE_BUTTONS</ref> input mode is enabled, this function returns <computeroutput>GLFW_PRESS</computeroutput> the first time you call it for a mouse button that was pressed, even if that mouse button has already been released.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">button</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <ref refid="group__buttons" kindref="compound">mouse button</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_mouse_button" kindref="member">Mouse button input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</simplesect>
This function returns the last state reported for the specified mouse button to the specified window. The returned state is one of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
<para>If the <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput> input mode is enabled, this function <computeroutput>GLFW_PRESS</computeroutput> the first time you call it for a mouse button that was pressed, even if that mouse button has already been released.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">button</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <ref refid="group__buttons" kindref="compound">mouse button</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_mouse_button" kindref="member">Mouse button input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4466" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="668" bodyend="689" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4466" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gad289438eb7cf53d11eca685373f44105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwGetCursorPos</definition>
        <argsstring>(GLFWwindow *window, double *xpos, double *ypos)</argsstring>
        <name>glfwGetCursorPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Retrieves the position of the cursor relative to the content area of the window. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the position of the cursor relative to the client area of the window.</para>
<para>This function returns the position of the cursor, in screen coordinates, relative to the upper-left corner of the content area of the specified window.</para>
<para>If the cursor is disabled (with <computeroutput>GLFW_CURSOR_DISABLED</computeroutput>) then the cursor position is unbounded and limited only by the minimum and maximum values of a <computeroutput>double</computeroutput>.</para>
<para>The coordinate can be converted to their integer equivalents with the <computeroutput>floor</computeroutput> function. Casting directly to an integer type works for positive coordinates, but fails for negative ones.</para>
<para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the cursor x-coordinate, relative to the left edge of the content area, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the cursor y-coordinate, relative to the to top edge of the content area, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_pos" kindref="member">Cursor position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" kindref="member">glfwSetCursorPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetMousePos</computeroutput>.</para>
</simplesect>
This function returns the position of the cursor, in screen coordinates, relative to the upper-left corner of the client area of the specified window.</para>
<para>If the cursor is disabled (with <computeroutput>GLFW_CURSOR_DISABLED</computeroutput>) then the cursor position is unbounded and limited only by the minimum and maximum values of a <computeroutput>double</computeroutput>.</para>
<para>The coordinate can be converted to their integer equivalents with the <computeroutput>floor</computeroutput> function. Casting directly to an integer type works for positive coordinates, but fails for negative ones.</para>
<para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the cursor x-coordinate, relative to the left edge of the client area, or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the cursor y-coordinate, relative to the to top edge of the client area, or <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_pos" kindref="member">Cursor position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" kindref="member">glfwSetCursorPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetMousePos</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4504" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="691" bodyend="712" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4504" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetCursorPos</definition>
        <argsstring>(GLFWwindow *window, double xpos, double ypos)</argsstring>
        <name>glfwSetCursorPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Sets the position of the cursor, relative to the content area of the window. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the position of the cursor, relative to the client area of the window.</para>
<para>This function sets the position, in screen coordinates, of the cursor relative to the upper-left corner of the content area of the specified window. The window must have input focus. If the window does not have input focus when this function is called, it fails silently.</para>
<para><bold>Do not use this function</bold> to implement things like camera controls. GLFW already provides the <computeroutput>GLFW_CURSOR_DISABLED</computeroutput> cursor mode that hides the cursor, transparently re-centers it and provides unconstrained cursor motion. See <ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref> for more information.</para>
<para>If the cursor mode is <computeroutput>GLFW_CURSOR_DISABLED</computeroutput> then the cursor position is unconstrained and limited only by the minimum and maximum values of a <computeroutput>double</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate, relative to the left edge of the content area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate, relative to the top edge of the content area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@wayland This function will only work when the cursor mode is <computeroutput>GLFW_CURSOR_DISABLED</computeroutput>, otherwise it will do nothing.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_pos" kindref="member">Cursor position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gad289438eb7cf53d11eca685373f44105" kindref="member">glfwGetCursorPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwSetMousePos</computeroutput>.</para>
</simplesect>
This function sets the position, in screen coordinates, of the cursor relative to the upper-left corner of the client area of the specified window. The window must have input focus. If the window does not have input focus when this function is called, it fails silently.</para>
<para><bold>Do not use this function</bold> to implement things like camera controls. GLFW already provides the <computeroutput>GLFW_CURSOR_DISABLED</computeroutput> cursor mode that hides the cursor, transparently re-centers it and provides unconstrained cursor motion. See <ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref> for more information.</para>
<para>If the cursor mode is <computeroutput>GLFW_CURSOR_DISABLED</computeroutput> then the cursor position is unconstrained and limited only by the minimum and maximum values of a <computeroutput>double</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate, relative to the left edge of the client area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate, relative to the top edge of the client area.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>@x11 Due to the asynchronous nature of X11, it may take a moment for the window focus event to arrive. This means you may not be able to set the cursor position directly after window creation.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_pos" kindref="member">Cursor position</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gad289438eb7cf53d11eca685373f44105" kindref="member">glfwGetCursorPos</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwSetMousePos</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4544" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="714" bodyend="744" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4544" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga21fc9f020f062db88813aa722c30ba2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
        <definition>GLFWAPI GLFWcursor * glfwCreateCursor</definition>
        <argsstring>(const GLFWimage *image, int xhot, int yhot)</argsstring>
        <name>glfwCreateCursor</name>
        <param>
          <type>const <ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xhot</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yhot</declname>
        </param>
        <briefdescription>
<para>Creates a custom cursor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a new custom cursor image that can be set for a window with <ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>. The cursor can be destroyed with <ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref>. Any remaining cursors are destroyed by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para>
<para>The pixels are 32-bit, little-endian, non-premultiplied RGBA, i.e. eight bits per channel with the red channel first. They are arranged canonically as packed sequential rows, starting from the top-left corner.</para>
<para>The cursor hotspot is specified in pixels, relative to the upper-left corner of the cursor image. Like all other coordinate systems in GLFW, the X-axis points to the right and the Y-axis points down.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired cursor image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xhot</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate, in pixels, of the cursor hotspot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yhot</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate, in pixels, of the cursor hotspot. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handle of the created cursor, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The specified image data is copied before this function returns.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1.</para>
</simplesect>
Creates a new custom cursor image that can be set for a window with <ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>. The cursor can be destroyed with <ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref>. Any remaining cursors are destroyed by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para>
<para>The pixels are 32-bit, little-endian, non-premultiplied RGBA, i.e. eight bits per channel. They are arranged canonically as packed sequential rows, starting from the top-left corner.</para>
<para>The cursor hotspot is specified in pixels, relative to the upper-left corner of the cursor image. Like all other coordinate systems in GLFW, the X-axis points to the right and the Y-axis points down.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired cursor image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xhot</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate, in pixels, of the cursor hotspot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yhot</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate, in pixels, of the cursor hotspot. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handle of the created cursor, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The specified image data is copied before this function returns.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4582" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="746" bodyend="765" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4582" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
        <definition>GLFWAPI GLFWcursor * glfwCreateStandardCursor</definition>
        <argsstring>(int shape)</argsstring>
        <name>glfwCreateStandardCursor</name>
        <param>
          <type>int</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Creates a cursor with a standard Shape. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a cursor with a standard shape.</para>
<para>Returns a cursor with a standard Shape, that can be set for a window with <ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>. The images for these cursors come from the system cursor theme and their exact appearance will vary between platforms.</para>
<para>Most of these shapes are guaranteed to exist on every supported platform but a few may not be present. See the table below for details.</para>
<para><table rows="11" cols="5"><row>
<entry thead="yes"><para>Cursor Shape   </para>
</entry><entry thead="yes"><para>Windows   </para>
</entry><entry thead="yes"><para>macOS   </para>
</entry><entry thead="yes"><para>X11   </para>
</entry><entry thead="yes"><para>Wayland    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" kindref="member">GLFW_ARROW_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1ga36185f4375eaada1b04e431244774c86" kindref="member">GLFW_IBEAM_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22" kindref="member">GLFW_CROSSHAIR_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0" kindref="member">GLFW_POINTING_HAND_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad" kindref="member">GLFW_RESIZE_EW_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388" kindref="member">GLFW_RESIZE_NS_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da" kindref="member">GLFW_RESIZE_NWSE_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes<superscript>1</superscript>   </para>
</entry><entry thead="no"><para>Maybe<superscript>2</superscript>   </para>
</entry><entry thead="no"><para>Maybe<superscript>2</superscript>    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1gab06bba3b407f92807ba9b48de667a323" kindref="member">GLFW_RESIZE_NESW_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes<superscript>1</superscript>   </para>
</entry><entry thead="no"><para>Maybe<superscript>2</superscript>   </para>
</entry><entry thead="no"><para>Maybe<superscript>2</superscript>    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d" kindref="member">GLFW_RESIZE_ALL_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes    </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="group__shapes_1ga297c503095b034bc8891393b637844b1" kindref="member">GLFW_NOT_ALLOWED_CURSOR</ref>   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Yes   </para>
</entry><entry thead="no"><para>Maybe<superscript>2</superscript>   </para>
</entry><entry thead="no"><para>Maybe<superscript>2</superscript>   </para>
</entry></row>
</table>
</para>
<para>1) This uses a private system API and may fail in the future.</para>
<para>2) This uses a newer standard that not all cursor themes support.</para>
<para>If the requested Shape is not available, this function emits a <ref refid="group__errors_1ga09d6943923a70ddef3a085f5baee786c" kindref="member">GLFW_CURSOR_UNAVAILABLE</ref> error and returns <computeroutput>NULL</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">shape</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the <ref refid="group__shapes" kindref="compound">standard shapes</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new cursor ready to use or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>, <ref refid="group__errors_1ga09d6943923a70ddef3a085f5baee786c" kindref="member">GLFW_CURSOR_UNAVAILABLE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_standard" kindref="member">Standard cursor creation</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga21fc9f020f062db88813aa722c30ba2c" kindref="member">glfwCreateCursor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1.</para>
</simplesect>
Returns a cursor with a <ref refid="group__shapes" kindref="compound">standard shape</ref>, that can be set for a window with <ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">shape</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the <ref refid="group__shapes" kindref="compound">standard shapes</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new cursor ready to use or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga21fc9f020f062db88813aa722c30ba2c" kindref="member">glfwCreateCursor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4630" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="767" bodyend="799" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4630" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwDestroyCursor</definition>
        <argsstring>(GLFWcursor *cursor)</argsstring>
        <name>glfwDestroyCursor</name>
        <param>
          <type><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
<para>Destroys a cursor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function destroys a cursor previously created with <ref refid="group__input_1ga21fc9f020f062db88813aa722c30ba2c" kindref="member">glfwCreateCursor</ref>. Any remaining cursors will be destroyed by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para>
<para>If the specified cursor is current for any window, that window will be reverted to the default cursor. This does not affect the cursor mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor object to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga21fc9f020f062db88813aa722c30ba2c" kindref="member">glfwCreateCursor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1.</para>
</simplesect>
This function destroys a cursor previously created with <ref refid="group__input_1ga21fc9f020f062db88813aa722c30ba2c" kindref="member">glfwCreateCursor</ref>. Any remaining cursors will be destroyed by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor object to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@reentrancy This function must not be called from a callback.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga21fc9f020f062db88813aa722c30ba2c" kindref="member">glfwCreateCursor</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4657" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="801" bodyend="834" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4657" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gafaf103cea2f43530cff7de4e01126a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetCursor</definition>
        <argsstring>(GLFWwindow *window, GLFWcursor *cursor)</argsstring>
        <name>glfwSetCursor</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
<para>Sets the cursor for the window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the cursor image to be used when the cursor is over the content area of the specified window. The set cursor will only be visible when the <ref refid="input_guide_1cursor_mode" kindref="member">cursor mode</ref> of the window is <computeroutput>GLFW_CURSOR_NORMAL</computeroutput>.</para>
<para>On some platforms, the set cursor may not be visible unless the window also has input focus.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set the cursor for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor to set, or <computeroutput>NULL</computeroutput> to switch back to the default arrow cursor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1.</para>
</simplesect>
This function sets the cursor image to be used when the cursor is over the client area of the specified window. The set cursor will only be visible when the <ref refid="input_guide_1cursor_mode" kindref="member">cursor mode</ref> of the window is <computeroutput>GLFW_CURSOR_NORMAL</computeroutput>.</para>
<para>On some platforms, the set cursor may not be visible unless the window also has input focus.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set the cursor for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor to set, or <computeroutput>NULL</computeroutput> to switch back to the default arrow cursor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_object" kindref="member">Cursor objects</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4684" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="836" bodyend="847" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4684" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" kindref="member">GLFWkeyfun</ref></type>
        <definition>GLFWAPI GLFWkeyfun glfwSetKeyCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWkeyfun callback)</argsstring>
        <name>glfwSetKeyCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" kindref="member">GLFWkeyfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the key callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the key callback of the specified window, which is called when a key is pressed, repeated or released.</para>
<para>The key functions deal with physical keys, with layout independent <ref refid="group__keys" kindref="compound">key tokens</ref> named after their values in the standard US keyboard layout. If you want to input text, use the <ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">character callback</ref> instead.</para>
<para>When a window loses input focus, it will generate synthetic key release events for all pressed keys. You can tell these events from user-generated events by the fact that the synthetic ones are generated after the focus loss event has been processed, i.e. after the <ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">window focus callback</ref> has been called.</para>
<para>The scancode of a key is specific to that platform or sometimes even to that machine. Scancodes are intended to allow users to bind keys that don&apos;t have a GLFW key token. Such keys have <computeroutput>key</computeroutput> set to <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>, their state is not saved and so it cannot be queried with <ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref>.</para>
<para>Sometimes GLFW needs to generate synthetic key events, in which case the scancode may be zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new key callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>key,<sp/>int<sp/>scancode,<sp/>int<sp/>action,<sp/>int<sp/>mods)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_key" kindref="member">Key input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter and return value.</para>
</simplesect>
This function sets the key callback of the specified window, which is called when a key is pressed, repeated or released.</para>
<para>The key functions deal with physical keys, with layout independent <ref refid="group__keys" kindref="compound">key tokens</ref> named after their values in the standard US keyboard layout. If you want to input text, use the <ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">character callback</ref> instead.</para>
<para>When a window loses input focus, it will generate synthetic key release events for all pressed keys. You can tell these events from user-generated events by the fact that the synthetic ones are generated after the focus loss event has been processed, i.e. after the <ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">window focus callback</ref> has been called.</para>
<para>The scancode of a key is specific to that platform or sometimes even to that machine. Scancodes are intended to allow users to bind keys that don&apos;t have a GLFW key token. Such keys have <computeroutput>key</computeroutput> set to <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>, their state is not saved and so it cannot be queried with <ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref>.</para>
<para>Sometimes GLFW needs to generate synthetic key events, in which case the scancode may be zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new key callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_key" kindref="member">Key input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter and return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4734" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="849" bodyend="857" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4734" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gad3d7e6e3134fa034cc1604162579585e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" kindref="member">GLFWcharfun</ref></type>
        <definition>GLFWAPI GLFWcharfun glfwSetCharCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcharfun callback)</argsstring>
        <name>glfwSetCharCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" kindref="member">GLFWcharfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the Unicode character callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the character callback of the specified window, which is called when a Unicode character is input.</para>
<para>The character callback is intended for Unicode text input. As it deals with characters, it is keyboard layout dependent, whereas the <ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">key callback</ref> is not. Characters do not map 1:1 to physical keys, as a key may produce zero, one or more characters. If you want to know whether a specific physical key was pressed or released, see the key callback instead.</para>
<para>The character callback behaves as system text input normally does and will not be called if modifier keys are held down that would prevent normal text input on that platform, for example a Super (Command) key on macOS or Alt key on Windows.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>unsigned<sp/>int<sp/>codepoint)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_char" kindref="member">Text input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.4. @glfw3 Added window handle parameter and return value.</para>
</simplesect>
This function sets the character callback of the specified window, which is called when a Unicode character is input.</para>
<para>The character callback is intended for Unicode text input. As it deals with characters, it is keyboard layout dependent, whereas the <ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">key callback</ref> is not. Characters do not map 1:1 to physical keys, as a key may produce zero, one or more characters. If you want to know whether a specific physical key was pressed or released, see the key callback instead.</para>
<para>The character callback behaves as system text input normally does and will not be called if modifier keys are held down that would prevent normal text input on that platform, for example a Super (Command) key on OS X or Alt key on Windows. There is a <ref refid="group__input_1ga359a8529c2eb06e6e2173168f30ac99c" kindref="member">character with modifiers callback</ref> that receives these events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_char" kindref="member">Text input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.4. @glfw3 Added window handle parameter and return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4777" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="859" bodyend="867" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4777" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga359a8529c2eb06e6e2173168f30ac99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" kindref="member">GLFWcharmodsfun</ref></type>
        <definition>GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcharmodsfun callback)</argsstring>
        <name>glfwSetCharModsCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" kindref="member">GLFWcharmodsfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the Unicode character with modifiers callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the character with modifiers callback of the specified window, which is called when a Unicode character is input regardless of what modifier keys are used.</para>
<para>The character with modifiers callback is intended for implementing custom Unicode character input. For regular Unicode text input, see the <ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">character callback</ref>. Like the character callback, the character with modifiers callback deals with characters and is keyboard layout dependent. Characters do not map 1:1 to physical keys, as a key may produce zero, one or more characters. If you want to know whether a specific physical key was pressed or released, see the <ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">key callback</ref> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>unsigned<sp/>int<sp/>codepoint,<sp/>int<sp/>mods)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" kindref="member">function pointer type</ref>.</para>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Scheduled for removal in version 4.0.</para>
</xrefdescription></xrefsect></para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_char" kindref="member">Text input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1.</para>
</simplesect>
This function sets the character with modifiers callback of the specified window, which is called when a Unicode character is input regardless of what modifier keys are used.</para>
<para>The character with modifiers callback is intended for implementing custom Unicode character input. For regular Unicode text input, see the <ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">character callback</ref>. Like the character callback, the character with modifiers callback deals with characters and is keyboard layout dependent. Characters do not map 1:1 to physical keys, as a key may produce zero, one or more characters. If you want to know whether a specific physical key was pressed or released, see the <ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">key callback</ref> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or an error occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_char" kindref="member">Text input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4819" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="869" bodyend="877" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4819" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gab8f17646f43cdca14e5095512618fdf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1gac4312f2199caa15988cebb59ec530373" kindref="member">GLFWmousebuttonfun</ref></type>
        <definition>GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWmousebuttonfun callback)</argsstring>
        <name>glfwSetMouseButtonCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1gac4312f2199caa15988cebb59ec530373" kindref="member">GLFWmousebuttonfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the mouse button callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the mouse button callback of the specified window, which is called when a mouse button is pressed or released.</para>
<para>When a window loses input focus, it will generate synthetic mouse button release events for all pressed mouse buttons. You can tell these events from user-generated events by the fact that the synthetic ones are generated after the focus loss event has been processed, i.e. after the <ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">window focus callback</ref> has been called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>button,<sp/>int<sp/>action,<sp/>int<sp/>mods)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1gac4312f2199caa15988cebb59ec530373" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_mouse_button" kindref="member">Mouse button input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter and return value.</para>
</simplesect>
This function sets the mouse button callback of the specified window, which is called when a mouse button is pressed or released.</para>
<para>When a window loses input focus, it will generate synthetic mouse button release events for all pressed mouse buttons. You can tell these events from user-generated events by the fact that the synthetic ones are generated after the focus loss event has been processed, i.e. after the <ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">window focus callback</ref> has been called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1input_mouse_button" kindref="member">Mouse button input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter and return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4856" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="879" bodyend="888" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4856" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga74124d0eff27040fd10e4df9e17d129c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" kindref="member">GLFWcursorposfun</ref></type>
        <definition>GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcursorposfun callback)</argsstring>
        <name>glfwSetCursorPosCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" kindref="member">GLFWcursorposfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the cursor position callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the cursor position callback of the specified window, which is called when the cursor is moved. The callback is provided with the position, in screen coordinates, relative to the upper-left corner of the content area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>double<sp/>xpos,<sp/>double<sp/>ypos);</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_pos" kindref="member">Cursor position</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwSetMousePosCallback</computeroutput>.</para>
</simplesect>
This function sets the cursor position callback of the specified window, which is called when the cursor is moved. The callback is provided with the position, in screen coordinates, relative to the upper-left corner of the client area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_pos" kindref="member">Cursor position</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwSetMousePosCallback</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4888" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="890" bodyend="899" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4888" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gacdb3490e374c8bc08549c6f173ffa7c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga945bb284410b64c49ecc50195692720a" kindref="member">GLFWcursorenterfun</ref></type>
        <definition>GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcursorenterfun callback)</argsstring>
        <name>glfwSetCursorEnterCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga945bb284410b64c49ecc50195692720a" kindref="member">GLFWcursorenterfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the cursor enter/leave callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the cursor enter/exit callback.</para>
<para>This function sets the cursor boundary crossing callback of the specified window, which is called when the cursor enters or leaves the content area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>entered)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1ga945bb284410b64c49ecc50195692720a" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_enter" kindref="member">Cursor enter/leave events</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the cursor boundary crossing callback of the specified window, which is called when the cursor enters or leaves the client area of the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1cursor_enter" kindref="member">Cursor enter/leave events</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4919" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="901" bodyend="910" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4919" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaa786b59f19ad8525d251cda8e0d7d29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" kindref="member">GLFWscrollfun</ref></type>
        <definition>GLFWAPI GLFWscrollfun glfwSetScrollCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWscrollfun callback)</argsstring>
        <name>glfwSetScrollCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" kindref="member">GLFWscrollfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the scroll callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the scroll callback of the specified window, which is called when a scrolling device is used, such as a mouse wheel or scrolling area of a touchpad.</para>
<para>The scroll callback receives all scrolling input, like that from a mouse wheel or a touchpad scrolling area.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new scroll callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>double<sp/>xoffset,<sp/>double<sp/>yoffset)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1scrolling" kindref="member">Scroll input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwSetMouseWheelCallback</computeroutput>.</para>
</simplesect>
This function sets the scroll callback of the specified window, which is called when a scrolling device is used, such as a mouse wheel or scrolling area of a touchpad.</para>
<para>The scroll callback receives all scrolling input, like that from a mouse wheel or a touchpad scrolling area.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new scroll callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1scrolling" kindref="member">Scroll input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwSetMouseWheelCallback</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4953" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="912" bodyend="921" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4953" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga8bab819b7b0ef9bc1a38e58c577c1d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1gabc169084bd5648f192077f102b957496" kindref="member">GLFWdropfun</ref></type>
        <definition>GLFWAPI GLFWdropfun glfwSetDropCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWdropfun callback)</argsstring>
        <name>glfwSetDropCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1gabc169084bd5648f192077f102b957496" kindref="member">GLFWdropfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the path drop callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the file drop callback.</para>
<para>This function sets the path drop callback of the specified window, which is called when one or more dragged paths are dropped on the window.</para>
<para>Because the path array and its strings may have been generated specifically for that event, they are not guaranteed to be valid after the callback has returned. If you wish to use them after the callback returns, you need to make a deep copy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new file drop callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(GLFWwindow*<sp/>window,<sp/>int<sp/>path_count,<sp/>const<sp/>char*<sp/>paths[])</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1gabc169084bd5648f192077f102b957496" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para><simplesect kind="remark"><para>@wayland File drop is currently unimplemented.</para>
</simplesect>
@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1path_drop" kindref="member">Path drop input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1.</para>
</simplesect>
This function sets the file drop callback of the specified window, which is called when one or more dragged files are dropped on the window.</para>
<para>Because the path array and its strings may have been generated specifically for that event, they are not guaranteed to be valid after the callback has returned. If you wish to use them after the callback returns, you need to make a deep copy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new file drop callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1path_drop" kindref="member">Path drop input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="4990" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="923" bodyend="931" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="4990" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gacb1b7dfd79df673d48814c06fc436eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwJoystickPresent</definition>
        <argsstring>(int jid)</argsstring>
        <name>glfwJoystickPresent</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
          <defname>joy</defname>
        </param>
        <briefdescription>
<para>Returns whether the specified joystick is present. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns whether the specified joystick is present.</para>
<para>There is no need to call this function before other functions that accept a joystick ID, as they all check for presence before performing any other work.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if the joystick is present, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick" kindref="member">Joystick input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetJoystickParam</computeroutput>.</para>
</simplesect>
This function returns whether the specified joystick is present.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if the joystick is present, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick" kindref="member">Joystick input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetJoystickParam</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5014" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="933" bodyend="956" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5014" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gacd46b9f8d9d12dc50e45d7fe0ad32b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const float *</type>
        <definition>GLFWAPI const float * glfwGetJoystickAxes</definition>
        <argsstring>(int jid, int *count)</argsstring>
        <name>glfwGetJoystickAxes</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
          <defname>joy</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the values of all axes of the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the values of all axes of the specified joystick. Each element in the array is a value between -1.0 and 1.0.</para>
<para>If the specified joystick is not present this function will return <computeroutput>NULL</computeroutput> but will not generate an error. This can be used instead of first calling <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of axis values in the returned array. This is set to zero if the joystick is not present or an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of axis values, or <computeroutput>NULL</computeroutput> if the joystick is not present or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_axis" kindref="member">Joystick axis states</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetJoystickPos</computeroutput>.</para>
</simplesect>
This function returns the values of all axes of the specified joystick. Each element in the array is a value between -1.0 and 1.0.</para>
<para>Querying a joystick slot with no device present is not an error, but will cause this function to return <computeroutput>NULL</computeroutput>. Call <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref> to check device presence.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of axis values in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of axis values, or <computeroutput>NULL</computeroutput> if the joystick is not present.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, this function is called again for that joystick or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_axis" kindref="member">Joystick axis states</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. Replaces <computeroutput>glfwGetJoystickPos</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5047" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="958" bodyend="988" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5047" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga91cdcb462a3e17c647a55496eff7d0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const unsigned char *</type>
        <definition>GLFWAPI const unsigned char * glfwGetJoystickButtons</definition>
        <argsstring>(int jid, int *count)</argsstring>
        <name>glfwGetJoystickButtons</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
          <defname>joy</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the state of all buttons of the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the state of all buttons of the specified joystick. Each element in the array is either <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
<para>For backward compatibility with earlier versions that did not have <ref refid="group__input_1gaf0f00897c4d010af7bd1aea1f6193e6f" kindref="member">glfwGetJoystickHats</ref>, the button array also includes all hats, each represented as four buttons. The hats are in the same order as returned by <bold>glfwGetJoystickHats</bold> and are in the order <emphasis>up</emphasis>, <emphasis>right</emphasis>, <emphasis>down</emphasis> and <emphasis>left</emphasis>. To disable these extra buttons, set the <ref refid="intro_guide_1GLFW_JOYSTICK_HAT_BUTTONS" kindref="member">GLFW_JOYSTICK_HAT_BUTTONS</ref> init hint before initialization.</para>
<para>If the specified joystick is not present this function will return <computeroutput>NULL</computeroutput> but will not generate an error. This can be used instead of first calling <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of button states in the returned array. This is set to zero if the joystick is not present or an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of button states, or <computeroutput>NULL</computeroutput> if the joystick is not present or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_button" kindref="member">Joystick button states</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.2. @glfw3 Changed to return a dynamic array.</para>
</simplesect>
This function returns the state of all buttons of the specified joystick. Each element in the array is either <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para>
<para>Querying a joystick slot with no device present is not an error, but will cause this function to return <computeroutput>NULL</computeroutput>. Call <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref> to check device presence.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of button states in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of button states, or <computeroutput>NULL</computeroutput> if the joystick is not present.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, this function is called again for that joystick or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_button" kindref="member">Joystick button states</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.2. @glfw3 Changed to return a dynamic array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5088" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="990" bodyend="1024" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5088" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaf0f00897c4d010af7bd1aea1f6193e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const unsigned char *</type>
        <definition>GLFWAPI const unsigned char * glfwGetJoystickHats</definition>
        <argsstring>(int jid, int *count)</argsstring>
        <name>glfwGetJoystickHats</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the state of all hats of the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the state of all hats of the specified joystick. Each element in the array is one of the following values:</para>
<para><table rows="10" cols="2"><row>
<entry thead="yes"><para>Name   </para>
</entry><entry thead="yes"><para>Value    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_CENTERED</computeroutput>   </para>
</entry><entry thead="no"><para>0    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_UP</computeroutput>   </para>
</entry><entry thead="no"><para>1    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_RIGHT</computeroutput>   </para>
</entry><entry thead="no"><para>2    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_DOWN</computeroutput>   </para>
</entry><entry thead="no"><para>4    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_LEFT</computeroutput>   </para>
</entry><entry thead="no"><para>8    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_RIGHT_UP</computeroutput>   </para>
</entry><entry thead="no"><para><computeroutput>GLFW_HAT_RIGHT</computeroutput> | <computeroutput>GLFW_HAT_UP</computeroutput>    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_RIGHT_DOWN</computeroutput>   </para>
</entry><entry thead="no"><para><computeroutput>GLFW_HAT_RIGHT</computeroutput> | <computeroutput>GLFW_HAT_DOWN</computeroutput>    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_LEFT_UP</computeroutput>   </para>
</entry><entry thead="no"><para><computeroutput>GLFW_HAT_LEFT</computeroutput> | <computeroutput>GLFW_HAT_UP</computeroutput>    </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>GLFW_HAT_LEFT_DOWN</computeroutput>   </para>
</entry><entry thead="no"><para><computeroutput>GLFW_HAT_LEFT</computeroutput> | <computeroutput>GLFW_HAT_DOWN</computeroutput>   </para>
</entry></row>
</table>
</para>
<para>The diagonal directions are bitwise combinations of the primary (up, right, down and left) directions and you can test for these individually by ANDing it with the corresponding direction.</para>
<para><programlisting><codeline><highlight class="normal">if<sp/>(hats[2]<sp/>&amp;<sp/>GLFW_HAT_RIGHT)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>State<sp/>of<sp/>hat<sp/>2<sp/>could<sp/>be<sp/>right-up,<sp/>right<sp/>or<sp/>right-down</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If the specified joystick is not present this function will return <computeroutput>NULL</computeroutput> but will not generate an error. This can be used instead of first calling <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of hat states in the returned array. This is set to zero if the joystick is not present or an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of hat states, or <computeroutput>NULL</computeroutput> if the joystick is not present or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, this function is called again for that joystick or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_hat" kindref="member">Joystick hat states</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5145" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1026" bodyend="1056" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5145" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga4b46e05195db3c2fc336cf69fc6c7128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char *</type>
        <definition>GLFWAPI const char * glfwGetJoystickName</definition>
        <argsstring>(int jid)</argsstring>
        <name>glfwGetJoystickName</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
          <defname>joy</defname>
        </param>
        <briefdescription>
<para>Returns the name of the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the name, encoded as UTF-8, of the specified joystick. The returned string is allocated and freed by GLFW. You should not free it yourself.</para>
<para>If the specified joystick is not present this function will return <computeroutput>NULL</computeroutput> but will not generate an error. This can be used instead of first calling <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded name of the joystick, or <computeroutput>NULL</computeroutput> if the joystick is not present or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_name" kindref="member">Joystick name</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the name, encoded as UTF-8, of the specified joystick. The returned string is allocated and freed by GLFW. You should not free it yourself.</para>
<para>Querying a joystick slot with no device present is not an error, but will cause this function to return <computeroutput>NULL</computeroutput>. Call <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref> to check device presence.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded name of the joystick, or <computeroutput>NULL</computeroutput> if the joystick is not present.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, this function is called again for that joystick or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_name" kindref="member">Joystick name</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5176" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1058" bodyend="1084" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5176" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga2c6a8b6e27cb8a8be7a0d020d9fd051c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char *</type>
        <definition>GLFWAPI const char * glfwGetJoystickGUID</definition>
        <argsstring>(int jid)</argsstring>
        <name>glfwGetJoystickGUID</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
        </param>
        <briefdescription>
<para>Returns the SDL compatible GUID of the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the SDL compatible GUID, as a UTF-8 encoded hexadecimal string, of the specified joystick. The returned string is allocated and freed by GLFW. You should not free it yourself.</para>
<para>The GUID is what connects a joystick to a gamepad mapping. A connected joystick will always have a GUID even if there is no gamepad mapping assigned to it.</para>
<para>If the specified joystick is not present this function will return <computeroutput>NULL</computeroutput> but will not generate an error. This can be used instead of first calling <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref>.</para>
<para>The GUID uses the format introduced in SDL 2.0.5. This GUID tries to uniquely identify the make and model of a joystick but does not identify a specific unit, e.g. all wired Xbox 360 controllers will have the same GUID on that platform. The GUID for a unit may vary between platforms depending on what hardware information the platform specific APIs provide.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded GUID of the joystick, or <computeroutput>NULL</computeroutput> if the joystick is not present or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1gamepad" kindref="member">Gamepad input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5217" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1086" bodyend="1112" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5217" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga3a8999c2d2634c7bcf4a04f1ec64895c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetJoystickUserPointer</definition>
        <argsstring>(int jid, void *pointer)</argsstring>
        <name>glfwSetJoystickUserPointer</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Sets the user pointer of the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the user-defined pointer of the specified joystick. The current value is retained until the joystick is disconnected. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para>This function may be called from the joystick callback, even for a joystick that is being disconnected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The joystick whose pointer to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_userptr" kindref="member">Joystick user pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga95c348e4b4308c44c59825def0d1367e" kindref="member">glfwGetJoystickUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5243" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1114" bodyend="1128" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5243" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga95c348e4b4308c44c59825def0d1367e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void *</type>
        <definition>GLFWAPI void * glfwGetJoystickUserPointer</definition>
        <argsstring>(int jid)</argsstring>
        <name>glfwGetJoystickUserPointer</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
        </param>
        <briefdescription>
<para>Returns the user pointer of the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the current value of the user-defined pointer of the specified joystick. The initial value is <computeroutput>NULL</computeroutput>.</para>
<para>This function may be called from the joystick callback, even for a joystick that is being disconnected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The joystick whose pointer to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Access is not synchronized.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_userptr" kindref="member">Joystick user pointer</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga3a8999c2d2634c7bcf4a04f1ec64895c" kindref="member">glfwSetJoystickUserPointer</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5267" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1130" bodyend="1144" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5267" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gac9720b6e5062a5fc5fc0bb4be6dc04a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwJoystickIsGamepad</definition>
        <argsstring>(int jid)</argsstring>
        <name>glfwJoystickIsGamepad</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
        </param>
        <briefdescription>
<para>Returns whether the specified joystick has a gamepad mapping. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns whether the specified joystick is both present and has a gamepad mapping.</para>
<para>If the specified joystick is present but does not have a gamepad mapping this function will return <computeroutput>GLFW_FALSE</computeroutput> but will not generate an error. Call <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref> to check if a joystick is present regardless of whether it has a mapping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if a joystick is both present and has a gamepad mapping, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1gamepad" kindref="member">Gamepad input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga6e138d3b0761546f5a12546f367501d6" kindref="member">glfwGetGamepadState</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5295" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1217" bodyend="1243" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5295" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gad90f60a4c0e04629928305b53e96154a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" kindref="member">GLFWjoystickfun</ref></type>
        <definition>GLFWAPI GLFWjoystickfun glfwSetJoystickCallback</definition>
        <argsstring>(GLFWjoystickfun callback)</argsstring>
        <name>glfwSetJoystickCallback</name>
        <param>
          <type><ref refid="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" kindref="member">GLFWjoystickfun</ref></type>
          <declname>callback</declname>
          <defname>cbfun</defname>
        </param>
        <briefdescription>
<para>Sets the joystick configuration callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the joystick configuration callback, or removes the currently set callback. This is called when a joystick is connected to or disconnected from the system.</para>
<para>For joystick connection and disconnection events to be delivered on all platforms, you need to call one of the <ref refid="input_guide_1events" kindref="member">event processing</ref> functions. Joystick disconnection may also be detected and the callback called by joystick functions. The function will then return whatever it returns if the joystick is not present.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@callback_signature <programlisting><codeline><highlight class="normal">void<sp/>function_name(int<sp/>jid,<sp/>int<sp/>event)</highlight></codeline>
</programlisting> For more information about the callback parameters, see the <ref refid="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" kindref="member">function pointer type</ref>.</para>
<para>@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_event" kindref="member">Joystick configuration changes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function sets the joystick configuration callback, or removes the currently set callback. This is called when a joystick is connected to or disconnected from the system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been <ref refid="intro_guide_1intro_init" kindref="member">initialized</ref>.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1joystick_event" kindref="member">Joystick configuration changes</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5331" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1146" bodyend="1155" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5331" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga276a2aec236a671a99f6f0a9be7fa3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwUpdateGamepadMappings</definition>
        <argsstring>(const char *string)</argsstring>
        <name>glfwUpdateGamepadMappings</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Adds the specified SDL_GameControllerDB gamepad mappings. </para>
        </briefdescription>
        <detaileddescription>
<para>This function parses the specified ASCII encoded string and updates the internal list with any gamepad mappings it finds. This string may contain either a single gamepad mapping or many mappings separated by newlines. The parser supports the full format of the <computeroutput>gamecontrollerdb.txt</computeroutput> source file including empty lines and comments.</para>
<para>See <ref refid="input_guide_1gamepad_mapping" kindref="member">Gamepad mappings</ref> for a description of the format.</para>
<para>If there is already a gamepad mapping for a given GUID in the internal list, it will be replaced by the one passed to this function. If the library is terminated and re-initialized the internal list will revert to the built-in default.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string containing the gamepad mappings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if successful, or <computeroutput>GLFW_FALSE</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1gamepad" kindref="member">Gamepad input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gac9720b6e5062a5fc5fc0bb4be6dc04a0" kindref="member">glfwJoystickIsGamepad</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gab7a03c6ca8aa55a52b750d862d106ffe" kindref="member">glfwGetGamepadName</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5365" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1157" bodyend="1215" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5365" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gab7a03c6ca8aa55a52b750d862d106ffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char *</type>
        <definition>GLFWAPI const char * glfwGetGamepadName</definition>
        <argsstring>(int jid)</argsstring>
        <name>glfwGetGamepadName</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
        </param>
        <briefdescription>
<para>Returns the human-readable gamepad name for the specified joystick. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the human-readable name of the gamepad from the gamepad mapping assigned to the specified joystick.</para>
<para>If the specified joystick is not present or does not have a gamepad mapping this function will return <computeroutput>NULL</computeroutput> but will not generate an error. Call <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref> to check whether it is present regardless of whether it has a mapping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded name of the gamepad, or <computeroutput>NULL</computeroutput> if the joystick is not present, does not have a mapping or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, the gamepad mappings are updated or the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1gamepad" kindref="member">Gamepad input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gac9720b6e5062a5fc5fc0bb4be6dc04a0" kindref="member">glfwJoystickIsGamepad</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5395" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1245" bodyend="1274" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5395" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga6e138d3b0761546f5a12546f367501d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwGetGamepadState</definition>
        <argsstring>(int jid, GLFWgamepadstate *state)</argsstring>
        <name>glfwGetGamepadState</name>
        <param>
          <type>int</type>
          <declname>jid</declname>
        </param>
        <param>
          <type><ref refid="struct_g_l_f_wgamepadstate" kindref="compound">GLFWgamepadstate</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Retrieves the state of the specified joystick remapped as a gamepad. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the state of the specified joystick remapped to an Xbox-like gamepad.</para>
<para>If the specified joystick is not present or does not have a gamepad mapping this function will return <computeroutput>GLFW_FALSE</computeroutput> but will not generate an error. Call <ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref> to check whether it is present regardless of whether it has a mapping.</para>
<para>The Guide button may not be available for input as it is often hooked by the system or the Steam client.</para>
<para>Not all devices have all the buttons or axes provided by <ref refid="struct_g_l_f_wgamepadstate" kindref="compound">GLFWgamepadstate</ref>. Unavailable buttons and axes will always report <computeroutput>GLFW_RELEASE</computeroutput> and 0.0 respectively.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The gamepad input state of the joystick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if successful, or <computeroutput>GLFW_FALSE</computeroutput> if no joystick is connected, it has no gamepad mapping or an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" kindref="member">GLFW_INVALID_ENUM</ref>.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1gamepad" kindref="member">Gamepad input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga276a2aec236a671a99f6f0a9be7fa3fc" kindref="member">glfwUpdateGamepadMappings</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gac9720b6e5062a5fc5fc0bb4be6dc04a0" kindref="member">glfwJoystickIsGamepad</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.3. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5433" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1276" bodyend="1360" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5433" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga7a580309bbc185a0459c3559021d2fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetClipboardString</definition>
        <argsstring>(GLFWwindow *window, const char *string)</argsstring>
        <name>glfwSetClipboardString</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Sets the clipboard to the specified string. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the system clipboard to the specified, UTF-8 encoded string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>Deprecated. Any valid window or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>A UTF-8 encoded string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The specified string is copied before this function returns.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1clipboard" kindref="member">Clipboard input and output</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga315b28b05797d00fe7cdf1ecfdc638dc" kindref="member">glfwGetClipboardString</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function sets the system clipboard to the specified, UTF-8 encoded string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that will own the clipboard contents. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>A UTF-8 encoded string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The specified string is copied before this function returns.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1clipboard" kindref="member">Clipboard input and output</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga315b28b05797d00fe7cdf1ecfdc638dc" kindref="member">glfwGetClipboardString</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5458" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1362" bodyend="1368" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5458" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga315b28b05797d00fe7cdf1ecfdc638dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char *</type>
        <definition>GLFWAPI const char * glfwGetClipboardString</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwGetClipboardString</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the contents of the clipboard as a string. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the contents of the system clipboard, if it contains or is convertible to a UTF-8 encoded string. If the clipboard is empty or if its contents cannot be converted, <computeroutput>NULL</computeroutput> is returned and a <ref refid="group__errors_1ga196e125ef261d94184e2b55c05762f14" kindref="member">GLFW_FORMAT_UNAVAILABLE</ref> error is generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>Deprecated. Any valid window or <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The contents of the clipboard as a UTF-8 encoded string, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the next call to <ref refid="group__input_1ga315b28b05797d00fe7cdf1ecfdc638dc" kindref="member">glfwGetClipboardString</ref> or <ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref>, or until the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1clipboard" kindref="member">Clipboard input and output</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the contents of the system clipboard, if it contains or is convertible to a UTF-8 encoded string. If the clipboard is empty or if its contents cannot be converted, <computeroutput>NULL</computeroutput> is returned and a <ref refid="group__errors_1ga196e125ef261d94184e2b55c05762f14" kindref="member">GLFW_FORMAT_UNAVAILABLE</ref> error is generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that will request the clipboard contents. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The contents of the clipboard as a UTF-8 encoded string, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@pointer_lifetime The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the next call to <ref refid="group__input_1ga315b28b05797d00fe7cdf1ecfdc638dc" kindref="member">glfwGetClipboardString</ref> or <ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref>, or until the library is terminated.</para>
<para>@thread_safety This function must only be called from the main thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1clipboard" kindref="member">Clipboard input and output</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5488" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1370" bodyend="1374" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5488" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI double</type>
        <definition>GLFWAPI double glfwGetTime</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the GLFW time. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the GLFW timer.</para>
<para>This function returns the current GLFW time, in seconds. Unless the time has been set using <ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref> it measures time elapsed since GLFW was initialized.</para>
<para>This function and <ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref> are helper functions on top of <ref refid="group__input_1gaa92d10b10013372778efbf6367714371" kindref="member">glfwGetTimerFrequency</ref> and <ref refid="group__input_1gaa00c3e32227eb70b3968fca0bfe4ae26" kindref="member">glfwGetTimerValue</ref>.</para>
<para>The resolution of the timer is system dependent, but is usually on the order of a few micro- or nanoseconds. It uses the highest-resolution monotonic time source on each supported platform.</para>
<para><simplesect kind="return"><para>The current time, in seconds, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Reading and writing of the internal base time is not atomic, so it needs to be externally synchronized with calls to <ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref>.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function returns the value of the GLFW timer. Unless the timer has been set using <ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref>, the timer measures time elapsed since GLFW was initialized.</para>
<para>The resolution of the timer is system dependent, but is usually on the order of a few micro- or nanoseconds. It uses the highest-resolution monotonic time source on each supported platform.</para>
<para><simplesect kind="return"><para>The current value, in seconds, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread. Reading of the internal timer offset is not atomic.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5518" column="16" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1376" bodyend="1381" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5518" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga94360a3628a09f32708f83cc3fa48590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSetTime</definition>
        <argsstring>(double time)</argsstring>
        <name>glfwSetTime</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Sets the GLFW time. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the GLFW timer.</para>
<para>This function sets the current GLFW time, in seconds. The value must be a positive finite number less than or equal to 18446744073.0, which is approximately 584.5 years.</para>
<para>This function and <ref refid="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" kindref="member">glfwGetTime</ref> are helper functions on top of <ref refid="group__input_1gaa92d10b10013372778efbf6367714371" kindref="member">glfwGetTimerFrequency</ref> and <ref refid="group__input_1gaa00c3e32227eb70b3968fca0bfe4ae26" kindref="member">glfwGetTimerValue</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value, in seconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>.</para>
<para><simplesect kind="remark"><para>The upper limit of GLFW time is calculated as floor((2<superscript>64</superscript> - 1) / 10<superscript>9</superscript>) and is due to implementations storing nanoseconds in 64 bits. The limit may be increased in the future.</para>
</simplesect>
@thread_safety This function may be called from any thread. Reading and writing of the internal base time is not atomic, so it needs to be externally synchronized with calls to <ref refid="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" kindref="member">glfwGetTime</ref>.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.2.</para>
</simplesect>
This function sets the value of the GLFW timer. It then continues to count up from that value. The value must be a positive finite number less than or equal to 18446744073.0, which is approximately 584.5 years.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value, in seconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>.</para>
<para><simplesect kind="remark"><para>The upper limit of the timer is calculated as floor((2<superscript>64</superscript> - 1) / 10<superscript>9</superscript>) and is due to implementations storing nanoseconds in 64 bits. The limit may be increased in the future.</para>
</simplesect>
@thread_safety This function may be called from any thread. Writing of the internal timer offset is not atomic.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 2.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5548" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1383" bodyend="1395" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5548" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaa00c3e32227eb70b3968fca0bfe4ae26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI uint64_t</type>
        <definition>GLFWAPI uint64_t glfwGetTimerValue</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetTimerValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the current value of the raw timer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the current value of the raw timer, measured in 1<nonbreakablespace/>/<nonbreakablespace/>frequency seconds. To get the frequency, call <ref refid="group__input_1gaa92d10b10013372778efbf6367714371" kindref="member">glfwGetTimerFrequency</ref>.</para>
<para><simplesect kind="return"><para>The value of the timer, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaa92d10b10013372778efbf6367714371" kindref="member">glfwGetTimerFrequency</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function returns the current value of the raw timer, measured in 1<nonbreakablespace/>/<nonbreakablespace/>frequency seconds. To get the frequency, call <ref refid="group__input_1gaa92d10b10013372778efbf6367714371" kindref="member">glfwGetTimerFrequency</ref>.</para>
<para><simplesect kind="return"><para>The value of the timer, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaa92d10b10013372778efbf6367714371" kindref="member">glfwGetTimerFrequency</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5570" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1397" bodyend="1401" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5570" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaa92d10b10013372778efbf6367714371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI uint64_t</type>
        <definition>GLFWAPI uint64_t glfwGetTimerFrequency</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetTimerFrequency</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the frequency, in Hz, of the raw timer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the frequency, in Hz, of the raw timer.</para>
<para><simplesect kind="return"><para>The frequency of the timer, in Hz, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaa00c3e32227eb70b3968fca0bfe4ae26" kindref="member">glfwGetTimerValue</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function returns the frequency, in Hz, of the raw timer.</para>
<para><simplesect kind="return"><para>The frequency of the timer, in Hz, or zero if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="input_guide_1time" kindref="member">Time input</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaa00c3e32227eb70b3968fca0bfe4ae26" kindref="member">glfwGetTimerValue</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5590" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/input.c" bodystart="1403" bodyend="1407" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5590" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1gafd76c93e15ec8b0b90506a9936a46185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwMakeContextCurrent</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwMakeContextCurrent</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Makes the context of the specified window current for the calling thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This function makes the OpenGL or OpenGL ES context of the specified window current on the calling thread. A context must only be made current on a single thread at a time and each thread can have only a single current context at a time.</para>
<para>When moving a context between threads, you must make it non-current on the old thread before making it current on the new one.</para>
<para>By default, making a context non-current implicitly forces a pipeline flush. On machines that support <computeroutput>GL_KHR_context_flush_control</computeroutput>, you can control whether a context performs this flush by setting the <ref refid="window_guide_1GLFW_CONTEXT_RELEASE_BEHAVIOR_hint" kindref="member">GLFW_CONTEXT_RELEASE_BEHAVIOR</ref> hint.</para>
<para>The specified window must have an OpenGL or OpenGL ES context. Specifying a window without a context will generate a <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose context to make current, or <computeroutput>NULL</computeroutput> to detach the current context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_current" kindref="member">Current context</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gab5fde1ef6238bfb82c7a2293f86172de" kindref="member">glfwGetCurrentContext</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function makes the OpenGL or OpenGL ES context of the specified window current on the calling thread. A context can only be made current on a single thread at a time and each thread can have only a single current context at a time.</para>
<para>By default, making a context non-current implicitly forces a pipeline flush. On machines that support <computeroutput>GL_KHR_context_flush_control</computeroutput>, you can control whether a context performs this flush by setting the <ref refid="window_guide_1window_hints_ctx" kindref="member">GLFW_CONTEXT_RELEASE_BEHAVIOR</ref> window hint.</para>
<para>The specified window must have an OpenGL or OpenGL ES context. Specifying a window without a context will generate a <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose context to make current, or <computeroutput>NULL</computeroutput> to detach the current context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_current" kindref="member">Current context</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gab5fde1ef6238bfb82c7a2293f86172de" kindref="member">glfwGetCurrentContext</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5628" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/context.c" bodystart="613" bodyend="635" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5628" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1gab5fde1ef6238bfb82c7a2293f86172de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
        <definition>GLFWAPI GLFWwindow * glfwGetCurrentContext</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetCurrentContext</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the window whose context is current on the calling thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the window whose OpenGL or OpenGL ES context is current on the calling thread.</para>
<para><simplesect kind="return"><para>The window whose context is current, or <computeroutput>NULL</computeroutput> if no window&apos;s context is current.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_current" kindref="member">Current context</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0.</para>
</simplesect>
This function returns the window whose OpenGL or OpenGL ES context is current on the calling thread.</para>
<para><simplesect kind="return"><para>The window whose context is current, or <computeroutput>NULL</computeroutput> if no window&apos;s context is current.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_current" kindref="member">Current context</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5649" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/context.c" bodystart="637" bodyend="641" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5649" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gafb827800eedbfcbc97b1e5408df668d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSwapBuffers</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwSwapBuffers</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Swaps the front and back buffers of the specified window. </para>
        </briefdescription>
        <detaileddescription>
<para>This function swaps the front and back buffers of the specified window when rendering with OpenGL or OpenGL ES. If the swap interval is greater than zero, the GPU driver waits the specified number of screen updates before swapping the buffers.</para>
<para>The specified window must have an OpenGL or OpenGL ES context. Specifying a window without a context will generate a <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> error.</para>
<para>This function does not apply to Vulkan. If you are rendering with Vulkan, see <computeroutput>vkQueuePresentKHR</computeroutput> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose buffers to swap.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para><bold>EGL:</bold> The context of the specified window must be current on the calling thread.</para>
</simplesect>
@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1buffer_swap" kindref="member">Buffer swapping</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter.</para>
</simplesect>
This function swaps the front and back buffers of the specified window when rendering with OpenGL or OpenGL ES. If the swap interval is greater than zero, the GPU driver waits the specified number of screen updates before swapping the buffers.</para>
<para>The specified window must have an OpenGL or OpenGL ES context. Specifying a window without a context will generate a <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> error.</para>
<para>This function does not apply to Vulkan. If you are rendering with Vulkan, see <computeroutput>vkQueuePresentKHR</computeroutput> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose buffers to swap.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gacff24d2757da752ae4c80bf452356487" kindref="member">GLFW_NO_WINDOW_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para><bold>EGL:</bold> The context of the specified window must be current on the calling thread.</para>
</simplesect>
@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1buffer_swap" kindref="member">Buffer swapping</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. @glfw3 Added window handle parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5683" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/context.c" bodystart="643" bodyend="658" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5683" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga12a595c06947cec4967c6e1f14210a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI void</type>
        <definition>GLFWAPI void glfwSwapInterval</definition>
        <argsstring>(int interval)</argsstring>
        <name>glfwSwapInterval</name>
        <param>
          <type>int</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>Sets the swap interval for the current context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the swap interval for the current OpenGL or OpenGL ES context, i.e. the number of screen updates to wait from the time <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref> was called before swapping the buffers and returning. This is sometimes called <emphasis>vertical synchronization</emphasis>, <emphasis>vertical retrace synchronization</emphasis> or just <emphasis>vsync</emphasis>.</para>
<para>A context that supports either of the <computeroutput>WGL_EXT_swap_control_tear</computeroutput> and <computeroutput>GLX_EXT_swap_control_tear</computeroutput> extensions also accepts <emphasis>negative</emphasis> swap intervals, which allows the driver to swap immediately even if a frame arrives a little bit late. You can check for these extensions with <ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref>.</para>
<para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para>
<para>This function does not apply to Vulkan. If you are rendering with Vulkan, see the present mode of your swapchain instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">interval</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum number of screen updates to wait for until the buffers are swapped by <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>This function is not called during context creation, leaving the swap interval set to whatever is the default on that platform. This is done because some swap interval extensions used by GLFW do not allow the swap interval to be reset to zero once it has been set to a non-zero value.</para>
</simplesect>
<simplesect kind="remark"><para>Some GPU drivers do not honor the requested swap interval, either because of a user setting that overrides the application&apos;s request or due to bugs in the driver.</para>
</simplesect>
@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1buffer_swap" kindref="member">Buffer swapping</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function sets the swap interval for the current OpenGL or OpenGL ES context, i.e. the number of screen updates to wait from the time <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref> was called before swapping the buffers and returning. This is sometimes called <emphasis>vertical synchronization</emphasis>, <emphasis>vertical retrace synchronization</emphasis> or just <emphasis>vsync</emphasis>.</para>
<para>Contexts that support either of the <computeroutput>WGL_EXT_swap_control_tear</computeroutput> and <computeroutput>GLX_EXT_swap_control_tear</computeroutput> extensions also accept negative swap intervals, which allow the driver to swap even if a frame arrives a little bit late. You can check for the presence of these extensions using <ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref>. For more information about swap tearing, see the extension specifications.</para>
<para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para>
<para>This function does not apply to Vulkan. If you are rendering with Vulkan, see the present mode of your swapchain instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">interval</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum number of screen updates to wait for until the buffers are swapped by <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>This function is not called during context creation, leaving the swap interval set to whatever is the default on that platform. This is done because some swap interval extensions used by GLFW do not allow the swap interval to be reset to zero once it has been set to a non-zero value.</para>
</simplesect>
<simplesect kind="remark"><para>Some GPU drivers do not honor the requested swap interval, either because of a user setting that overrides the application&apos;s request or due to bugs in the driver.</para>
</simplesect>
@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="window_guide_1buffer_swap" kindref="member">Buffer swapping</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5729" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/context.c" bodystart="660" bodyend="675" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5729" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwExtensionSupported</definition>
        <argsstring>(const char *extension)</argsstring>
        <name>glfwExtensionSupported</name>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
<para>Returns whether the specified extension is available. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns whether the specified <ref refid="context_guide_1context_glext" kindref="member">API extension</ref> is supported by the current OpenGL or OpenGL ES context. It searches both for client API extension and context creation API extensions.</para>
<para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para>
<para>As this functions retrieves and searches one or more extension strings each call, it is recommended that you cache its results if it is going to be used frequently. The extension strings will not change during the lifetime of a context, so there is no danger in doing this.</para>
<para>This function does not apply to Vulkan. If you are using Vulkan, see <ref refid="group__vulkan_1gada152edc5bbbd0c2138728878632fd9c" kindref="member">glfwGetRequiredInstanceExtensions</ref>, <computeroutput>vkEnumerateInstanceExtensionProperties</computeroutput> and <computeroutput>vkEnumerateDeviceExtensionProperties</computeroutput> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">extension</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the extension. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if the extension is available, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_glext" kindref="member">OpenGL and OpenGL ES extensions</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function returns whether the specified <ref refid="context_guide_1context_glext" kindref="member">API extension</ref> is supported by the current OpenGL or OpenGL ES context. It searches both for client API extension and context creation API extensions.</para>
<para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para>
<para>As this functions retrieves and searches one or more extension strings each call, it is recommended that you cache its results if it is going to be used frequently. The extension strings will not change during the lifetime of a context, so there is no danger in doing this.</para>
<para>This function does not apply to Vulkan. If you are using Vulkan, see <ref refid="group__vulkan_1gada152edc5bbbd0c2138728878632fd9c" kindref="member">glfwGetRequiredInstanceExtensions</ref>, <computeroutput>vkEnumerateInstanceExtensionProperties</computeroutput> and <computeroutput>vkEnumerateDeviceExtensionProperties</computeroutput> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">extension</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the extension. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if the extension is available, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref>, <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_glext" kindref="member">OpenGL and OpenGL ES extensions</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5767" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/context.c" bodystart="677" bodyend="741" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5767" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga0e8af175218929615c16e74938c10f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI <ref refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" kindref="member">GLFWglproc</ref></type>
        <definition>GLFWAPI GLFWglproc glfwGetProcAddress</definition>
        <argsstring>(const char *procname)</argsstring>
        <name>glfwGetProcAddress</name>
        <param>
          <type>const char *</type>
          <declname>procname</declname>
        </param>
        <briefdescription>
<para>Returns the address of the specified function for the current context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the address of the specified OpenGL or OpenGL ES <ref refid="context_guide_1context_glext" kindref="member">core or extension function</ref>, if it is supported by the current context.</para>
<para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para>
<para>This function does not apply to Vulkan. If you are rendering with Vulkan, see glfwGetInstanceProcAddress, <computeroutput>vkGetInstanceProcAddr</computeroutput> and <computeroutput>vkGetDeviceProcAddr</computeroutput> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">procname</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The address of the function, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>The address of a given function is not guaranteed to be the same between contexts.</para>
</simplesect>
<simplesect kind="remark"><para>This function may return a non-<computeroutput>NULL</computeroutput> address despite the associated version or extension not being available. Always check the context version or extension string first.</para>
</simplesect>
@pointer_lifetime The returned function pointer is valid until the context is destroyed or the library is terminated.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_glext" kindref="member">OpenGL and OpenGL ES extensions</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0.</para>
</simplesect>
This function returns the address of the specified OpenGL or OpenGL ES <ref refid="context_guide_1context_glext" kindref="member">core or extension function</ref>, if it is supported by the current context.</para>
<para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para>
<para>This function does not apply to Vulkan. If you are rendering with Vulkan, see glfwGetInstanceProcAddress, <computeroutput>vkGetInstanceProcAddr</computeroutput> and <computeroutput>vkGetDeviceProcAddr</computeroutput> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">procname</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The address of the function, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>, <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> and <ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>.</para>
<para><simplesect kind="remark"><para>The address of a given function is not guaranteed to be the same between contexts.</para>
</simplesect>
<simplesect kind="remark"><para>This function may return a non-<computeroutput>NULL</computeroutput> address despite the associated version or extension not being available. Always check the context version or extension string first.</para>
</simplesect>
@pointer_lifetime The returned function pointer is valid until the context is destroyed or the library is terminated.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="context_guide_1context_glext" kindref="member">OpenGL and OpenGL ES extensions</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 1.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5809" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/context.c" bodystart="743" bodyend="759" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5809" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__vulkan_1ga72e7c3757d9ff2333181a5569bb7c403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI int</type>
        <definition>GLFWAPI int glfwVulkanSupported</definition>
        <argsstring>(void)</argsstring>
        <name>glfwVulkanSupported</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns whether the Vulkan loader and an ICD have been found. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the Vulkan loader has been found.</para>
<para>This function returns whether the Vulkan loader and any minimally functional ICD have been found.</para>
<para>The availability of a Vulkan loader and even an ICD does not by itself guarantee that surface creation or even instance creation is possible. For example, on Fermi systems Nvidia will install an ICD that provides no actual Vulkan support. Call <ref refid="group__vulkan_1gada152edc5bbbd0c2138728878632fd9c" kindref="member">glfwGetRequiredInstanceExtensions</ref> to check whether the extensions necessary for Vulkan surface creation are available and glfwGetPhysicalDevicePresentationSupport to check whether a queue family of a physical device supports image presentation.</para>
<para><simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if Vulkan is minimally available, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="vulkan_guide_1vulkan_support" kindref="member">Querying for Vulkan support</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function returns whether the Vulkan loader has been found. This check is performed by <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para>
<para>The availability of a Vulkan loader does not by itself guarantee that window surface creation or even device creation is possible. Call <ref refid="group__vulkan_1gada152edc5bbbd0c2138728878632fd9c" kindref="member">glfwGetRequiredInstanceExtensions</ref> to check whether the extensions necessary for Vulkan surface creation are available and glfwGetPhysicalDevicePresentationSupport to check whether a queue family of a physical device supports image presentation.</para>
<para><simplesect kind="return"><para><computeroutput>GLFW_TRUE</computeroutput> if Vulkan is available, or <computeroutput>GLFW_FALSE</computeroutput> otherwise.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref>.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="vulkan_guide_1vulkan_support" kindref="member">Querying for Vulkan support</ref></para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5837" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/vulkan.c" bodystart="225" bodyend="229" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5837" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__vulkan_1gada152edc5bbbd0c2138728878632fd9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI const char **</type>
        <definition>GLFWAPI const char ** glfwGetRequiredInstanceExtensions</definition>
        <argsstring>(uint32_t *count)</argsstring>
        <name>glfwGetRequiredInstanceExtensions</name>
        <param>
          <type>uint32_t *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the Vulkan instance extensions required by GLFW. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns an array of names of Vulkan instance extensions required by GLFW for creating Vulkan surfaces for GLFW windows. If successful, the list will always contain <computeroutput>VK_KHR_surface</computeroutput>, so if you don&apos;t require any additional extensions you can pass this list directly to the <computeroutput><ref refid="struct_vk_instance_create_info" kindref="compound">VkInstanceCreateInfo</ref></computeroutput> struct.</para>
<para>If Vulkan is not available on the machine, this function returns <computeroutput>NULL</computeroutput> and generates a <ref refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" kindref="member">GLFW_API_UNAVAILABLE</ref> error. Call <ref refid="group__vulkan_1ga72e7c3757d9ff2333181a5569bb7c403" kindref="member">glfwVulkanSupported</ref> to check whether Vulkan is at least minimally available.</para>
<para>If Vulkan is available but no set of extensions allowing window surface creation was found, this function returns <computeroutput>NULL</computeroutput>. You may still use Vulkan for off-screen rendering and compute work.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of extensions in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of ASCII encoded extension names, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" kindref="member">GLFW_API_UNAVAILABLE</ref>.</para>
<para><simplesect kind="remark"><para>Additional extensions may be required by future versions of GLFW. You should check if any extensions you wish to enable are already in the returned array, as it is an error to specify an extension more than once in the <computeroutput><ref refid="struct_vk_instance_create_info" kindref="compound">VkInstanceCreateInfo</ref></computeroutput> struct.</para>
</simplesect>
<simplesect kind="remark"><para>@macos This function currently supports either the <computeroutput>VK_MVK_macos_surface</computeroutput> extension from MoltenVK or <computeroutput>VK_EXT_metal_surface</computeroutput> extension.</para>
</simplesect>
@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is guaranteed to be valid only until the library is terminated.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="vulkan_guide_1vulkan_ext" kindref="member">Querying required Vulkan extensions</ref> </para>
</simplesect>
<simplesect kind="see"><para>glfwCreateWindowSurface</para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2.</para>
</simplesect>
This function returns an array of names of Vulkan instance extensions required by GLFW for creating Vulkan surfaces for GLFW windows. If successful, the list will always contains <computeroutput>VK_KHR_surface</computeroutput>, so if you don&apos;t require any additional extensions you can pass this list directly to the <computeroutput><ref refid="struct_vk_instance_create_info" kindref="compound">VkInstanceCreateInfo</ref></computeroutput> struct.</para>
<para>If Vulkan is not available on the machine, this function returns <computeroutput>NULL</computeroutput> and generates a <ref refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" kindref="member">GLFW_API_UNAVAILABLE</ref> error. Call <ref refid="group__vulkan_1ga72e7c3757d9ff2333181a5569bb7c403" kindref="member">glfwVulkanSupported</ref> to check whether Vulkan is available.</para>
<para>If Vulkan is available but no set of extensions allowing window surface creation was found, this function returns <computeroutput>NULL</computeroutput>. You may still use Vulkan for off-screen rendering and compute work.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of extensions in the returned array. This is set to zero if an error occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of ASCII encoded extension names, or <computeroutput>NULL</computeroutput> if an <ref refid="intro_guide_1error_handling" kindref="member">error</ref> occurred.</para>
</simplesect>
@errors Possible errors include <ref refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" kindref="member">GLFW_NOT_INITIALIZED</ref> and <ref refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" kindref="member">GLFW_API_UNAVAILABLE</ref>.</para>
<para><simplesect kind="remark"><para>Additional extensions may be required by future versions of GLFW. You should check if any extensions you wish to enable are already in the returned array, as it is an error to specify an extension more than once in the <computeroutput><ref refid="struct_vk_instance_create_info" kindref="compound">VkInstanceCreateInfo</ref></computeroutput> struct.</para>
</simplesect>
@pointer_lifetime The returned array is allocated and freed by GLFW. You should not free it yourself. It is guaranteed to be valid only until the library is terminated.</para>
<para>@thread_safety This function may be called from any thread.</para>
<para><simplesect kind="see"><para><ref refid="vulkan_guide_1vulkan_ext" kindref="member">Querying required Vulkan extensions</ref> </para>
</simplesect>
<simplesect kind="see"><para>glfwCreateWindowSurface</para>
</simplesect>
<simplesect kind="since"><para>Added in version 3.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" line="5885" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/vulkan.c" bodystart="231" bodyend="247" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h" declline="5885" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The header of the GLFW 3 API. </para>
    </briefdescription>
    <detaileddescription>
<para>This is the header file of the GLFW 3 API. It defines all its types and declares all its functions.</para>
<para>For more information about how to use this file, see <ref refid="build_guide_1build_include" kindref="member">Including the GLFW header file</ref>. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>3.4<sp/>-<sp/>www.glfw.org</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>A<sp/>library<sp/>for<sp/>OpenGL,<sp/>window<sp/>and<sp/>input</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2002-2006<sp/>Marcus<sp/>Geelnard</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2006-2019<sp/>Camilla<sp/>Löwy<sp/>&lt;elmindreda@glfw.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_glfw3_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_glfw3_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Doxygen<sp/>documentation</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>Compiler-<sp/>and<sp/>platform-specific<sp/>preprocessor<sp/>work</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>we<sp/>on<sp/>Windows,<sp/>we<sp/>want<sp/>a<sp/>single<sp/>define<sp/>for<sp/>it.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_WIN32)<sp/>&amp;&amp;<sp/>(defined(__WIN32__)<sp/>||<sp/>defined(WIN32)<sp/>||<sp/>defined(__MINGW32__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>because<sp/>most<sp/>Windows<sp/>GLU<sp/>headers<sp/>need<sp/>wchar_t<sp/>and</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>the<sp/>macOS<sp/>OpenGL<sp/>header<sp/>blocks<sp/>the<sp/>definition<sp/>of<sp/>ptrdiff_t<sp/>by<sp/>glext.h.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>Include<sp/>it<sp/>unconditionally<sp/>to<sp/>avoid<sp/>surprising<sp/>side-effects.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>because<sp/>it<sp/>is<sp/>needed<sp/>by<sp/>Vulkan<sp/>and<sp/>related<sp/>functions.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>Include<sp/>it<sp/>unconditionally<sp/>to<sp/>avoid<sp/>surprising<sp/>side-effects.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GLFW_INCLUDE_VULKAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Vulkan<sp/>header<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>Vulkan<sp/>header<sp/>may<sp/>have<sp/>indirectly<sp/>included<sp/>windows.h<sp/>(because<sp/>of</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>VK_USE_PLATFORM_WIN32_KHR)<sp/>so<sp/>we<sp/>offer<sp/>our<sp/>replacement<sp/>symbols<sp/>after<sp/>it.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>customary<sp/>to<sp/>use<sp/>APIENTRY<sp/>for<sp/>OpenGL<sp/>function<sp/>pointer<sp/>declarations<sp/>on</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>all<sp/>platforms.<sp/><sp/>Additionally,<sp/>the<sp/>Windows<sp/>OpenGL<sp/>header<sp/>needs<sp/>APIENTRY.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(APIENTRY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>APIENTRY<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>APIENTRY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFW_APIENTRY_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>APIENTRY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>Windows<sp/>OpenGL<sp/>headers<sp/>need<sp/>this.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WINGDIAPI)<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>WINGDIAPI<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFW_WINGDIAPI_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>WINGDIAPI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>Windows<sp/>GLU<sp/>headers<sp/>need<sp/>this.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CALLBACK)<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CALLBACK<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFW_CALLBACK_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CALLBACK<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>the<sp/>chosen<sp/>OpenGL<sp/>or<sp/>OpenGL<sp/>ES<sp/>headers.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GLFW_INCLUDE_ES1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;GLES/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES/glext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(GLFW_INCLUDE_ES2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;GLES2/gl2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES2/gl2ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(GLFW_INCLUDE_ES3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;GLES3/gl3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES2/gl2ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(GLFW_INCLUDE_ES31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;GLES3/gl31.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES2/gl2ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(GLFW_INCLUDE_ES32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;GLES3/gl32.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES2/gl2ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(GLFW_INCLUDE_GLCOREARB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;OpenGL/gl3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;OpenGL/gl3ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*GLFW_INCLUDE_GLEXT*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else<sp/></highlight><highlight class="comment">/*__APPLE__*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GL/glcorearb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif<sp/></highlight><highlight class="comment">/*__APPLE__*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(GLFW_INCLUDE_GLU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;OpenGL/glu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else<sp/></highlight><highlight class="comment">/*__APPLE__*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;GL/glu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif<sp/></highlight><highlight class="comment">/*__APPLE__*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(GLFW_INCLUDE_NONE)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gl_h_)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gles1_gl_h_)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gles2_gl2_h_)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gles2_gl3_h_)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gles2_gl31_h_)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gles2_gl32_h_)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gl_glcorearb_h_)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gl2_h_)<sp/></highlight><highlight class="comment">/*legacy*/</highlight><highlight class="preprocessor"><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gl3_h_)<sp/></highlight><highlight class="comment">/*legacy*/</highlight><highlight class="preprocessor"><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gl31_h_)<sp/></highlight><highlight class="comment">/*legacy*/</highlight><highlight class="preprocessor"><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gl32_h_)<sp/></highlight><highlight class="comment">/*legacy*/</highlight><highlight class="preprocessor"><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__glcorearb_h_)<sp/></highlight><highlight class="comment">/*legacy*/</highlight><highlight class="preprocessor"><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__GL_H__)<sp/></highlight><highlight class="comment">/*non-standard*/</highlight><highlight class="preprocessor"><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__gltypes_h_)<sp/></highlight><highlight class="comment">/*non-standard*/</highlight><highlight class="preprocessor"><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(__glee_h_)<sp/></highlight><highlight class="comment">/*non-standard*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>!defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>GL_GLEXT_LEGACY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;OpenGL/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else<sp/></highlight><highlight class="comment">/*__APPLE__*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GL/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;GL/glext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif<sp/></highlight><highlight class="comment">/*__APPLE__*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>OpenGL<sp/>and<sp/>OpenGL<sp/>ES<sp/>headers<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GLFW_DLL)<sp/>&amp;&amp;<sp/>defined(_GLFW_BUILD_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>GLFW_DLL<sp/>must<sp/>be<sp/>defined<sp/>by<sp/>applications<sp/>that<sp/>are<sp/>linking<sp/>against<sp/>the<sp/>DLL</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/>*<sp/>version<sp/>of<sp/>the<sp/>GLFW<sp/>library.<sp/><sp/>_GLFW_BUILD_DLL<sp/>is<sp/>defined<sp/>by<sp/>the<sp/>GLFW</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/>*<sp/>configuration<sp/>header<sp/>when<sp/>compiling<sp/>the<sp/>DLL<sp/>version<sp/>of<sp/>the<sp/>library.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#error<sp/>&quot;You<sp/>must<sp/>not<sp/>have<sp/>both<sp/>GLFW_DLL<sp/>and<sp/>_GLFW_BUILD_DLL<sp/>defined&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GLFWAPI<sp/>is<sp/>used<sp/>to<sp/>declare<sp/>public<sp/>API<sp/>functions<sp/>for<sp/>export</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>from<sp/>the<sp/>DLL<sp/>/<sp/>shared<sp/>library<sp/>/<sp/>dynamic<sp/>library.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_GLFW_BUILD_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>building<sp/>GLFW<sp/>as<sp/>a<sp/>Win32<sp/>DLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(GLFW_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>calling<sp/>GLFW<sp/>as<sp/>a<sp/>Win32<sp/>DLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(_GLFW_BUILD_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>building<sp/>GLFW<sp/>as<sp/>a<sp/>shared<sp/>/<sp/>dynamic<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI<sp/>__attribute__((visibility(&quot;default&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>building<sp/>or<sp/>calling<sp/>GLFW<sp/>as<sp/>a<sp/>static<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>API<sp/>tokens</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_VERSION_MAJOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_VERSION_MINOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="group__init_1gab72ae2e2035d9ea461abc3495eac0502" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_VERSION_REVISION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group__init_1ga2744fbb29b5631bb28802dbe0cf36eba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_TRUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FALSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group__input_1gada11d965c4da13090ad336e030e4d11f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RELEASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="group__input_1ga2485743d0b59df3791c45951c4195265" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_PRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="group__input_1gac96fd3b9fc66c6f0eebaf6532595338f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_REPEAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_CENTERED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_RIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_LEFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_RIGHT_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_HAT_RIGHT<sp/>|<sp/>GLFW_HAT_UP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_RIGHT_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_HAT_RIGHT<sp/>|<sp/>GLFW_HAT_DOWN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_LEFT_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_HAT_LEFT<sp/><sp/>|<sp/>GLFW_HAT_UP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAT_LEFT_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GLFW_HAT_LEFT<sp/><sp/>|<sp/>GLFW_HAT_DOWN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>unknown<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_UNKNOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Printable<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SPACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_APOSTROPHE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>39<sp/><sp/></highlight><highlight class="comment">/*<sp/>&apos;<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_COMMA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>44<sp/><sp/></highlight><highlight class="comment">/*<sp/>,<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_MINUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>45<sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PERIOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>46<sp/><sp/></highlight><highlight class="comment">/*<sp/>.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SLASH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>47<sp/><sp/></highlight><highlight class="comment">/*<sp/>/<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>49</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>51</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>52</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>53</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>54</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>56</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>57</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SEMICOLON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>59<sp/><sp/></highlight><highlight class="comment">/*<sp/>;<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_EQUAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>61<sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_A<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_B<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>66</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>67</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>68</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_E<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>69</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_G<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>71</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>72</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>73</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_J<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>74</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_K<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>75</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>76</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_M<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>77</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>78</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_O<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>79</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_P<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_Q<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>82</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_S<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>83</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>84</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>85</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_V<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>86</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>87</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>88</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>89</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_Z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>90</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_BRACKET<sp/><sp/><sp/><sp/><sp/><sp/><sp/>91<sp/><sp/></highlight><highlight class="comment">/*<sp/>[<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_BACKSLASH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>92<sp/><sp/></highlight><highlight class="comment">/*<sp/>\<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_BRACKET<sp/><sp/><sp/><sp/><sp/><sp/>93<sp/><sp/></highlight><highlight class="comment">/*<sp/>]<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_GRAVE_ACCENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>96<sp/><sp/></highlight><highlight class="comment">/*<sp/>`<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_WORLD_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>161<sp/></highlight><highlight class="comment">/*<sp/>non-US<sp/>#1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_WORLD_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>162<sp/></highlight><highlight class="comment">/*<sp/>non-US<sp/>#2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_ESCAPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_ENTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_TAB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>258</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_BACKSPACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>259</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_INSERT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>260</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_DELETE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>261</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>262</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>263</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>264</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>265</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PAGE_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>266</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PAGE_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>267</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_HOME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>268</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>269</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_CAPS_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>280</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SCROLL_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>281</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_NUM_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>282</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PRINT_SCREEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>283</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PAUSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>284</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>290</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>291</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>292</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>293</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>294</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>295</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>296</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>297</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>298</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>299</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>301</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F13<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>302</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>303</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>304</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>305</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F17<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>306</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F18<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>307</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F19<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>308</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F20<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>309</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F21<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>310</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F22<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>311</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F23<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>312</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F24<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>313</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F25<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>314</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>320</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>321</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>322</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>323</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>324</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>325</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>326</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>327</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>328</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>329</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_DECIMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>330</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_DIVIDE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>331</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_MULTIPLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>332</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_SUBTRACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>333</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_ADD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>334</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_ENTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>335</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_EQUAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>336</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>340</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_ALT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>342</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_SUPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>343</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>344</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/>345</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_ALT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>346</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_SUPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>347</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_MENU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>348</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_KEY_MENU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="group__mods_1ga14994d3196c290aaa347248e51740274" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOD_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="group__mods_1ga6ed94871c3208eefd85713fa929d45aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOD_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="group__mods_1gad2acd5633463c29e07008687ea73c0f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOD_ALT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="group__mods_1ga6b64ba10ea0227cf6f42efd0a220aba1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOD_SUPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="group__mods_1gaefeef8fcf825a6e43e241b337897200f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOD_CAPS_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="group__mods_1ga64e020b8a42af8376e944baf61feecbe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOD_NUM_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_LAST<sp/><sp/><sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_LEFT<sp/><sp/><sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_RIGHT<sp/><sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_MIDDLE<sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_13<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_LAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_JOYSTICK_16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_A<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_B<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_LEFT_BUMPER<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER<sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_BACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_GUIDE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_LEFT_THUMB<sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_RIGHT_THUMB<sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_DPAD_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_DPAD_RIGHT<sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_DPAD_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_DPAD_LEFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_LAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_GAMEPAD_BUTTON_DPAD_LEFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_CROSS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_GAMEPAD_BUTTON_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_CIRCLE<sp/><sp/><sp/><sp/><sp/><sp/>GLFW_GAMEPAD_BUTTON_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_SQUARE<sp/><sp/><sp/><sp/><sp/><sp/>GLFW_GAMEPAD_BUTTON_X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_BUTTON_TRIANGLE<sp/><sp/><sp/><sp/>GLFW_GAMEPAD_BUTTON_Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_AXIS_LEFT_X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_AXIS_LEFT_Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_AXIS_RIGHT_X<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_AXIS_RIGHT_Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_AXIS_LEFT_TRIGGER<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GAMEPAD_AXIS_LAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="group__errors_1gafa30deee5db4d69c4c93d116ed87dbf4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NOT_INITIALIZED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_CURRENT_CONTEXT<sp/><sp/><sp/><sp/><sp/>0x00010002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_INVALID_ENUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_INVALID_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="group__errors_1ga9023953a2bcb98c2906afd071d21ee7f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OUT_OF_MEMORY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729" refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_API_UNAVAILABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_VERSION_UNAVAILABLE<sp/><sp/><sp/><sp/>0x00010007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_PLATFORM_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="group__errors_1ga196e125ef261d94184e2b55c05762f14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FORMAT_UNAVAILABLE<sp/><sp/><sp/><sp/><sp/>0x00010009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="group__errors_1gacff24d2757da752ae4c80bf452356487" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_WINDOW_CONTEXT<sp/><sp/><sp/><sp/><sp/><sp/>0x0001000A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795" refid="group__errors_1ga09d6943923a70ddef3a085f5baee786c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR_UNAVAILABLE<sp/><sp/><sp/><sp/><sp/>0x0001000B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FEATURE_UNAVAILABLE<sp/><sp/><sp/><sp/>0x0001000C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="group__errors_1ga5dda77e023e83151e8bd55a6758f946a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FEATURE_UNIMPLEMENTED<sp/><sp/>0x0001000D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="group__window_1ga54ddb14825a1541a56e22afb5f832a9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FOCUSED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="group__window_1ga39d44b7c056e55e581355a92d240b58a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ICONIFIED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="group__window_1gadba13c7a1b3aa40831eb2beedbd5bd1d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RESIZABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849" refid="group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="group__window_1ga21b854d36314c94d65aed84405b2f25e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DECORATED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="group__window_1ga9d9874fc928200136a6dcdad726aa252" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_AUTO_ICONIFY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867" refid="group__window_1ga7fb0be51407783b41adbf5bec0b09d80" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FLOATING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873" refid="group__window_1gad8ccb396253ad0b72c6d4c917eb38a03" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MAXIMIZED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878" refid="group__window_1ga5ac0847c0aa0b3619f2855707b8a7a77" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CENTER_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="group__window_1ga60a0578c3b9449027d683a9c6abb9f14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_TRANSPARENT_FRAMEBUFFER<sp/>0x0002000A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890" refid="group__window_1ga8665c71c6fa3d22425c6a0e8a3f89d8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HOVERED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002000B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="group__window_1gafa94b1da34bfd6488c0d709761504dfc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FOCUS_ON_SHOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002000C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="903" refid="group__window_1ga88981797d29800808ec242274ab5c03a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_PASSTHROUGH<sp/><sp/><sp/><sp/><sp/><sp/>0x0002000D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="group__window_1gaf78ed8e417dbcc1e354906cc2708c982" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RED_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="group__window_1gafba3b72638c914e5fb8a237dd4c50d4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GREEN_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="group__window_1gab292ea403db6d514537b515311bf9ae3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_BLUE_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924" refid="group__window_1gafed79a3f468997877da86c449bd43e8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ALPHA_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="group__window_1ga318a55eac1fee57dfe593b6d38149d07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DEPTH_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934" refid="group__window_1ga5339890a45a1fb38e93cb9fcc5fd069d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STENCIL_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="group__window_1gaead34a9a683b2bc20eecf30ba738bfc6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_RED_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="group__window_1ga65713cee1326f8e9d806fdf93187b471" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_GREEN_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949" refid="group__window_1ga22bbe9104a8ce1f8b88fb4f186aa36ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_BLUE_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954" refid="group__window_1gae829b55591c18169a40ab4067a041b1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_ALPHA_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959" refid="group__window_1gab05108c5029443b371112b031d1fa174" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_AUX_BUFFERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="group__window_1ga83d991efca02537e2d69969135b77b03" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STEREO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="group__window_1ga2cdf86fdcb7722fb8829c4e201607535" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_SAMPLES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974" refid="group__window_1ga444a8f00414a63220591f9fdb7b5642b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_SRGB_CAPABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="group__window_1ga0f20825e6e47ee8ba389024519682212" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_REFRESH_RATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984" refid="group__window_1ga714a5d569e8a274ea58fdfa020955339" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DOUBLEBUFFER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="group__window_1ga649309cf72a3d3de5b1348ca7936c95b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CLIENT_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00022001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997" refid="group__window_1gafe5e4922de1f9932d7e9849bb053b0c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_VERSION_MAJOR<sp/><sp/>0x00022002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003" refid="group__window_1ga31aca791e4b538c4e4a771eb95cc2d07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_VERSION_MINOR<sp/><sp/>0x00022003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009" refid="group__window_1gafb9475071aa77c6fb05ca5a5c8678a08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_REVISION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00022004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="group__window_1gade3593916b4c507900aa2d6844810e00" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_ROBUSTNESS<sp/><sp/><sp/><sp/><sp/>0x00022005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021" refid="group__window_1ga13d24b12465da8b28985f46c8557925b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_FORWARD_COMPAT<sp/><sp/>0x00022006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027" refid="group__window_1ga8d55e3afec73c7de0509c3b7ad1d9e3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_DEBUG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00022007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="group__window_1ga87ec2df0b915201e950ca42d5d0831e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_DEBUG_CONTEXT<sp/><sp/><sp/>GLFW_CONTEXT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="group__window_1ga44f3a6b4261fbe351e0b950b0f372e12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_PROFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00022008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="group__window_1ga72b648a8378fe3310c7c7bbecc0f7be6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_RELEASE_BEHAVIOR<sp/>0x00022009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="group__window_1ga5a52fdfd46d8249c211f923675728082" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_NO_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002200A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056" refid="group__window_1ga5154cebfcd831c1cc63a4d5ac9bb4486" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_CREATION_API<sp/><sp/><sp/>0x0002200B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060" refid="group__window_1ga620bc4280c7eab81ac9f02204500ed47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_SCALE_TO_MONITOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002200C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="group__window_1gab6ef2d02eb55800d249ccf1af253c35e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_COCOA_RETINA_FRAMEBUFFER<sp/>0x00023001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068" refid="group__window_1ga70fa0fbc745de6aa824df79a580e84b5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_COCOA_FRAME_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00023002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072" refid="group__window_1ga53c84ed2ddd94e15bbd44b1f6f7feafc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_COCOA_GRAPHICS_SWITCHING<sp/>0x00023003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="group__window_1gae5a9ea2fccccd92edbd343fc56461114" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_X11_CLASS_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00024001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080" refid="group__window_1ga494c3c0d911e4b860b946530a3e389e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_X11_INSTANCE_NAME<sp/><sp/><sp/><sp/><sp/><sp/>0x00024002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_WIN32_KEYBOARD_MENU<sp/><sp/><sp/><sp/>0x00025001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00030001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_ES_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00030002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_ROBUSTNESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_RESET_NOTIFICATION<sp/><sp/>0x00031001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_LOSE_CONTEXT_ON_RESET<sp/><sp/>0x00031002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_ANY_PROFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_CORE_PROFILE<sp/><sp/><sp/><sp/>0x00032001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_COMPAT_PROFILE<sp/><sp/>0x00032002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00033001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STICKY_KEYS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00033002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STICKY_MOUSE_BUTTONS<sp/><sp/><sp/>0x00033003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_LOCK_KEY_MODS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00033004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RAW_MOUSE_MOTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00033005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00034001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR_HIDDEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00034002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00034003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANY_RELEASE_BEHAVIOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RELEASE_BEHAVIOR_FLUSH<sp/>0x00035001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RELEASE_BEHAVIOR_NONE<sp/><sp/>0x00035002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NATIVE_CONTEXT_API<sp/><sp/><sp/><sp/><sp/>0x00036001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_EGL_CONTEXT_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OSMESA_CONTEXT_API<sp/><sp/><sp/><sp/><sp/>0x00036003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE_NONE<sp/><sp/><sp/><sp/>0x00037001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE_OPENGL<sp/><sp/>0x00037002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE_OPENGLES<sp/>0x00037003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE_D3D9<sp/><sp/><sp/><sp/>0x00037004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE_D3D11<sp/><sp/><sp/>0x00037005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE_VULKAN<sp/><sp/>0x00037007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE_METAL<sp/><sp/><sp/>0x00037008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135" refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ARROW_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="group__shapes_1ga36185f4375eaada1b04e431244774c86" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_IBEAM_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145" refid="group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CROSSHAIR_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150" refid="group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_POINTING_HAND_CURSOR<sp/><sp/><sp/>0x00036004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156" refid="group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RESIZE_EW_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162" refid="group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RESIZE_NS_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177" refid="group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RESIZE_NWSE_CURSOR<sp/><sp/><sp/><sp/><sp/>0x00036007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="group__shapes_1gab06bba3b407f92807ba9b48de667a323" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RESIZE_NESW_CURSOR<sp/><sp/><sp/><sp/><sp/>0x00036008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198" refid="group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RESIZE_ALL_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/>0x00036009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210" refid="group__shapes_1ga297c503095b034bc8891393b637844b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NOT_ALLOWED_CURSOR<sp/><sp/><sp/><sp/><sp/>0x0003600A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215" refid="group__shapes_1gabb3eb0109f11bb808fc34659177ca962" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HRESIZE_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_RESIZE_EW_CURSOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="group__shapes_1gaf024f0e1ff8366fb2b5c260509a1fce5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_VRESIZE_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_RESIZE_NS_CURSOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="group__shapes_1ga1db35e20849e0837c82e3dc1fd797263" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_HAND_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_POINTING_HAND_CURSOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONNECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00040001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DISCONNECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00040002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237" refid="group__init_1gab9c0534709fda03ec8959201da3a9a18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_HAT_BUTTONS<sp/><sp/><sp/>0x00050001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242" refid="group__init_1gaec269b24cf549ab46292c0125d8bbdce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANGLE_PLATFORM_TYPE<sp/><sp/><sp/><sp/>0x00050002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247" refid="group__init_1gab937983147a3158d45f88fad7129d9f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_COCOA_CHDIR_RESOURCES<sp/><sp/>0x00051001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252" refid="group__init_1ga71e0b4ce2f2696a84a9b8c5e12dc70cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_COCOA_MENUBAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00051002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DONT_CARE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>API<sp/>types</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274" refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" kindref="member">GLFWglproc</ref>)(void);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288" refid="group__vulkan_1ga70c01918dc9d233a4fbe0681a43018af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__vulkan_1ga70c01918dc9d233a4fbe0681a43018af" kindref="member">GLFWvkproc</ref>)(void);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300" refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref><sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312" refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324" refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref><sp/><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348" refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" kindref="member">GLFWerrorfun</ref>)(int,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371" refid="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" kindref="member">GLFWwindowposfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int,int);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393" refid="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" kindref="member">GLFWwindowsizefun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int,int);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413" refid="group__window_1ga5c46f9d2435a22b531382ea642216a61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1ga5c46f9d2435a22b531382ea642216a61" kindref="member">GLFWwindowclosefun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433" refid="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" kindref="member">GLFWwindowrefreshfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454" refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" kindref="member">GLFWwindowfocusfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475" refid="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" kindref="member">GLFWwindowiconifyfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496" refid="group__window_1ga82868db51248e7bc2deb2082336e6c70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1ga82868db51248e7bc2deb2082336e6c70" kindref="member">GLFWwindowmaximizefun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517" refid="group__window_1ga54302eebe2f81518a544723a1d805388" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1ga54302eebe2f81518a544723a1d805388" kindref="member">GLFWframebuffersizefun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int,int);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538" refid="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" kindref="member">GLFWwindowcontentscalefun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,float,float);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564" refid="group__input_1gac4312f2199caa15988cebb59ec530373" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1gac4312f2199caa15988cebb59ec530373" kindref="member">GLFWmousebuttonfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int,int,int);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587" refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" kindref="member">GLFWcursorposfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,double,double);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608" refid="group__input_1ga945bb284410b64c49ecc50195692720a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1ga945bb284410b64c49ecc50195692720a" kindref="member">GLFWcursorenterfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629" refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" kindref="member">GLFWscrollfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,double,double);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655" refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" kindref="member">GLFWkeyfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int,int,int,int);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676" refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" kindref="member">GLFWcharfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703" refid="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" kindref="member">GLFWcharmodsfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,int);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727" refid="group__input_1ga76a7371bc7edc035212b86ce85390fd2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1ga76a7371bc7edc035212b86ce85390fd2" kindref="member">GLFWdropfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,int,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*[]);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748" refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" kindref="member">GLFWmonitorfun</ref>)(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*,int);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769" refid="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" kindref="member">GLFWjoystickfun</ref>)(int,int);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784" refid="struct_g_l_f_wvidmode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref></highlight></codeline>
<codeline lineno="1785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1788" refid="struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="1791" refid="struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1794" refid="struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b" kindref="member">redBits</ref>;</highlight></codeline>
<codeline lineno="1797" refid="struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa" kindref="member">greenBits</ref>;</highlight></codeline>
<codeline lineno="1800" refid="struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047" kindref="member">blueBits</ref>;</highlight></codeline>
<codeline lineno="1803" refid="struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649" kindref="member">refreshRate</ref>;</highlight></codeline>
<codeline lineno="1804" refid="group__monitor_1ga902c2816ac9b34b757282daab59b2565" refkind="member"><highlight class="normal">}<sp/><ref refid="group__monitor_1ga902c2816ac9b34b757282daab59b2565" kindref="member">GLFWvidmode</ref>;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818" refid="struct_g_l_f_wgammaramp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref></highlight></codeline>
<codeline lineno="1819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1822" refid="struct_g_l_f_wgammaramp_1a87eabbc644cdb77145caf4a0a1b5d9bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wgammaramp_1a87eabbc644cdb77145caf4a0a1b5d9bd" kindref="member">red</ref>;</highlight></codeline>
<codeline lineno="1825" refid="struct_g_l_f_wgammaramp_1acea1bf88573f37cb0583a0fc005bbd0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wgammaramp_1acea1bf88573f37cb0583a0fc005bbd0c" kindref="member">green</ref>;</highlight></codeline>
<codeline lineno="1828" refid="struct_g_l_f_wgammaramp_1abd4ac5a186d9c000b9313099898df32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wgammaramp_1abd4ac5a186d9c000b9313099898df32a" kindref="member">blue</ref>;</highlight></codeline>
<codeline lineno="1831" refid="struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1832" refid="group__monitor_1ga939cf093cb0af0498b7b54dc2e181404" refkind="member"><highlight class="normal">}<sp/><ref refid="group__monitor_1ga939cf093cb0af0498b7b54dc2e181404" kindref="member">GLFWgammaramp</ref>;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847" refid="struct_g_l_f_wimage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref></highlight></codeline>
<codeline lineno="1848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1851" refid="struct_g_l_f_wimage_1af6a71cc999fe6d3aea31dd7e9687d835" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wimage_1af6a71cc999fe6d3aea31dd7e9687d835" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="1854" refid="struct_g_l_f_wimage_1a0b7d95368f0c80d5e5c9875057c7dbec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wimage_1a0b7d95368f0c80d5e5c9875057c7dbec" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1857" refid="struct_g_l_f_wimage_1a65a8d70274a35e7342f87703e233a70c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wimage_1a65a8d70274a35e7342f87703e233a70c" kindref="member">pixels</ref>;</highlight></codeline>
<codeline lineno="1858" refid="group__window_1ga7cc0a09de172fa7250872046f8c4d2ca" refkind="member"><highlight class="normal">}<sp/><ref refid="group__window_1ga7cc0a09de172fa7250872046f8c4d2ca" kindref="member">GLFWimage</ref>;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871" refid="struct_g_l_f_wgamepadstate" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_l_f_wgamepadstate" kindref="compound">GLFWgamepadstate</ref></highlight></codeline>
<codeline lineno="1872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1876" refid="struct_g_l_f_wgamepadstate_1a27e9896b51c65df15fba2c7139bfdb9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgamepadstate_1a27e9896b51c65df15fba2c7139bfdb9a" kindref="member">buttons</ref>[15];</highlight></codeline>
<codeline lineno="1880" refid="struct_g_l_f_wgamepadstate_1a8b2c8939b1d31458de5359998375c189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgamepadstate_1a8b2c8939b1d31458de5359998375c189" kindref="member">axes</ref>[6];</highlight></codeline>
<codeline lineno="1881" refid="group__input_1ga61acfb1f28f751438dd221225c5e725d" refkind="member"><highlight class="normal">}<sp/><ref refid="group__input_1ga61acfb1f28f751438dd221225c5e725d" kindref="member">GLFWgamepadstate</ref>;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>API<sp/>functions</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__init_1gac85e41aab1c2bd6fc740f4377d9e7e9f" kindref="member">glfwInitHint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>major,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>minor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rev);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__init_1gae5952184a0db36e24d1de7805b8b0945" kindref="member">glfwGetVersionString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__init_1gaee7bac4c7e1b2769207747c1b5ae2f9e" kindref="member">glfwGetError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>description);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal">GLFWAPI<sp/><ref refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" kindref="member">GLFWerrorfun</ref><sp/><ref refid="group__init_1ga746e2757d069eaea423349aca6ae097a" kindref="member">glfwSetErrorCallback</ref>(<ref refid="group__init_1gaa684e3f8b44b6a35000119d524d49e6d" kindref="member">GLFWerrorfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal">GLFWAPI<sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>**<sp/><ref refid="group__monitor_1ga8c78e5db186ee10d00c053faf81998af" kindref="member">glfwGetMonitors</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>count);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal">GLFWAPI<sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/><ref refid="group__monitor_1ga34befff4f9f0fae09dd8de6fb0eb4f3e" kindref="member">glfwGetPrimaryMonitor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1ga45b5481a614ad7beb2aade9746d07563" kindref="member">glfwGetMonitorPos</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ypos);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1ga5a3ac0f6e3786df47aabccfb5760b31d" kindref="member">glfwGetMonitorWorkarea</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ypos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1gad0e93a9e42b32394369cabbbdc1ab702" kindref="member">glfwGetMonitorPhysicalSize</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>widthMM,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>heightMM);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff" kindref="member">glfwGetMonitorContentScale</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>xscale,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>yscale);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__monitor_1ga6d0ee079c807cd123b56dc3fc01e8fd9" kindref="member">glfwGetMonitorName</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1ga6d89c74c1c293f0ab78a00c3c6d1ae44" kindref="member">glfwSetMonitorUserPointer</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pointer);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__monitor_1ga13cb11e8f507dbc477e10a040f0fad7f" kindref="member">glfwGetMonitorUserPointer</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal">GLFWAPI<sp/><ref refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" kindref="member">GLFWmonitorfun</ref><sp/><ref refid="group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1" kindref="member">glfwSetMonitorCallback</ref>(<ref refid="group__monitor_1gacc7165513fd258601c4cb763c1369693" kindref="member">GLFWmonitorfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/><ref refid="group__monitor_1ga7eaea6132f15e9b5d47eb94f88547f79" kindref="member">glfwGetVideoModes</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>count);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/><ref refid="group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e" kindref="member">glfwGetVideoMode</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1ga3e4ab484476c935b4cd0bf49a5c429d6" kindref="member">glfwSetGamma</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref>*<sp/><ref refid="group__monitor_1gafe7b41852c1a14fe978f0e5381969885" kindref="member">glfwGetGammaRamp</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" kindref="member">glfwSetGammaRamp</ref>(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref>*<sp/>ramp);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga3c2270562d7ba13d92680ba1090adafe" kindref="member">glfwWindowHintString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classvalue" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/><ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title,<sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>share);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaa6162f67dfa38b8beda2fea623649332" kindref="member">glfwWindowShouldClose</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" kindref="member">glfwSetWindowShouldClose</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga861ed3414ab8120e2f74151a666ed1dc" kindref="member">glfwSetWindowTitle</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga182987a1a62a41a924842b9473d560df" kindref="member">glfwSetWindowIcon</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref>*<sp/>images);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ypos);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga8af814fc98d786d1de2505b40b707de8" kindref="member">glfwSetWindowSizeLimits</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minwidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minheight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxwidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxheight);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac" kindref="member">glfwSetWindowAspectRatio</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denom);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height);</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaad46cdaae2eb732f68d3a1499a7c5409" kindref="member">glfwGetWindowFrameSize</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>top,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>right,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>bottom);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee" kindref="member">glfwGetWindowContentScale</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>xscale,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>yscale);</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__window_1gad124d57a1c1c519f60c9765cd0c2a89c" kindref="member">glfwGetWindowOpacity</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga62a784fe328f227727cbcd0d07480ff3" kindref="member">glfwSetWindowOpacity</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>opacity);</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" kindref="member">glfwIconifyWindow</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga4f825a55367d3fabde3d06e7f30128e8" kindref="member">glfwMaximizeWindow</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" kindref="member">glfwShowWindow</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaa17e287d521544bdeceafa09ac036e20" kindref="member">glfwHideWindow</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga0da0e3daaa2d100f44a115c09077b510" kindref="member">glfwFocusWindow</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gad0c9629abb49447bedd28080642b8538" kindref="member">glfwRequestWindowAttention</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal">GLFWAPI<sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/><ref refid="group__window_1gad441645a53bc9274a0ee163d40f0c637" kindref="member">glfwGetWindowMonitor</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refreshRate);</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attrib);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gad39f43f07856efcf3d656426a9284c75" kindref="member">glfwSetWindowAttrib</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attrib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gacc9e68faee3c1763b54cd9bc405cf43e" kindref="member">glfwSetWindowUserPointer</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pointer);</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__window_1gad07c1ae8809c4f47e55ad8cc3f60e794" kindref="member">glfwGetWindowUserPointer</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" kindref="member">GLFWwindowposfun</ref><sp/><ref refid="group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6" kindref="member">glfwSetWindowPosCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1gaffb62b9d3f7dc2d6e7c89d3d76142f13" kindref="member">GLFWwindowposfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" kindref="member">GLFWwindowsizefun</ref><sp/><ref refid="group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5" kindref="member">glfwSetWindowSizeCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1gaac00a2d1d82875c2bac1af223e9d3c58" kindref="member">GLFWwindowsizefun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1ga5c46f9d2435a22b531382ea642216a61" kindref="member">GLFWwindowclosefun</ref><sp/><ref refid="group__window_1ga693d778815971a06e1a5a7bcdeff3d36" kindref="member">glfwSetWindowCloseCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1ga5c46f9d2435a22b531382ea642216a61" kindref="member">GLFWwindowclosefun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" kindref="member">GLFWwindowrefreshfun</ref><sp/><ref refid="group__window_1ga62bfa902c07a03b8ad9be37da31a4be7" kindref="member">glfwSetWindowRefreshCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1ga7747bf66194241cff4f12d3500d8f9cd" kindref="member">GLFWwindowrefreshfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" kindref="member">GLFWwindowfocusfun</ref><sp/><ref refid="group__window_1gacce1c4dd273b5c4c60b05599f8725b4e" kindref="member">glfwSetWindowFocusCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1ga6b15f80f61ff396d89720be2a183ca8a" kindref="member">GLFWwindowfocusfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" kindref="member">GLFWwindowiconifyfun</ref><sp/><ref refid="group__window_1ga3e9f355edb6b9247149ddea2335eda69" kindref="member">glfwSetWindowIconifyCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1gaaa80beaa1d108e6bc09f666e186e735c" kindref="member">GLFWwindowiconifyfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1ga82868db51248e7bc2deb2082336e6c70" kindref="member">GLFWwindowmaximizefun</ref><sp/><ref refid="group__window_1gae77b3960dcd40514fb7b2b8a6eb98137" kindref="member">glfwSetWindowMaximizeCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1ga82868db51248e7bc2deb2082336e6c70" kindref="member">GLFWwindowmaximizefun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1ga54302eebe2f81518a544723a1d805388" kindref="member">GLFWframebuffersizefun</ref><sp/><ref refid="group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0" kindref="member">glfwSetFramebufferSizeCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1ga54302eebe2f81518a544723a1d805388" kindref="member">GLFWframebuffersizefun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" kindref="member">GLFWwindowcontentscalefun</ref><sp/><ref refid="group__window_1gac6edcddbe785445d0d2b7b7be500836e" kindref="member">glfwSetWindowContentScaleCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__window_1gaca2e04ad85e70a646f07a870c2cad4ee" kindref="member">GLFWwindowcontentscalefun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"></highlight></codeline>
<codeline lineno="4168"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga05223a0a4c5e50f10f289e60398153aa" kindref="member">glfwWaitEventsTimeout</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gad6f6b997278c91c43b35970eb9713d7e" kindref="member">glfwPostEmptyEvent</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga1248dd5b1e566b2817e71547564d6af9" kindref="member">glfwGetInputMode</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga9b83d8957a566b22b3b768c7d1d4be03" kindref="member">glfwRawMouseMotionSupported</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga98293ec4493cfe8e7df8ff22ee402b46" kindref="member">glfwGetKeyName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode);</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga3ea3b9d74f8352506068620980e01fe5" kindref="member">glfwGetKeyScancode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga6da5efb04f700c312a57a169fa9393a0" kindref="member">glfwGetMouseButton</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gad289438eb7cf53d11eca685373f44105" kindref="member">glfwGetCursorPos</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ypos);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight></codeline>
<codeline lineno="4544"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" kindref="member">glfwSetCursorPos</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ypos);</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight></codeline>
<codeline lineno="4582"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/><ref refid="group__input_1ga21fc9f020f062db88813aa722c30ba2c" kindref="member">glfwCreateCursor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref>*<sp/>image,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xhot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yhot);</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight></codeline>
<codeline lineno="4630"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/><ref refid="group__input_1gab7c5b6023b39a0021b1fcdabd1d15f09" kindref="member">glfwCreateStandardCursor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape);</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref>(<ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/>cursor);</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/>cursor);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight></codeline>
<codeline lineno="4734"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" kindref="member">GLFWkeyfun</ref><sp/><ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga9c6c9d019ac11d888e45b11b14772659" kindref="member">GLFWkeyfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"></highlight></codeline>
<codeline lineno="4777"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" kindref="member">GLFWcharfun</ref><sp/><ref refid="group__input_1gad3d7e6e3134fa034cc1604162579585e" kindref="member">glfwSetCharCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga2c4c70bfb3fb990182a4591cd21a374d" kindref="member">GLFWcharfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"></highlight></codeline>
<codeline lineno="4819"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" kindref="member">GLFWcharmodsfun</ref><sp/><ref refid="group__input_1ga359a8529c2eb06e6e2173168f30ac99c" kindref="member">glfwSetCharModsCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga78c3d45fdf9aaef0b8d670bf2a9519e2" kindref="member">GLFWcharmodsfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"></highlight></codeline>
<codeline lineno="4856"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1gac4312f2199caa15988cebb59ec530373" kindref="member">GLFWmousebuttonfun</ref><sp/><ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1gac4312f2199caa15988cebb59ec530373" kindref="member">GLFWmousebuttonfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"></highlight></codeline>
<codeline lineno="4888"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" kindref="member">GLFWcursorposfun</ref><sp/><ref refid="group__input_1ga74124d0eff27040fd10e4df9e17d129c" kindref="member">glfwSetCursorPosCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga081a67dfb879e14707a5abd7de242b8a" kindref="member">GLFWcursorposfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"></highlight></codeline>
<codeline lineno="4919"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga945bb284410b64c49ecc50195692720a" kindref="member">GLFWcursorenterfun</ref><sp/><ref refid="group__input_1gacdb3490e374c8bc08549c6f173ffa7c2" kindref="member">glfwSetCursorEnterCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga945bb284410b64c49ecc50195692720a" kindref="member">GLFWcursorenterfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" kindref="member">GLFWscrollfun</ref><sp/><ref refid="group__input_1gaa786b59f19ad8525d251cda8e0d7d29b" kindref="member">glfwSetScrollCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga077345c3a10d906b2b3f2d550ae02971" kindref="member">GLFWscrollfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"></highlight></codeline>
<codeline lineno="4990"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1ga76a7371bc7edc035212b86ce85390fd2" kindref="member">GLFWdropfun</ref><sp/><ref refid="group__input_1ga8bab819b7b0ef9bc1a38e58c577c1d13" kindref="member">glfwSetDropCallback</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/><ref refid="group__input_1ga76a7371bc7edc035212b86ce85390fd2" kindref="member">GLFWdropfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1gacb1b7dfd79df673d48814c06fc436eff" kindref="member">glfwJoystickPresent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid);</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight></codeline>
<codeline lineno="5047"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="group__input_1gacd46b9f8d9d12dc50e45d7fe0ad32b23" kindref="member">glfwGetJoystickAxes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>count);</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga91cdcb462a3e17c647a55496eff7d0ee" kindref="member">glfwGetJoystickButtons</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>count);</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"></highlight></codeline>
<codeline lineno="5145"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1gaf0f00897c4d010af7bd1aea1f6193e6f" kindref="member">glfwGetJoystickHats</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>count);</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"></highlight></codeline>
<codeline lineno="5176"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga4b46e05195db3c2fc336cf69fc6c7128" kindref="member">glfwGetJoystickName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid);</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"></highlight></codeline>
<codeline lineno="5217"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga2c6a8b6e27cb8a8be7a0d020d9fd051c" kindref="member">glfwGetJoystickGUID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid);</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"></highlight></codeline>
<codeline lineno="5243"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga3a8999c2d2634c7bcf4a04f1ec64895c" kindref="member">glfwSetJoystickUserPointer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pointer);</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga95c348e4b4308c44c59825def0d1367e" kindref="member">glfwGetJoystickUserPointer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"></highlight></codeline>
<codeline lineno="5295"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1gac9720b6e5062a5fc5fc0bb4be6dc04a0" kindref="member">glfwJoystickIsGamepad</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid);</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"></highlight></codeline>
<codeline lineno="5331"><highlight class="normal">GLFWAPI<sp/><ref refid="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" kindref="member">GLFWjoystickfun</ref><sp/><ref refid="group__input_1gad90f60a4c0e04629928305b53e96154a" kindref="member">glfwSetJoystickCallback</ref>(<ref refid="group__input_1gafc05b099b23b3b23a992bdf6d77c191a" kindref="member">GLFWjoystickfun</ref><sp/>callback);</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga276a2aec236a671a99f6f0a9be7fa3fc" kindref="member">glfwUpdateGamepadMappings</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"></highlight></codeline>
<codeline lineno="5395"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1gab7a03c6ca8aa55a52b750d862d106ffe" kindref="member">glfwGetGamepadName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid);</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"></highlight></codeline>
<codeline lineno="5433"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga6e138d3b0761546f5a12546f367501d6" kindref="member">glfwGetGamepadState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid,<sp/><ref refid="struct_g_l_f_wgamepadstate" kindref="compound">GLFWgamepadstate</ref>*<sp/>state);</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"></highlight></codeline>
<codeline lineno="5458"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga315b28b05797d00fe7cdf1ecfdc638dc" kindref="member">glfwGetClipboardString</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" kindref="member">glfwGetTime</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"></highlight></codeline>
<codeline lineno="5570"><highlight class="normal">GLFWAPI<sp/>uint64_t<sp/><ref refid="group__input_1gaa00c3e32227eb70b3968fca0bfe4ae26" kindref="member">glfwGetTimerValue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"></highlight></codeline>
<codeline lineno="5590"><highlight class="normal">GLFWAPI<sp/>uint64_t<sp/><ref refid="group__input_1gaa92d10b10013372778efbf6367714371" kindref="member">glfwGetTimerFrequency</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"></highlight></codeline>
<codeline lineno="5628"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"></highlight></codeline>
<codeline lineno="5649"><highlight class="normal">GLFWAPI<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/><ref refid="group__context_1gab5fde1ef6238bfb82c7a2293f86172de" kindref="member">glfwGetCurrentContext</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"></highlight></codeline>
<codeline lineno="5683"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window);</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"></highlight></codeline>
<codeline lineno="5729"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interval);</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"></highlight></codeline>
<codeline lineno="5767"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension);</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"></highlight></codeline>
<codeline lineno="5809"><highlight class="normal">GLFWAPI<sp/><ref refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" kindref="member">GLFWglproc</ref><sp/><ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>procname);</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__vulkan_1ga72e7c3757d9ff2333181a5569bb7c403" kindref="member">glfwVulkanSupported</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"></highlight></codeline>
<codeline lineno="5885"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><ref refid="group__vulkan_1gada152edc5bbbd0c2138728878632fd9c" kindref="member">glfwGetRequiredInstanceExtensions</ref>(uint32_t*<sp/>count);</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"></highlight></codeline>
<codeline lineno="5887"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(VK_VERSION_1_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"></highlight></codeline>
<codeline lineno="5928"><highlight class="normal">GLFWAPI<sp/><ref refid="group__vulkan_1ga70c01918dc9d233a4fbe0681a43018af" kindref="member">GLFWvkproc</ref><sp/>glfwGetInstanceProcAddress(VkInstance<sp/>instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>procname);</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"></highlight></codeline>
<codeline lineno="5965"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glfwGetPhysicalDevicePresentationSupport(VkInstance<sp/>instance,<sp/>VkPhysicalDevice<sp/>device,<sp/>uint32_t<sp/>queuefamily);</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"></highlight></codeline>
<codeline lineno="6026"><highlight class="normal">GLFWAPI<sp/>VkResult<sp/>glfwCreateWindowSurface(VkInstance<sp/>instance,<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref>*<sp/>allocator,<sp/>VkSurfaceKHR*<sp/>surface);</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*VK_VERSION_1_0*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6029"><highlight class="normal"></highlight></codeline>
<codeline lineno="6030"><highlight class="normal"></highlight></codeline>
<codeline lineno="6031"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="6032"><highlight class="comment"><sp/>*<sp/>Global<sp/>definition<sp/>cleanup</highlight></codeline>
<codeline lineno="6033"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"></highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------<sp/>BEGIN<sp/>SYSTEM/COMPILER<sp/>SPECIFIC<sp/>--------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"></highlight></codeline>
<codeline lineno="6037"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLFW_WINGDIAPI_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6038"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>WINGDIAPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6039"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>GLFW_WINGDIAPI_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6040"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"></highlight></codeline>
<codeline lineno="6042"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLFW_CALLBACK_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>CALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6044"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>GLFW_CALLBACK_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6045"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6046"><highlight class="normal"></highlight></codeline>
<codeline lineno="6047"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>OpenGL<sp/>related<sp/>headers<sp/>need<sp/>GLAPIENTRY,<sp/>but<sp/>it<sp/>is<sp/>unconditionally</highlight></codeline>
<codeline lineno="6048"><highlight class="comment"><sp/>*<sp/>defined<sp/>by<sp/>some<sp/>gl.h<sp/>variants<sp/>(OpenBSD)<sp/>so<sp/>define<sp/>it<sp/>after<sp/>if<sp/>needed.</highlight></codeline>
<codeline lineno="6049"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GLAPIENTRY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6051"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLAPIENTRY<sp/>APIENTRY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6052"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6053"><highlight class="normal"></highlight></codeline>
<codeline lineno="6054"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------<sp/>END<sp/>SYSTEM/COMPILER<sp/>SPECIFIC<sp/>---------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6055"><highlight class="normal"></highlight></codeline>
<codeline lineno="6056"><highlight class="normal"></highlight></codeline>
<codeline lineno="6057"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6060"><highlight class="normal"></highlight></codeline>
<codeline lineno="6061"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_glfw3_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6062"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/include/GLFW/glfw3.h"/>
  </compounddef>
</doxygen>
