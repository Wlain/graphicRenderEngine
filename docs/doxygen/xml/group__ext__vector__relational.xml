<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__ext__vector__relational" kind="group">
    <compoundname>ext_vector_relational</compoundname>
    <title>GLM_EXT_vector_relational</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ext__vector__relational_1gab1ceb25a15f76052c70682d695a69144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::equal</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y, T const &amp;epsilon)</argsstring>
        <name>equal</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the component-wise comparison of |x - y| &lt; epsilon. True if this expression is satisfied.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" line="37" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.inl" bodystart="18" bodyend="21" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" declline="37" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__ext__vector__relational_1gad3fdd6f08223e94ffe5cf8a708549a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::equal</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y, vec&lt; L, T, Q &gt; const &amp;epsilon)</argsstring>
        <name>equal</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the component-wise comparison of |x - y| &lt; epsilon. True if this expression is satisfied.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" line="48" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.inl" bodystart="24" bodyend="27" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" declline="48" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__ext__vector__relational_1gac4ae021e79693174e4de6560d159b33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::equal</definition>
        <argsstring>(genType const &amp;x, genType const &amp;y, genType const &amp;epsilon)</argsstring>
        <name>equal</name>
        <param>
          <type>genType const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genType const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>genType const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the component-wise comparison of |x - y| &lt; epsilon. True if this expression is satisfied.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" line="57" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.inl" bodystart="12" bodyend="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" declline="57" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__ext__vector__relational_1ga7c7cad8b610018edbe5b62086a57ed9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::notEqual</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y, T const &amp;epsilon)</argsstring>
        <name>notEqual</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the component-wise comparison of |x - y| &lt; epsilon. True if this expression is not satisfied.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" line="68" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.inl" bodystart="36" bodyend="39" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" declline="68" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__ext__vector__relational_1ga8cf5f92df5aca8dde6b1670cb93da815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::notEqual</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y, vec&lt; L, T, Q &gt; const &amp;epsilon)</argsstring>
        <name>notEqual</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the component-wise comparison of |x - y| &lt; epsilon. True if this expression is not satisfied.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" line="79" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.inl" bodystart="42" bodyend="45" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" declline="79" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__ext__vector__relational_1ga27c5118811bcfed5504e50f22693373e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::notEqual</definition>
        <argsstring>(genType const &amp;x, genType const &amp;y, genType const &amp;epsilon)</argsstring>
        <name>notEqual</name>
        <param>
          <type>genType const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genType const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>genType const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the component-wise comparison of |x - y| &gt;= epsilon. True if this expression is not satisfied.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" line="88" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.inl" bodystart="30" bodyend="33" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/ext/vector_relational.hpp" declline="88" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="ext_2vector__relational_8hpp" kindref="compound">glm/ext/vector_relational.hpp</ref>&gt; to use the features of this extension.</para>
<para>Comparison functions for a user defined epsilon values. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
