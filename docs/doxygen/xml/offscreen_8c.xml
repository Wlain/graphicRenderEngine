<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="offscreen_8c" kind="file" language="C++">
    <compoundname>offscreen.c</compoundname>
    <includes refid="gl_8h" local="no">glad/gl.h</includes>
    <includes local="no">GLFW/glfw3.h</includes>
    <includes refid="linmath_8h" local="yes">linmath.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stb_image_write.h</includes>
    <incdepgraph>
      <node id="2">
        <label>glad/gl.h</label>
        <link refid="gl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>glfw/deps/glad/khrplatform.h</label>
        <link refid="khrplatform_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>linmath.h</label>
        <link refid="linmath_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c</label>
        <link refid="offscreen_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="5">
        <label>limits.h</label>
      </node>
      <node id="10">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>stb_image_write.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="offscreen_8c_1a088324ad8995e3eb76024e3e79083d48" prot="public" static="no">
        <name>GLFW_INCLUDE_NONE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="27" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="offscreen_8c_1aefe397a94e8feddc652f92ef40ce9597" prot="public" static="no">
        <name>STB_IMAGE_WRITE_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="40" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="offscreen_8c_1ad0da36b2558901e21e7a30f6c227a45e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="45" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="offscreen_8c_1aa4f0d3eebc3c443f9be81bf48561a217" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="45" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="offscreen_8c_1a4788d82c901b9367dd5c0daff8a7616b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="46" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="offscreen_8c_1a8cf17d727651616de6f2b79ef32170cd" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float g</definition>
        <argsstring></argsstring>
        <name>g</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="46" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="offscreen_8c_1a83fc1af92e29717b4513d121b0c72c7d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="46" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="offscreen_8c_1a0df8cb28ee7c8ea3988b011f2e8b1738" prot="public" static="yes" mutable="no">
        <type>const struct @3</type>
        <definition>const struct @3 vertices[3]</definition>
        <argsstring>[3]</argsstring>
        <name>vertices</name>
        <initializer>=
{
    { -0.6f, -0.4f, 1.f, 0.f, 0.f },
    {  0.6f, -0.4f, 0.f, 1.f, 0.f },
    {   0.f,  0.6f, 0.f, 0.f, 1.f }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="52" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="offscreen_8c_1aceef07cafedfdd74a68d27c2fa5b160b" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* vertex_shader_text</definition>
        <argsstring></argsstring>
        <name>vertex_shader_text</name>
        <initializer>=
&quot;#version 110\n&quot;
&quot;uniform mat4 MVP;\n&quot;
&quot;attribute vec3 vCol;\n&quot;
&quot;attribute vec2 vPos;\n&quot;
&quot;varying vec3 color;\n&quot;
&quot;void main()\n&quot;
&quot;{\n&quot;
&quot;    gl_Position = MVP * vec4(vPos, 0.0, 1.0);\n&quot;
&quot;    color = vCol;\n&quot;
&quot;}\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="54" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="offscreen_8c_1aa3a01a849c93a7d27d43b6d80cc5b4ae" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* fragment_shader_text</definition>
        <argsstring></argsstring>
        <name>fragment_shader_text</name>
        <initializer>=
&quot;#version 110\n&quot;
&quot;varying vec3 color;\n&quot;
&quot;void main()\n&quot;
&quot;{\n&quot;
&quot;    gl_FragColor = vec4(color, 1.0);\n&quot;
&quot;}\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="66" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="offscreen_8c_1a6e6d1771a9242858811be0a3569838fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void error_callback</definition>
        <argsstring>(int error, const char *description)</argsstring>
        <name>error_callback</name>
        <param>
          <type>int</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="74" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="offscreen_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" line="79" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c" bodystart="79" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Offscreen<sp/>rendering<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Camilla<sp/>Löwy<sp/>&lt;elmindreda@glfw.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glad/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_INCLUDE_NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW/glfw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_NATIVE_OSMESA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFW_EXPOSE_NATIVE_OSMESA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;GLFW/glfw3native.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linmath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_IMAGE_WRITE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stb_image_write.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,<sp/>g,<sp/>b;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/>vertices[3]<sp/>=</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>-0.6f,<sp/>-0.4f,<sp/>1.f,<sp/>0.f,<sp/>0.f<sp/>},</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/>0.6f,<sp/>-0.4f,<sp/>0.f,<sp/>1.f,<sp/>0.f<sp/>},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0.f,<sp/><sp/>0.6f,<sp/>0.f,<sp/>0.f,<sp/>1.f<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vertex_shader_text<sp/>=</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;#version<sp/>110\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;uniform<sp/>mat4<sp/>MVP;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;attribute<sp/>vec3<sp/>vCol;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;attribute<sp/>vec2<sp/>vPos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;varying<sp/>vec3<sp/>color;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;void<sp/>main()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>gl_Position<sp/>=<sp/>MVP<sp/>*<sp/>vec4(vPos,<sp/>0.0,<sp/>1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>color<sp/>=<sp/>vCol;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fragment_shader_text<sp/>=</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;#version<sp/>110\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;varying<sp/>vec3<sp/>color;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;void<sp/>main()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>gl_FragColor<sp/>=<sp/>vec4(color,<sp/>1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error_callback(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>description);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>vertex_buffer,<sp/>vertex_shader,<sp/>fragment_shader,<sp/>program;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>mvp_location,<sp/>vpos_location,<sp/>vcol_location;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ratio;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>mvp;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__init_1ga746e2757d069eaea423349aca6ae097a" kindref="member">glfwSetErrorCallback</ref>(error_callback);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__init_1gac85e41aab1c2bd6fc740f4377d9e7e9f" kindref="member">glfwInitHint</ref>(<ref refid="group__init_1ga71e0b4ce2f2696a84a9b8c5e12dc70cf" kindref="member">GLFW_COCOA_MENUBAR</ref>,<sp/><ref refid="group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5" kindref="member">GLFW_FALSE</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>())</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1gafe5e4922de1f9932d7e9849bb053b0c0" kindref="member">GLFW_CONTEXT_VERSION_MAJOR</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1ga31aca791e4b538c4e4a771eb95cc2d07" kindref="member">GLFW_CONTEXT_VERSION_MINOR</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga69c40728499720bef8a49aa925ea0efa" kindref="member">glfwWindowHint</ref>(<ref refid="group__window_1gafb3cdc45297e06d8f1eb13adc69ca6c4" kindref="member">GLFW_VISIBLE</ref>,<sp/><ref refid="group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5" kindref="member">GLFW_FALSE</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>window<sp/>=<sp/><ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>(640,<sp/>480,<sp/></highlight><highlight class="stringliteral">&quot;Simple<sp/>example&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref>(window);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>gladLoadGL(<ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>OpenGL<sp/>error<sp/>checks<sp/>have<sp/>been<sp/>omitted<sp/>for<sp/>brevity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;vertex_buffer);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertex_buffer);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices),<sp/>vertices,<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex_shader<sp/>=<sp/>glCreateShader(GL_VERTEX_SHADER);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(vertex_shader,<sp/>1,<sp/>&amp;vertex_shader_text,<sp/>NULL);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(vertex_shader);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>fragment_shader<sp/>=<sp/>glCreateShader(GL_FRAGMENT_SHADER);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(fragment_shader,<sp/>1,<sp/>&amp;fragment_shader_text,<sp/>NULL);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(fragment_shader);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>program<sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(program,<sp/>vertex_shader);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(program,<sp/>fragment_shader);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(program);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>mvp_location<sp/>=<sp/>glGetUniformLocation(program,<sp/></highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>vpos_location<sp/>=<sp/>glGetAttribLocation(program,<sp/></highlight><highlight class="stringliteral">&quot;vPos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>vcol_location<sp/>=<sp/>glGetAttribLocation(program,<sp/></highlight><highlight class="stringliteral">&quot;vCol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(vpos_location);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(vpos_location,<sp/>2,<sp/>GL_FLOAT,<sp/>GL_FALSE,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices[0]),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(vcol_location);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(vcol_location,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices[0]),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>(window,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>ratio<sp/>=<sp/>width<sp/>/<sp/>(float)<sp/>height;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,<sp/>0,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_ortho(mvp,<sp/>-ratio,<sp/>ratio,<sp/>-1.f,<sp/>1.f,<sp/>1.f,<sp/>-1.f);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(program);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(mvp_location,<sp/>1,<sp/>GL_FALSE,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat*)<sp/>mvp);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>3);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>glFinish();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_NATIVE_OSMESA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwGetOSMesaColorBuffer(window,<sp/>&amp;width,<sp/>&amp;height,<sp/>NULL,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;<ref refid="classbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref><sp/>=<sp/>calloc(4,<sp/>width<sp/>*<sp/>height);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>glReadPixels(0,<sp/>0,<sp/>width,<sp/>height,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>image<sp/>Y-flipped<sp/>because<sp/>OpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>stbi_write_png(</highlight><highlight class="stringliteral">&quot;offscreen.png&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height,<sp/>4,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbuffer" kindref="compound">buffer</ref><sp/>+<sp/>(width<sp/>*<sp/>4<sp/>*<sp/>(height<sp/>-<sp/>1)),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-width<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_NATIVE_OSMESA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>is<sp/>where<sp/>there&apos;s<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="classbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref>(window);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_SUCCESS);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c"/>
  </compounddef>
</doxygen>
