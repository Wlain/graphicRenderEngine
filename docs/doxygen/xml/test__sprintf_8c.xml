<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__sprintf_8c" kind="file" language="C++">
    <compoundname>test_sprintf.c</compoundname>
    <includes refid="stb__sprintf_8h" local="yes">stb_sprintf.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <incdepgraph>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stb_sprintf.h</label>
        <link refid="stb__sprintf_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c</label>
        <link refid="test__sprintf_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="10">
        <label>limits.h</label>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="11">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__sprintf_8c_1ac159c04d4d4416b6a312db14408b8d5e" prot="public" static="no">
        <name>USE_STB</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="2" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a92d04fe74201d58bc774099a3f5a52da" prot="public" static="no">
        <name>SPRINTF</name>
        <initializer>stbsp_sprintf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="6" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a770571e12ff9370899184528f4b4626d" prot="public" static="no">
        <name>SNPRINTF</name>
        <initializer>stbsp_snprintf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="7" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a10e5611c28b6db6e8b059f3e4dc52a73" prot="public" static="no">
        <name>CHECK_END</name>
        <param><defname>str</defname></param>
        <initializer>   if (strcmp(buf, str) != 0 || (unsigned) ret != strlen(str)) { \
      printf(&quot;&lt; &apos;%s&apos;\n&gt; &apos;%s&apos;\n&quot;, str, buf); \
      assert(!&quot;Fail&quot;); \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="28" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a9ff79c3fb2a4d7db77ca3ed04dd339a6" prot="public" static="no">
        <name>CHECK9</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <param><defname>v4</defname></param>
        <param><defname>v5</defname></param>
        <param><defname>v6</defname></param>
        <param><defname>v7</defname></param>
        <param><defname>v8</defname></param>
        <param><defname>v9</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2, v3, v4, v5, v6, v7, v8, v9); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="34" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a551b02fe8e23ff9f536a123645162d20" prot="public" static="no">
        <name>CHECK8</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <param><defname>v4</defname></param>
        <param><defname>v5</defname></param>
        <param><defname>v6</defname></param>
        <param><defname>v7</defname></param>
        <param><defname>v8</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2, v3, v4, v5, v6, v7, v8    ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="35" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a99b45c4ac4e649bb45de2ce0b63548fe" prot="public" static="no">
        <name>CHECK7</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <param><defname>v4</defname></param>
        <param><defname>v5</defname></param>
        <param><defname>v6</defname></param>
        <param><defname>v7</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2, v3, v4, v5, v6, v7        ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="36" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1ab0c33256a9a5aa4a10c6897f20d37be3" prot="public" static="no">
        <name>CHECK6</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <param><defname>v4</defname></param>
        <param><defname>v5</defname></param>
        <param><defname>v6</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2, v3, v4, v5, v6            ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="37" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1ad344905e89e481ac6e788599cab6e826" prot="public" static="no">
        <name>CHECK5</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <param><defname>v4</defname></param>
        <param><defname>v5</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2, v3, v4, v5                ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="38" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1ada4ce89f96c115271cb2c4ac02f41b40" prot="public" static="no">
        <name>CHECK4</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <param><defname>v4</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2, v3, v4                    ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="39" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a1d7248ad5e22f5fc64683a613127ad3f" prot="public" static="no">
        <name>CHECK3</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2, v3                        ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="40" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1ae185aed33e20d3037b257e1e30b9b5bb" prot="public" static="no">
        <name>CHECK2</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1, v2                            ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="41" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sprintf_8c_1a9850364f2c42696040e708d50b7c105d" prot="public" static="no">
        <name>CHECK1</name>
        <param><defname>str</defname></param>
        <param><defname>v1</defname></param>
        <initializer>{ int ret = SPRINTF(buf, v1                                ); CHECK_END(str); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" line="42" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_STB<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;stb_sprintf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SPRINTF<sp/>stbsp_sprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SNPRINTF<sp/>stbsp_snprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;locale.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SPRINTF<sp/>sprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SNPRINTF<sp/>snprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>INFINITY,<sp/>NAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>ptrdiff_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>printf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>strcmp,<sp/>strncmp,<sp/>strlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&lt;=<sp/>1600<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intmax_t;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/>ssize_t;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>intmax_t,<sp/>ssize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbsp_sprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_END(str)<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/>if<sp/>(strcmp(buf,<sp/>str)<sp/>!=<sp/>0<sp/>||<sp/>(unsigned)<sp/>ret<sp/>!=<sp/>strlen(str))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;&lt;<sp/>&apos;%s&apos;\n&gt;<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>str,<sp/>buf);<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(!&quot;Fail&quot;);<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK9(str,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK8(str,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8<sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8<sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK7(str,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK6(str,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK5(str,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK4(str,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK3(str,<sp/>v1,<sp/>v2,<sp/>v3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2,<sp/>v3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK2(str,<sp/>v1,<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1,<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK1(str,<sp/>v1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{<sp/>int<sp/>ret<sp/>=<sp/>SPRINTF(buf,<sp/>v1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/>CHECK_END(str);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TEST_SPRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1024];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pow_2_75<sp/>=<sp/>37778931862957161709568.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pow_2_85<sp/>=<sp/>38685626227668133590597632.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;a<sp/>b<sp/><sp/><sp/><sp/><sp/>1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%c<sp/>%s<sp/><sp/><sp/><sp/><sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;abc<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%-8.3s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefgh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;+5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%+2d&quot;</highlight><highlight class="normal">,<sp/>5);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>6&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>3i&quot;</highlight><highlight class="normal">,<sp/>6);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-7<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%-4d&quot;</highlight><highlight class="normal">,<sp/>-7);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;+0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%+d&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>00003:<sp/><sp/><sp/><sp/><sp/>00004&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%10.5d:%10.5d&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>4);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-100006789&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>-100006789);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;20<sp/>0020&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%u<sp/>%04u&quot;</highlight><highlight class="normal">,<sp/>20u,<sp/>20u);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;12<sp/>1e<sp/>3C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%o<sp/>%x<sp/>%X&quot;</highlight><highlight class="normal">,<sp/>10u,<sp/>30u,<sp/>60u);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;<sp/>12<sp/>1e<sp/>3C<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%3o<sp/>%2x<sp/>%-3X&quot;</highlight><highlight class="normal">,<sp/>10u,<sp/>30u,<sp/>60u);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;012<sp/>0x1e<sp/>0X3C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%#o<sp/>%#x<sp/>%#X&quot;</highlight><highlight class="normal">,<sp/>10u,<sp/>30u,<sp/>60u);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.0x&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.0d&quot;</highlight><highlight class="normal">,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>stb_sprintf<sp/>gives<sp/>&quot;0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%.0d&quot;</highlight><highlight class="normal">,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>glibc<sp/>gives<sp/>&quot;&quot;<sp/>as<sp/>specified<sp/>by<sp/>C99(?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;33<sp/>555&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%hi<sp/>%ld&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)33,<sp/>555l);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_MSC_VER)<sp/>||<sp/>_MSC_VER<sp/>&gt;=<sp/>1600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;9888777666&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%llu&quot;</highlight><highlight class="normal">,<sp/>9888777666llu);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;-1<sp/>2<sp/>-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%ji<sp/>%zi<sp/>%ti&quot;</highlight><highlight class="normal">,<sp/>(intmax_t)-1,<sp/>(ssize_t)2,<sp/>(ptrdiff_t)-3);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>floating-point<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-3.000000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>-3.0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-8.8888888800&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.10f&quot;</highlight><highlight class="normal">,<sp/>-8.88888888);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;880.0888888800&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.10f&quot;</highlight><highlight class="normal">,<sp/>880.08888888);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;4.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal">,<sp/>4.1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>.0f&quot;</highlight><highlight class="normal">,<sp/>0.1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0.00&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">,<sp/>1<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-4);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-5.20&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%+4.2f&quot;</highlight><highlight class="normal">,<sp/>-5.2);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%-10.1f&quot;</highlight><highlight class="normal">,<sp/>0.);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-0.000000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>-0.);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0.000001&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>9.09834e-07);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB<sp/><sp/></highlight><highlight class="comment">//<sp/>rounding<sp/>differences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;38685626227668133600000000.0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal">,<sp/>pow_2_85);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0.000000499999999999999978&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.24f&quot;</highlight><highlight class="normal">,<sp/>5<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-7);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;38685626227668133590597632.0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal">,<sp/>pow_2_85);<sp/></highlight><highlight class="comment">//<sp/>exact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0.000000499999999999999977&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.24f&quot;</highlight><highlight class="normal">,<sp/>5<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-7);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0.000000000000000020000000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.24f&quot;</highlight><highlight class="normal">,<sp/>2<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-17);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;0.0000000100<sp/>100000000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.10f<sp/>%.0f&quot;</highlight><highlight class="normal">,<sp/>1<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-8,<sp/>1<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>+8);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;100056789.0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal">,<sp/>100056789.0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;<sp/>1.23<sp/>%&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%*.*f<sp/>%%&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>2,<sp/>1.23);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-3.000000e+00&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%e&quot;</highlight><highlight class="normal">,<sp/>-3.0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;4.1E+00&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1E&quot;</highlight><highlight class="normal">,<sp/>4.1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-5.20e+00&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%+4.2e&quot;</highlight><highlight class="normal">,<sp/>-5.2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;+0.3<sp/>-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%+g<sp/>%+g&quot;</highlight><highlight class="normal">,<sp/>0.3,<sp/>-3.0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1G&quot;</highlight><highlight class="normal">,<sp/>4.1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-5.2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%+4.2g&quot;</highlight><highlight class="normal">,<sp/>-5.2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;3e-300&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%g&quot;</highlight><highlight class="normal">,<sp/>3<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-300);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.0g&quot;</highlight><highlight class="normal">,<sp/>1.2);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;<sp/>3.7<sp/>3.71&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>.3g<sp/>%.3g&quot;</highlight><highlight class="normal">,<sp/>3.704,<sp/>3.706);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;2e-315:1e+308&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%g:%g&quot;</highlight><highlight class="normal">,<sp/>2<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-315,<sp/>1<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>+308);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;Inf<sp/>Inf<sp/>NaN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%g<sp/>%G<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>INFINITY,<sp/>INFINITY,<sp/>NAN);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1g&quot;</highlight><highlight class="normal">,<sp/>NAN);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;inf<sp/>INF<sp/>nan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%g<sp/>%G<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>INFINITY,<sp/>INFINITY,<sp/>NAN);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;nan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1g&quot;</highlight><highlight class="normal">,<sp/>NAN);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>%n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;aaa<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.3s<sp/>%n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaaaaaaaaaaaa&quot;</highlight><highlight class="normal">,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>assert(n<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hex<sp/>floats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0x1.fedcbap+98&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%a&quot;</highlight><highlight class="normal">,<sp/>0x1.fedcbap+98);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0x1.999999999999a0p-4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.14a&quot;</highlight><highlight class="normal">,<sp/>0.1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0x1.0p-1022&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.1a&quot;</highlight><highlight class="normal">,<sp/>0x1.ffp-1023);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB<sp/><sp/></highlight><highlight class="comment">//<sp/>difference<sp/>in<sp/>default<sp/>precision<sp/>and<sp/>x<sp/>vs<sp/>X<sp/>for<sp/>%A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0x1.009117p-1022&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%a&quot;</highlight><highlight class="normal">,<sp/>2.23e-308);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-0x1.AB0P-5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.3A&quot;</highlight><highlight class="normal">,<sp/>-0x1.abp-5);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0x1.0091177587f83p-1022&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%a&quot;</highlight><highlight class="normal">,<sp/>2.23e-308);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-0X1.AB0P-5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.3A&quot;</highlight><highlight class="normal">,<sp/>-0X1.abp-5);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>%p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0000000000000000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>NULL);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;(nil)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>NULL);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>snprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>assert(SNPRINTF(buf,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%s<sp/><sp/><sp/><sp/><sp/>%d&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>123)<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>assert(strcmp(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>b<sp/><sp/><sp/><sp/><sp/>123&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>assert(SNPRINTF(buf,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>pow_2_75)<sp/>==<sp/>30);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>assert(strncmp(buf,<sp/></highlight><highlight class="stringliteral">&quot;37778931862957161709568.000000&quot;</highlight><highlight class="normal">,<sp/>17)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>SNPRINTF(buf,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;number<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>123.456789);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>assert(strcmp(buf,<sp/></highlight><highlight class="stringliteral">&quot;number<sp/>12&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>assert(n<sp/>==<sp/>17);<sp/><sp/></highlight><highlight class="comment">//<sp/>written<sp/>vs<sp/>would-be<sp/>written<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>SNPRINTF(buf,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;7<sp/>chars&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>assert(n<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stb_sprintf<sp/>uses<sp/>internal<sp/>buffer<sp/>of<sp/>512<sp/>chars<sp/>-<sp/>test<sp/>longer<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>assert(SPRINTF(buf,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/><sp/>%600s&quot;</highlight><highlight class="normal">,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>603);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>assert(strlen(buf)<sp/>==<sp/>603);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>SNPRINTF(buf,<sp/>550,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/><sp/>%600s&quot;</highlight><highlight class="normal">,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>assert(strlen(buf)<sp/>==<sp/>549);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>assert(SNPRINTF(buf,<sp/>600,<sp/></highlight><highlight class="stringliteral">&quot;%510s<sp/><sp/><sp/><sp/><sp/>%c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>==<sp/>516);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>assert(SNPRINTF(NULL,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%s<sp/><sp/><sp/><sp/><sp/>%d&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>123)<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;<sp/>modifier.<sp/>Non-standard,<sp/>but<sp/>supported<sp/>by<sp/>glibc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!USE_STB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>setlocale(LC_NUMERIC,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>C<sp/>locale<sp/>does<sp/>not<sp/>group<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;1,200,000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;d&quot;</highlight><highlight class="normal">,<sp/>1200000);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;-100,006,789&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;d&quot;</highlight><highlight class="normal">,<sp/>-100006789);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_MSC_VER)<sp/>||<sp/>_MSC_VER<sp/>&gt;=<sp/>1600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;9,888,777,666&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;lld&quot;</highlight><highlight class="normal">,<sp/>9888777666ll);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;200,000,000.000000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;18f&quot;</highlight><highlight class="normal">,<sp/>2e8);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;100,056,789&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;.0f&quot;</highlight><highlight class="normal">,<sp/>100056789.0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;100,056,789.0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;.1f&quot;</highlight><highlight class="normal">,<sp/>100056789.0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB<sp/><sp/></highlight><highlight class="comment">//<sp/>difference<sp/>in<sp/>leading<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;000,001,200,000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;015d&quot;</highlight><highlight class="normal">,<sp/>1200000);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;0000001,200,000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;015d&quot;</highlight><highlight class="normal">,<sp/>1200000);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>things<sp/>not<sp/>supported<sp/>by<sp/>glibc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>NULL);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;123,4abc:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;x:&quot;</highlight><highlight class="normal">,<sp/>0x1234ABC);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;100000000&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%b&quot;</highlight><highlight class="normal">,<sp/>256);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;0b10<sp/>0B11&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%#b<sp/>%#B&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>3);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_MSC_VER)<sp/>||<sp/>_MSC_VER<sp/>&gt;=<sp/>1600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>CHECK4(</highlight><highlight class="stringliteral">&quot;2<sp/>3<sp/>4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%I64d<sp/>%I32d<sp/>%Id&quot;</highlight><highlight class="normal">,<sp/>2ll,<sp/>3,<sp/>4ll);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;1k<sp/>2.54<sp/>M&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%$_d<sp/>%$.2d&quot;</highlight><highlight class="normal">,<sp/>1000,<sp/>2536000);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>CHECK3(</highlight><highlight class="stringliteral">&quot;2.42<sp/>Mi<sp/>2.4<sp/>M&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%$$.2d<sp/>%$$$d&quot;</highlight><highlight class="normal">,<sp/>2536000,<sp/>2536000);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>separators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>stbsp_set_separators(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>CHECK2(</highlight><highlight class="stringliteral">&quot;12<sp/>345,678900&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%&apos;f&quot;</highlight><highlight class="normal">,<sp/>12345.6789);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_sprintf.c"/>
  </compounddef>
</doxygen>
