<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stdout__sinks_8cpp" kind="file" language="C++">
    <compoundname>stdout_sinks.cpp</compoundname>
    <includes local="no">mutex</includes>
    <includes refid="null__mutex_8h" local="no">spdlog/details/null_mutex.h</includes>
    <includes refid="async_8h" local="no">spdlog/async.h</includes>
    <includes refid="stdout__sinks-inl_8h" local="no">spdlog/sinks/stdout_sinks-inl.h</includes>
    <incdepgraph>
      <node id="6">
        <label>spdlog/async.h</label>
        <link refid="async_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>spdlog/async_logger.h</label>
        <link refid="async__logger_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>common-inl.h</label>
        <link refid="common-inl_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spdlog/common.h</label>
        <link refid="spdlog_2include_2spdlog_2common_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>spdlog/details/backtracer.h</label>
        <link refid="backtracer_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>spdlog/details/circular_q.h</label>
        <link refid="circular__q_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>spdlog/details/console_globals.h</label>
        <link refid="console__globals_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>spdlog/details/log_msg.h</label>
        <link refid="log__msg_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>spdlog/details/log_msg_buffer.h</label>
        <link refid="log__msg__buffer_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>spdlog/details/mpmc_blocking_q.h</label>
        <link refid="mpmc__blocking__q_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>spdlog/details/null_mutex.h</label>
        <link refid="null__mutex_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>spdlog/details/os.h</label>
        <link refid="details_2os_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>spdlog/details/registry.h</label>
        <link refid="registry_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>spdlog/details/synchronous_factory.h</label>
        <link refid="synchronous__factory_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>spdlog/details/thread_pool.h</label>
        <link refid="thread__pool_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>spdlog/fmt/bundled/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>spdlog/fmt/bundled/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>spdlog/fmt/fmt.h</label>
        <link refid="fmt_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>spdlog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>spdlog/logger.h</label>
        <link refid="3rdparty_2spdlog_2include_2spdlog_2logger_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>spdlog/pattern_formatter.h</label>
        <link refid="pattern__formatter_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>spdlog/sinks/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>spdlog/sinks/stdout_sinks-inl.h</label>
        <link refid="stdout__sinks-inl_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>spdlog/sinks/stdout_sinks.h</label>
        <link refid="stdout__sinks_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>spdlog/tweakme.h</label>
        <link refid="tweakme_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp</label>
        <link refid="stdout__sinks_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>atomic</label>
      </node>
      <node id="37">
        <label>cassert</label>
      </node>
      <node id="11">
        <label>chrono</label>
      </node>
      <node id="26">
        <label>cmath</label>
      </node>
      <node id="42">
        <label>condition_variable</label>
      </node>
      <node id="21">
        <label>cstddef</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="18">
        <label>cstdio</label>
      </node>
      <node id="22">
        <label>cstring</label>
      </node>
      <node id="44">
        <label>ctime</label>
      </node>
      <node id="14">
        <label>exception</label>
      </node>
      <node id="17">
        <label>functional</label>
      </node>
      <node id="12">
        <label>initializer_list</label>
      </node>
      <node id="23">
        <label>iterator</label>
      </node>
      <node id="24">
        <label>limits</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="2">
        <label>mutex</label>
      </node>
      <node id="28">
        <label>stdexcept</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="29">
        <label>system_error</label>
      </node>
      <node id="45">
        <label>thread</label>
      </node>
      <node id="16">
        <label>type_traits</label>
      </node>
      <node id="39">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="36">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="stdout__sinks_8cpp_1ac2cbf771381ef953ecda728669fb3ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stdout_logger_mt&lt; spdlog::synchronous_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stdout_logger_mt&lt; spdlog::synchronous_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="21" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="21" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="stdout__sinks_8cpp_1a079bb38763efc1b68886836b70c60274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stdout_logger_st&lt; spdlog::synchronous_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stdout_logger_st&lt; spdlog::synchronous_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="22" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="22" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="stdout__sinks_8cpp_1ae7f8cf26314039ab60c9353e5b506e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stderr_logger_mt&lt; spdlog::synchronous_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stderr_logger_mt&lt; spdlog::synchronous_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="23" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="23" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="stdout__sinks_8cpp_1af6a792b6d2d7fe056eca86a1dc7d87c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stderr_logger_st&lt; spdlog::synchronous_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stderr_logger_st&lt; spdlog::synchronous_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="24" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="24" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="stdout__sinks_8cpp_1ac674704263ff8bdb80e09ca5fb816913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stdout_logger_mt&lt; spdlog::async_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stdout_logger_mt&lt; spdlog::async_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="26" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="26" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="stdout__sinks_8cpp_1a878f677fc12427acb3a49baaf788aed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stdout_logger_st&lt; spdlog::async_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stdout_logger_st&lt; spdlog::async_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="27" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="27" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="stdout__sinks_8cpp_1a742528f7aea11604fb97b758b5f4251a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stderr_logger_mt&lt; spdlog::async_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stderr_logger_mt&lt; spdlog::async_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="28" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="28" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="stdout__sinks_8cpp_1a74a388e26ac40250dd796f94aa122a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SPDLOG_API std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &gt;</type>
        <definition>template SPDLOG_API std::shared_ptr&lt; spdlog::logger &gt; spdlog::stderr_logger_st&lt; spdlog::async_factory &gt;</definition>
        <argsstring>(const std::string &amp;logger_name)</argsstring>
        <name>spdlog::stderr_logger_st&lt; spdlog::async_factory &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" line="29" column="10" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp" declline="29" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright(c)<sp/>2015-present,<sp/>Gabi<sp/>Melman<sp/>&amp;<sp/>spdlog<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(http://opensource.org/licenses/MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPDLOG_COMPILED_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>error<sp/>Please<sp/>define<sp/>SPDLOG_COMPILED_LIB<sp/>to<sp/>compile<sp/>this<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/details/null_mutex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/async.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/stdout_sinks-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SPDLOG_API<sp/><ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">spdlog::sinks::stdout_sink_base&lt;spdlog::details::console_mutex&gt;</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SPDLOG_API<sp/><ref refid="classspdlog_1_1sinks_1_1stdout__sink__base" kindref="compound">spdlog::sinks::stdout_sink_base&lt;spdlog::details::console_nullmutex&gt;</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SPDLOG_API<sp/><ref refid="classspdlog_1_1sinks_1_1stdout__sink" kindref="compound">spdlog::sinks::stdout_sink&lt;spdlog::details::console_mutex&gt;</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SPDLOG_API<sp/><ref refid="classspdlog_1_1sinks_1_1stdout__sink" kindref="compound">spdlog::sinks::stdout_sink&lt;spdlog::details::console_nullmutex&gt;</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SPDLOG_API<sp/><ref refid="classspdlog_1_1sinks_1_1stderr__sink" kindref="compound">spdlog::sinks::stderr_sink&lt;spdlog::details::console_mutex&gt;</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SPDLOG_API<sp/><ref refid="classspdlog_1_1sinks_1_1stderr__sink" kindref="compound">spdlog::sinks::stderr_sink&lt;spdlog::details::console_nullmutex&gt;</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stdout_logger_mt&lt;spdlog::synchronous_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stdout_logger_st&lt;spdlog::synchronous_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stderr_logger_mt&lt;spdlog::synchronous_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stderr_logger_st&lt;spdlog::synchronous_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stdout_logger_mt&lt;spdlog::async_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stdout_logger_st&lt;spdlog::async_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stderr_logger_mt&lt;spdlog::async_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>spdlog::stderr_logger_st&lt;spdlog::async_factory&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;logger_name);</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/stdout_sinks.cpp"/>
  </compounddef>
</doxygen>
