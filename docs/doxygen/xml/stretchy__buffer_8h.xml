<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stretchy__buffer_8h" kind="file" language="C++">
    <compoundname>stretchy_buffer.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h</label>
        <link refid="stretchy__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stretchy__buffer_8h_1a0518e4b3eac1850db2659dedc7c34ffb" prot="public" static="no">
        <name>sb_free</name>
        <initializer>stb_sb_free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="179" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1ab17ce96ad71d806be113e2d671f004e6" prot="public" static="no">
        <name>sb_push</name>
        <initializer>stb_sb_push</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="180" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a870b12a3774f1f013b5bebb46f634eb4" prot="public" static="no">
        <name>sb_count</name>
        <initializer>stb_sb_count</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="181" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1ae5ad7c41dfb4424c72b5a445644675c0" prot="public" static="no">
        <name>sb_add</name>
        <initializer>stb_sb_add</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="182" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a890a73e270f56f955e30d5cb3208cce3" prot="public" static="no">
        <name>sb_last</name>
        <initializer>stb_sb_last</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="183" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1aaf5e8aa1f477339578ebde891aab8c5e" prot="public" static="no">
        <name>stb_sb_free</name>
        <param><defname>a</defname></param>
        <initializer>((a) ? free(stb__sbraw(a)),0 : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="186" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a5dd97e8f5f2ebc3f372b17da00d0b098" prot="public" static="no">
        <name>stb_sb_push</name>
        <param><defname>a</defname></param>
        <param><defname>v</defname></param>
        <initializer>(stb__sbmaybegrow(a,1), (a)[stb__sbn(a)++] = (v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="187" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1ae04ed470b5fe022b9bb556ddd8639bb3" prot="public" static="no">
        <name>stb_sb_count</name>
        <param><defname>a</defname></param>
        <initializer>((a) ? stb__sbn(a) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="188" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a937a2f5334bd85653bf22f9a613775a1" prot="public" static="no">
        <name>stb_sb_add</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>(stb__sbmaybegrow(a,n), stb__sbn(a)+=(n), &amp;(a)[stb__sbn(a)-(n)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="189" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1ae520b33dbba29bb7dcdd341235d87f1a" prot="public" static="no">
        <name>stb_sb_last</name>
        <param><defname>a</defname></param>
        <initializer>((a)[stb__sbn(a)-1])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="190" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1ad7b7543ce8015c7bcd454d3f56be9aae" prot="public" static="no">
        <name>stb__sbraw</name>
        <param><defname>a</defname></param>
        <initializer>((int *) (void *) (a) - 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="192" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1af297425160c28a663005fe97560640f1" prot="public" static="no">
        <name>stb__sbm</name>
        <param><defname>a</defname></param>
        <initializer>stb__sbraw(a)[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="193" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a845e00a86a973580683a3ada4f85edb1" prot="public" static="no">
        <name>stb__sbn</name>
        <param><defname>a</defname></param>
        <initializer>stb__sbraw(a)[1]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="194" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a252260ed8e907465b544e39a0d3dc47c" prot="public" static="no">
        <name>stb__sbneedgrow</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>((a)==0 || stb__sbn(a)+(n) &gt;= stb__sbm(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="196" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a62a9122b60a3b01ec35557aac385008a" prot="public" static="no">
        <name>stb__sbmaybegrow</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>(stb__sbneedgrow(a,(n)) ? stb__sbgrow(a,n) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="197" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stretchy__buffer_8h_1a98a8b6b0b7acdc5dccaf395189e65d4b" prot="public" static="no">
        <name>stb__sbgrow</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>(*((void **)&amp;(a)) = stb__sbgrowf((a), (n), sizeof(*(a))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="198" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stretchy__buffer_8h_1ad16174b5ad3bf7d47884ac9cc94d9c52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void * stb__sbgrowf</definition>
        <argsstring>(void *arr, int increment, int itemsize)</argsstring>
        <name>stb__sbgrowf</name>
        <param>
          <type>void *</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>increment</declname>
        </param>
        <param>
          <type>int</type>
          <declname>itemsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" line="202" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h" bodystart="202" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>stretchy_buffer.h<sp/>-<sp/>v1.04<sp/>-<sp/>public<sp/>domain<sp/>-<sp/>nothings.org/stb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>vector&lt;&gt;-like<sp/>dynamic<sp/>array<sp/>for<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>version<sp/>history:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1.04<sp/>-<sp/><sp/>fix<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1.03<sp/>-<sp/><sp/>compile<sp/>as<sp/>C++<sp/>maybe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1.02<sp/>-<sp/><sp/>tweaks<sp/>to<sp/>syntax<sp/>for<sp/>no<sp/>good<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1.01<sp/>-<sp/><sp/>added<sp/>a<sp/>&quot;common<sp/>uses&quot;<sp/>documentation<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/><sp/>-<sp/><sp/>fixed<sp/>bug<sp/>in<sp/>the<sp/>version<sp/>I<sp/>posted<sp/>prematurely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>0.9<sp/><sp/>-<sp/><sp/>rewrite<sp/>to<sp/>try<sp/>to<sp/>avoid<sp/>strict-aliasing<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>issues,<sp/>but<sp/>won&apos;t<sp/>compile<sp/>as<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Will<sp/>probably<sp/>not<sp/>work<sp/>correctly<sp/>with<sp/>strict-aliasing<sp/>optimizations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>idea:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>implements<sp/>an<sp/>approximation<sp/>to<sp/>C++<sp/>vector&lt;&gt;<sp/>for<sp/>C,<sp/>in<sp/>that<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>provides<sp/>a<sp/>generic<sp/>definition<sp/>for<sp/>dynamic<sp/>arrays<sp/>which<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>still<sp/>access<sp/>in<sp/>a<sp/>typesafe<sp/>way<sp/>using<sp/>arr[i]<sp/>or<sp/>*(arr+i).<sp/>However,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>it<sp/>is<sp/>simply<sp/>a<sp/>convenience<sp/>wrapper<sp/>around<sp/>the<sp/>common<sp/>idiom<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>of<sp/>keeping<sp/>a<sp/>set<sp/>of<sp/>variables<sp/>(in<sp/>a<sp/>struct<sp/>or<sp/>globals)<sp/>which<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>length<sp/>of<sp/>the<sp/>&quot;in-use&quot;<sp/>part<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>allocated<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>I<sp/>find<sp/>it<sp/>to<sp/>be<sp/>the<sp/>single<sp/>most<sp/>useful<sp/>non-built-in-structure<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>programming<sp/>in<sp/>C<sp/>(hash<sp/>tables<sp/>a<sp/>close<sp/>second),<sp/>but<sp/>to<sp/>be<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>it<sp/>lacks<sp/>many<sp/>of<sp/>the<sp/>capabilities<sp/>of<sp/>C++<sp/>vector&lt;&gt;:<sp/>there<sp/>is<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>range<sp/>checking,<sp/>the<sp/>object<sp/>address<sp/>isn&apos;t<sp/>stable<sp/>(see<sp/>next<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>details),<sp/>the<sp/>set<sp/>of<sp/>methods<sp/>available<sp/>is<sp/>small<sp/>(although</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>file<sp/>stb.h<sp/>has<sp/>another<sp/>implementation<sp/>of<sp/>stretchy<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>called<sp/>&apos;stb_arr&apos;<sp/>which<sp/>provides<sp/>more<sp/>methods,<sp/>e.g.<sp/>for<sp/>insertion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>deletion).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>How<sp/>to<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Unlike<sp/>other<sp/>stb<sp/>header<sp/>file<sp/>libraries,<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>define<sp/>an<sp/>_IMPLEMENTATION<sp/>symbol.<sp/>Every<sp/>#include<sp/>creates<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>much<sp/>implementation<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stretchy_buffer.h<sp/>does<sp/>not<sp/>define<sp/>any<sp/>types,<sp/>so<sp/>you<sp/>do<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>need<sp/>to<sp/>#include<sp/>it<sp/>to<sp/>before<sp/>defining<sp/>data<sp/>types<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stretchy<sp/>buffers,<sp/>only<sp/>in<sp/>files<sp/>that<sp/>*manipulate*<sp/>stretchy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>If<sp/>you<sp/>want<sp/>a<sp/>stretchy<sp/>buffer<sp/>aka<sp/>dynamic<sp/>array<sp/>containing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>objects<sp/>of<sp/>TYPE,<sp/>declare<sp/>such<sp/>an<sp/>array<sp/>as:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/>*myarray<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(There<sp/>is<sp/>no<sp/>typesafe<sp/>way<sp/>to<sp/>distinguish<sp/>between<sp/>stretchy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>buffers<sp/>and<sp/>regular<sp/>arrays/pointers;<sp/>this<sp/>is<sp/>necessary<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>make<sp/>ordinary<sp/>array<sp/>indexing<sp/>work<sp/>on<sp/>these<sp/>objects.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Unlike<sp/>C++<sp/>vector&lt;&gt;,<sp/>the<sp/>stretchy_buffer<sp/>has<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>semantics<sp/>as<sp/>an<sp/>object<sp/>that<sp/>you<sp/>manually<sp/>malloc<sp/>and<sp/>realloc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>The<sp/>pointer<sp/>may<sp/>relocate<sp/>every<sp/>time<sp/>you<sp/>add<sp/>a<sp/>new<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to<sp/>it,<sp/>so<sp/>you:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/>can&apos;t<sp/>take<sp/>long-term<sp/>pointers<sp/>to<sp/>elements<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.<sp/>have<sp/>to<sp/>return<sp/>the<sp/>pointer<sp/>from<sp/>functions<sp/>which<sp/>might<sp/>expand<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(either<sp/>as<sp/>a<sp/>return<sp/>value<sp/>or<sp/>by<sp/>storing<sp/>it<sp/>to<sp/>a<sp/>ptr-to-ptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Now<sp/>you<sp/>can<sp/>do<sp/>the<sp/>following<sp/>things<sp/>with<sp/>this<sp/>array:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_free(TYPE<sp/>*a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_count(TYPE<sp/>*a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_push(TYPE<sp/>*a,<sp/>TYPE<sp/>v)<sp/><sp/><sp/>adds<sp/>v<sp/>on<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array,<sp/>a<sp/>la<sp/>push_back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_add(TYPE<sp/>*a,<sp/>int<sp/>n)<sp/><sp/><sp/><sp/><sp/>adds<sp/>n<sp/>uninitialized<sp/>elements<sp/>at<sp/>end<sp/>of<sp/>array<sp/>&amp;<sp/>returns<sp/>pointer<sp/>to<sp/>first<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_last(TYPE<sp/>*a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns<sp/>an<sp/>lvalue<sp/>of<sp/>the<sp/>last<sp/>item<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[n]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>access<sp/>the<sp/>nth<sp/>(counting<sp/>from<sp/>0)<sp/>element<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>STRETCHY_BUFFER_NO_SHORT_NAMES<sp/>to<sp/>only<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>names<sp/>of<sp/>the<sp/>form<sp/>&apos;stb_sb_&apos;<sp/>if<sp/>you<sp/>have<sp/>a<sp/>name<sp/>that<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>otherwise<sp/>collide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>these<sp/>are<sp/>all<sp/>macros<sp/>and<sp/>many<sp/>of<sp/>them<sp/>evaluate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>their<sp/>arguments<sp/>more<sp/>than<sp/>once,<sp/>so<sp/>the<sp/>arguments<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>be<sp/>side-effect-free.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>&apos;TYPE<sp/>*a&apos;<sp/>in<sp/>sb_push<sp/>and<sp/>sb_add<sp/>must<sp/>be<sp/>lvalues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>so<sp/>that<sp/>the<sp/>library<sp/>can<sp/>overwrite<sp/>the<sp/>existing<sp/>pointer<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>the<sp/>object<sp/>has<sp/>to<sp/>be<sp/>reallocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>In<sp/>an<sp/>out-of-memory<sp/>condition,<sp/>the<sp/>code<sp/>will<sp/>try<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set<sp/>up<sp/>a<sp/>null-pointer<sp/>or<sp/>otherwise-invalid-pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>exception<sp/>to<sp/>happen<sp/>later.<sp/>It&apos;s<sp/>possible<sp/>optimizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>compilers<sp/>could<sp/>detect<sp/>this<sp/>write-to-null<sp/>statically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>and<sp/>optimize<sp/>away<sp/>some<sp/>of<sp/>the<sp/>code,<sp/>but<sp/>it<sp/>should<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>be<sp/>along<sp/>the<sp/>failure<sp/>path.<sp/>Nevertheless,<sp/>for<sp/>more<sp/>security</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>face<sp/>of<sp/>such<sp/>compilers,<sp/>#define<sp/>STRETCHY_BUFFER_OUT_OF_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>to<sp/>a<sp/>statement<sp/>such<sp/>as<sp/>assert(0)<sp/>or<sp/>exit(1)<sp/>or<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>to<sp/>force<sp/>a<sp/>failure<sp/>when<sp/>out-of-memory<sp/>occurs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Common<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>The<sp/>main<sp/>application<sp/>for<sp/>this<sp/>is<sp/>when<sp/>building<sp/>a<sp/>list<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>things<sp/>with<sp/>an<sp/>unknown<sp/>quantity,<sp/>either<sp/>due<sp/>to<sp/>loading<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>a<sp/>file<sp/>or<sp/>through<sp/>a<sp/>process<sp/>which<sp/>produces<sp/>an<sp/>unpredictable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>My<sp/>most<sp/>common<sp/>idiom<sp/>is<sp/>something<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SomeStruct<sp/>*arr<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(something)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SomeStruct<sp/>new_one;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_one.whatever<sp/>=<sp/>whatever;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_one.whatup<sp/><sp/><sp/>=<sp/>whatup;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_one.foobar<sp/><sp/><sp/>=<sp/>barfoo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_push(arr,<sp/>new_one);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>various<sp/>closely-related<sp/>factorings<sp/>of<sp/>that.<sp/>For<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>you<sp/>might<sp/>have<sp/>several<sp/>functions<sp/>to<sp/>create/init<sp/>new<sp/>SomeStructs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>if<sp/>you<sp/>use<sp/>the<sp/>above<sp/>idiom,<sp/>you<sp/>might<sp/>prefer<sp/>to<sp/>make<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>structs<sp/>rather<sp/>than<sp/>take<sp/>non-const-pointers-to-structs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>so<sp/>you<sp/>can<sp/>do<sp/>things<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SomeStruct<sp/>*arr<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(something)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(case_A)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_push(arr,<sp/>some_func1());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(case_B)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_push(arr,<sp/>some_func2());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_push(arr,<sp/>some_func3());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>above<sp/>relies<sp/>on<sp/>the<sp/>fact<sp/>that<sp/>sb_push<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>evaluate<sp/>its<sp/>second<sp/>argument<sp/>more<sp/>than<sp/>once.<sp/>The<sp/>macros<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>evaluate<sp/>the<sp/>*array*<sp/>argument<sp/>multiple<sp/>times,<sp/>and<sp/>numeric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>arguments<sp/>may<sp/>be<sp/>evaluated<sp/>multiple<sp/>times,<sp/>but<sp/>you<sp/>can<sp/>rely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>on<sp/>the<sp/>second<sp/>argument<sp/>of<sp/>sb_push<sp/>being<sp/>evaluated<sp/>only<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Of<sp/>course,<sp/>you<sp/>don&apos;t<sp/>have<sp/>to<sp/>store<sp/>bare<sp/>objects<sp/>in<sp/>the<sp/>array;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>you<sp/>need<sp/>the<sp/>objects<sp/>to<sp/>have<sp/>stable<sp/>pointers,<sp/>store<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>of<sp/>pointers<sp/>instead:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SomeStruct<sp/>**arr<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(something)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SomeStruct<sp/>*new_one<sp/>=<sp/>malloc(sizeof(*new_one));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_one-&gt;whatever<sp/>=<sp/>whatever;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_one-&gt;whatup<sp/><sp/><sp/>=<sp/>whatup;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_one-&gt;foobar<sp/><sp/><sp/>=<sp/>barfoo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb_push(arr,<sp/>new_one);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>How<sp/>it<sp/>works:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>A<sp/>long-standing<sp/>tradition<sp/>in<sp/>things<sp/>like<sp/>malloc<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>is<sp/>to<sp/>store<sp/>extra<sp/>data<sp/>before<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>block<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to<sp/>the<sp/>user.<sp/>The<sp/>stretchy<sp/>buffer<sp/>implementation<sp/>here<sp/>uses<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>same<sp/>trick;<sp/>the<sp/>current-count<sp/>and<sp/>current-allocation-size<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stored<sp/>before<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>array<sp/>returned<sp/>to<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(This<sp/>means<sp/>you<sp/>can&apos;t<sp/>directly<sp/>free()<sp/>the<sp/>pointer,<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>allocated<sp/>pointer<sp/>is<sp/>different<sp/>from<sp/>the<sp/>type-safe<sp/>pointer<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to<sp/>the<sp/>user.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>The<sp/>details<sp/>are<sp/>trivial<sp/>and<sp/>implementation<sp/>is<sp/>straightforward;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>main<sp/>trick<sp/>is<sp/>in<sp/>realizing<sp/>in<sp/>the<sp/>first<sp/>place<sp/>that<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>possible<sp/>to<sp/>do<sp/>this<sp/>in<sp/>a<sp/>generic,<sp/>type-safe<sp/>way<sp/>in<sp/>C.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Contributors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Timothy<sp/>Wright<sp/>(github:ZenToad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>See<sp/>end<sp/>of<sp/>file<sp/>for<sp/>license<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STB_STRETCHY_BUFFER_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_STRETCHY_BUFFER_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_STRETCHY_BUFFER_SHORT_NAMES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sb_free<sp/><sp/><sp/>stb_sb_free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sb_push<sp/><sp/><sp/>stb_sb_push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sb_count<sp/><sp/>stb_sb_count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sb_add<sp/><sp/><sp/><sp/>stb_sb_add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sb_last<sp/><sp/><sp/>stb_sb_last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb_sb_free(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)<sp/>?<sp/>free(stb__sbraw(a)),0<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb_sb_push(a,v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stb__sbmaybegrow(a,1),<sp/>(a)[stb__sbn(a)++]<sp/>=<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb_sb_count(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)<sp/>?<sp/>stb__sbn(a)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb_sb_add(a,n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stb__sbmaybegrow(a,n),<sp/>stb__sbn(a)+=(n),<sp/>&amp;(a)[stb__sbn(a)-(n)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb_sb_last(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)[stb__sbn(a)-1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__sbraw(a)<sp/>((int<sp/>*)<sp/>(void<sp/>*)<sp/>(a)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__sbm(a)<sp/><sp/><sp/>stb__sbraw(a)[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__sbn(a)<sp/><sp/><sp/>stb__sbraw(a)[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__sbneedgrow(a,n)<sp/><sp/>((a)==0<sp/>||<sp/>stb__sbn(a)+(n)<sp/>&gt;=<sp/>stb__sbm(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__sbmaybegrow(a,n)<sp/>(stb__sbneedgrow(a,(n))<sp/>?<sp/>stb__sbgrow(a,n)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__sbgrow(a,n)<sp/><sp/><sp/><sp/><sp/><sp/>(*((void<sp/>**)&amp;(a))<sp/>=<sp/>stb__sbgrowf((a),<sp/>(n),<sp/>sizeof(*(a))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stb__sbgrowf(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemsize)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dbl_cur<sp/>=<sp/>arr<sp/>?<sp/>2*stb__sbm(arr)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_needed<sp/>=<sp/>stb_sb_count(arr)<sp/>+<sp/>increment;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>dbl_cur<sp/>&gt;<sp/>min_needed<sp/>?<sp/>dbl_cur<sp/>:<sp/>min_needed;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>realloc(arr<sp/>?<sp/>stb__sbraw(arr)<sp/>:<sp/>0,<sp/>itemsize<sp/>*<sp/>m<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)*2);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arr)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p+2;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STRETCHY_BUFFER_OUT_OF_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STRETCHY_BUFFER_OUT_OF_MEMORY<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>(2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int));<sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>force<sp/>a<sp/>NULL<sp/>pointer<sp/>exception<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STB_STRETCHY_BUFFER_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="224"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="225"><highlight class="comment">This<sp/>software<sp/>is<sp/>available<sp/>under<sp/>2<sp/>licenses<sp/>--<sp/>choose<sp/>whichever<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="226"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="227"><highlight class="comment">ALTERNATIVE<sp/>A<sp/>-<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="228"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>Sean<sp/>Barrett</highlight></codeline>
<codeline lineno="229"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="230"><highlight class="comment">this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="231"><highlight class="comment">the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="232"><highlight class="comment">use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="233"><highlight class="comment">of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="234"><highlight class="comment">so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="235"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="236"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="237"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="238"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="239"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="240"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="241"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="242"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="243"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="244"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="245"><highlight class="comment">ALTERNATIVE<sp/>B<sp/>-<sp/>Public<sp/>Domain<sp/>(www.unlicense.org)</highlight></codeline>
<codeline lineno="246"><highlight class="comment">This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="247"><highlight class="comment">Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or<sp/>distribute<sp/>this</highlight></codeline>
<codeline lineno="248"><highlight class="comment">software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled<sp/>binary,<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="249"><highlight class="comment">commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any<sp/>means.</highlight></codeline>
<codeline lineno="250"><highlight class="comment">In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="251"><highlight class="comment">software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the<sp/>software<sp/>to<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="252"><highlight class="comment">domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="253"><highlight class="comment">the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="254"><highlight class="comment">overt<sp/>act<sp/>of<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="255"><highlight class="comment">this<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight></codeline>
<codeline lineno="256"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="257"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="258"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="259"><highlight class="comment">AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="260"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="261"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="262"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="263"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretchy_buffer.h"/>
  </compounddef>
</doxygen>
