<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="glew__init__glx_8c" kind="file" language="C++">
    <compoundname>glew_init_glx.c</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="glew__init__glx_8c_1aac5568f7a9e9194ee6bf3c7d6d571c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean</type>
        <definition>GLboolean glxewGetExtension</definition>
        <argsstring>(const char *name)</argsstring>
        <name>glxewGetExtension</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glew/auto/src/glew_init_glx.c" line="3" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glew/auto/src/glew_init_glx.c" bodystart="3" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="glew__init__glx_8c_1a11dc44baeaeb873007ad17dfa498400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLenum</type>
        <definition>GLenum glxewInit</definition>
        <argsstring>()</argsstring>
        <name>glxewInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glew/auto/src/glew_init_glx.c" line="15" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glew/auto/src/glew_init_glx.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">GLboolean<sp/>glxewGetExtension<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte*<sp/>start;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte*<sp/>end;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glXGetCurrentDisplay<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GL_FALSE;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte*)glXGetClientString(glXGetCurrentDisplay(),<sp/>GLX_EXTENSIONS);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>start)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GL_FALSE;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>_glewStrLen(start);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_glewSearchExtension(name,<sp/>start,<sp/>end);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">GLenum<sp/>glxewInit<sp/>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>Display*<sp/>display;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>major,<sp/>minor;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte*<sp/>extStart;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte*<sp/>extEnd;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>core<sp/>GLX<sp/>1.2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_glewInit_GLX_VERSION_1_2())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GLEW_ERROR_GLX_VERSION_11_ONLY;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>a<sp/>display<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>display<sp/>=<sp/>glXGetCurrentDisplay();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GLEW_ERROR_NO_GLX_DISPLAY;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>GLXEW_VERSION_1_0<sp/>=<sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>GLXEW_VERSION_1_1<sp/>=<sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>GLXEW_VERSION_1_2<sp/>=<sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>GLXEW_VERSION_1_3<sp/>=<sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>GLXEW_VERSION_1_4<sp/>=<sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>query<sp/>GLX<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>glXQueryVersion(display,<sp/>&amp;major,<sp/>&amp;minor);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(major<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>minor<sp/>&lt;=<sp/>3)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(minor)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLXEW_VERSION_1_4<sp/>=<sp/>GL_FALSE;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLXEW_VERSION_1_4<sp/>=<sp/>GL_FALSE;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLXEW_VERSION_1_3<sp/>=<sp/>GL_FALSE;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GLEW_ERROR_GLX_VERSION_11_ONLY;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>query<sp/>GLX<sp/>extension<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>extStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glXGetCurrentDisplay<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>extStart<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte*)glXGetClientString(display,<sp/>GLX_EXTENSIONS);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extStart<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>extStart<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*)</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>extEnd<sp/>=<sp/>extStart<sp/>+<sp/>_glewStrLen(extStart);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>extensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glew/auto/src/glew_init_glx.c"/>
  </compounddef>
</doxygen>
