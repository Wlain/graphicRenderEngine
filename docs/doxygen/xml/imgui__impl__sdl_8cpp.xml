<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__impl__sdl_8cpp" kind="file" language="C++">
    <compoundname>imgui_impl_sdl.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__impl__sdl_8h" local="yes">imgui_impl_sdl.h</includes>
    <includes local="no">SDL.h</includes>
    <includes local="no">SDL_syswm.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp</label>
        <link refid="imgui__impl__sdl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_impl_sdl.h</label>
        <link refid="imgui__impl__sdl_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SDL.h</label>
      </node>
      <node id="11">
        <label>SDL_syswm.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_im_gui___impl_s_d_l2___data" prot="public">ImGui_ImplSDL2_Data</innerclass>
    <innerclass refid="struct_im_gui___impl_s_d_l2___viewport_data" prot="public">ImGui_ImplSDL2_ViewportData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1a313b5bc58c0de4eb53710ddc720e094d" prot="public" static="no">
        <name>SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="75" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1a0abd40a62e21e48ecc6b8143a76a7cf4" prot="public" static="no">
        <name>SDL_HAS_MOUSE_FOCUS_CLICKTHROUGH</name>
        <initializer>SDL_VERSION_ATLEAST(2,0,5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="77" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1a9874dfd196522ba18571a993f3dfe843" prot="public" static="no">
        <name>SDL_HAS_WINDOW_ALPHA</name>
        <initializer>SDL_VERSION_ATLEAST(2,0,5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="78" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1ac1a35c4eee8bee7e3df73b7831248d8b" prot="public" static="no">
        <name>SDL_HAS_ALWAYS_ON_TOP</name>
        <initializer>SDL_VERSION_ATLEAST(2,0,5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="79" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1ad0ae23e2c9d00a932c6116ca1bb19956" prot="public" static="no">
        <name>SDL_HAS_USABLE_DISPLAY_BOUNDS</name>
        <initializer>SDL_VERSION_ATLEAST(2,0,5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="80" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1a9edf138c0164f6bc6b711d4824631615" prot="public" static="no">
        <name>SDL_HAS_PER_MONITOR_DPI</name>
        <initializer>SDL_VERSION_ATLEAST(2,0,4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="81" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1aea2eeaab96a591241a01aa9cda35be47" prot="public" static="no">
        <name>SDL_HAS_VULKAN</name>
        <initializer>SDL_VERSION_ATLEAST(2,0,6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="82" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1a0720760ecc7d8768f926a5b2ba4af07d" prot="public" static="no">
        <name>MAP_BUTTON</name>
        <param><defname>NAV_NO</defname></param>
        <param><defname>BUTTON_NO</defname></param>
        <initializer>{ io.NavInputs[NAV_NO] = (SDL_GameControllerGetButton(game_controller, BUTTON_NO) != 0) ? 1.0f : 0.0f; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="554" column="13"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__sdl_8cpp_1ad181101ed89f4155bbc97eccffea135b" prot="public" static="no">
        <name>MAP_ANALOG</name>
        <param><defname>NAV_NO</defname></param>
        <param><defname>AXIS_NO</defname></param>
        <param><defname>V0</defname></param>
        <param><defname>V1</defname></param>
        <initializer>{ float vn = (float)(SDL_GameControllerGetAxis(game_controller, AXIS_NO) - V0) / (float)(V1 - V0); if (vn &gt; 1.0f) vn = 1.0f; if (vn &gt; 0.0f &amp;&amp; io.NavInputs[NAV_NO] &lt; vn) io.NavInputs[NAV_NO] = vn; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="555" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="imgui__impl__sdl_8cpp_1a444310ec27e8a9e70c6591e05db51fe7" prot="public" static="yes" mutable="no">
        <type>const Uint32</type>
        <definition>const Uint32 SDL_WINDOW_VULKAN</definition>
        <argsstring></argsstring>
        <name>SDL_WINDOW_VULKAN</name>
        <initializer>= 0x10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="84" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a4cbf777d0d8d67b4637ff3ba69b4a16a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref> *</type>
        <definition>static ImGui_ImplSDL2_Data * ImGui_ImplSDL2_GetBackendData</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_GetBackendData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="105" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1aee3cb86ae119d8c5b03197b398498de6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_UpdateMonitors</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_UpdateMonitors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="580" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="580" bodyend="605" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" declline="111" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a309dcdc8114af75c7e97f7bba6043609" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_InitPlatformInterface</definition>
        <argsstring>(SDL_Window *window, void *sdl_gl_context)</argsstring>
        <name>ImGui_ImplSDL2_InitPlatformInterface</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sdl_gl_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="838" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="838" bodyend="872" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" declline="112" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a22c7382e3b5f9f0084fd04dc1926c534" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_ShutdownPlatformInterface</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_ShutdownPlatformInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="874" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="874" bodyend="877" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" declline="113" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a4b1386673bd286ad5b0473fa376e4d51" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * ImGui_ImplSDL2_GetClipboardText</definition>
        <argsstring>(void *)</argsstring>
        <name>ImGui_ImplSDL2_GetClipboardText</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="116" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a90f8176e0a8eaa0fdab2a26cd769b862" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_SetClipboardText</definition>
        <argsstring>(void *, const char *text)</argsstring>
        <name>ImGui_ImplSDL2_SetClipboardText</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="125" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a9ff4913823428b6e94b69086c6f372ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ImGuiKey</type>
        <definition>static ImGuiKey ImGui_ImplSDL2_KeycodeToImGuiKey</definition>
        <argsstring>(int keycode)</argsstring>
        <name>ImGui_ImplSDL2_KeycodeToImGuiKey</name>
        <param>
          <type>int</type>
          <declname>keycode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="130" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="130" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a025ee1c27450454d7d4d469f00b7aba9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_UpdateKeyModifiers</definition>
        <argsstring>(SDL_Keymod sdl_key_mods)</argsstring>
        <name>ImGui_ImplSDL2_UpdateKeyModifiers</name>
        <param>
          <type>SDL_Keymod</type>
          <declname>sdl_key_mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="243" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="243" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1af02f4ad765d4f65b334eb14a4065f8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplSDL2_ProcessEvent</definition>
        <argsstring>(const SDL_Event *event)</argsstring>
        <name>ImGui_ImplSDL2_ProcessEvent</name>
        <param>
          <type>const SDL_Event *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="259" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="259" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a00901b7df757b8b9bfb0f3e7ea880a9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplSDL2_Init</definition>
        <argsstring>(SDL_Window *window, void *sdl_gl_context)</argsstring>
        <name>ImGui_ImplSDL2_Init</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sdl_gl_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="339" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="339" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a64942ba4101d9d607f601a381ce40d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplSDL2_InitForOpenGL</definition>
        <argsstring>(SDL_Window *window, void *sdl_gl_context)</argsstring>
        <name>ImGui_ImplSDL2_InitForOpenGL</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sdl_gl_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="413" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a37fa767ee8df754bd923b1d1e4de55a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplSDL2_InitForVulkan</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>ImGui_ImplSDL2_InitForVulkan</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="418" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="418" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1ae7d148dd2c382c50e59d125907530838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplSDL2_InitForD3D</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>ImGui_ImplSDL2_InitForD3D</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="430" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="430" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a890ac8639fb6eb52d06d11b9d157e035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplSDL2_InitForMetal</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>ImGui_ImplSDL2_InitForMetal</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="438" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a01204b6d12c7387b2c4b3b6d871c692f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplSDL2_InitForSDLRenderer</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>ImGui_ImplSDL2_InitForSDLRenderer</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="443" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1af32b62f3df7cef2d1b3a88b8fb96d811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplSDL2_Shutdown</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="448" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="448" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1aa536172923c12f98484157e5b3bf2aeb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_UpdateMouseData</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_UpdateMouseData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="467" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="467" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1afdc67821452f561c34af5d7a1db9adda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_UpdateMouseCursor</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_UpdateMouseCursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="517" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="517" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a7b2a9dbc58586430deed32e4e6282c85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_UpdateGamepads</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_UpdateGamepads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="538" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="538" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1ade7f27ebdb4261e5e9184379677e0bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplSDL2_NewFrame</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplSDL2_NewFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="607" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="607" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1af128f25119229f46a9621a68deecde1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_CreateWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_CreateWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="655" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="655" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1ab4447c50b033747745aa04a559731f7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_DestroyWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_DestroyWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="706" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="706" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a6c82bd4dedb9925c5412659586dd10ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_ShowWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_ShowWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="721" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="721" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a116455dc252e2eae16ec4323f1da76b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImGui_ImplSDL2_GetWindowPos</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_GetWindowPos</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="748" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="748" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1aff558d4253dafed28eec8e5dc0ab2a72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_SetWindowPos</definition>
        <argsstring>(ImGuiViewport *viewport, ImVec2 pos)</argsstring>
        <name>ImGui_ImplSDL2_SetWindowPos</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="756" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="756" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a215a3fbb41d5317df36e76b840c756a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImGui_ImplSDL2_GetWindowSize</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_GetWindowSize</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="762" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="762" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a53507cb879d33d20f9af6d5398147a3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_SetWindowSize</definition>
        <argsstring>(ImGuiViewport *viewport, ImVec2 size)</argsstring>
        <name>ImGui_ImplSDL2_SetWindowSize</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="770" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="770" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1afbdd26f176fd5d6adf02d7dae5007c87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_SetWindowTitle</definition>
        <argsstring>(ImGuiViewport *viewport, const char *title)</argsstring>
        <name>ImGui_ImplSDL2_SetWindowTitle</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="776" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="776" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1aadfa26dcdb584e991011ba8bff5ac1a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_SetWindowFocus</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_SetWindowFocus</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="790" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="790" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1ac8b1a51b521235baabdf287694b8a3f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplSDL2_GetWindowFocus</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_GetWindowFocus</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="796" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="796" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a450d35b8a20893bcf23d90c622fea155" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplSDL2_GetWindowMinimized</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplSDL2_GetWindowMinimized</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="802" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="802" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1a7f0942a743cb0c789b99840003ba27bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_RenderWindow</definition>
        <argsstring>(ImGuiViewport *viewport, void *)</argsstring>
        <name>ImGui_ImplSDL2_RenderWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="808" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="808" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__sdl_8cpp_1ac953d0121ebc653b0938cebd2546b022" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplSDL2_SwapBuffers</definition>
        <argsstring>(ImGuiViewport *viewport, void *)</argsstring>
        <name>ImGui_ImplSDL2_SwapBuffers</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" line="815" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp" bodystart="815" bodyend="823"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Platform<sp/>Backend<sp/>for<sp/>SDL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Renderer<sp/>(e.g.<sp/>DirectX11,<sp/>OpenGL3,<sp/>Vulkan..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Info:<sp/>SDL2<sp/>is<sp/>a<sp/>cross-platform<sp/>general<sp/>purpose<sp/>library<sp/>for<sp/>handling<sp/>windows,<sp/>inputs,<sp/>graphics<sp/>context<sp/>creation,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Prefer<sp/>SDL<sp/>2.0.5+<sp/>for<sp/>full<sp/>feature<sp/>support.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Clipboard<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Keyboard<sp/>support.<sp/>Since<sp/>1.87<sp/>we<sp/>are<sp/>using<sp/>the<sp/>io.AddKeyEvent()<sp/>function.<sp/>Pass<sp/>ImGuiKey<sp/>values<sp/>to<sp/>all<sp/>key<sp/>functions<sp/>e.g.<sp/>ImGui::IsKeyPressed(ImGuiKey_Space).<sp/>[Legacy<sp/>SDL_SCANCODE_*<sp/>values<sp/>will<sp/>also<sp/>be<sp/>supported<sp/>unless<sp/>IMGUI_DISABLE_OBSOLETE_KEYIO<sp/>is<sp/>set]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Gamepad<sp/>support.<sp/>Enabled<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NavEnableGamepad&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Mouse<sp/>cursor<sp/>shape<sp/>and<sp/>visibility.<sp/>Disable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NoMouseCursorChange&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Multi-viewport<sp/>support<sp/>(multiple<sp/>windows).<sp/>Enable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_ViewportsEnable&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Missing<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[<sp/>]<sp/>Platform:<sp/>SDL2<sp/>handling<sp/>of<sp/>IME<sp/>under<sp/>Windows<sp/>appears<sp/>to<sp/>be<sp/>broken<sp/>and<sp/>it<sp/>explicitly<sp/>disable<sp/>the<sp/>regular<sp/>Windows<sp/>IME.<sp/>You<sp/>can<sp/>restore<sp/>Windows<sp/>IME<sp/>by<sp/>compiling<sp/>SDL<sp/>with<sp/>SDL_DISABLE_WINDOWS_IME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[<sp/>]<sp/>Platform:<sp/>Multi-viewport<sp/>+<sp/>Minimized<sp/>windows<sp/>seems<sp/>to<sp/>break<sp/>mouse<sp/>wheel<sp/>events<sp/>(at<sp/>least<sp/>under<sp/>Windows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>Dear<sp/>ImGui,<sp/>read<sp/>documentation<sp/>from<sp/>the<sp/>docs/<sp/>folder<sp/>+<sp/>read<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>online:<sp/>https://github.com/ocornut/imgui/tree/master/docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANGELOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(minor<sp/>and<sp/>older<sp/>changes<sp/>stripped<sp/>away,<sp/>please<sp/>see<sp/>git<sp/>history<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-XX-XX:<sp/>Platform:<sp/>Added<sp/>support<sp/>for<sp/>multiple<sp/>windows<sp/>via<sp/>the<sp/>ImGuiPlatformIO<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddMousePosEvent(),<sp/>io.AddMouseButtonEvent(),<sp/>io.AddMouseWheelEvent()<sp/>API<sp/>(1.87+).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>always<sp/>calling<sp/>io.AddKeyModsEvent()<sp/>next<sp/>and<sp/>before<sp/>key<sp/>event<sp/>(not<sp/>in<sp/>NewFrame)<sp/>to<sp/>fix<sp/>input<sp/>queue<sp/>with<sp/>very<sp/>low<sp/>framerates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-12:<sp/>Update<sp/>mouse<sp/>inputs<sp/>using<sp/>SDL_MOUSEMOTION/SDL_WINDOWEVENT_LEAVE<sp/>+<sp/>fallback<sp/>to<sp/>provide<sp/>it<sp/>when<sp/>focused<sp/>but<sp/>not<sp/>hovered/captured.<sp/>More<sp/>standard<sp/>and<sp/>will<sp/>allow<sp/>us<sp/>to<sp/>pass<sp/>it<sp/>to<sp/>future<sp/>input<sp/>queue<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-12:<sp/>Maintain<sp/>our<sp/>own<sp/>copy<sp/>of<sp/>MouseButtonsDown<sp/>mask<sp/>instead<sp/>of<sp/>using<sp/>ImGui::IsAnyMouseDown()<sp/>which<sp/>will<sp/>be<sp/>obsoleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-10:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddKeyEvent(),<sp/>io.AddKeyModsEvent()<sp/>+<sp/>io.SetKeyEventNativeData()<sp/>API<sp/>(1.87+).<sp/>Support<sp/>for<sp/>full<sp/>ImGuiKey<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-08-17:<sp/>Calling<sp/>io.AddFocusEvent()<sp/>on<sp/>SDL_WINDOWEVENT_FOCUS_GAINED/SDL_WINDOWEVENT_FOCUS_LOST.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-07-29:<sp/>Inputs:<sp/>MousePos<sp/>is<sp/>correctly<sp/>reported<sp/>when<sp/>the<sp/>host<sp/>platform<sp/>window<sp/>is<sp/>hovered<sp/>but<sp/>not<sp/>focused<sp/>(using<sp/>SDL_GetMouseFocus()<sp/>+<sp/>SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH,<sp/>requires<sp/>SDL<sp/>2.0.5+)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06:29:<sp/>*BREAKING<sp/>CHANGE*<sp/>Removed<sp/>&apos;SDL_Window*<sp/>window&apos;<sp/>parameter<sp/>to<sp/>ImGui_ImplSDL2_NewFrame()<sp/>which<sp/>was<sp/>unnecessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06-29:<sp/>Reorganized<sp/>backend<sp/>to<sp/>pull<sp/>data<sp/>from<sp/>a<sp/>single<sp/>structure<sp/>to<sp/>facilitate<sp/>usage<sp/>with<sp/>multiple-contexts<sp/>(all<sp/>g_XXXX<sp/>access<sp/>changed<sp/>to<sp/>bd-&gt;XXXX).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-03-22:<sp/>Rework<sp/>global<sp/>mouse<sp/>pos<sp/>availability<sp/>check<sp/>listing<sp/>supported<sp/>platforms<sp/>explicitly,<sp/>effectively<sp/>fixing<sp/>mouse<sp/>access<sp/>on<sp/>Raspberry<sp/>Pi.<sp/>(#2837,<sp/>#3950)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-05-25:<sp/>Misc:<sp/>Report<sp/>a<sp/>zero<sp/>display-size<sp/>when<sp/>window<sp/>is<sp/>minimized,<sp/>to<sp/>be<sp/>consistent<sp/>with<sp/>other<sp/>backends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-02-20:<sp/>Inputs:<sp/>Fixed<sp/>mapping<sp/>for<sp/>ImGuiKey_KeyPadEnter<sp/>(using<sp/>SDL_SCANCODE_KP_ENTER<sp/>instead<sp/>of<sp/>SDL_SCANCODE_RETURN2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-12-17:<sp/>Inputs:<sp/>On<sp/>Wayland,<sp/>use<sp/>SDL_GetMouseState<sp/>(because<sp/>there<sp/>is<sp/>no<sp/>global<sp/>mouse<sp/>state).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-12-05:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>ImGuiMouseCursor_NotAllowed<sp/>mouse<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-07-21:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_KeyPadEnter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-04-23:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>SDL_GameController<sp/>(if<sp/>ImGuiConfigFlags_NavEnableGamepad<sp/>is<sp/>set<sp/>by<sp/>user<sp/>application).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-03-12:<sp/>Misc:<sp/>Preserve<sp/>DisplayFramebufferScale<sp/>when<sp/>main<sp/>window<sp/>is<sp/>minimized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-12-21:<sp/>Inputs:<sp/>Workaround<sp/>for<sp/>Android/iOS<sp/>which<sp/>don&apos;t<sp/>seem<sp/>to<sp/>handle<sp/>focus<sp/>related<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-11-30:<sp/>Misc:<sp/>Setting<sp/>up<sp/>io.BackendPlatformName<sp/>so<sp/>it<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>About<sp/>Window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-11-14:<sp/>Changed<sp/>the<sp/>signature<sp/>of<sp/>ImGui_ImplSDL2_ProcessEvent()<sp/>to<sp/>take<sp/>a<sp/>&apos;const<sp/>SDL_Event*&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-08-01:<sp/>Inputs:<sp/>Workaround<sp/>for<sp/>Emscripten<sp/>which<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>handle<sp/>focus<sp/>related<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-29:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>the<sp/>ImGuiMouseCursor_Hand<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-08:<sp/>Misc:<sp/>Extracted<sp/>imgui_impl_sdl.cpp/.h<sp/>away<sp/>from<sp/>the<sp/>old<sp/>combined<sp/>SDL2+OpenGL/Vulkan<sp/>examples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-08:<sp/>Misc:<sp/>ImGui_ImplSDL2_InitForOpenGL()<sp/>now<sp/>takes<sp/>a<sp/>SDL_GLContext<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-05-09:<sp/>Misc:<sp/>Fixed<sp/>clipboard<sp/>paste<sp/>memory<sp/>leak<sp/>(we<sp/>didn&apos;t<sp/>call<sp/>SDL_FreeMemory<sp/>on<sp/>the<sp/>data<sp/>returned<sp/>by<sp/>SDL_GetClipboardText).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-03-20:<sp/>Misc:<sp/>Setup<sp/>io.BackendFlags<sp/>ImGuiBackendFlags_HasMouseCursors<sp/>flag<sp/>+<sp/>honor<sp/>ImGuiConfigFlags_NoMouseCursorChange<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-16:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>mouse<sp/>cursors,<sp/>honoring<sp/>ImGui::GetMouseCursor()<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Misc:<sp/>Removed<sp/>call<sp/>to<sp/>ImGui::Shutdown()<sp/>which<sp/>is<sp/>not<sp/>available<sp/>from<sp/>1.60<sp/>WIP,<sp/>user<sp/>needs<sp/>to<sp/>call<sp/>CreateContext/DestroyContext<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-05:<sp/>Misc:<sp/>Using<sp/>SDL_GetPerformanceCounter()<sp/>instead<sp/>of<sp/>SDL_GetTicks()<sp/>to<sp/>be<sp/>able<sp/>to<sp/>handle<sp/>very<sp/>high<sp/>framerate<sp/>(1000+<sp/>FPS).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-05:<sp/>Inputs:<sp/>Keyboard<sp/>mapping<sp/>is<sp/>using<sp/>scancodes<sp/>everywhere<sp/>instead<sp/>of<sp/>a<sp/>confusing<sp/>mixture<sp/>of<sp/>keycodes<sp/>and<sp/>scancodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-20:<sp/>Inputs:<sp/>Added<sp/>Horizontal<sp/>Mouse<sp/>Wheel<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-19:<sp/>Inputs:<sp/>When<sp/>available<sp/>(SDL<sp/>2.0.4+)<sp/>using<sp/>SDL_CaptureMouse()<sp/>to<sp/>retrieve<sp/>coordinates<sp/>outside<sp/>of<sp/>client<sp/>area<sp/>when<sp/>dragging.<sp/>Otherwise<sp/>(SDL<sp/>2.0.3<sp/>and<sp/>before)<sp/>testing<sp/>for<sp/>SDL_WINDOW_INPUT_FOCUS<sp/>instead<sp/>of<sp/>SDL_WINDOW_MOUSE_FOCUS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-18:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Insert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2017-08-25:<sp/>Inputs:<sp/>MousePos<sp/>set<sp/>to<sp/>-FLT_MAX,-FLT_MAX<sp/>when<sp/>mouse<sp/>is<sp/>unavailable/missing<sp/>(instead<sp/>of<sp/>-1,-1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2016-10-15:<sp/>Misc:<sp/>Added<sp/>a<sp/>void*<sp/>user_data<sp/>parameter<sp/>to<sp/>Clipboard<sp/>function<sp/>handlers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_impl_sdl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SDL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(the<sp/>multi-viewports<sp/>feature<sp/>requires<sp/>SDL<sp/>features<sp/>supported<sp/>from<sp/>SDL<sp/>2.0.4+.<sp/>SDL<sp/>2.0.5+<sp/>is<sp/>highly<sp/>recommended)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL_syswm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TargetConditionals.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_VERSION_ATLEAST(2,0,4)<sp/>&amp;&amp;<sp/>!defined(__EMSCRIPTEN__)<sp/>&amp;&amp;<sp/>!defined(__ANDROID__)<sp/>&amp;&amp;<sp/>!(defined(__APPLE__)<sp/>&amp;&amp;<sp/>TARGET_OS_IOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_MOUSE_FOCUS_CLICKTHROUGH<sp/><sp/><sp/><sp/>SDL_VERSION_ATLEAST(2,0,5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_WINDOW_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_VERSION_ATLEAST(2,0,5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_ALWAYS_ON_TOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_VERSION_ATLEAST(2,0,5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_USABLE_DISPLAY_BOUNDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_VERSION_ATLEAST(2,0,5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_PER_MONITOR_DPI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_VERSION_ATLEAST(2,0,4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAS_VULKAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_VERSION_ATLEAST(2,0,6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SDL_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Uint32<sp/>SDL_WINDOW_VULKAN<sp/>=<sp/>0x10000000;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SDL<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_im_gui___impl_s_d_l2___data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Window*<sp/>Window;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Uint64<sp/><sp/><sp/><sp/><sp/><sp/>Time;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseButtonsDown;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Cursor*<sp/>MouseCursors[ImGuiMouseCursor_COUNT];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClipboardTextData;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseCanUseGlobalState;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UseVulkan;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>()<sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backend<sp/>data<sp/>stored<sp/>in<sp/>io.BackendPlatformUserData<sp/>to<sp/>allow<sp/>support<sp/>for<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>STRONGLY<sp/>preferred<sp/>that<sp/>you<sp/>use<sp/>docking<sp/>branch<sp/>with<sp/>multi-viewports<sp/>(==<sp/>single<sp/>Dear<sp/>ImGui<sp/>context<sp/>+<sp/>multiple<sp/>windows)<sp/>instead<sp/>of<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>multi-context<sp/>support<sp/>is<sp/>not<sp/>well<sp/>tested<sp/>and<sp/>probably<sp/>dysfunctional<sp/>in<sp/>this<sp/>backend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>some<sp/>shared<sp/>resources<sp/>(mouse<sp/>cursor<sp/>shape,<sp/>gamepad)<sp/>are<sp/>mishandled<sp/>when<sp/>using<sp/>multi-context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>ImGui_ImplSDL2_GetBackendData()</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui::GetCurrentContext()<sp/>?<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*)ImGui::GetIO().BackendPlatformUserData<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_UpdateMonitors();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_InitPlatformInterface(SDL_Window*<sp/>window,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sdl_gl_context);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_ShutdownPlatformInterface();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ImGui_ImplSDL2_GetClipboardText(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;ClipboardTextData)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_free(bd-&gt;ClipboardTextData);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;ClipboardTextData<sp/>=<sp/>SDL_GetClipboardText();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bd-&gt;ClipboardTextData;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_SetClipboardText(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetClipboardText(text);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ImGuiKey<sp/>ImGui_ImplSDL2_KeycodeToImGuiKey(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keycode)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(keycode)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_TAB:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Tab;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_LEFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftArrow;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_RIGHT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightArrow;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_UP:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_UpArrow;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_DOWN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_DownArrow;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_PAGEUP:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PageUp;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_PAGEDOWN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PageDown;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_HOME:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Home;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_END:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_End;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_INSERT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Insert;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_DELETE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Delete;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_BACKSPACE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Backspace;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_SPACE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Space;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_RETURN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Enter;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_ESCAPE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Escape;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_QUOTE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Apostrophe;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_COMMA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Comma;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_MINUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Minus;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_PERIOD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Period;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_SLASH:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Slash;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_SEMICOLON:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Semicolon;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_EQUALS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Equal;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_LEFTBRACKET:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftBracket;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_BACKSLASH:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Backslash;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_RIGHTBRACKET:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightBracket;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_BACKQUOTE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_GraveAccent;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_CAPSLOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_CapsLock;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_SCROLLLOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_ScrollLock;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_NUMLOCKCLEAR:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_NumLock;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_PRINTSCREEN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PrintScreen;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_PAUSE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Pause;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad2;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad3;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad4;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad5;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad6;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad7;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad8;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad9;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_PERIOD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadDecimal;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_DIVIDE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadDivide;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_MULTIPLY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadMultiply;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_MINUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadSubtract;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_PLUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadAdd;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_ENTER:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadEnter;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_KP_EQUALS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadEqual;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_LCTRL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftCtrl;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_LSHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftShift;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_LALT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftAlt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_LGUI:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftSuper;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_RCTRL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightCtrl;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_RSHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightShift;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_RALT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightAlt;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_RGUI:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightSuper;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_MENU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Menu;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_2;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_3;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_4;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_5;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_6;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_7;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_8;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_9;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_a:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_A;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_b:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_B;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_c:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_C;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_d:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_D;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_e:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_E;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_f:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_g:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_G;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_h:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_H;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_i:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_I;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_j:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_J;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_k:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_K;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_l:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_L;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_m:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_M;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_n:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_N;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_o:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_O;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_p:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_P;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_q:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Q;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_r:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_R;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_s:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_S;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_t:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_T;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_u:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_U;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_v:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_V;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_w:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_W;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_x:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_X;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_y:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Y;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_z:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Z;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F2;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F3;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F4;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F5;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F6;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F7;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F8;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F9;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F10:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F10;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F11:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F11;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDLK_F12:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F12;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_None;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_UpdateKeyModifiers(SDL_Keymod<sp/>sdl_key_mods)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiKeyModFlags<sp/>key_mods<sp/>=</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sdl_key_mods<sp/>&amp;<sp/>KMOD_CTRL)<sp/>?<sp/>ImGuiKeyModFlags_Ctrl<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sdl_key_mods<sp/>&amp;<sp/>KMOD_SHIFT)<sp/>?<sp/>ImGuiKeyModFlags_Shift<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sdl_key_mods<sp/>&amp;<sp/>KMOD_ALT)<sp/>?<sp/>ImGuiKeyModFlags_Alt<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sdl_key_mods<sp/>&amp;<sp/>KMOD_GUI)<sp/>?<sp/>ImGuiKeyModFlags_Super<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddKeyModsEvent(key_mods);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>read<sp/>the<sp/>io.WantCaptureMouse,<sp/>io.WantCaptureKeyboard<sp/>flags<sp/>to<sp/>tell<sp/>if<sp/>dear<sp/>imgui<sp/>wants<sp/>to<sp/>use<sp/>your<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureMouse<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>mouse<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureKeyboard<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>keyboard<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generally<sp/>you<sp/>may<sp/>always<sp/>pass<sp/>all<sp/>inputs<sp/>to<sp/>dear<sp/>imgui,<sp/>and<sp/>hide<sp/>them<sp/>from<sp/>your<sp/>application<sp/>based<sp/>on<sp/>those<sp/>two<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>have<sp/>multiple<sp/>SDL<sp/>events<sp/>and<sp/>some<sp/>of<sp/>them<sp/>are<sp/>not<sp/>meant<sp/>to<sp/>be<sp/>used<sp/>by<sp/>dear<sp/>imgui,<sp/>you<sp/>may<sp/>need<sp/>to<sp/>filter<sp/>events<sp/>based<sp/>on<sp/>their<sp/>windowID<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_ProcessEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SDL_Event*<sp/>event)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event-&gt;type)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEMOTION:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>mouse_pos((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)event-&gt;motion.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)event-&gt;motion.y);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_x,<sp/>window_y;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GetWindowPosition(SDL_GetWindowFromID(event-&gt;motion.windowID),<sp/>&amp;window_x,<sp/>&amp;window_y);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_pos.x<sp/>+=<sp/>window_x;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_pos.y<sp/>+=<sp/>window_y;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent(mouse_pos.x,<sp/>mouse_pos.y);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEWHEEL:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wheel_x<sp/>=<sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;wheel.x<sp/>&gt;<sp/>0)<sp/>?<sp/>1.0f<sp/>:<sp/>(event-&gt;wheel.x<sp/>&lt;<sp/>0)<sp/>?<sp/>-1.0f<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wheel_y<sp/>=<sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;wheel.y<sp/>&gt;<sp/>0)<sp/>?<sp/>1.0f<sp/>:<sp/>(event-&gt;wheel.y<sp/>&lt;<sp/>0)<sp/>?<sp/>-1.0f<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMouseWheelEvent(wheel_x,<sp/>wheel_y);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEBUTTONDOWN:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEBUTTONUP:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mouse_button<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;button.button<sp/>==<sp/>SDL_BUTTON_LEFT)<sp/>{<sp/>mouse_button<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;button.button<sp/>==<sp/>SDL_BUTTON_RIGHT)<sp/>{<sp/>mouse_button<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;button.button<sp/>==<sp/>SDL_BUTTON_MIDDLE)<sp/>{<sp/>mouse_button<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_button<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMouseButtonEvent(mouse_button,<sp/>(event-&gt;type<sp/>==<sp/>SDL_MOUSEBUTTONDOWN));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseButtonsDown<sp/>=<sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;type<sp/>==<sp/>SDL_MOUSEBUTTONDOWN)<sp/>?<sp/>(bd-&gt;MouseButtonsDown<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>mouse_button))<sp/>:<sp/>(bd-&gt;MouseButtonsDown<sp/>&amp;<sp/>~(1<sp/>&lt;&lt;<sp/>mouse_button));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_TEXTINPUT:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddInputCharactersUTF8(event-&gt;text.text);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_KEYDOWN:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_KEYUP:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_UpdateKeyModifiers((SDL_Keymod)event-&gt;key.keysym.mod);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiKey<sp/>key<sp/>=<sp/>ImGui_ImplSDL2_KeycodeToImGuiKey(event-&gt;key.keysym.sym);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddKeyEvent(key,<sp/>(event-&gt;type<sp/>==<sp/>SDL_KEYDOWN));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.SetKeyEventNativeData(key,<sp/>event-&gt;key.keysym.sym,<sp/>event-&gt;key.keysym.scancode,<sp/>event-&gt;key.keysym.scancode);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>support<sp/>legacy<sp/>indexing<sp/>(&lt;1.87<sp/>user<sp/>code).<sp/>Legacy<sp/>backend<sp/>uses<sp/>SDLK_***<sp/>as<sp/>indices<sp/>to<sp/>IsKeyXXX()<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_WINDOWEVENT:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Uint8<sp/>window_event<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;window.event;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_event<sp/>==<sp/>SDL_WINDOWEVENT_LEAVE)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent(-FLT_MAX,<sp/>-FLT_MAX);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_event<sp/>==<sp/>SDL_WINDOWEVENT_FOCUS_GAINED)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddFocusEvent(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_event<sp/>==<sp/>SDL_WINDOWEVENT_FOCUS_LOST)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddFocusEvent(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_event<sp/>==<sp/>SDL_WINDOWEVENT_CLOSE<sp/>||<sp/>window_event<sp/>==<sp/>SDL_WINDOWEVENT_MOVED<sp/>||<sp/>window_event<sp/>==<sp/>SDL_WINDOWEVENT_RESIZED)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>ImGui::FindViewportByPlatformHandle((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)SDL_GetWindowFromID(event-&gt;window.windowID)))</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_event<sp/>==<sp/>SDL_WINDOWEVENT_CLOSE)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_event<sp/>==<sp/>SDL_WINDOWEVENT_MOVED)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestMove<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_event<sp/>==<sp/>SDL_WINDOWEVENT_RESIZED)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestResize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_Init(SDL_Window*<sp/>window,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sdl_gl_context)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(io.BackendPlatformUserData<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>initialized<sp/>a<sp/>platform<sp/>backend!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>and<sp/>store<sp/>if<sp/>we<sp/>are<sp/>on<sp/>a<sp/>SDL<sp/>backend<sp/>that<sp/>supports<sp/>global<sp/>mouse<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(&quot;wayland&quot;<sp/>and<sp/>&quot;rpi&quot;<sp/>don&apos;t<sp/>support<sp/>it,<sp/>but<sp/>we<sp/>chose<sp/>to<sp/>use<sp/>a<sp/>white-list<sp/>instead<sp/>of<sp/>a<sp/>black-list)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mouse_can_use_global_state<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sdl_backend<sp/>=<sp/>SDL_GetCurrentVideoDriver();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>global_mouse_whitelist[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;windows&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cocoa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x11&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DIVE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VMAN&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>IM_ARRAYSIZE(global_mouse_whitelist);<sp/>n++)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(sdl_backend,<sp/>global_mouse_whitelist[n],<sp/>strlen(global_mouse_whitelist[n]))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_can_use_global_state<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>backend<sp/>capabilities<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>)();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformUserData<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;imgui_impl_sdl&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasMouseCursors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>GetMouseCursor()<sp/>values<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasSetMousePos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>io.WantSetMousePos<sp/>requests<sp/>(optional,<sp/>rarely<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_can_use_global_state)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_PlatformHasViewports;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>create<sp/>multi-viewports<sp/>on<sp/>the<sp/>Platform<sp/>side<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;Window<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCanUseGlobalState<sp/>=<sp/>mouse_can_use_global_state;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>io.SetClipboardTextFn<sp/>=<sp/>ImGui_ImplSDL2_SetClipboardText;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>io.GetClipboardTextFn<sp/>=<sp/>ImGui_ImplSDL2_GetClipboardText;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>io.ClipboardUserData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>mouse<sp/>cursors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_Arrow]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_ARROW);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_TextInput]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_IBEAM);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeAll]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZEALL);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNS]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZENS);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeEW]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZEWE);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNESW]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZENESW);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_ResizeNWSE]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZENWSE);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_Hand]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_HAND);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_NotAllowed]<sp/>=<sp/>SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_NO);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>platform<sp/>dependent<sp/>data<sp/>in<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>mouse<sp/>update<sp/>function<sp/>expect<sp/>PlatformHandle<sp/>to<sp/>be<sp/>filled<sp/>for<sp/>the<sp/>main<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>main_viewport<sp/>=<sp/>ImGui::GetMainViewport();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandle<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)window;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SysWMinfo<sp/><ref refid="structinfo" kindref="compound">info</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_VERSION(&amp;<ref refid="structinfo" kindref="compound">info</ref>.version);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SDL_GetWindowWMInfo(window,<sp/>&amp;<ref refid="structinfo" kindref="compound">info</ref>))</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandleRaw<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="structinfo" kindref="compound">info</ref>.info.win.window;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>SDL<sp/>hint<sp/>to<sp/>receive<sp/>mouse<sp/>click<sp/>events<sp/>on<sp/>window<sp/>focus,<sp/>otherwise<sp/>SDL<sp/>doesn&apos;t<sp/>emit<sp/>the<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Without<sp/>this,<sp/>when<sp/>clicking<sp/>to<sp/>gain<sp/>focus,<sp/>our<sp/>widgets<sp/>wouldn&apos;t<sp/>activate<sp/>even<sp/>though<sp/>they<sp/>showed<sp/>as<sp/>hovered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>is<sp/>unfortunately<sp/>a<sp/>global<sp/>SDL<sp/>setting,<sp/>so<sp/>enabling<sp/>it<sp/>might<sp/>have<sp/>a<sp/>side-effect<sp/>on<sp/>your<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>unlikely<sp/>to<sp/>make<sp/>a<sp/>difference,<sp/>but<sp/>if<sp/>your<sp/>app<sp/>absolutely<sp/>needs<sp/>to<sp/>ignore<sp/>the<sp/>initial<sp/>on-focus<sp/>click:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>ignore<sp/>SDL_MOUSEBUTTONDOWN<sp/>events<sp/>coming<sp/>right<sp/>after<sp/>a<sp/>SDL_WINDOWEVENT_FOCUS_GAINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>SDL_HAS_MOUSE_FOCUS_CLICKTHROUGH</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetHint(SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>monitors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_UpdateMonitors();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>SDL_CaptureMouse(),<sp/>SDL_GetGlobalMouseState()<sp/>from<sp/>SDL<sp/>2.0.4+<sp/>to<sp/>support<sp/>multiple<sp/>viewports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>left<sp/>the<sp/>call<sp/>to<sp/>ImGui_ImplSDL2_InitPlatformInterface()<sp/>outside<sp/>of<sp/>#ifdef<sp/>to<sp/>avoid<sp/>unused-function<sp/>warnings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)<sp/>&amp;&amp;<sp/>(io.BackendFlags<sp/>&amp;<sp/>ImGuiBackendFlags_PlatformHasViewports))</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_InitPlatformInterface(window,<sp/>sdl_gl_context);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_InitForOpenGL(SDL_Window*<sp/>window,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sdl_gl_context)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_Init(window,<sp/>sdl_gl_context);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_InitForVulkan(SDL_Window*<sp/>window)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SDL_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ImGui_ImplSDL2_Init(window,<sp/>NULL))</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;UseVulkan<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_InitForD3D(SDL_Window*<sp/>window)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_Init(window,<sp/>NULL);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_InitForMetal(SDL_Window*<sp/>window)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_Init(window,<sp/>NULL);</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_InitForSDLRenderer(SDL_Window*<sp/>window)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_Init(window,<sp/>NULL);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_Shutdown()</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>platform<sp/>backend<sp/>to<sp/>shutdown,<sp/>or<sp/>already<sp/>shutdown?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_ShutdownPlatformInterface();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;ClipboardTextData)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_free(bd-&gt;ClipboardTextData);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImGuiMouseCursor<sp/>cursor_n<sp/>=<sp/>0;<sp/>cursor_n<sp/>&lt;<sp/>ImGuiMouseCursor_COUNT;<sp/>cursor_n++)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_FreeCursor(bd-&gt;MouseCursors[cursor_n]);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformUserData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_DELETE(bd);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>incredibly<sp/>messy<sp/>because<sp/>some<sp/>of<sp/>the<sp/>functions<sp/>we<sp/>need<sp/>for<sp/>full<sp/>viewport<sp/>support<sp/>are<sp/>not<sp/>available<sp/>in<sp/>SDL<sp/>&lt;<sp/>2.0.4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_UpdateMouseData()</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>forward<sp/>mouse<sp/>input<sp/>when<sp/>hovered<sp/>or<sp/>captured<sp/>(via<sp/>SDL_MOUSEMOTION)<sp/>or<sp/>when<sp/>focused<sp/>(below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SDL_CaptureMouse()<sp/>let<sp/>the<sp/>OS<sp/>know<sp/>e.g.<sp/>that<sp/>our<sp/>imgui<sp/>drag<sp/>outside<sp/>the<sp/>SDL<sp/>window<sp/>boundaries<sp/>shouldn&apos;t<sp/>e.g.<sp/>trigger<sp/>other<sp/>operations<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_CaptureMouse(bd-&gt;MouseButtonsDown<sp/>!=<sp/>0<sp/>?<sp/>SDL_TRUE<sp/>:<sp/>SDL_FALSE);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Window*<sp/>focused_window<sp/>=<sp/>SDL_GetKeyboardFocus();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_app_focused<sp/>=<sp/>(focused_window<sp/>&amp;&amp;<sp/>(bd-&gt;Window<sp/>==<sp/>focused_window<sp/>||<sp/>ImGui::FindViewportByPlatformHandle((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)focused_window)));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Window*<sp/>focused_window<sp/>=<sp/>bd-&gt;Window;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_app_focused<sp/>=<sp/>(SDL_GetWindowFlags(bd-&gt;Window)<sp/>&amp;<sp/>SDL_WINDOW_INPUT_FOCUS)<sp/>!=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SDL<sp/>2.0.3<sp/>and<sp/>non-windowed<sp/>systems:<sp/>single-viewport<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_app_focused)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Set<sp/>OS<sp/>mouse<sp/>position<sp/>from<sp/>Dear<sp/>ImGui<sp/>if<sp/>requested<sp/>(rarely<sp/>used,<sp/>only<sp/>when<sp/>ImGuiConfigFlags_NavEnableSetMousePos<sp/>is<sp/>enabled<sp/>by<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.WantSetMousePos)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_WarpMouseGlobal((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.MousePos.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.MousePos.y);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_WarpMouseInWindow(bd-&gt;Window,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.MousePos.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.MousePos.y);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Fallback<sp/>to<sp/>provide<sp/>mouse<sp/>position<sp/>when<sp/>focused<sp/>(SDL_MOUSEMOTION<sp/>already<sp/>provides<sp/>this<sp/>when<sp/>hovered<sp/>or<sp/>captured)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;MouseCanUseGlobalState<sp/>&amp;&amp;<sp/>bd-&gt;MouseButtonsDown<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single-viewport<sp/>mode:<sp/>mouse<sp/>position<sp/>in<sp/>client<sp/>window<sp/>coordinates<sp/>(io.MousePos<sp/>is<sp/>(0,0)<sp/>when<sp/>the<sp/>mouse<sp/>is<sp/>on<sp/>the<sp/>upper-left<sp/>corner<sp/>of<sp/>the<sp/>app<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multi-viewport<sp/>mode:<sp/>mouse<sp/>position<sp/>in<sp/>OS<sp/>absolute<sp/>coordinates<sp/>(io.MousePos<sp/>is<sp/>(0,0)<sp/>when<sp/>the<sp/>mouse<sp/>is<sp/>on<sp/>the<sp/>upper-left<sp/>of<sp/>the<sp/>primary<sp/>monitor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mouse_x,<sp/>mouse_y,<sp/>window_x,<sp/>window_y;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GetGlobalMouseState(&amp;mouse_x,<sp/>&amp;mouse_y);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GetWindowPosition(focused_window,<sp/>&amp;window_x,<sp/>&amp;window_y);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_x<sp/>-=<sp/>window_x;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_y<sp/>-=<sp/>window_y;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_y);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>support<sp/>ImGuiBackendFlags_HasMouseHoveredViewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>io.MouseHoveredViewport<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_UpdateMouseCursor()</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NoMouseCursorChange)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiMouseCursor<sp/>imgui_cursor<sp/>=<sp/>ImGui::GetMouseCursor();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.MouseDrawCursor<sp/>||<sp/>imgui_cursor<sp/>==<sp/>ImGuiMouseCursor_None)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>OS<sp/>mouse<sp/>cursor<sp/>if<sp/>imgui<sp/>is<sp/>drawing<sp/>it<sp/>or<sp/>if<sp/>it<sp/>wants<sp/>no<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_ShowCursor(SDL_FALSE);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>OS<sp/>mouse<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_SetCursor(bd-&gt;MouseCursors[imgui_cursor]<sp/>?<sp/>bd-&gt;MouseCursors[imgui_cursor]<sp/>:<sp/>bd-&gt;MouseCursors[ImGuiMouseCursor_Arrow]);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_ShowCursor(SDL_TRUE);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_UpdateGamepads()</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(io.NavInputs,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(io.NavInputs));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NavEnableGamepad)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>gamepad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GameController*<sp/>game_controller<sp/>=<sp/>SDL_GameControllerOpen(0);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!game_controller)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>&amp;=<sp/>~ImGuiBackendFlags_HasGamepad;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>gamepad<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAP_BUTTON(NAV_NO,<sp/>BUTTON_NO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>io.NavInputs[NAV_NO]<sp/>=<sp/>(SDL_GameControllerGetButton(game_controller,<sp/>BUTTON_NO)<sp/>!=<sp/>0)<sp/>?<sp/>1.0f<sp/>:<sp/>0.0f;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAP_ANALOG(NAV_NO,<sp/>AXIS_NO,<sp/>V0,<sp/>V1)<sp/>{<sp/>float<sp/>vn<sp/>=<sp/>(float)(SDL_GameControllerGetAxis(game_controller,<sp/>AXIS_NO)<sp/>-<sp/>V0)<sp/>/<sp/>(float)(V1<sp/>-<sp/>V0);<sp/>if<sp/>(vn<sp/>&gt;<sp/>1.0f)<sp/>vn<sp/>=<sp/>1.0f;<sp/>if<sp/>(vn<sp/>&gt;<sp/>0.0f<sp/>&amp;&amp;<sp/>io.NavInputs[NAV_NO]<sp/>&lt;<sp/>vn)<sp/>io.NavInputs[NAV_NO]<sp/>=<sp/>vn;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thumb_dead_zone<sp/>=<sp/>8000;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SDL_gamecontroller.h<sp/>suggests<sp/>using<sp/>this<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Activate,<sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_A);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cross<sp/>/<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Cancel,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Circle<sp/>/<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Menu,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_X);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Square<sp/>/<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Input,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_Y);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Triangle<sp/>/<sp/>Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadLeft,<sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_DPAD_LEFT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadRight,<sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_DPAD_RIGHT);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadUp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_DPAD_UP);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadDown,<sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_DPAD_DOWN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_FocusPrev,<sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_LEFTSHOULDER);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L1<sp/>/<sp/>LB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_FocusNext,<sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_RIGHTSHOULDER);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R1<sp/>/<sp/>RB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_TweakSlow,<sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_LEFTSHOULDER);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L1<sp/>/<sp/>LB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_TweakFast,<sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_BUTTON_RIGHTSHOULDER);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R1<sp/>/<sp/>RB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickLeft,<sp/><sp/><sp/><sp/>SDL_CONTROLLER_AXIS_LEFTX,<sp/>-thumb_dead_zone,<sp/>-32768);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickRight,<sp/><sp/><sp/>SDL_CONTROLLER_AXIS_LEFTX,<sp/>+thumb_dead_zone,<sp/>+32767);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickUp,<sp/><sp/><sp/><sp/><sp/><sp/>SDL_CONTROLLER_AXIS_LEFTY,<sp/>-thumb_dead_zone,<sp/>-32767);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickDown,<sp/><sp/><sp/><sp/>SDL_CONTROLLER_AXIS_LEFTY,<sp/>+thumb_dead_zone,<sp/>+32767);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasGamepad;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MAP_BUTTON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MAP_ANALOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME-PLATFORM:<sp/>SDL<sp/>doesn&apos;t<sp/>have<sp/>an<sp/>event<sp/>to<sp/>notify<sp/>the<sp/>application<sp/>of<sp/>display/monitor<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_UpdateMonitors()</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>platform_io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Monitors.resize(0);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_count<sp/>=<sp/>SDL_GetNumVideoDisplays();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>display_count;<sp/>n++)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>the<sp/>validity<sp/>of<sp/>monitor<sp/>DPI<sp/>information<sp/>on<sp/>Windows<sp/>depends<sp/>on<sp/>the<sp/>application<sp/>DPI<sp/>awareness<sp/>settings,<sp/>which<sp/>generally<sp/>needs<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>manifest<sp/>or<sp/>at<sp/>runtime.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_monitor" kindref="compound">ImGuiPlatformMonitor</ref><sp/>monitor;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Rect<sp/>r;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GetDisplayBounds(n,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.MainPos<sp/>=<sp/>monitor.WorkPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.y);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.MainSize<sp/>=<sp/>monitor.WorkSize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.h);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_USABLE_DISPLAY_BOUNDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GetDisplayUsableBounds(n,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.WorkPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.y);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.WorkSize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r.h);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_PER_MONITOR_DPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dpi<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SDL_GetDisplayDPI(n,<sp/>&amp;dpi,<sp/>NULL,<sp/>NULL))</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor.DpiScale<sp/>=<sp/>dpi<sp/>/<sp/>96.0f;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>platform_io.Monitors.push_back(monitor);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_NewFrame()</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>you<sp/>call<sp/>ImGui_ImplSDL2_Init()?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>display<sp/>size<sp/>(every<sp/>frame<sp/>to<sp/>accommodate<sp/>for<sp/>window<sp/>resizing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_w,<sp/>display_h;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GetWindowSize(bd-&gt;Window,<sp/>&amp;w,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SDL_GetWindowFlags(bd-&gt;Window)<sp/>&amp;<sp/>SDL_WINDOW_MINIMIZED)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_GetDrawableSize(bd-&gt;Window,<sp/>&amp;display_w,<sp/>&amp;display_h);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>io.DisplaySize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)h);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>h<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.DisplayFramebufferScale<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)display_w<sp/>/<sp/>w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)display_h<sp/>/<sp/>h);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>time<sp/>step<sp/>(we<sp/>don&apos;t<sp/>use<sp/>SDL_GetTicks()<sp/>because<sp/>it<sp/>is<sp/>using<sp/>millisecond<sp/>resolution)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Uint64<sp/>frequency<sp/>=<sp/>SDL_GetPerformanceFrequency();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>Uint64<sp/>current_time<sp/>=<sp/>SDL_GetPerformanceCounter();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>io.DeltaTime<sp/>=<sp/>bd-&gt;Time<sp/>&gt;<sp/>0<sp/>?<sp/>(float)((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(current_time<sp/>-<sp/>bd-&gt;Time)<sp/>/<sp/>frequency)<sp/>:<sp/>(float)(1.0f<sp/>/<sp/>60.0f);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;Time<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_UpdateMouseData();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_UpdateMouseCursor();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>game<sp/>controllers<sp/>(if<sp/>enabled<sp/>and<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_UpdateGamepads();</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MULTI-VIEWPORT<sp/>/<sp/>PLATFORM<sp/>INTERFACE<sp/>SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>_advanced_<sp/>and<sp/>_optional_<sp/>feature,<sp/>allowing<sp/>the<sp/>backend<sp/>to<sp/>create<sp/>and<sp/>handle<sp/>multiple<sp/>viewports<sp/>simultaneously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>dear<sp/>imgui<sp/>or<sp/>creating<sp/>a<sp/>new<sp/>binding<sp/>for<sp/>dear<sp/>imgui,<sp/>it<sp/>is<sp/>recommended<sp/>that<sp/>you<sp/>completely<sp/>ignore<sp/>this<sp/>section<sp/>first..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>structure<sp/>we<sp/>store<sp/>in<sp/>the<sp/>void*<sp/>RenderUserData<sp/>field<sp/>of<sp/>each<sp/>ImGuiViewport<sp/>to<sp/>easily<sp/>retrieve<sp/>our<sp/>backend<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="struct_im_gui___impl_s_d_l2___viewport_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref></highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Window*<sp/><sp/><sp/><sp/><sp/>Window;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>Uint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowID;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindowOwned;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GLContext<sp/><sp/><sp/><ref refid="struct_g_l_context_struct" kindref="compound">GLContext</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>()<sp/>{<sp/>Window<sp/>=<sp/>NULL;<sp/>WindowID<sp/>=<sp/>0;<sp/>WindowOwned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="struct_g_l_context_struct" kindref="compound">GLContext</ref><sp/>=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">~ImGui_ImplSDL2_ViewportData</ref>()<sp/>{<sp/>IM_ASSERT(Window<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/><ref refid="struct_g_l_context_struct" kindref="compound">GLContext</ref><sp/>==<sp/>NULL);<sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal">};</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_CreateWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___data" kindref="compound">ImGui_ImplSDL2_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplSDL2_GetBackendData();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>)();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformUserData<sp/>=<sp/>vd;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>main_viewport<sp/>=<sp/>ImGui::GetMainViewport();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>main_viewport_data<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)main_viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Share<sp/>GL<sp/>resources<sp/>with<sp/>main<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_opengl<sp/>=<sp/>(main_viewport_data-&gt;GLContext<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GLContext<sp/>backup_context<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_opengl)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backup_context<sp/>=<sp/>SDL_GL_GetCurrentContext();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_SHARE_WITH_CURRENT_CONTEXT,<sp/>1);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_MakeCurrent(main_viewport_data-&gt;Window,<sp/>main_viewport_data-&gt;GLContext);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>Uint32<sp/>sdl_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>sdl_flags<sp/>|=<sp/>use_opengl<sp/>?<sp/>SDL_WINDOW_OPENGL<sp/>:<sp/>(bd-&gt;UseVulkan<sp/>?<sp/>SDL_WINDOW_VULKAN<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>sdl_flags<sp/>|=<sp/>SDL_GetWindowFlags(bd-&gt;Window)<sp/>&amp;<sp/>SDL_WINDOW_ALLOW_HIGHDPI;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>sdl_flags<sp/>|=<sp/>SDL_WINDOW_HIDDEN;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>sdl_flags<sp/>|=<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoDecoration)<sp/>?<sp/>SDL_WINDOW_BORDERLESS<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>sdl_flags<sp/>|=<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoDecoration)<sp/>?<sp/>0<sp/>:<sp/>SDL_WINDOW_RESIZABLE;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>SDL<sp/>hack<sp/>in<sp/>ImGui_ImplSDL2_ShowWindow().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>sdl_flags<sp/>|=<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoTaskBarIcon)<sp/>?<sp/>SDL_WINDOW_SKIP_TASKBAR<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_ALWAYS_ON_TOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>sdl_flags<sp/>|=<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_TopMost)<sp/>?<sp/>SDL_WINDOW_ALWAYS_ON_TOP<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;Window<sp/>=<sp/>SDL_CreateWindow(</highlight><highlight class="stringliteral">&quot;No<sp/>Title<sp/>Yet&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)viewport-&gt;Pos.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)viewport-&gt;Pos.y,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)viewport-&gt;Size.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)viewport-&gt;Size.y,<sp/>sdl_flags);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;WindowOwned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_opengl)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;GLContext<sp/>=<sp/>SDL_GL_CreateContext(vd-&gt;Window);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_SetSwapInterval(0);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_opengl<sp/>&amp;&amp;<sp/>backup_context)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_MakeCurrent(vd-&gt;Window,<sp/>backup_context);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformHandle<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)vd-&gt;Window;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(_WIN32)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SysWMinfo<sp/><ref refid="structinfo" kindref="compound">info</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_VERSION(&amp;<ref refid="structinfo" kindref="compound">info</ref>.version);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SDL_GetWindowWMInfo(vd-&gt;Window,<sp/>&amp;<ref refid="structinfo" kindref="compound">info</ref>))</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformHandleRaw<sp/>=<sp/><ref refid="structinfo" kindref="compound">info</ref>.info.win.window;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_DestroyWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vd-&gt;GLContext<sp/>&amp;&amp;<sp/>vd-&gt;WindowOwned)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_DeleteContext(vd-&gt;GLContext);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vd-&gt;Window<sp/>&amp;&amp;<sp/>vd-&gt;WindowOwned)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_DestroyWindow(vd-&gt;Window);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;GLContext<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;Window<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_DELETE(vd);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformUserData<sp/>=<sp/>viewport-&gt;PlatformHandle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_ShowWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(_WIN32)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>hwnd<sp/>=<sp/>(HWND)viewport-&gt;PlatformHandleRaw;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SDL<sp/>hack:<sp/>Hide<sp/>icon<sp/>from<sp/>task<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>SDL<sp/>2.0.6+<sp/>has<sp/>a<sp/>SDL_WINDOW_SKIP_TASKBAR<sp/>flag<sp/>which<sp/>is<sp/>supported<sp/>under<sp/>Windows<sp/>but<sp/>the<sp/>way<sp/>it<sp/>create<sp/>the<sp/>window<sp/>breaks<sp/>our<sp/>seamless<sp/>transition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoTaskBarIcon)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LONG<sp/>ex_style<sp/>=<sp/>::GetWindowLong(hwnd,<sp/>GWL_EXSTYLE);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ex_style<sp/>&amp;=<sp/>~WS_EX_APPWINDOW;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ex_style<sp/>|=<sp/>WS_EX_TOOLWINDOW;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetWindowLong(hwnd,<sp/>GWL_EXSTYLE,<sp/>ex_style);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SDL<sp/>hack:<sp/>SDL<sp/>always<sp/>activate/focus<sp/>windows<sp/>:/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoFocusOnAppearing)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ShowWindow(hwnd,<sp/>SW_SHOWNA);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_ShowWindow(vd-&gt;Window);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImGui_ImplSDL2_GetWindowPos(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0,<sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GetWindowPosition(vd-&gt;Window,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)y);</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_SetWindowPos(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos)</highlight></codeline>
<codeline lineno="757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetWindowPosition(vd-&gt;Window,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pos.x,<sp/>(int)pos.y);</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImGui_ImplSDL2_GetWindowSize(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>0,<sp/>h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GetWindowSize(vd-&gt;Window,<sp/>&amp;w,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)w,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)h);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_SetWindowSize(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetWindowSize(vd-&gt;Window,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)size.x,<sp/>(int)size.y);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_SetWindowTitle(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetWindowTitle(vd-&gt;Window,<sp/>title);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_WINDOW_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_SetWindowAlpha(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha)</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetWindowOpacity(vd-&gt;Window,<sp/>alpha);</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_SetWindowFocus(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_RaiseWindow(vd-&gt;Window);</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_GetWindowFocus(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(SDL_GetWindowFlags(vd-&gt;Window)<sp/>&amp;<sp/>SDL_WINDOW_INPUT_FOCUS)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_GetWindowMinimized(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(SDL_GetWindowFlags(vd-&gt;Window)<sp/>&amp;<sp/>SDL_WINDOW_MINIMIZED)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_RenderWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(vd-&gt;GLContext)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_MakeCurrent(vd-&gt;Window,<sp/>vd-&gt;GLContext);</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_SwapBuffers(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(vd-&gt;GLContext)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_MakeCurrent(vd-&gt;Window,<sp/>vd-&gt;GLContext);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GL_SwapWindow(vd-&gt;Window);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vulkan<sp/>support<sp/>(the<sp/>Vulkan<sp/>renderer<sp/>needs<sp/>to<sp/>call<sp/>a<sp/>platform-side<sp/>support<sp/>function<sp/>to<sp/>create<sp/>the<sp/>surface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SDL<sp/>is<sp/>graceful<sp/>enough<sp/>to<sp/>_not_<sp/>need<sp/>&lt;vulkan/vulkan.h&gt;<sp/>so<sp/>we<sp/>can<sp/>safely<sp/>include<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL_vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_CreateVkSurface(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/>ImU64<sp/>vk_instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vk_allocator,<sp/>ImU64*<sp/>out_vk_surface)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)vk_allocator;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_bool<sp/>ret<sp/>=<sp/>SDL_Vulkan_CreateSurface(vd-&gt;Window,<sp/>(VkInstance)vk_instance,<sp/>(VkSurfaceKHR*)out_vk_surface);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>?<sp/>0<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>ret<sp/>?<sp/>VK_SUCCESS<sp/>:<sp/>VK_NOT_READY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SDL_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_InitPlatformInterface(SDL_Window*<sp/>window,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sdl_gl_context)</highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>platform<sp/>interface<sp/>(will<sp/>be<sp/>coupled<sp/>with<sp/>a<sp/>renderer<sp/>interface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>platform_io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_CreateWindow<sp/>=<sp/>ImGui_ImplSDL2_CreateWindow;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_DestroyWindow<sp/>=<sp/>ImGui_ImplSDL2_DestroyWindow;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_ShowWindow<sp/>=<sp/>ImGui_ImplSDL2_ShowWindow;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowPos<sp/>=<sp/>ImGui_ImplSDL2_SetWindowPos;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowPos<sp/>=<sp/>ImGui_ImplSDL2_GetWindowPos;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowSize<sp/>=<sp/>ImGui_ImplSDL2_SetWindowSize;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowSize<sp/>=<sp/>ImGui_ImplSDL2_GetWindowSize;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowFocus<sp/>=<sp/>ImGui_ImplSDL2_SetWindowFocus;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowFocus<sp/>=<sp/>ImGui_ImplSDL2_GetWindowFocus;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowMinimized<sp/>=<sp/>ImGui_ImplSDL2_GetWindowMinimized;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowTitle<sp/>=<sp/>ImGui_ImplSDL2_SetWindowTitle;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_RenderWindow<sp/>=<sp/>ImGui_ImplSDL2_RenderWindow;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SwapBuffers<sp/>=<sp/>ImGui_ImplSDL2_SwapBuffers;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_WINDOW_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowAlpha<sp/>=<sp/>ImGui_ImplSDL2_SetWindowAlpha;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SDL_HAS_VULKAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_CreateVkSurface<sp/>=<sp/>ImGui_ImplSDL2_CreateVkSurface;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>main<sp/>window<sp/>handle<sp/>(which<sp/>is<sp/>owned<sp/>by<sp/>the<sp/>main<sp/>application,<sp/>not<sp/>by<sp/>us)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>mostly<sp/>for<sp/>simplicity<sp/>and<sp/>consistency,<sp/>so<sp/>that<sp/>our<sp/>code<sp/>(e.g.<sp/>mouse<sp/>handling<sp/>etc.)<sp/>can<sp/>use<sp/>same<sp/>logic<sp/>for<sp/>main<sp/>and<sp/>secondary<sp/>viewports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>main_viewport<sp/>=<sp/>ImGui::GetMainViewport();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>*<sp/>vd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_s_d_l2___viewport_data" kindref="compound">ImGui_ImplSDL2_ViewportData</ref>)();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;Window<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;WindowID<sp/>=<sp/>SDL_GetWindowID(window);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;WindowOwned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;GLContext<sp/>=<sp/>sdl_gl_context;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformUserData<sp/>=<sp/>vd;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandle<sp/>=<sp/>vd-&gt;Window;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplSDL2_ShutdownPlatformInterface()</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::DestroyPlatformWindows();</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_sdl.cpp"/>
  </compounddef>
</doxygen>
