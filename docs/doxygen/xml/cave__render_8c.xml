<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="cave__render_8c" kind="file" language="C++">
    <compoundname>cave_render.c</compoundname>
    <includes refid="stb__voxel__render_8h" local="yes">stb_voxel_render.h</includes>
    <includes refid="stb__gl_8h" local="yes">stb_gl.h</includes>
    <includes refid="stb__image_8h" local="yes">stb_image.h</includes>
    <includes refid="stb__glprog_8h" local="yes">stb_glprog.h</includes>
    <includes refid="caveview_8h" local="yes">caveview.h</includes>
    <includes refid="cave__parse_8h" local="yes">cave_parse.h</includes>
    <includes refid="stb_8h" local="yes">stb.h</includes>
    <includes local="yes">sdl.h</includes>
    <includes local="yes">sdl_thread.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">assert.h</includes>
    <incdepgraph>
      <node id="12">
        <label>stb.h</label>
        <link refid="stb_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stb_image.h</label>
        <link refid="stb__image_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stb_voxel_render.h</label>
        <link refid="stb__voxel__render_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cave_parse.h</label>
        <link refid="cave__parse_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c</label>
        <link refid="cave__render_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>caveview.h</label>
        <link refid="caveview_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stb_gl.h</label>
        <link refid="stb__gl_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stb_glprog.h</label>
        <link refid="stb__glprog_8h_source"/>
      </node>
      <node id="20">
        <label>assert.h</label>
      </node>
      <node id="6">
        <label>gl/gl.h</label>
      </node>
      <node id="7">
        <label>gl/glu.h</label>
      </node>
      <node id="19">
        <label>math.h</label>
      </node>
      <node id="17">
        <label>sdl.h</label>
      </node>
      <node id="18">
        <label>sdl_thread.h</label>
      </node>
      <node id="13">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structchunk__mesh" prot="public">chunk_mesh</innerclass>
    <innerclass refid="structmesh__worker" prot="public">mesh_worker</innerclass>
    <innerclass refid="structplane" prot="public">plane</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cave__render_8c_1aae20e9fa62595e4621ebf19a38824f9f" prot="public" static="no">
        <name>STB_GLEXT_DECLARE</name>
        <initializer>&quot;glext_list.h&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="8" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__render_8c_1a56dce54d2eef141faab9d338d77e9902" prot="public" static="no">
        <name>TEX_SIZE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="37" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__render_8c_1a8fa3a95e690c74108521420c97453ac8" prot="public" static="no">
        <name>CACHED_MESH_NUM_X</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="122" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__render_8c_1ab63e500c94da0daaf2114b8168f3bd06" prot="public" static="no">
        <name>CACHED_MESH_NUM_Y</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="123" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__render_8c_1ab54d50961c308cab099df191eae355dc" prot="public" static="no">
        <name>MAX_MESH_WORKERS</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="324" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__render_8c_1a7b07c8b39eb09303b3bc526d23852a49" prot="public" static="no">
        <name>MAX_CHUNK_LOAD_WORKERS</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="325" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cave__render_8c_1ab94814559b67e4a2a564087f821145ea" prot="public" static="no">
        <name>MAX_QUEUE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="868" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cave__render_8c_1a1812ab31015cef0a41c6d4f3ae07f13d" prot="public" static="no" strong="no">
        <type></type>
        <name>@141</name>
        <enumvalue id="cave__render_8c_1a1812ab31015cef0a41c6d4f3ae07f13da1a69b1351d5fad0def30e9d7d44bc2f3" prot="public">
          <name>STATE_invalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__render_8c_1a1812ab31015cef0a41c6d4f3ae07f13da30055d9bf9753d6c86c158dd8273ad42" prot="public">
          <name>STATE_needed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__render_8c_1a1812ab31015cef0a41c6d4f3ae07f13da12236ecbf4b9525bd229902691ec52a8" prot="public">
          <name>STATE_requested</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__render_8c_1a1812ab31015cef0a41c6d4f3ae07f13dadb51c470c1e4690044182d0d2acfd76b" prot="public">
          <name>STATE_abandoned</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__render_8c_1a1812ab31015cef0a41c6d4f3ae07f13da9403d38ed10dea456e4b628995e4583c" prot="public">
          <name>STATE_valid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="43" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="cave__render_8c_1a0a28cf10bf72f80c90de5e5e1e698bfb" prot="public" static="no" strong="no">
        <type></type>
        <name>@142</name>
        <enumvalue id="cave__render_8c_1a0a28cf10bf72f80c90de5e5e1e698bfbaf3fbd3dcee01d8d3f4a3b08150f8f159" prot="public">
          <name>WSTATE_idle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__render_8c_1a0a28cf10bf72f80c90de5e5e1e698bfbae47531269e4c42627dba00cefad5e6bd" prot="public">
          <name>WSTATE_requested</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__render_8c_1a0a28cf10bf72f80c90de5e5e1e698bfbaf060baead9e16d712b41715e70cf1817" prot="public">
          <name>WSTATE_running</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cave__render_8c_1a0a28cf10bf72f80c90de5e5e1e698bfbaf1b58a01d0b884947fc6b97377100744" prot="public">
          <name>WSTATE_mesh_ready</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="353" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="354" bodyend="359"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cave__render_8c_1abee69a8c0dbc3a083193dea4dddbaf8c" prot="public" static="no" mutable="no">
        <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref></type>
        <definition>stbvox_mesh_maker g_mesh_maker</definition>
        <argsstring></argsstring>
        <name>g_mesh_maker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="28" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a98050f44d02d9c2ee70b8435c84d82e5" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint main_prog</definition>
        <argsstring></argsstring>
        <name>main_prog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="30" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a0a49f812024b3918eb53c67d24855f71" prot="public" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint uniform_locations[64]</definition>
        <argsstring>[64]</argsstring>
        <name>uniform_locations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="31" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a7bd3b5acd72e44b1cfcd5e9c47744df1" prot="public" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 texture[TEX_SIZE][TEX_SIZE]</definition>
        <argsstring>[TEX_SIZE][TEX_SIZE]</argsstring>
        <name>texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="38" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a640ed05886b5c54012caed647bb8f728" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint voxel_tex[2]</definition>
        <argsstring>[2]</argsstring>
        <name>voxel_tex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="40" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1acbd6ac4d8dd8e0747a1d33adb6bb90f5" prot="public" static="no" mutable="no">
        <type><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref></type>
        <definition>chunk_mesh cached_chunk_mesh[CACHED_MESH_NUM_Y][CACHED_MESH_NUM_X]</definition>
        <argsstring>[CACHED_MESH_NUM_Y][CACHED_MESH_NUM_X]</argsstring>
        <name>cached_chunk_mesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="126" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a2c4b0dabe154aae79a7efd8428a6700a" prot="public" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint uniform_loc[16]</definition>
        <argsstring>[16]</argsstring>
        <name>uniform_loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="184" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a0f3c49c8f8b187d2d310c902822432b6" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float table3[128][3]</definition>
        <argsstring>[128][3]</argsstring>
        <name>table3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="185" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a96bdfd9e85387ecce53e8fa92a52929b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float table4[64][4]</definition>
        <argsstring>[64][4]</argsstring>
        <name>table4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="186" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a7eb3f02b1e3e7b5c9384c752f7bdb967" prot="public" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint tablei[2]</definition>
        <argsstring>[2]</argsstring>
        <name>tablei</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="187" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a863c86bdfd96bf9c461846689c2614aa" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float step</definition>
        <argsstring></argsstring>
        <name>step</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="189" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a7287aa4341d0bc802616e36453418217" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int view_dist_in_chunks</definition>
        <argsstring></argsstring>
        <name>view_dist_in_chunks</name>
        <initializer>= 80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="194" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a3c60dcdbe2df0b0c0a07efca95d43dc6" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint unitex[64]</definition>
        <argsstring>[64]</argsstring>
        <name>unitex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="287" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a6460fe1f8f03a28c10270f7feb90ec5a" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint unibuf[64]</definition>
        <argsstring>[64]</argsstring>
        <name>unibuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="287" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a7cd3d17270efa49416663f4e571144cc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_mesh_workers</definition>
        <argsstring></argsstring>
        <name>num_mesh_workers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="327" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1af8de331bce440ec054d598cba1453d65" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_chunk_load_workers</definition>
        <argsstring></argsstring>
        <name>num_chunk_load_workers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="328" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a285a49a21e43d98e9f7ea0f052a733dc" prot="public" static="no" mutable="no">
        <type><ref refid="structmesh__worker" kindref="compound">mesh_worker</ref></type>
        <definition>mesh_worker mesh_data[MAX_MESH_WORKERS]</definition>
        <argsstring>[MAX_MESH_WORKERS]</argsstring>
        <name>mesh_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="361" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a71cf846b08a6962abf1c34ab13da6933" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_meshes_started</definition>
        <argsstring></argsstring>
        <name>num_meshes_started</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="362" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a1c5d66875c3c3893bc067af48dd76966" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char tex2_data[64][4]</definition>
        <argsstring>[64][4]</argsstring>
        <name>tex2_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="367" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a784ba0617dbc4eec455188b9671295aa" prot="public" static="no" mutable="no">
        <type>SDL_mutex *</type>
        <definition>SDL_mutex* chunk_cache_mutex</definition>
        <argsstring></argsstring>
        <name>chunk_cache_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="528" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c" bodystart="522" bodyend="-1" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" declline="528" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1adcd7bac4fb16106ef8b493e4a17a6b92" prot="public" static="yes" mutable="no">
        <type><ref refid="structplane" kindref="compound">plane</ref></type>
        <definition>plane frustum[6]</definition>
        <argsstring>[6]</argsstring>
        <name>frustum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="655" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a1a7fcf5f88dd3987df4f5a83618c8487" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chunk_locations</definition>
        <argsstring></argsstring>
        <name>chunk_locations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="717" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a90766e990c4a0a3299dae681bef26211" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chunks_considered</definition>
        <argsstring></argsstring>
        <name>chunks_considered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="717" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1aabc2460c0dbf3bb17bf2c768624a37a2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chunks_in_frustum</definition>
        <argsstring></argsstring>
        <name>chunks_in_frustum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="717" column="39" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a7eb76aa1c7fbf02b3f4cf94c13ba7836" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int quads_considered</definition>
        <argsstring></argsstring>
        <name>quads_considered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="718" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a55f891b23463a28bdca885af7b70b4db" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int quads_rendered</definition>
        <argsstring></argsstring>
        <name>quads_rendered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="718" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a2a36f03ff6514a6581bbfdb8c6912a5e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chunk_storage_rendered</definition>
        <argsstring></argsstring>
        <name>chunk_storage_rendered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="719" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1aac1c4d107c5e708ee713ec9a6ccddc84" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chunk_storage_considered</definition>
        <argsstring></argsstring>
        <name>chunk_storage_considered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="719" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a6289a09b47b1176d64fa499faa7c73ce" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chunk_storage_total</definition>
        <argsstring></argsstring>
        <name>chunk_storage_total</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="719" column="53" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a04a50dab765fa9f8b75814989b798eb4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int update_frustum</definition>
        <argsstring></argsstring>
        <name>update_frustum</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="720" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1aaad3ccb28ec5b3ab89cdb42cd3c21771" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int max_chunk_storage</definition>
        <argsstring></argsstring>
        <name>max_chunk_storage</name>
        <initializer>= 900 &lt;&lt; 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="726" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a8a1468c6c20eb6549bdb72976fbd13fe" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int min_chunk_storage</definition>
        <argsstring></argsstring>
        <name>min_chunk_storage</name>
        <initializer>= 800 &lt;&lt; 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="727" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a538e3a4857cf9635776e05cf1ada9a83" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float min_priority</definition>
        <argsstring></argsstring>
        <name>min_priority</name>
        <initializer>= -500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="730" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a0ced74c1235cfa302b0fda9cba9682e4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_meshes_uploaded</definition>
        <argsstring></argsstring>
        <name>num_meshes_uploaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="732" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1aae02e1ae69339213673af37e15e343b4" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float tex2_alpha</definition>
        <argsstring></argsstring>
        <name>tex2_alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="747" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_main.c" bodystart="344" bodyend="-1" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" declline="747" declcolumn="14"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1ab714d9bf6480e3842f9174937f6257c9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int global_hack</definition>
        <argsstring></argsstring>
        <name>global_hack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="748" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_main.c" bodystart="349" bodyend="-1" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" declline="748" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a080346cc58cb8f8b780aa706f20a1bdc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_threads_active</definition>
        <argsstring></argsstring>
        <name>num_threads_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="749" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cave__render_8c_1a9605ff44e577ffadbd55c8a55fc4ea5a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float chunk_server_activity</definition>
        <argsstring></argsstring>
        <name>chunk_server_activity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="750" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="750" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cave__render_8c_1afaed9dd655d3234c979e5cc06387c4c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scale_texture</definition>
        <argsstring>(unsigned char *src, int x, int y, int w, int h)</argsstring>
        <name>scale_texture</name>
        <param>
          <type>unsigned char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="70" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="70" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a3291895cb2521f7295027d4694bbf242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_base_texture</definition>
        <argsstring>(int n)</argsstring>
        <name>build_base_texture</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="86" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="86" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a66b14614ec4f304af8c774ed9fa2ae43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_overlay_texture</definition>
        <argsstring>(int n)</argsstring>
        <name>build_overlay_texture</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="96" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="96" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a8da956987731d72d3d6af47e0c31ace3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_chunk</definition>
        <argsstring>(int slot_x, int slot_y)</argsstring>
        <name>free_chunk</name>
        <param>
          <type>int</type>
          <declname>slot_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="128" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="128" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a04153b43860d9d0dacbc819ffefef9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void upload_mesh</definition>
        <argsstring>(chunk_mesh *cm, uint8 *build_buffer, uint8 *face_buffer)</argsstring>
        <name>upload_mesh</name>
        <param>
          <type><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref> *</type>
          <declname>cm</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>build_buffer</declname>
        </param>
        <param>
          <type>uint8 *</type>
          <declname>face_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="139" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="139" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a599670c7ec708b6b1daaffe371288dc6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void upload_mesh_data</definition>
        <argsstring>(raw_mesh *rm)</argsstring>
        <name>upload_mesh_data</name>
        <param>
          <type><ref refid="structraw__mesh" kindref="compound">raw_mesh</ref> *</type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="157" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="157" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a58563743e658ed82deb1c45915be5311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup_uniforms</definition>
        <argsstring>(float pos[3])</argsstring>
        <name>setup_uniforms</name>
        <param>
          <type>float</type>
          <declname>pos</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="197" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="197" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a5a929f915201b0dbb791c74db8420500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_texture_buffer_for_uniform</definition>
        <argsstring>(int uniform, int slot)</argsstring>
        <name>make_texture_buffer_for_uniform</name>
        <param>
          <type>int</type>
          <declname>uniform</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="288" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="288" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a18386edf73cd3e3f424ea7cb0f5dab1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int request_chunk</definition>
        <argsstring>(int chunk_x, int chunk_y)</argsstring>
        <name>request_chunk</name>
        <param>
          <type>int</type>
          <declname>chunk_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chunk_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="581" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="581" bodyend="596" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" declline="364" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a654d2857d277992878a8c7ff1f740282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_meshes_from_render_thread</definition>
        <argsstring>(void)</argsstring>
        <name>update_meshes_from_render_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="734" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="734" bodyend="745" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" declline="365" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a5a5da02ffa962221a8ddf7318d07a30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_tex2_gradient</definition>
        <argsstring>(void)</argsstring>
        <name>init_tex2_gradient</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="369" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="369" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a780d126fbb25c976ce349b06059ecc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_tex2_alpha</definition>
        <argsstring>(float fa)</argsstring>
        <name>set_tex2_alpha</name>
        <param>
          <type>float</type>
          <declname>fa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="391" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="391" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a19d602180d3af1e1e3969518075548cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void render_init</definition>
        <argsstring>(void)</argsstring>
        <name>render_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="403" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="403" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a5a106573dea6ac6f71be5e80fb56eefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void world_init</definition>
        <argsstring>(void)</argsstring>
        <name>world_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="478" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="478" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a0f9a7e36ad9614200f0404d37b26b9e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mesh_worker_handler</definition>
        <argsstring>(void *data)</argsstring>
        <name>mesh_worker_handler</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="530" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="530" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a3a88de78ef4cee2f85236e996e8682d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prepare_threads</definition>
        <argsstring>(void)</argsstring>
        <name>prepare_threads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="598" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="598" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a064f5d69feb5277901cb5f29a68e1523" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void matd_mul</definition>
        <argsstring>(double out[4][4], double src1[4][4], double src2[4][4])</argsstring>
        <name>matd_mul</name>
        <param>
          <type>double</type>
          <declname>out</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>src1</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>src2</declname>
          <array>[4][4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="657" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="657" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1ad2c6e386a42e73112dd915e70b16c28c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compute_frustum</definition>
        <argsstring>(void)</argsstring>
        <name>compute_frustum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="671" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="671" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a70be93eee3b6aa24e5bb090a7abb32fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_plane</definition>
        <argsstring>(plane *p, float x0, float y0, float z0, float x1, float y1, float z1)</argsstring>
        <name>test_plane</name>
        <param>
          <type><ref refid="structplane" kindref="compound">plane</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="688" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="688" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1aee1f4f7405807511428c753861bcdaea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int is_box_in_frustum</definition>
        <argsstring>(float *bmin, float *bmax)</argsstring>
        <name>is_box_in_frustum</name>
        <param>
          <type>float *</type>
          <declname>bmin</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="699" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="699" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a7fd43582038fa12183f22d2b5bc70793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float compute_priority</definition>
        <argsstring>(int cx, int cy, float x, float y)</argsstring>
        <name>compute_priority</name>
        <param>
          <type>int</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="708" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="708" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="cave__render_8c_1a89dc2c85caece8e70d773437fdc2884e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void render_caves</definition>
        <argsstring>(float campos[3])</argsstring>
        <name>render_caves</name>
        <param>
          <type>float</type>
          <declname>campos</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" line="752" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c" bodystart="752" bodyend="951"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>renders<sp/>vertex<sp/>buffers,<sp/>converts<sp/>raw<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>GL<sp/>meshes,<sp/>and<sp/>manages<sp/>threads<sp/>that<sp/>do<sp/>the<sp/>raw-mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>building<sp/>(found<sp/>in<sp/>cave_mesher.c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_voxel_render.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_GLEXT_DECLARE<sp/>&quot;glext_list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_gl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_glprog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;caveview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cave_parse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sdl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sdl_thread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBVOX_CONFIG_TEX1_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>currently<sp/>no<sp/>dynamic<sp/>way<sp/>to<sp/>set<sp/>mesh<sp/>cache<sp/>size<sp/>or<sp/>view<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>SHORTVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>g_mesh_maker;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">GLuint<sp/>main_prog;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">GLint<sp/>uniform_locations[64];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MAX_QUADS_PER_DRAW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(65536<sp/>/<sp/>4)<sp/>//<sp/>assuming<sp/>16-bit<sp/>indices,<sp/>4<sp/>verts<sp/>per<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>FIXED_INDEX_BUFFER_SIZE<sp/><sp/><sp/>(MAX_QUADS_PER_DRAW<sp/>*<sp/>6<sp/>*<sp/>2)<sp/><sp/>//<sp/>16*1024<sp/>*<sp/>12<sp/>==<sp/>~192KB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>uploading<sp/>texture<sp/>data,<sp/>this<sp/>holds<sp/>our<sp/>each<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEX_SIZE<sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">uint32<sp/>texture[TEX_SIZE][TEX_SIZE];</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">GLuint<sp/>voxel_tex[2];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>chunk<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>STATE_invalid,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>STATE_needed,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>STATE_requested,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>STATE_abandoned,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>STATE_valid,</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mesh<sp/>is<sp/>32x32x255<sp/>...<sp/>this<sp/>is<sp/>hardcoded<sp/>in<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>mesh<sp/>covers<sp/>2x2<sp/>minecraft<sp/>chunks,<sp/>no<sp/>#defines<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structchunk__mesh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_x,<sp/>chunk_y;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_quads;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>priority;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vbuf_size,<sp/>fbuf_size;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>transform[3][3];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bounds[2][3];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>GLuint<sp/>vbuf;</highlight><highlight class="comment">//<sp/>vbuf_tex;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>GLuint<sp/>fbuf,<sp/>fbuf_tex;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scale_texture(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>assert(w<sp/>==<sp/>256<sp/>&amp;&amp;<sp/>h<sp/>==<sp/>256);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>TEX_SIZE;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>TEX_SIZE;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>val=0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>4;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>src[<sp/>4*(x+(i&gt;&gt;2))<sp/>+<sp/>4*w*(y+(j&gt;&gt;2))<sp/>+<sp/>k]&lt;&lt;24;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture[j][i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_base_texture(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>uint32<sp/>color<sp/>=<sp/>stb_rand()<sp/>|<sp/>0x808080;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;<sp/>y&lt;TEX_SIZE;<sp/>++y)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;<sp/>x&lt;TEX_SIZE;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture[y][x]<sp/>=<sp/>(color<sp/>+<sp/>(stb_rand()&amp;0x1f1f1f))|0xff000000;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_overlay_texture(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>uint32<sp/>color<sp/>=<sp/>stb_rand();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>&amp;<sp/>16)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>0xff000000;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;<sp/>y&lt;TEX_SIZE;<sp/>++y)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;<sp/>x&lt;TEX_SIZE;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture[y][x]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;<sp/>y<sp/>&lt;<sp/>TEX_SIZE/8;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;<sp/>x<sp/>&lt;<sp/>TEX_SIZE;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture[y][x]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture[TEX_SIZE-1-y][x]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture[x][y]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture[x][TEX_SIZE-1-y]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>view<sp/>radius<sp/>of<sp/>about<sp/>1024<sp/>=<sp/>2048<sp/>columns<sp/>/<sp/>32<sp/>columns-per-mesh<sp/>=<sp/>2^11<sp/>/<sp/>2^5<sp/>=<sp/>64x64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>bigger<sp/>than<sp/>64x64<sp/>so<sp/>we<sp/>can<sp/>precache,<sp/>which<sp/>means<sp/>we<sp/>have<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>non-power-of-two,<sp/>or<sp/>we<sp/>have<sp/>to<sp/>be<sp/>pretty<sp/>huge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CACHED_MESH_NUM_X<sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CACHED_MESH_NUM_Y<sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>cached_chunk_mesh[CACHED_MESH_NUM_Y][CACHED_MESH_NUM_X];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_chunk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_y)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>*cm<sp/>=<sp/>&amp;cached_chunk_mesh[slot_y][slot_x];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;state<sp/>==<sp/>STATE_valid)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteTextures(1,<sp/>&amp;cm-&gt;fbuf_tex);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteBuffersARB(1,<sp/>&amp;cm-&gt;vbuf);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteBuffersARB(1,<sp/>&amp;cm-&gt;fbuf);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cached_chunk_mesh[slot_y][slot_x].state<sp/>=<sp/>STATE_invalid;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>upload_mesh(<ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>*cm,<sp/>uint8<sp/>*build_buffer,<sp/>uint8<sp/>*face_buffer)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>glGenBuffersARB(1,<sp/>&amp;cm-&gt;vbuf);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>cm-&gt;vbuf);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>glBufferDataARB(GL_ARRAY_BUFFER_ARB,<sp/>cm-&gt;num_quads*4*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32),<sp/>build_buffer,<sp/>GL_STATIC_DRAW_ARB);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>glGenBuffersARB(1,<sp/>&amp;cm-&gt;fbuf);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>glBindBufferARB(GL_TEXTURE_BUFFER_ARB,<sp/>cm-&gt;fbuf);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>glBufferDataARB(GL_TEXTURE_BUFFER_ARB,<sp/>cm-&gt;num_quads*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32),<sp/>face_buffer<sp/>,<sp/>GL_STATIC_DRAW_ARB);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>glBindBufferARB(GL_TEXTURE_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;cm-&gt;fbuf_tex);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER_ARB,<sp/>cm-&gt;fbuf_tex);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>glTexBufferARB(GL_TEXTURE_BUFFER_ARB,<sp/>GL_RGBA8UI,<sp/>cm-&gt;fbuf);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>upload_mesh_data(<ref refid="structraw__mesh" kindref="compound">raw_mesh</ref><sp/>*rm)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>rm-&gt;cx;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy<sp/>=<sp/>rm-&gt;cy;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_x<sp/>=<sp/>(cx<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(CACHED_MESH_NUM_X-1);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_y<sp/>=<sp/>(cy<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>(CACHED_MESH_NUM_Y-1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>*cm;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>free_chunk(slot_x,<sp/>slot_y);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>cm<sp/>=<sp/>&amp;cached_chunk_mesh[slot_y][slot_x];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>cm-&gt;num_quads<sp/>=<sp/>rm-&gt;num_quads;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>upload_mesh(cm,<sp/>rm-&gt;build_buffer,<sp/>rm-&gt;face_buffer);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>cm-&gt;vbuf_size<sp/>=<sp/>rm-&gt;num_quads*4*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>cm-&gt;fbuf_size<sp/>=<sp/>rm-&gt;num_quads*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>cm-&gt;priority<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>cm-&gt;chunk_x<sp/>=<sp/>cx;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>cm-&gt;chunk_y<sp/>=<sp/>cy;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>memcpy(cm-&gt;bounds,<sp/>rm-&gt;bounds,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cm-&gt;bounds));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>memcpy(cm-&gt;transform,<sp/>rm-&gt;transform,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cm-&gt;transform));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>barrier<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>cm-&gt;state<sp/>=<sp/>STATE_valid;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">GLint<sp/>uniform_loc[16];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>table3[128][3];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>table4[64][4];</highlight></codeline>
<codeline lineno="187"><highlight class="normal">GLint<sp/>tablei[2];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>=0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SHORTVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>view_dist_in_chunks<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>view_dist_in_chunks<sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup_uniforms(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pos[3])</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>+=<sp/>1.0f/60.0f;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>STBVOX_UNIFORM_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref><sp/>raw,<sp/>*ui=&amp;raw;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_get_uniform_info(&amp;raw,<sp/>i);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uniform_loc[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>STBVOX_UNIFORM_texscale<sp/>||<sp/>i<sp/>==<sp/>STBVOX_UNIFORM_texgen<sp/>||<sp/>i<sp/>==<sp/>STBVOX_UNIFORM_color_table)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ui)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>ui-&gt;default_value;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform_loc[i]<sp/>=<sp/>stbgl_find_uniform(main_prog,<sp/>ui-&gt;name);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_face_data:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tablei[0]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>tablei;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_tex_array:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE0_ARB);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D_ARRAY_EXT,<sp/>voxel_tex[0]);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE1_ARB);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D_ARRAY_EXT,<sp/>voxel_tex[1]);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE0_ARB);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tablei[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tablei[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>tablei;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_color_table:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>ui-&gt;default_value;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)data)[63*4+3]<sp/>=<sp/>2.0f;<sp/></highlight><highlight class="comment">//<sp/>emissive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_camera_pos:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>table3[0];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table3[0][0]<sp/>=<sp/>pos[0];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table3[0][1]<sp/>=<sp/>pos[1];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table3[0][2]<sp/>=<sp/>pos[2];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table3[0][3]<sp/>=<sp/>stb_max(0,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414" kindref="member">sin</ref>(<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>*2)*0.125f);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_ambient:<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bright<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>bright<sp/>=<sp/>0.75;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amb[3][3];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ambient<sp/>direction<sp/>is<sp/>sky-colored<sp/>upwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ambient&quot;<sp/>lighting<sp/>is<sp/>from<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[0][0]<sp/>=<sp/><sp/>0.3f;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[0][1]<sp/>=<sp/>-0.5f;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[0][2]<sp/>=<sp/><sp/>0.9f;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amb[1][0]<sp/>=<sp/>0.3f;<sp/>amb[1][1]<sp/>=<sp/>0.3f;<sp/>amb[1][2]<sp/>=<sp/>0.3f;<sp/></highlight><highlight class="comment">//<sp/>dark-grey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amb[2][0]<sp/>=<sp/>1.0;<sp/>amb[2][1]<sp/>=<sp/>1.0;<sp/>amb[2][2]<sp/>=<sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>white</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>so<sp/>(table[1]*dot+table[2])<sp/>gives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>above<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>lerp((dot+1)/2,<sp/>amb[1],<sp/>amb[2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>amb[1]<sp/>+<sp/>(amb[2]<sp/>-<sp/>amb[1])<sp/>*<sp/>(dot+1)/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>amb[1]<sp/>+<sp/>(amb[2]<sp/>-<sp/>amb[1])<sp/>*<sp/>dot/2<sp/>+<sp/>(amb[2]-amb[1])/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[1][j]<sp/>=<sp/>(amb[2][j]<sp/>-<sp/>amb[1][j])/2<sp/>*<sp/>bright;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[2][j]<sp/>=<sp/>(amb[1][j]<sp/>+<sp/>amb[2][j])/2<sp/>*<sp/>bright;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fog<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[3][0]<sp/>=<sp/>0.6f,<sp/>table4[3][1]<sp/>=<sp/>0.7f,<sp/>table4[3][2]<sp/>=<sp/>0.9f;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[3][3]<sp/>=<sp/>1.0f<sp/>/<sp/>(view_dist_in_chunks<sp/>*<sp/>16);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table4[3][3]<sp/>*=<sp/>table4[3][3];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>table4;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ui-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_TYPE_sampler:<sp/>stbglUniform1iv(uniform_loc[i],<sp/>ui-&gt;array_length,<sp/>data);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_TYPE_vec2:<sp/><sp/><sp/><sp/>stbglUniform2fv(uniform_loc[i],<sp/>ui-&gt;array_length,<sp/>data);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_TYPE_vec3:<sp/><sp/><sp/><sp/>stbglUniform3fv(uniform_loc[i],<sp/>ui-&gt;array_length,<sp/>data);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_TYPE_vec4:<sp/><sp/><sp/><sp/>stbglUniform4fv(uniform_loc[i],<sp/>ui-&gt;array_length,<sp/>data);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">GLuint<sp/>unitex[64],<sp/>unibuf[64];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_texture_buffer_for_uniform(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uniform,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>GLenum<sp/>type;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref><sp/>raw,<sp/>*ui=&amp;raw;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>GLint<sp/>uloc;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>stbvox_get_uniform_info(ui,<sp/>uniform);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>uloc<sp/>=<sp/>stbgl_find_uniform(main_prog,<sp/>ui-&gt;name);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform<sp/>==<sp/>STBVOX_UNIFORM_color_table)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)ui-&gt;default_value)[63*4+3]<sp/>=<sp/>2.0f;<sp/></highlight><highlight class="comment">//<sp/>emissive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>glGenBuffersARB(1,<sp/>&amp;unibuf[uniform]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>unibuf[uniform]);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>glBufferDataARB(GL_ARRAY_BUFFER_ARB,<sp/>ui-&gt;array_length<sp/>*<sp/>ui-&gt;bytes_per_element,<sp/>ui-&gt;default_value,<sp/>GL_STATIC_DRAW_ARB);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;unitex[uniform]);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER_ARB,<sp/>unitex[uniform]);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ui-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_TYPE_vec2:<sp/>type<sp/>=<sp/>GL_RG32F;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_TYPE_vec3:<sp/>type<sp/>=<sp/>GL_RGB32F;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_TYPE_vec4:<sp/>type<sp/>=<sp/>GL_RGBA32F;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>assert(0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>glTexBufferARB(GL_TEXTURE_BUFFER_ARB,<sp/>type,<sp/>unibuf[uniform]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE0<sp/>+<sp/>slot);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER_ARB,<sp/>unitex[uniform]);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>stbglUseProgram(main_prog);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>stbglUniform1i(uloc,<sp/>slot);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MESH_WORKERS<sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_CHUNK_LOAD_WORKERS<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_mesh_workers;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_chunk_load_workers;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="structmesh__worker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_cx;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_cy;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding[13];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>SDL_sem<sp/>*<sp/>request_received;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>SDL_sem<sp/>*<sp/>chunk_server_done_processing;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_action;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_request_x;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_request_y;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><ref refid="structfast__chunk" kindref="compound">fast_chunk</ref><sp/>*chunks[4][4];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding2[16];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><ref refid="structraw__mesh" kindref="compound">raw_mesh</ref><sp/>rm;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding3[16];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>uint8<sp/>*build_buffer;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>uint8<sp/>*face_buffer<sp/>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}<sp/><ref refid="structmesh__worker" kindref="compound">mesh_worker</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>WSTATE_idle,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>WSTATE_requested,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>WSTATE_running,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>WSTATE_mesh_ready,</highlight></codeline>
<codeline lineno="359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><ref refid="structmesh__worker" kindref="compound">mesh_worker</ref><sp/>mesh_data[MAX_MESH_WORKERS];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_meshes_started;<sp/></highlight><highlight class="comment">//<sp/>stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_chunk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_y);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_meshes_from_render_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tex2_data[64][4];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_tex2_gradient(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+<sp/>0][0]<sp/>=<sp/>64<sp/>+<sp/>12*i;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+<sp/>0][1]<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+<sp/>0][2]<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+16][0]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+16][1]<sp/>=<sp/>32<sp/>+<sp/>8*i;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+16][2]<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+32][0]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+32][1]<sp/>=<sp/>160;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+32][2]<sp/>=<sp/>64<sp/>+<sp/>12*i;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+48][0]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+48][1]<sp/>=<sp/>160<sp/>+<sp/>6*i;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i+48][2]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_tex2_alpha(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fa)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>(int)<sp/>stb_lerp(fa,<sp/>0,<sp/>255);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>0)<sp/>a<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>255)<sp/>a<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D_ARRAY_EXT,<sp/>voxel_tex[1]);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>64;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tex2_data[i][3]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTexSubImage3DEXT(GL_TEXTURE_2D_ARRAY_EXT,<sp/>0,<sp/>0,0,i,<sp/>1,1,1,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>tex2_data[i]);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>render_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*binds[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;attr_vertex&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;attr_face&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vertex;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fragment;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w=0,h=0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*texdata<sp/>=<sp/>stbi_load(</highlight><highlight class="stringliteral">&quot;terrain.png&quot;</highlight><highlight class="normal">,<sp/>&amp;w,<sp/>&amp;h,<sp/>NULL,<sp/>4);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/>stbvox_init_mesh_maker(&amp;g_mesh_maker);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_mesh_workers;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_init_mesh_maker(&amp;mesh_data[i].rm.mm);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>vertex<sp/>=<sp/>stbvox_get_vertex_shader();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>fragment<sp/>=<sp/>stbvox_get_fragment_shader();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error_buffer[1024];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*main_vertex[]<sp/>=<sp/>{<sp/>vertex,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*main_fragment[]<sp/>=<sp/>{<sp/>fragment,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>main_prog<sp/>=<sp/>stbgl_create_program(main_vertex,<sp/>main_fragment,<sp/>binds,<sp/>error_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(error_buffer));</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main_prog<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ods(</highlight><highlight class="stringliteral">&quot;Compile<sp/>error<sp/>for<sp/>main<sp/>shader:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>error_buffer);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//init_index_buffer();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>make_texture_buffer_for_uniform(STBVOX_UNIFORM_texscale<sp/><sp/><sp/><sp/><sp/>,<sp/>3);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/>make_texture_buffer_for_uniform(STBVOX_UNIFORM_texgen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>4);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>make_texture_buffer_for_uniform(STBVOX_UNIFORM_color_table<sp/><sp/>,<sp/>5);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>glGenTextures(2,<sp/>voxel_tex);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D_ARRAY_EXT,<sp/>voxel_tex[0]);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>glTexImage3DEXT(GL_TEXTURE_2D_ARRAY_EXT,<sp/>0,<sp/>GL_RGBA,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEX_SIZE,TEX_SIZE,256,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,GL_RGBA,GL_UNSIGNED_BYTE,NULL);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(texdata)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_texture(texdata,<sp/>(i&amp;15)*w/16,<sp/>(h/16)*(i&gt;&gt;4),<sp/>w,h);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_base_texture(i);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTexSubImage3DEXT(GL_TEXTURE_2D_ARRAY_EXT,<sp/>0,<sp/>0,0,i,<sp/>TEX_SIZE,TEX_SIZE,1,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>texture[0]);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D_ARRAY_EXT,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR_MIPMAP_LINEAR);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D_ARRAY_EXT,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D_ARRAY_EXT,<sp/>GL_TEXTURE_MAX_ANISOTROPY_EXT,<sp/>16);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_TEX1_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D_ARRAY_EXT,<sp/>GL_TEXTURE_WRAP_S,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D_ARRAY_EXT,<sp/>GL_TEXTURE_WRAP_T,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>glGenerateMipmapEXT(GL_TEXTURE_2D_ARRAY_EXT);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D_ARRAY_EXT,<sp/>voxel_tex[1]);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>glTexImage3DEXT(GL_TEXTURE_2D_ARRAY_EXT,<sp/>0,<sp/>GL_RGBA,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,1,64,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,GL_RGBA,GL_UNSIGNED_BYTE,NULL);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/>init_tex2_gradient();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>set_tex2_alpha(0.0);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>128;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//build_overlay_texture(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTexSubImage3DEXT(GL_TEXTURE_2D_ARRAY_EXT,<sp/>0,<sp/>0,0,i,<sp/>TEX_SIZE,TEX_SIZE,1,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>texture[0]);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D_ARRAY_EXT,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR_MIPMAP_LINEAR);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D_ARRAY_EXT,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>glGenerateMipmapEXT(GL_TEXTURE_2D_ARRAY_EXT);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>world_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,b,x,y;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>Uint64<sp/>start_time,<sp/>end_time;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>start_time<sp/>=<sp/>SDL_GetPerformanceCounter();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>in<sp/>8x8<sp/>clusters<sp/>of<sp/>qchunks<sp/>at<sp/>a<sp/>time<sp/>to<sp/>get<sp/>better<sp/>converted-chunk-cache<sp/>reuse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>a<sp/>purely<sp/>row-by-row<sp/>ordering<sp/>is<sp/>(single-threaded<sp/>this<sp/>is<sp/>a<sp/>bigger<sp/>win<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>of<sp/>the<sp/>above<sp/>optimizations<sp/>were,<sp/>since<sp/>it<sp/>halves<sp/>zlib/mc-conversion<sp/>costs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=-range;<sp/>x<sp/>&lt;=<sp/>range;<sp/>x<sp/>+=<sp/>16)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=-range;<sp/>y<sp/>&lt;=<sp/>range;<sp/>y<sp/>+=<sp/>16)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b=y;<sp/>b<sp/>&lt;<sp/>y+16<sp/>&amp;&amp;<sp/>b<sp/>&lt;=<sp/>range;<sp/>b<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a=x;<sp/>a<sp/>&lt;<sp/>x+16<sp/>&amp;&amp;<sp/>a<sp/>&lt;=<sp/>range;<sp/>a<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!request_chunk(a,<sp/>b))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>request<sp/>fails,<sp/>all<sp/>threads<sp/>are<sp/>busy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_meshes_from_render_thread();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Delay(1);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>until<sp/>all<sp/>the<sp/>workers<sp/>are<sp/>done,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>is<sp/>only<sp/>needed<sp/>if<sp/>we<sp/>want<sp/>to<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>build<sp/>finishes,<sp/>or<sp/>when<sp/>we<sp/>want<sp/>to<sp/>reset<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>size;<sp/>otherwise<sp/>we<sp/>could<sp/>just<sp/>go<sp/>ahead<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>rendering<sp/>whatever<sp/>we&apos;ve<sp/>got)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>update_meshes_from_render_thread();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_mesh_workers;<sp/>++i)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh_data[i].state<sp/>!=<sp/>WSTATE_idle)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>num_mesh_workers)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Delay(3);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>end_time<sp/>=<sp/>SDL_GetPerformanceCounter();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>ods(</highlight><highlight class="stringliteral">&quot;Build<sp/>time:<sp/>%7.2fs\n&quot;</highlight><highlight class="normal">,<sp/>(end_time<sp/>-<sp/>start_time)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>SDL_GetPerformanceFrequency());</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>waste<sp/>lots<sp/>of<sp/>storage<sp/>on<sp/>chunk<sp/>caches<sp/>once<sp/>it&apos;s<sp/>finished<sp/>starting-up;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>was<sp/>only<sp/>needed<sp/>to<sp/>be<sp/>this<sp/>large<sp/>because<sp/>we<sp/>worked<sp/>in<sp/>large<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>maximize<sp/>sharing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/>reset_cache_size(32);</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>SDL_mutex<sp/>*<sp/>chunk_cache_mutex;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh_worker_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><ref refid="structmesh__worker" kindref="compound">mesh_worker</ref><sp/>*mw<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>mw-&gt;face_buffer<sp/>=<sp/>malloc(FACE_BUFFER_SIZE);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/>mw-&gt;build_buffer<sp/>=<sp/>malloc(BUILD_BUFFER_SIZE);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>loop<sp/>only<sp/>works<sp/>because<sp/>the<sp/>compiler<sp/>can&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tell<sp/>that<sp/>the<sp/>SDL_calls<sp/>don&apos;t<sp/>access<sp/>mw-&gt;state;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>really<sp/>we<sp/>should<sp/>barrier<sp/>that<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx,cy;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>a<sp/>chunk<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SDL_SemWait(mw-&gt;request_received);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>analyze<sp/>the<sp/>chunk<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(mw-&gt;state<sp/>==<sp/>WSTATE_requested);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>mw-&gt;request_cx;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cy<sp/>=<sp/>mw-&gt;request_cy;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>inaccurate<sp/>as<sp/>it<sp/>can<sp/>block<sp/>while<sp/>another<sp/>thread<sp/>has<sp/>the<sp/>cache<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;state<sp/>=<sp/>WSTATE_running;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>chunks<sp/>we<sp/>need<sp/>(this<sp/>takes<sp/>a<sp/>lock<sp/>and<sp/>caches<sp/>them)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;chunks[j][i]<sp/>=<sp/>get_converted_fastchunk(cx-1<sp/>+<sp/>i,<sp/>cy-1<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>mesh<sp/>based<sp/>on<sp/>the<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;rm.build_buffer<sp/>=<sp/>mw-&gt;build_buffer;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;rm.face_buffer<sp/>=<sp/>mw-&gt;face_buffer;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>build_chunk(cx,<sp/>cy,<sp/>mw-&gt;chunks,<sp/>&amp;mw-&gt;rm);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;state<sp/>=<sp/>WSTATE_mesh_ready;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>need<sp/>to<sp/>notify<sp/>of<sp/>this,<sp/>because<sp/>it<sp/>gets<sp/>polled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>done,<sp/>free<sp/>the<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>efficiency<sp/>we<sp/>just<sp/>take<sp/>the<sp/>mutex<sp/>once<sp/>around<sp/>the<sp/>whole<sp/>thing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>though<sp/>this<sp/>spreads<sp/>the<sp/>mutex<sp/>logic<sp/>over<sp/>two<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SDL_LockMutex(chunk_cache_mutex);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deref_fastchunk(mw-&gt;chunks[j][i]);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;chunks[j][i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SDL_UnlockMutex(chunk_cache_mutex);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_chunk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_y)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_mesh_workers;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmesh__worker" kindref="compound">mesh_worker</ref><sp/>*mw<sp/>=<sp/>&amp;mesh_data[i];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mw-&gt;state<sp/>==<sp/>WSTATE_idle)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;request_cx<sp/>=<sp/>chunk_x;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;request_cy<sp/>=<sp/>chunk_y;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;state<sp/>=<sp/>WSTATE_requested;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_SemPost(mw-&gt;request_received);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_meshes_started;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prepare_threads(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_proc<sp/>=<sp/>SDL_GetCPUCount();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_proc<sp/>&gt;<sp/>6)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_mesh_workers<sp/>=<sp/>num_proc/2;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_proc<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_mesh_workers<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_mesh_workers<sp/>=<sp/>num_proc-1;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Thread<sp/>usage<sp/>is<sp/>probably<sp/>pretty<sp/>terrible;<sp/>need<sp/>to<sp/>make<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>separate<sp/>queue<sp/>of<sp/>needed<sp/>chunks,<sp/>instead<sp/>of<sp/>just<sp/>generating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>one<sp/>request<sp/>per<sp/>thread<sp/>per<sp/>frame,<sp/>and<sp/>a<sp/>separate<sp/>queue<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>results.<sp/>(E.g.<sp/>If<sp/>it<sp/>takes<sp/>1.5<sp/>frames<sp/>to<sp/>build<sp/>mesh,<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>is<sp/>idle<sp/>for<sp/>0.5<sp/>frames.)<sp/>To<sp/>fake<sp/>this<sp/>for<sp/>now,<sp/>I&apos;ve<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>doubled<sp/>the<sp/>number<sp/>of<sp/>threads<sp/>to<sp/>let<sp/>those<sp/>serve<sp/>as<sp/>a<sp/>&apos;queue&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>but<sp/>that&apos;s<sp/>dumb.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>num_mesh_workers<sp/>*=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>get<sp/>better<sp/>thread<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_mesh_workers<sp/>&gt;<sp/>MAX_MESH_WORKERS)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_mesh_workers<sp/>=<sp/>MAX_MESH_WORKERS;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_mesh_workers;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmesh__worker" kindref="compound">mesh_worker</ref><sp/>*data<sp/>=<sp/>&amp;mesh_data[i];</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;request_received<sp/>=<sp/>SDL_CreateSemaphore(0);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;chunk_server_done_processing<sp/>=<sp/>SDL_CreateSemaphore(0);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SDL_CreateThread(mesh_worker_handler,<sp/></highlight><highlight class="stringliteral">&quot;mesh<sp/>worker&quot;</highlight><highlight class="normal">,<sp/>data);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;better&quot;<sp/>buffer<sp/>uploading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glBufferStorage)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteBuffersARB(1,<sp/>&amp;vb-&gt;vbuf);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glGenBuffersARB(1,<sp/>&amp;vb-&gt;vbuf);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>vb-&gt;vbuf);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBufferStorage(GL_ARRAY_BUFFER_ARB,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(build_buffer),<sp/>build_buffer,<sp/>0);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>vb-&gt;vbuf);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBufferDataARB(GL_ARRAY_BUFFER_ARB,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(build_buffer),<sp/>build_buffer,<sp/>GL_STATIC_DRAW_ARB);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="structplane" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,y,z,w;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}<sp/><ref refid="structplane" kindref="compound">plane</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structplane" kindref="compound">plane</ref><sp/><ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[6];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>matd_mul(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>out[4][4],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>src1[4][4],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>src2[4][4])</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t=0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>4;<sp/>++k)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>src1[k][i]<sp/>*<sp/>src2[j][k];</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i][j]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://fgiesen.wordpress.com/2012/08/31/frustum-planes-from-the-projection-matrix/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compute_frustum(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/>GLdouble<sp/>mv[4][4],<ref refid="group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e" kindref="member">proj</ref>[4][4],<sp/>mvproj[4][4];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>glGetDoublev(GL_MODELVIEW_MATRIX<sp/>,<sp/>mv[0]);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>glGetDoublev(GL_PROJECTION_MATRIX,<sp/><ref refid="group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e" kindref="member">proj</ref>[0]);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/>matd_mul(mvproj,<sp/><ref refid="group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e" kindref="member">proj</ref>,<sp/>mv);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;<ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[0].x)[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(mvproj[3][i]<sp/>+<sp/>mvproj[0][i]);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;<ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[1].x)[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(mvproj[3][i]<sp/>-<sp/>mvproj[0][i]);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;<ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[2].x)[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(mvproj[3][i]<sp/>+<sp/>mvproj[1][i]);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;<ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[3].x)[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(mvproj[3][i]<sp/>-<sp/>mvproj[1][i]);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;<ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[4].x)[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(mvproj[3][i]<sp/>+<sp/>mvproj[2][i]);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;<ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[5].x)[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(mvproj[3][i]<sp/>-<sp/>mvproj[2][i]);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_plane(<ref refid="structplane" kindref="compound">plane</ref><sp/>*p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z1)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>false<sp/>if<sp/>the<sp/>box<sp/>is<sp/>entirely<sp/>behind<sp/>the<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d=0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/>assert(x0<sp/>&lt;=<sp/>x1<sp/>&amp;&amp;<sp/>y0<sp/>&lt;=<sp/>y1<sp/>&amp;&amp;<sp/>z0<sp/>&lt;=<sp/>z1);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;x<sp/>&gt;<sp/>0)<sp/>d<sp/>+=<sp/>x1*p-&gt;x;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>d<sp/>+=<sp/>x0*p-&gt;x;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;y<sp/>&gt;<sp/>0)<sp/>d<sp/>+=<sp/>y1*p-&gt;y;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>d<sp/>+=<sp/>y0*p-&gt;y;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;z<sp/>&gt;<sp/>0)<sp/>d<sp/>+=<sp/>z1*p-&gt;z;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>d<sp/>+=<sp/>z0*p-&gt;z;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d<sp/>+<sp/>p-&gt;w<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_box_in_frustum(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bmin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bmax)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_plane(&amp;<ref refid="group__gtc__matrix__transform_1gaf2b9bdfe77c910ce3ae07c1a386d110e" kindref="member">frustum</ref>[i],<sp/>bmin[0],<sp/>bmin[1],<sp/>bmin[2],<sp/>bmax[0],<sp/>bmax[1],<sp/>bmax[2]))</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_priority(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distx,<sp/>disty,<sp/>dist2;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>distx<sp/>=<sp/>(cx*16+8)<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/>disty<sp/>=<sp/>(cy*16+8)<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/>dist2<sp/>=<sp/>distx*distx<sp/>+<sp/>disty*disty;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view_dist_in_chunks*view_dist_in_chunks<sp/>*<sp/>16<sp/>*<sp/>16<sp/>-<sp/>dist2;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_locations,<sp/>chunks_considered,<sp/>chunks_in_frustum;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quads_considered,<sp/>quads_rendered;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_storage_rendered,<sp/>chunk_storage_considered,<sp/>chunk_storage_total;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>update_frustum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SHORTVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_chunk_storage<sp/>=<sp/>450<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_chunk_storage<sp/>=<sp/>350<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_chunk_storage<sp/>=<sp/>900<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_chunk_storage<sp/>=<sp/>800<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_priority<sp/>=<sp/>-500;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>really<sp/>wants<sp/>to<sp/>be<sp/>in<sp/>unit<sp/>space,<sp/>not<sp/>squared<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_meshes_uploaded;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_meshes_from_render_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_mesh_workers;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmesh__worker" kindref="compound">mesh_worker</ref><sp/>*mw<sp/>=<sp/>&amp;mesh_data[i];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mw-&gt;state<sp/>==<sp/>WSTATE_mesh_ready)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upload_mesh_data(&amp;mw-&gt;rm);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_meshes_uploaded;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw-&gt;state<sp/>=<sp/>WSTATE_idle;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tex2_alpha;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_hack;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_threads_active;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>chunk_server_activity;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>render_caves(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>campos[3])</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>campos[0],<sp/>y<sp/>=<sp/>campos[1];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qchunk_x,<sp/>qchunk_y;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cam_x,<sp/>cam_y;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,<sp/>rad;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/>compute_frustum();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>chunk_locations<sp/>=<sp/>chunks_considered<sp/>=<sp/>chunks_in_frustum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/>quads_considered<sp/>=<sp/>quads_rendered<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/>chunk_storage_total<sp/>=<sp/>chunk_storage_considered<sp/>=<sp/>chunk_storage_rendered<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/>cam_x<sp/>=<sp/>(int)<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">floor</ref>(x+0.5);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/>cam_y<sp/>=<sp/>(int)<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">floor</ref>(y+0.5);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/>qchunk_x<sp/>=<sp/>(((int)<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">floor</ref>(x)+16)<sp/>&gt;&gt;<sp/>5)<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/>qchunk_y<sp/>=<sp/>(((int)<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">floor</ref>(y)+16)<sp/>&gt;&gt;<sp/>5)<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/>glEnable(GL_ALPHA_TEST);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/>glAlphaFunc(GL_GREATER,<sp/>0.5);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/>stbglUseProgram(main_prog);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/>setup_uniforms(campos);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>uniforms<sp/>to<sp/>default<sp/>values<sp/>inefficiently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE2_ARB);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/>stbglEnableVertexAttribArray(0);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lighting[2][3]<sp/>=<sp/>{<sp/>{<sp/>campos[0],campos[1],campos[2]<sp/>},<sp/>{<sp/>0.75,0.75,0.65f<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bright<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lighting[1][0]<sp/>*=<sp/>bright;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lighting[1][1]<sp/>*=<sp/>bright;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lighting[1][2]<sp/>*=<sp/>bright;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbglUniform3fv(stbgl_find_uniform(main_prog,<sp/></highlight><highlight class="stringliteral">&quot;light_source&quot;</highlight><highlight class="normal">),<sp/>2,<sp/>lighting[0]);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(global_hack)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_tex2_alpha(tex2_alpha);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/>num_meshes_uploaded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/>update_meshes_from_render_thread();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>traverse<sp/>all<sp/>in-range<sp/>chunks<sp/>and<sp/>analyze<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=-view_dist_in_chunks;<sp/>j<sp/>&lt;=<sp/>view_dist_in_chunks;<sp/>j<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=-view_dist_in_chunks;<sp/>i<sp/>&lt;=<sp/>view_dist_in_chunks;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>priority;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>qchunk_x<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy<sp/>=<sp/>qchunk_y<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>=<sp/>compute_priority(cx,<sp/>cy,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(priority<sp/>&gt;=<sp/>min_priority)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_x<sp/>=<sp/>(cx&gt;&gt;1)<sp/>&amp;<sp/>(CACHED_MESH_NUM_X-1);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_y<sp/>=<sp/>(cy&gt;&gt;1)<sp/>&amp;<sp/>(CACHED_MESH_NUM_Y-1);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>*cm<sp/>=<sp/>&amp;cached_chunk_mesh[slot_y][slot_x];</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++chunk_locations;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;state<sp/>==<sp/>STATE_valid<sp/>&amp;&amp;<sp/>priority<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>chunk<sp/>pos<sp/>actually<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;chunk_x<sp/>!=<sp/>cx<sp/>||<sp/>cm-&gt;chunk_y<sp/>!=<sp/>cy)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>a<sp/>stale<sp/>chunk<sp/>we<sp/>need<sp/>to<sp/>recreate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_chunk(slot_x,<sp/>slot_y);<sp/></highlight><highlight class="comment">//<sp/>it<sp/>probably<sp/>will<sp/>have<sp/>already<sp/>gotten<sp/>freed,<sp/>but<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;state<sp/>==<sp/>STATE_invalid)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;chunk_x<sp/>=<sp/>cx;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;chunk_y<sp/>=<sp/>cy;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;state<sp/>=<sp/>STATE_needed;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;priority<sp/>=<sp/>priority;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>front-to-back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rad<sp/>=<sp/>0;<sp/>rad<sp/>&lt;=<sp/>view_dist_in_chunks;<sp/>rad<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=-rad;<sp/>j<sp/>&lt;=<sp/>rad;<sp/>j<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>j<sp/>is<sp/>+-<sp/>rad,<sp/>then<sp/>iterate<sp/>i<sp/>through<sp/>all<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>j<sp/>isn&apos;t<sp/>+-rad,<sp/>then<sp/>i<sp/>should<sp/>be<sp/>only<sp/>-rad<sp/>&amp;<sp/>rad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(j)<sp/>!=<sp/>rad)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>=<sp/>2*rad;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=-rad;<sp/>i<sp/>&lt;=<sp/>rad;<sp/>i<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>qchunk_x<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy<sp/>=<sp/>qchunk_y<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_x<sp/>=<sp/>(cx&gt;&gt;1)<sp/>&amp;<sp/>(CACHED_MESH_NUM_X-1);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_y<sp/>=<sp/>(cy&gt;&gt;1)<sp/>&amp;<sp/>(CACHED_MESH_NUM_Y-1);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>*cm<sp/>=<sp/>&amp;cached_chunk_mesh[slot_y][slot_x];</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;state<sp/>==<sp/>STATE_valid<sp/>&amp;&amp;<sp/>cm-&gt;priority<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++chunks_considered;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quads_considered<sp/>+=<sp/>cm-&gt;num_quads;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_box_in_frustum(cm-&gt;bounds[0],<sp/>cm-&gt;bounds[1]))<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++chunks_in_frustum;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>if<sp/>in<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbglUniform3fv(uniform_loc[STBVOX_UNIFORM_transform],<sp/>3,<sp/>cm-&gt;transform[0]);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>cm-&gt;vbuf);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertexAttribIPointer(0,<sp/>1,<sp/>GL_UNSIGNED_INT,<sp/>4,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>0);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER_ARB,<sp/>cm-&gt;fbuf_tex);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawArrays(GL_QUADS,<sp/>0,<sp/>cm-&gt;num_quads*4);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quads_rendered<sp/>+=<sp/>cm-&gt;num_quads;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_storage_rendered<sp/>+=<sp/>cm-&gt;vbuf_size<sp/>+<sp/>cm-&gt;fbuf_size;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_storage_considered<sp/>+=<sp/>cm-&gt;vbuf_size<sp/>+<sp/>cm-&gt;fbuf_size;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>stbglDisableVertexAttribArray(0);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/>glBindBufferARB(GL_ARRAY_BUFFER_ARB,<sp/>0);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE0_ARB);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/>stbglUseProgram(0);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>num_meshes_started<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>MAX_QUEUE<sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>highest_priority[MAX_QUEUE];</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highest_i[MAX_QUEUE],<sp/>highest_j[MAX_QUEUE];</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowest_priority<sp/>=<sp/>view_dist_in_chunks<sp/>*<sp/>view_dist_in_chunks<sp/>*<sp/>16<sp/>*<sp/>16.0f;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowest_i<sp/>=<sp/>-1,<sp/>lowest_j<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>MAX_QUEUE;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_priority[i]<sp/>=<sp/>min_priority;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_i[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_j[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>CACHED_MESH_NUM_Y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>CACHED_MESH_NUM_X;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>*cm<sp/>=<sp/>&amp;cached_chunk_mesh[j][i];</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;state<sp/>==<sp/>STATE_valid)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;priority<sp/>=<sp/>compute_priority(cm-&gt;chunk_x,<sp/>cm-&gt;chunk_y,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_storage_total<sp/>+=<sp/>cm-&gt;vbuf_size<sp/>+<sp/>cm-&gt;fbuf_size;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;priority<sp/>&lt;<sp/>lowest_priority)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowest_priority<sp/>=<sp/>cm-&gt;priority;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowest_i<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowest_j<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;state<sp/>==<sp/>STATE_needed)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;priority<sp/>=<sp/>compute_priority(cm-&gt;chunk_x,<sp/>cm-&gt;chunk_y,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;priority<sp/>&lt;<sp/>min_priority)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;state<sp/>=<sp/>STATE_invalid;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;priority<sp/>&gt;<sp/>highest_priority[0])<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_priority[0]<sp/>=<sp/>cm-&gt;priority;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_i[0]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_j[0]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bubble<sp/>this<sp/>up<sp/>to<sp/>right<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>MAX_QUEUE-1;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(highest_priority[k]<sp/>&gt;<sp/>highest_priority[k+1])<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_priority[k]<sp/>=<sp/>highest_priority[k+1];</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_priority[k+1]<sp/>=<sp/>cm-&gt;priority;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_i[k]<sp/>=<sp/>highest_i[k+1];</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_i[k+1]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_j[k]<sp/>=<sp/>highest_j[k+1];</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highest_j[k+1]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>couldn&apos;t<sp/>find<sp/>any<sp/>straightforward<sp/>logic<sp/>that<sp/>avoids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>hysteresis<sp/>problem<sp/>of<sp/>continually<sp/>creating<sp/>&amp;<sp/>freeing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>block<sp/>on<sp/>the<sp/>margin,<sp/>so<sp/>I<sp/>just<sp/>don&apos;t<sp/>free<sp/>a<sp/>block<sp/>until</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>out<sp/>of<sp/>range,<sp/>but<sp/>this<sp/>doesn&apos;t<sp/>actually<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>when<sp/>the<sp/>cache<sp/>is<sp/>too<sp/>small<sp/>for<sp/>the<sp/>given<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk_storage_total<sp/>&gt;=<sp/>min_chunk_storage<sp/>&amp;&amp;<sp/>lowest_i<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cached_chunk_mesh[lowest_j][lowest_i].priority<sp/>&lt;<sp/>-1200)<sp/></highlight><highlight class="comment">//<sp/>-1000?<sp/>0?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_chunk(lowest_i,<sp/>lowest_j);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk_storage_total<sp/>&lt;<sp/>max_chunk_storage<sp/>&amp;&amp;<sp/>highest_i[0]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=MAX_QUEUE-1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(highest_j[0]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structchunk__mesh" kindref="compound">chunk_mesh</ref><sp/>*cm<sp/>=<sp/>&amp;cached_chunk_mesh[highest_j[j]][highest_i[j]];</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request_chunk(cm-&gt;chunk_x,<sp/>cm-&gt;chunk_y))<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;state<sp/>=<sp/>STATE_requested;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>couldn&apos;t<sp/>queue<sp/>this<sp/>one,<sp/>skip<sp/>the<sp/>remainder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/>update_meshes_from_render_thread();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/>num_threads_active<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_mesh_workers;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_threads_active<sp/>+=<sp/>(mesh_data[i].state<sp/>==<sp/>WSTATE_running);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c"/>
  </compounddef>
</doxygen>
