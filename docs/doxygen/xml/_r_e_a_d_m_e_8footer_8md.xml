<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_r_e_a_d_m_e_8footer_8md" kind="file" language="Markdown">
    <compoundname>README.footer.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline></codeline>
<codeline><highlight class="normal">FAQ</highlight></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>What&apos;s<sp/>the<sp/>license?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">These<sp/>libraries<sp/>are<sp/>in<sp/>the<sp/>public<sp/>domain.<sp/>You<sp/>can<sp/>do<sp/>anything<sp/>you</highlight></codeline>
<codeline><highlight class="normal">want<sp/>with<sp/>them.<sp/>You<sp/>have<sp/>no<sp/>legal<sp/>obligation</highlight></codeline>
<codeline><highlight class="normal">to<sp/>do<sp/>anything<sp/>else,<sp/>although<sp/>I<sp/>appreciate<sp/>attribution.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">They<sp/>are<sp/>also<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>open<sp/>source<sp/>license,<sp/>if<sp/>you<sp/>have<sp/>lawyers</highlight></codeline>
<codeline><highlight class="normal">who<sp/>are<sp/>unhappy<sp/>with<sp/>public<sp/>domain.<sp/>Every<sp/>source<sp/>file<sp/>includes<sp/>an<sp/>explicit</highlight></codeline>
<codeline><highlight class="normal">dual-license<sp/>for<sp/>you<sp/>to<sp/>choose<sp/>from.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>How<sp/>do<sp/>I<sp/>use<sp/>these<sp/>libraries?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>idea<sp/>behind<sp/>single-header<sp/>file<sp/>libraries<sp/>is<sp/>that<sp/>they&apos;re<sp/>easy<sp/>to<sp/>distribute<sp/>and<sp/>deploy</highlight></codeline>
<codeline><highlight class="normal">because<sp/>all<sp/>the<sp/>code<sp/>is<sp/>contained<sp/>in<sp/>a<sp/>single<sp/>file.<sp/>By<sp/>default,<sp/>the<sp/>.h<sp/>files<sp/>in<sp/>here<sp/>act<sp/>as</highlight></codeline>
<codeline><highlight class="normal">their<sp/>own<sp/>header<sp/>files,<sp/>i.e.<sp/>they<sp/>declare<sp/>the<sp/>functions<sp/>contained<sp/>in<sp/>the<sp/>file<sp/>but<sp/>don&apos;t</highlight></codeline>
<codeline><highlight class="normal">actually<sp/>result<sp/>in<sp/>any<sp/>code<sp/>getting<sp/>compiled.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">So<sp/>in<sp/>addition,<sp/>you<sp/>should<sp/>select<sp/>_exactly<sp/>one_<sp/>C/C++<sp/>source<sp/>file<sp/>that<sp/>actually<sp/>instantiates</highlight></codeline>
<codeline><highlight class="normal">the<sp/>code,<sp/>preferably<sp/>a<sp/>file<sp/>you&apos;re<sp/>not<sp/>editing<sp/>frequently.<sp/>This<sp/>file<sp/>should<sp/>define<sp/>a</highlight></codeline>
<codeline><highlight class="normal">specific<sp/>macro<sp/>(this<sp/>is<sp/>documented<sp/>per-library)<sp/>to<sp/>actually<sp/>enable<sp/>the<sp/>function<sp/>definitions.</highlight></codeline>
<codeline><highlight class="normal">For<sp/>example,<sp/>to<sp/>use<sp/>stb_image,<sp/>you<sp/>should<sp/>have<sp/>exactly<sp/>one<sp/>C/C++<sp/>file<sp/>that<sp/>doesn&apos;t</highlight></codeline>
<codeline><highlight class="normal">include<sp/>stb_image.h<sp/>regularly,<sp/>but<sp/>instead<sp/>does</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#define<sp/>STB_IMAGE_IMPLEMENTATION</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#include<sp/>&quot;stb_image.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>right<sp/>macro<sp/>to<sp/>define<sp/>is<sp/>pointed<sp/>out<sp/>right<sp/>at<sp/>the<sp/>top<sp/>of<sp/>each<sp/>of<sp/>these<sp/>libraries.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>&lt;a<sp/>name=&quot;other_libs&quot;&gt;&lt;/a&gt;<sp/>Are<sp/>there<sp/>other<sp/>single-file<sp/>public-domain/open<sp/>source<sp/>libraries<sp/>with<sp/>minimal<sp/>dependencies<sp/>out<sp/>there?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[Yes.](https://github.com/nothings/single_file_libs)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>If<sp/>I<sp/>wrap<sp/>an<sp/>stb<sp/>library<sp/>in<sp/>a<sp/>new<sp/>library,<sp/>does<sp/>the<sp/>new<sp/>library<sp/>have<sp/>to<sp/>be<sp/>public<sp/>domain/MIT?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">No,<sp/>because<sp/>it&apos;s<sp/>public<sp/>domain<sp/>you<sp/>can<sp/>freely<sp/>relicense<sp/>it<sp/>to<sp/>whatever<sp/>license<sp/>your<sp/>new</highlight></codeline>
<codeline><highlight class="normal">library<sp/>wants<sp/>to<sp/>be.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>What&apos;s<sp/>the<sp/>deal<sp/>with<sp/>SSE<sp/>support<sp/>in<sp/>GCC-based<sp/>compilers?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">stb_image<sp/>will<sp/>either<sp/>use<sp/>SSE2<sp/>(if<sp/>you<sp/>compile<sp/>with<sp/>-msse2)<sp/>or</highlight></codeline>
<codeline><highlight class="normal">will<sp/>not<sp/>use<sp/>any<sp/>SIMD<sp/>at<sp/>all,<sp/>rather<sp/>than<sp/>trying<sp/>to<sp/>detect<sp/>the</highlight></codeline>
<codeline><highlight class="normal">processor<sp/>at<sp/>runtime<sp/>and<sp/>handle<sp/>it<sp/>correctly.<sp/>As<sp/>I<sp/>understand<sp/>it,</highlight></codeline>
<codeline><highlight class="normal">the<sp/>approved<sp/>path<sp/>in<sp/>GCC<sp/>for<sp/>runtime-detection<sp/>require</highlight></codeline>
<codeline><highlight class="normal">you<sp/>to<sp/>use<sp/>multiple<sp/>source<sp/>files,<sp/>one<sp/>for<sp/>each<sp/>CPU<sp/>configuration.</highlight></codeline>
<codeline><highlight class="normal">Because<sp/>stb_image<sp/>is<sp/>a<sp/>header-file<sp/>library<sp/>that<sp/>compiles<sp/>in<sp/>only</highlight></codeline>
<codeline><highlight class="normal">one<sp/>source<sp/>file,<sp/>there&apos;s<sp/>no<sp/>approved<sp/>way<sp/>to<sp/>build<sp/>both<sp/>an</highlight></codeline>
<codeline><highlight class="normal">SSE-enabled<sp/>and<sp/>a<sp/>non-SSE-enabled<sp/>variation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">While<sp/>we&apos;ve<sp/>tried<sp/>to<sp/>work<sp/>around<sp/>it,<sp/>we&apos;ve<sp/>had<sp/>multiple<sp/>issues<sp/>over</highlight></codeline>
<codeline><highlight class="normal">the<sp/>years<sp/>due<sp/>to<sp/>specific<sp/>versions<sp/>of<sp/>gcc<sp/>breaking<sp/>what<sp/>we&apos;re<sp/>doing,</highlight></codeline>
<codeline><highlight class="normal">so<sp/>we&apos;ve<sp/>given<sp/>up<sp/>on<sp/>it.<sp/>See<sp/>https://github.com/nothings/stb/issues/280</highlight></codeline>
<codeline><highlight class="normal">and<sp/>https://github.com/nothings/stb/issues/410<sp/>for<sp/>examples.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Some<sp/>of<sp/>these<sp/>libraries<sp/>seem<sp/>redundant<sp/>to<sp/>existing<sp/>open<sp/>source<sp/>libraries.<sp/>Are<sp/>they<sp/>better<sp/>somehow?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Generally<sp/>they&apos;re<sp/>only<sp/>better<sp/>in<sp/>that<sp/>they&apos;re<sp/>easier<sp/>to<sp/>integrate,</highlight></codeline>
<codeline><highlight class="normal">easier<sp/>to<sp/>use,<sp/>and<sp/>easier<sp/>to<sp/>release<sp/>(single<sp/>file;<sp/>good<sp/>API;<sp/>no</highlight></codeline>
<codeline><highlight class="normal">attribution<sp/>requirement).<sp/>They<sp/>may<sp/>be<sp/>less<sp/>featureful,<sp/>slower,</highlight></codeline>
<codeline><highlight class="normal">and/or<sp/>use<sp/>more<sp/>memory.<sp/>If<sp/>you&apos;re<sp/>already<sp/>using<sp/>an<sp/>equivalent</highlight></codeline>
<codeline><highlight class="normal">library,<sp/>there&apos;s<sp/>probably<sp/>no<sp/>good<sp/>reason<sp/>to<sp/>switch.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Can<sp/>I<sp/>link<sp/>directly<sp/>to<sp/>the<sp/>table<sp/>of<sp/>stb<sp/>libraries?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>use<sp/>[this<sp/>URL](https://github.com/nothings/stb#stb_libs)<sp/>to<sp/>link<sp/>directly<sp/>to<sp/>that<sp/>list.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Why<sp/>do<sp/>you<sp/>list<sp/>&quot;lines<sp/>of<sp/>code&quot;?<sp/>It&apos;s<sp/>a<sp/>terrible<sp/>metric.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Just<sp/>to<sp/>give<sp/>you<sp/>some<sp/>idea<sp/>of<sp/>the<sp/>internal<sp/>complexity<sp/>of<sp/>the<sp/>library,</highlight></codeline>
<codeline><highlight class="normal">to<sp/>help<sp/>you<sp/>manage<sp/>your<sp/>expectations,<sp/>or<sp/>to<sp/>let<sp/>you<sp/>know<sp/>what<sp/>you&apos;re</highlight></codeline>
<codeline><highlight class="normal">getting<sp/>into.<sp/>While<sp/>not<sp/>all<sp/>the<sp/>libraries<sp/>are<sp/>written<sp/>in<sp/>the<sp/>same</highlight></codeline>
<codeline><highlight class="normal">style,<sp/>they&apos;re<sp/>certainly<sp/>similar<sp/>styles,<sp/>and<sp/>so<sp/>comparisons<sp/>between</highlight></codeline>
<codeline><highlight class="normal">the<sp/>libraries<sp/>are<sp/>probably<sp/>still<sp/>meaningful.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note<sp/>though<sp/>that<sp/>the<sp/>lines<sp/>do<sp/>include<sp/>both<sp/>the<sp/>implementation,<sp/>the</highlight></codeline>
<codeline><highlight class="normal">part<sp/>that<sp/>corresponds<sp/>to<sp/>a<sp/>header<sp/>file,<sp/>and<sp/>the<sp/>documentation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Why<sp/>single-file<sp/>headers?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Windows<sp/>doesn&apos;t<sp/>have<sp/>standard<sp/>directories<sp/>where<sp/>libraries</highlight></codeline>
<codeline><highlight class="normal">live.<sp/>That<sp/>makes<sp/>deploying<sp/>libraries<sp/>in<sp/>Windows<sp/>a<sp/>lot<sp/>more</highlight></codeline>
<codeline><highlight class="normal">painful<sp/>than<sp/>open<sp/>source<sp/>developers<sp/>on<sp/>Unix-derivates<sp/>generally</highlight></codeline>
<codeline><highlight class="normal">realize.<sp/>(It<sp/>also<sp/>makes<sp/>library<sp/>dependencies<sp/>a<sp/>lot<sp/>worse<sp/>in<sp/>Windows.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There&apos;s<sp/>also<sp/>a<sp/>common<sp/>problem<sp/>in<sp/>Windows<sp/>where<sp/>a<sp/>library<sp/>was<sp/>built</highlight></codeline>
<codeline><highlight class="normal">against<sp/>a<sp/>different<sp/>version<sp/>of<sp/>the<sp/>runtime<sp/>library,<sp/>which<sp/>causes</highlight></codeline>
<codeline><highlight class="normal">link<sp/>conflicts<sp/>and<sp/>confusion.<sp/>Shipping<sp/>the<sp/>libs<sp/>as<sp/>headers<sp/>means</highlight></codeline>
<codeline><highlight class="normal">you<sp/>normally<sp/>just<sp/>compile<sp/>them<sp/>straight<sp/>into<sp/>your<sp/>project<sp/>without</highlight></codeline>
<codeline><highlight class="normal">making<sp/>libraries,<sp/>thus<sp/>sidestepping<sp/>that<sp/>problem.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Making<sp/>them<sp/>a<sp/>single<sp/>file<sp/>makes<sp/>it<sp/>very<sp/>easy<sp/>to<sp/>just</highlight></codeline>
<codeline><highlight class="normal">drop<sp/>them<sp/>into<sp/>a<sp/>project<sp/>that<sp/>needs<sp/>them.<sp/>(Of<sp/>course<sp/>you<sp/>can</highlight></codeline>
<codeline><highlight class="normal">still<sp/>put<sp/>them<sp/>in<sp/>a<sp/>proper<sp/>shared<sp/>library<sp/>tree<sp/>if<sp/>you<sp/>want.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Why<sp/>not<sp/>two<sp/>files,<sp/>one<sp/>a<sp/>header<sp/>and<sp/>one<sp/>an<sp/>implementation?</highlight></codeline>
<codeline><highlight class="normal">The<sp/>difference<sp/>between<sp/>10<sp/>files<sp/>and<sp/>9<sp/>files<sp/>is<sp/>not<sp/>a<sp/>big<sp/>deal,</highlight></codeline>
<codeline><highlight class="normal">but<sp/>the<sp/>difference<sp/>between<sp/>2<sp/>files<sp/>and<sp/>1<sp/>file<sp/>is<sp/>a<sp/>big<sp/>deal.</highlight></codeline>
<codeline><highlight class="normal">You<sp/>don&apos;t<sp/>need<sp/>to<sp/>zip<sp/>or<sp/>tar<sp/>the<sp/>files<sp/>up,<sp/>you<sp/>don&apos;t<sp/>have<sp/>to</highlight></codeline>
<codeline><highlight class="normal">remember<sp/>to<sp/>attach<sp/>*two*<sp/>files,<sp/>etc.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Why<sp/>&quot;stb&quot;?<sp/>Is<sp/>this<sp/>something<sp/>to<sp/>do<sp/>with<sp/>Set-Top<sp/>Boxes?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">No,<sp/>they<sp/>are<sp/>just<sp/>the<sp/>initials<sp/>for<sp/>my<sp/>name,<sp/>Sean<sp/>T.<sp/>Barrett.</highlight></codeline>
<codeline><highlight class="normal">This<sp/>was<sp/>not<sp/>chosen<sp/>out<sp/>of<sp/>egomania,<sp/>but<sp/>as<sp/>a<sp/>moderately<sp/>sane</highlight></codeline>
<codeline><highlight class="normal">way<sp/>of<sp/>namespacing<sp/>the<sp/>filenames<sp/>and<sp/>source<sp/>function<sp/>names.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Will<sp/>you<sp/>add<sp/>more<sp/>image<sp/>types<sp/>to<sp/>stb_image.h?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">No.<sp/>As<sp/>stb_image<sp/>use<sp/>has<sp/>grown,<sp/>it<sp/>has<sp/>become<sp/>more<sp/>important</highlight></codeline>
<codeline><highlight class="normal">for<sp/>us<sp/>to<sp/>focus<sp/>on<sp/>security<sp/>of<sp/>the<sp/>codebase.<sp/>Adding<sp/>new<sp/>image</highlight></codeline>
<codeline><highlight class="normal">formats<sp/>increases<sp/>the<sp/>amount<sp/>of<sp/>code<sp/>we<sp/>need<sp/>to<sp/>secure,<sp/>so<sp/>it</highlight></codeline>
<codeline><highlight class="normal">is<sp/>no<sp/>longer<sp/>worth<sp/>adding<sp/>new<sp/>formats.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Do<sp/>you<sp/>have<sp/>any<sp/>advice<sp/>on<sp/>how<sp/>to<sp/>create<sp/>my<sp/>own<sp/>single-file<sp/>library?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Yes.<sp/>https://github.com/nothings/stb/blob/master/docs/stb_howto.txt</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Why<sp/>public<sp/>domain?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">I<sp/>prefer<sp/>it<sp/>over<sp/>GPL,<sp/>LGPL,<sp/>BSD,<sp/>zlib,<sp/>etc.<sp/>for<sp/>many<sp/>reasons.</highlight></codeline>
<codeline><highlight class="normal">Some<sp/>of<sp/>them<sp/>are<sp/>listed<sp/>here:</highlight></codeline>
<codeline><highlight class="normal">https://github.com/nothings/stb/blob/master/docs/why_public_domain.md</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Why<sp/>C?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Primarily,<sp/>because<sp/>I<sp/>use<sp/>C,<sp/>not<sp/>C++.<sp/>But<sp/>it<sp/>does<sp/>also<sp/>make<sp/>it<sp/>easier</highlight></codeline>
<codeline><highlight class="normal">for<sp/>other<sp/>people<sp/>to<sp/>use<sp/>them<sp/>from<sp/>other<sp/>languages.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Why<sp/>not<sp/>C99?<sp/>stdint.h,<sp/>declare-anywhere,<sp/>etc.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">I<sp/>still<sp/>use<sp/>MSVC<sp/>6<sp/>(1998)<sp/>as<sp/>my<sp/>IDE<sp/>because<sp/>it<sp/>has<sp/>better<sp/>human<sp/>factors</highlight></codeline>
<codeline><highlight class="normal">for<sp/>me<sp/>than<sp/>later<sp/>versions<sp/>of<sp/>MSVC.</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tools/README.footer.md"/>
  </compounddef>
</doxygen>
