<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__norm" kind="group">
    <compoundname>gtx_norm</compoundname>
    <title>GLM_GTX_norm</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__norm_1ga8d1789651050adb7024917984b41c3de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::length2</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>length2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the squared length of x. From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="36" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="27" bodyend="31" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="36" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__norm_1ga85660f1b79f66c09c7b5a6f80e68c89f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::distance2</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;p0, vec&lt; L, T, Q &gt; const &amp;p1)</argsstring>
        <name>distance2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the squared distance between p0 and p1, i.e., length2(p0 - p1). From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="41" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="41" bodyend="45" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="41" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__norm_1gae2fc0b2aa967bebfd6a244700bff6997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::l1Norm</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;x, vec&lt; 3, T, Q &gt; const &amp;y)</argsstring>
        <name>l1Norm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the L1 norm between x and y. From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="46" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="48" bodyend="51" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="46" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__norm_1ga1a7491e2037ceeb37f83ce41addfc0be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::l1Norm</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>l1Norm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the L1 norm of v. From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="51" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="54" bodyend="57" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="51" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__norm_1ga41340b2ef40a9307ab0f137181565168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::l2Norm</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;x, vec&lt; 3, T, Q &gt; const &amp;y)</argsstring>
        <name>l2Norm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the L2 norm between x and y. From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="56" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="60" bodyend="64" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="56" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__norm_1gae288bde8f0e41fb4ed62e65137b18cba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::l2Norm</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;x)</argsstring>
        <name>l2Norm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the L2 norm of v. From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="61" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="67" bodyend="70" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="61" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__norm_1gacad23d30497eb16f67709f2375d1f66a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::lxNorm</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;x, vec&lt; 3, T, Q &gt; const &amp;y, unsigned int Depth)</argsstring>
        <name>lxNorm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>Depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the L norm between x and y. From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="66" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="73" bodyend="76" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="66" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__norm_1gac61b6d81d796d6eb4d4183396a19ab91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::lxNorm</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;x, unsigned int Depth)</argsstring>
        <name>lxNorm</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>Depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the L norm of v. From GLM_GTX_norm extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" line="71" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.inl" bodystart="79" bodyend="82" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/norm.hpp" declline="71" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="norm_8hpp" kindref="compound">glm/gtx/norm.hpp</ref>&gt; to use the features of this extension.</para>
<para>Various ways to compute vector norms. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
