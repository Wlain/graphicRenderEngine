<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stb__voxel__render_8h" kind="file" language="C++">
    <compoundname>stb_voxel_render.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includedby refid="cave__mesher_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c</includedby>
    <includedby refid="cave__render_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c</includedby>
    <includedby refid="caveview_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/caveview.h</includedby>
    <includedby refid="test__c__compilation_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_c_compilation.c</includedby>
    <includedby refid="test__cpp__compilation_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_cpp_compilation.cpp</includedby>
    <includedby refid="test__voxel_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_voxel.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h</label>
        <link refid="stb__voxel__render_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h</label>
        <link refid="stb__voxel__render_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_main.c</label>
        <link refid="cave__main_8c_source"/>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_mesher.c</label>
        <link refid="cave__mesher_8c_source"/>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/cave_render.c</label>
        <link refid="cave__render_8c_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/caveview/caveview.h</label>
        <link refid="caveview_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_c_compilation.c</label>
        <link refid="test__c__compilation_8c_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_cpp_compilation.cpp</label>
        <link refid="test__cpp__compilation_8cpp_source"/>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_voxel.c</label>
        <link refid="test__voxel_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structstbvox__uniform__info" prot="public">stbvox_uniform_info</innerclass>
    <innerclass refid="structstbvox__rgb" prot="public">stbvox_rgb</innerclass>
    <innerclass refid="structstbvox__input__description" prot="public">stbvox_input_description</innerclass>
    <innerclass refid="structstbvox__mesh__maker" prot="public">stbvox_mesh_maker</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="stb__voxel__render_8h_1a099e6ffd06ac1f49b7d5d4254165623c" prot="public" static="no">
        <name>STBVXDEC</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="239" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a9f0707063571f7794e1ba83b090b0812" prot="public" static="no">
        <name>STBVOX_COLOR_TEX1_ENABLE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="716" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1aaa34a23227b55275b4233482ee36d1c3" prot="public" static="no">
        <name>STBVOX_COLOR_TEX2_ENABLE</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="717" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a115801002e44ceef507858292d9763b7" prot="public" static="no">
        <name>STBVOX_FACE_NONE</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1145" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1aa12481bf548bfc870b0950e5fc93692d" prot="public" static="no">
        <name>STBVOX_BLOCKTYPE_EMPTY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1147" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1ae21cfc1c11173e91839cfe89e99faa25" prot="public" static="no">
        <name>STBVOX_BLOCKTYPE_HOLE</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1152" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a15590f88a985eb242c6dffb8c462983a" prot="public" static="no">
        <name>STBVOX_MAKE_GEOMETRY</name>
        <param><defname>geom</defname></param>
        <param><defname>rotate</defname></param>
        <param><defname>vheight</defname></param>
        <initializer>((geom) + (rotate)*16 + (vheight)*64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1155" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a7481d3530d34c5048938868910e259e3" prot="public" static="no">
        <name>STBVOX_MAKE_VHEIGHT</name>
        <param><defname>v_sw</defname></param>
        <param><defname>v_se</defname></param>
        <param><defname>v_nw</defname></param>
        <param><defname>v_ne</defname></param>
        <initializer>((v_sw) + (v_se)*4 + (v_nw)*16 + (v_ne)*64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1156" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a648b29130a3e66f4e7c21192bae19e20" prot="public" static="no">
        <name>STBVOX_MAKE_MATROT</name>
        <param><defname>block</defname></param>
        <param><defname>overlay</defname></param>
        <param><defname>color</defname></param>
        <initializer>((block) + (overlay)*4 + (color)*64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1157" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a3c2a25c7d1b181b32ccc8e34f81ac362" prot="public" static="no">
        <name>STBVOX_MAKE_TEX2_REPLACE</name>
        <param><defname>tex2</defname></param>
        <param><defname>tex2_replace_face</defname></param>
        <initializer>((tex2) + ((tex2_replace_face) &amp; 3)*64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1158" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a4f13391708b23d536a614897eadf2ca4" prot="public" static="no">
        <name>STBVOX_MAKE_TEXLERP</name>
        <param><defname>ns2</defname></param>
        <param><defname>ew2</defname></param>
        <param><defname>ud2</defname></param>
        <param><defname>vert</defname></param>
        <initializer>((ew2) + (ns2)*4 + (ud2)*16 + (vert)*64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1159" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a1dd71f4d5dd54614b656c2b17dc236c9" prot="public" static="no">
        <name>STBVOX_MAKE_TEXLERP_SIMPLE</name>
        <param><defname>baselerp</defname></param>
        <param><defname>vert</defname></param>
        <param><defname>face</defname></param>
        <initializer>((vert)*32 + (face)*4 + (baselerp))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1160" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a0a16737e453f13bc6bf110fa9169a1c1" prot="public" static="no">
        <name>STBVOX_MAKE_TEXLERP1</name>
        <param><defname>vert</defname></param>
        <param><defname>e2</defname></param>
        <param><defname>n2</defname></param>
        <param><defname>w2</defname></param>
        <param><defname>s2</defname></param>
        <param><defname>u4</defname></param>
        <param><defname>d2</defname></param>
        <initializer>STBVOX_MAKE_TEXLERP(s2, w2, d2, vert)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1161" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a26554d7969a866c9265c343c81c5063d" prot="public" static="no">
        <name>STBVOX_MAKE_TEXLERP2</name>
        <param><defname>vert</defname></param>
        <param><defname>e2</defname></param>
        <param><defname>n2</defname></param>
        <param><defname>w2</defname></param>
        <param><defname>s2</defname></param>
        <param><defname>u4</defname></param>
        <param><defname>d2</defname></param>
        <initializer>((u2)*16 + (n2)*4 + (s2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1162" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a05e1006252362770dcb8997704c87af0" prot="public" static="no">
        <name>STBVOX_MAKE_FACE_MASK</name>
        <param><defname>e</defname></param>
        <param><defname>n</defname></param>
        <param><defname>w</defname></param>
        <param><defname>s</defname></param>
        <param><defname>u</defname></param>
        <param><defname>d</defname></param>
        <initializer>((e)+(n)*2+(w)*4+(s)*8+(u)*16+(d)*32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1163" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a62e6b4a4b3bbe3b5ca82434cd6b35c48" prot="public" static="no">
        <name>STBVOX_MAKE_SIDE_TEXROT</name>
        <param><defname>e</defname></param>
        <param><defname>n</defname></param>
        <param><defname>w</defname></param>
        <param><defname>s</defname></param>
        <initializer>((e)+(n)*4+(w)*16+(s)*64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1164" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1aa5c64524cb38841d0dd49b36149a3c83" prot="public" static="no">
        <name>STBVOX_MAKE_COLOR</name>
        <param><defname>color</defname></param>
        <param><defname>t1</defname></param>
        <param><defname>t2</defname></param>
        <initializer>((color)+(t1)*64+(t2)*128)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1165" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a6994c7a5b2a8be52d456bef366b739d7" prot="public" static="no">
        <name>STBVOX_MAKE_TEXLERP_VERT3</name>
        <param><defname>e</defname></param>
        <param><defname>n</defname></param>
        <param><defname>w</defname></param>
        <param><defname>s</defname></param>
        <param><defname>u</defname></param>
        <initializer>((e)+(n)*8+(w)*64+(s)*512+(u)*4096)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1166" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1ab97c6061e45e27486e6a6022a382564a" prot="public" static="no">
        <name>STBVOX_MAKE_TEXLERP_FACE3</name>
        <param><defname>e</defname></param>
        <param><defname>n</defname></param>
        <param><defname>w</defname></param>
        <param><defname>s</defname></param>
        <param><defname>u</defname></param>
        <param><defname>d</defname></param>
        <initializer>((e)+(n)*8+(w)*64+(s)*512+(u)*4096+(d)*16384)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1167" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a15683569184dbc025f3c799bfce5c585" prot="public" static="no">
        <name>STBVOX_MAKE_PACKED_COMPACT</name>
        <param><defname>rot</defname></param>
        <param><defname>vheight</defname></param>
        <param><defname>texlerp</defname></param>
        <param><defname>def</defname></param>
        <initializer>((rot)+4*(vheight)+16*(use)+32*(texlerp))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1168" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a010e6516eb03985257ba2a14eeea396c" prot="public" static="no">
        <name>STBVOX_MAKE_LIGHTING_EXT</name>
        <param><defname>lighting</defname></param>
        <param><defname>rot</defname></param>
        <initializer>(((lighting)&amp;~3)+(rot))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1170" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a731a149693aa9a021e7844ad6d5db249" prot="public" static="no">
        <name>STBVOX_MAKE_LIGHTING</name>
        <param><defname>lighting</defname></param>
        <initializer>(lighting)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1171" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a9624467b8d0b4ae065bc5dadcc0ba2c2" prot="public" static="no">
        <name>STBVOX_MAX_MESHES</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1174" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__voxel__render_8h_1a03bfe9594a2da3f19c2e779d2c2edbaf" prot="public" static="no">
        <name>STBVOX_MAX_MESH_SLOTS</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1177" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002" prot="public" static="no" strong="no">
        <type></type>
        <name>@131</name>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002ae4a976805a2c137e4e56be03380ea2a2" prot="public">
          <name>STBVOX_UNIFORM_face_data</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002ab955886cfcf0c2c881d633beeb99ad93" prot="public">
          <name>STBVOX_UNIFORM_transform</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002a9415362fa2fe2833bbb221c12310dc81" prot="public">
          <name>STBVOX_UNIFORM_tex_array</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002af9b476df9befe12c8855d1ea20db22fe" prot="public">
          <name>STBVOX_UNIFORM_texscale</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002a1f8122611f70005180ede22ebffa840f" prot="public">
          <name>STBVOX_UNIFORM_color_table</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002a67cfb94d15198e0d936ca263a2077b5e" prot="public">
          <name>STBVOX_UNIFORM_normals</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002a65f746116b3aa230da8bbb534e6cea97" prot="public">
          <name>STBVOX_UNIFORM_texgen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002a87500607917aa427db2ff08fc3ea1ca8" prot="public">
          <name>STBVOX_UNIFORM_ambient</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002a82a48737d53c36a05fdf8138c17c349f" prot="public">
          <name>STBVOX_UNIFORM_camera_pos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a7ada2556f3c386db5f31969fb6d4d002a463fbe04a519703eaad7ce1434576696" prot="public">
          <name>STBVOX_UNIFORM_count</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="568" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="569" bodyend="581"/>
      </memberdef>
      <memberdef kind="enum" id="stb__voxel__render_8h_1a25e50be5c73e0b2fab54944e68dd48c2" prot="public" static="no" strong="no">
        <type></type>
        <name>@132</name>
        <enumvalue id="stb__voxel__render_8h_1a25e50be5c73e0b2fab54944e68dd48c2ad342112fde8fd8be3edbd5a2120ca317" prot="public">
          <name>STBVOX_UNIFORM_TYPE_none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a25e50be5c73e0b2fab54944e68dd48c2ac7047970a5db6dd015b117186730c558" prot="public">
          <name>STBVOX_UNIFORM_TYPE_sampler</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a25e50be5c73e0b2fab54944e68dd48c2adf4638d7323db2e592ee2d87917cd785" prot="public">
          <name>STBVOX_UNIFORM_TYPE_vec2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a25e50be5c73e0b2fab54944e68dd48c2a01e4c8c453c9d498f2125eaeb26ebb5c" prot="public">
          <name>STBVOX_UNIFORM_TYPE_vec3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a25e50be5c73e0b2fab54944e68dd48c2abb971ba14a3c74cddba2b40bf5cc3b8f" prot="public">
          <name>STBVOX_UNIFORM_TYPE_vec4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="583" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="584" bodyend="590"/>
      </memberdef>
      <memberdef kind="enum" id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eb" prot="public" static="no" strong="no">
        <type></type>
        <name>@133</name>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6ebacf4698c9739b8b6c1af7f8a124169cc9" prot="public">
          <name>STBVOX_GEOM_empty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba0c121ca2d1b34ddb76fc268d10251117" prot="public">
          <name>STBVOX_GEOM_knockout</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba685a066c41ada07dc62ffaa16d23ccf5" prot="public">
          <name>STBVOX_GEOM_solid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba5921e838cb3457e8097fd111be407eec" prot="public">
          <name>STBVOX_GEOM_transp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba30b6f0c40e6b6e40d49dab03c03fc327" prot="public">
          <name>STBVOX_GEOM_slab_upper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba4d3a600f27892ef5bb64aa2e884b6570" prot="public">
          <name>STBVOX_GEOM_slab_lower</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba063a4146fc89954375c7fc7fa39e8747" prot="public">
          <name>STBVOX_GEOM_floor_slope_north_is_top</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6ebaa5dcab0b072fb42d24d09d3ace41724d" prot="public">
          <name>STBVOX_GEOM_ceil_slope_north_is_bottom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba967b6a84170cb5bbb3af61a3eda1e185" prot="public">
          <name>STBVOX_GEOM_floor_slope_north_is_top_as_wall_UNIMPLEMENTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba23b7fdc60695dd2873855631799b54d2" prot="public">
          <name>STBVOX_GEOM_ceil_slope_north_is_bottom_as_wall_UNIMPLEMENTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba9cd52f024f074ece1f5cecbcc517c54f" prot="public">
          <name>STBVOX_GEOM_crossed_pair</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba334b45fb41d2329d21d3bd81b8c2568d" prot="public">
          <name>STBVOX_GEOM_force</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6ebada2a4d1b275d962d5c76388b2f731b3f" prot="public">
          <name>STBVOX_GEOM_floor_vheight_03</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba7511f84da0693e6147590c76a74480d6" prot="public">
          <name>STBVOX_GEOM_floor_vheight_12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba62855fb026ed6bb2b93a02f94b9eaacb" prot="public">
          <name>STBVOX_GEOM_ceil_vheight_03</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba63a77bdea6849081b9924e525fe602df" prot="public">
          <name>STBVOX_GEOM_ceil_vheight_12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a97f905ac94bfebd46e50e32c7389e6eba392c7b9ba79ae0aec0364b3cbd57ad1c" prot="public">
          <name>STBVOX_GEOM_count</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="665" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="666" bodyend="690"/>
      </memberdef>
      <memberdef kind="enum" id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6e" prot="public" static="no" strong="no">
        <type></type>
        <name>@134</name>
        <enumvalue id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6eafa499b8104b6de8c8a86aa4ffaac4029" prot="public">
          <name>STBVOX_FACE_east</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6eae6ab3be9f1d3f183497386adf6de0b7f" prot="public">
          <name>STBVOX_FACE_north</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6ea5d1070e526b0400de9341f0ea13d2761" prot="public">
          <name>STBVOX_FACE_west</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6ea989b46927a59c0e897e5a2132453a602" prot="public">
          <name>STBVOX_FACE_south</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6eaa81aa17ee2457c5e27dacbc28b081b70" prot="public">
          <name>STBVOX_FACE_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6ea0afd0d6f81410ddc95c3a6a8ed98ec22" prot="public">
          <name>STBVOX_FACE_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a9b29769343da78881f442e657eb62b6ea65bdc989c6728bab691aad91e4d4ec05" prot="public">
          <name>STBVOX_FACE_count</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="692" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="693" bodyend="702"/>
      </memberdef>
      <memberdef kind="enum" id="stb__voxel__render_8h_1a1e8054db89feba236b2235d16d0bd1ad" prot="public" static="no" strong="no">
        <type></type>
        <name>@135</name>
        <enumvalue id="stb__voxel__render_8h_1a1e8054db89feba236b2235d16d0bd1ada3fcc5a8bbe095c16e10c82d50c688685" prot="public">
          <name>STBVOX_VERTEX_HEIGHT_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a1e8054db89feba236b2235d16d0bd1ada4f4eb402db50e3377f15836b4a782c39" prot="public">
          <name>STBVOX_VERTEX_HEIGHT_half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a1e8054db89feba236b2235d16d0bd1ada092bad5aa4358be71d81eaae4623e94b" prot="public">
          <name>STBVOX_VERTEX_HEIGHT_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a1e8054db89feba236b2235d16d0bd1ada280c918aae70c240be01dc4de2fb3f86" prot="public">
          <name>STBVOX_VERTEX_HEIGHT_one_and_a_half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1035" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1036" bodyend="1041"/>
      </memberdef>
      <memberdef kind="enum" id="stb__voxel__render_8h_1a4f79453548dc20926be4b5a000ecbd66" prot="public" static="no" strong="no">
        <type></type>
        <name>@136</name>
        <enumvalue id="stb__voxel__render_8h_1a4f79453548dc20926be4b5a000ecbd66aa70bad6df098dbf1accf2968094dbebb" prot="public">
          <name>STBVOX_TEXLERP_FACE_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a4f79453548dc20926be4b5a000ecbd66a0adcec82e25711e882ca2142fcdf9f26" prot="public">
          <name>STBVOX_TEXLERP_FACE_half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a4f79453548dc20926be4b5a000ecbd66a0143df9adb613c460bca2a586504f084" prot="public">
          <name>STBVOX_TEXLERP_FACE_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1a4f79453548dc20926be4b5a000ecbd66a87926e8413a0d08ee2e482d5487772f9" prot="public">
          <name>STBVOX_TEXLERP_FACE_use_vert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1117" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1118" bodyend="1123"/>
      </memberdef>
      <memberdef kind="enum" id="stb__voxel__render_8h_1af59064efe753e6928fd91539a27503d1" prot="public" static="no" strong="no">
        <type></type>
        <name>@137</name>
        <enumvalue id="stb__voxel__render_8h_1af59064efe753e6928fd91539a27503d1aaad075e62e6c827472550b0a280d52b9" prot="public">
          <name>STBVOX_TEXLERP_BASE_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1af59064efe753e6928fd91539a27503d1a0786a482a211591e81641bf5c4121444" prot="public">
          <name>STBVOX_TEXLERP_BASE_2_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1af59064efe753e6928fd91539a27503d1af8154cb231658e333b0f05883b87170d" prot="public">
          <name>STBVOX_TEXLERP_BASE_5_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1af59064efe753e6928fd91539a27503d1ab69e6ee711cc4542ea10ad5a16ee18d4" prot="public">
          <name>STBVOX_TEXLERP_BASE_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1125" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1126" bodyend="1131"/>
      </memberdef>
      <memberdef kind="enum" id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5eddd" prot="public" static="no" strong="no">
        <type></type>
        <name>@138</name>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5edddab96a9b5c77f77149dff728aacde0ff16" prot="public">
          <name>STBVOX_TEXLERP3_0_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5edddaea2d40827737c1071f6dc6952a543059" prot="public">
          <name>STBVOX_TEXLERP3_1_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5eddda99d3b9c21f17c66cdbb8665cd0943cd7" prot="public">
          <name>STBVOX_TEXLERP3_2_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5edddacdae7d0ff7353e002ae2eacf6b8aa88a" prot="public">
          <name>STBVOX_TEXLERP3_3_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5eddda7c684dcd79b403475e1d3c4eaf5f25fa" prot="public">
          <name>STBVOX_TEXLERP3_4_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5edddafdc5d19076df6039c2c7b0d70a06e259" prot="public">
          <name>STBVOX_TEXLERP3_5_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5eddda9c2fad89edbd61a6c0b84476658420bb" prot="public">
          <name>STBVOX_TEXLERP3_6_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__voxel__render_8h_1acedc21792913cbec6ca54f6981c5eddda87385e4fba94fdb00b6b3d03b5d54f05" prot="public">
          <name>STBVOX_TEXLERP3_7_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="1133" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="1134" bodyend="1143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stb__voxel__render_8h_1a9af9a03e1ab5947cf7f357e3513013f2" prot="public" static="no">
        <type>struct <ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref></type>
        <definition>typedef struct stbvox_mesh_maker stbvox_mesh_maker</definition>
        <argsstring></argsstring>
        <name>stbvox_mesh_maker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="233" column="32" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stb__voxel__render_8h_1a7e0d9359468102f8a32a4c1802d3e680" prot="public" static="no">
        <type>struct <ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref></type>
        <definition>typedef struct stbvox_input_description stbvox_input_description</definition>
        <argsstring></argsstring>
        <name>stbvox_input_description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="234" column="39" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stb__voxel__render_8h_1aeab80555354a685a4978717aeecda080" prot="public" static="no">
        <type>struct <ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref></type>
        <definition>typedef struct stbvox_uniform_info stbvox_uniform_info</definition>
        <argsstring></argsstring>
        <name>stbvox_uniform_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="529" column="34" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stb__voxel__render_8h_1a18bbd36e563065fc4c6c29e8f79d5b49" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char stbvox_block_type</definition>
        <argsstring></argsstring>
        <name>stbvox_block_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="707" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stb__voxel__render_8h_1a1b8b7770f24477cf39260eac3ade3400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_init_mesh_maker</definition>
        <argsstring>(stbvox_mesh_maker *mm)</argsstring>
        <name>stbvox_init_mesh_maker</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="357" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="357" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a3b24ab8855010267a0e93541d1673fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_set_buffer</definition>
        <argsstring>(stbvox_mesh_maker *mm, int mesh, int slot, void *buffer, size_t len)</argsstring>
        <name>stbvox_set_buffer</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="362" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="362" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a3b537bb87f5e14c78f17f0b4d4ac29e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC int</type>
        <definition>STBVXDEC int stbvox_get_buffer_count</definition>
        <argsstring>(stbvox_mesh_maker *mm)</argsstring>
        <name>stbvox_get_buffer_count</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="387" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="387" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1afe4a3740055547f625557281f5f56f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC int</type>
        <definition>STBVXDEC int stbvox_get_buffer_size_per_quad</definition>
        <argsstring>(stbvox_mesh_maker *mm, int slot)</argsstring>
        <name>stbvox_get_buffer_size_per_quad</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="390" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="390" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1aae8b2a3e95db09861fef397aeb7cf10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_set_default_mesh</definition>
        <argsstring>(stbvox_mesh_maker *mm, int mesh)</argsstring>
        <name>stbvox_set_default_mesh</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="396" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="396" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a0f07a6812c110dec4a6d7656ccac7985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC <ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref> *</type>
        <definition>STBVXDEC stbvox_input_description * stbvox_get_input_description</definition>
        <argsstring>(stbvox_mesh_maker *mm)</argsstring>
        <name>stbvox_get_input_description</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="401" column="35" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="401" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a089559775ad9ffc7671d147ef40f6509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_set_input_stride</definition>
        <argsstring>(stbvox_mesh_maker *mm, int x_stride_in_elements, int y_stride_in_elements)</argsstring>
        <name>stbvox_set_input_stride</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_stride_in_elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_stride_in_elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="409" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="409" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a63fbb8703cf2c2718e6a0b4a90db00e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_set_input_range</definition>
        <argsstring>(stbvox_mesh_maker *mm, int x0, int y0, int z0, int x1, int y1, int z1)</argsstring>
        <name>stbvox_set_input_range</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="414" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="414" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1ab792b164e02789bce6e2ba96a4b8f935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC int</type>
        <definition>STBVXDEC int stbvox_make_mesh</definition>
        <argsstring>(stbvox_mesh_maker *mm)</argsstring>
        <name>stbvox_make_mesh</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="445" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="445" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1ace18e150b58146e2ec7ecba5ca0517b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC int</type>
        <definition>STBVXDEC int stbvox_get_quad_count</definition>
        <argsstring>(stbvox_mesh_maker *mm, int mesh)</argsstring>
        <name>stbvox_get_quad_count</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="463" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="463" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a4592b690afe4825bfabdfd9ae29fb35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_set_mesh_coordinates</definition>
        <argsstring>(stbvox_mesh_maker *mm, int x, int y, int z)</argsstring>
        <name>stbvox_set_mesh_coordinates</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="479" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="479" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a0ad8a7764f93c0592671bcf0e246dc6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_get_bounds</definition>
        <argsstring>(stbvox_mesh_maker *mm, float bounds[2][3])</argsstring>
        <name>stbvox_get_bounds</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bounds</declname>
          <array>[2][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="483" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="483" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a0a8668048f7cca70ef7043261761da90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_get_transform</definition>
        <argsstring>(stbvox_mesh_maker *mm, float transform[3][3])</argsstring>
        <name>stbvox_get_transform</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>float</type>
          <declname>transform</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="491" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="491" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a34226517e08ca1da34b39d34a5c31031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC void</type>
        <definition>STBVXDEC void stbvox_reset_buffers</definition>
        <argsstring>(stbvox_mesh_maker *mm)</argsstring>
        <name>stbvox_reset_buffers</name>
        <param>
          <type><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref> *</type>
          <declname>mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="504" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="504" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a00cdf0030fc54e22e80268beecb58133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC char *</type>
        <definition>STBVXDEC char * stbvox_get_vertex_shader</definition>
        <argsstring>(void)</argsstring>
        <name>stbvox_get_vertex_shader</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="515" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="515" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a20433969cef89aa65c72b88c7bf43c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC char *</type>
        <definition>STBVXDEC char * stbvox_get_fragment_shader</definition>
        <argsstring>(void)</argsstring>
        <name>stbvox_get_fragment_shader</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="518" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="518" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1a5022b4c007cfe350b89848934c321f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC char *</type>
        <definition>STBVXDEC char * stbvox_get_fragment_shader_alpha_only</definition>
        <argsstring>(void)</argsstring>
        <name>stbvox_get_fragment_shader_alpha_only</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="524" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="524" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__voxel__render_8h_1ac6724208eddce3a25e3927abed86426e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STBVXDEC int</type>
        <definition>STBVXDEC int stbvox_get_uniform_info</definition>
        <argsstring>(stbvox_uniform_info *info, int uniform)</argsstring>
        <name>stbvox_get_uniform_info</name>
        <param>
          <type><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uniform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" line="531" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h" declline="531" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>stb_voxel_render.h<sp/>-<sp/>v0.89<sp/>-<sp/>Sean<sp/>Barrett,<sp/>2015<sp/>-<sp/>public<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>library<sp/>helps<sp/>render<sp/>large-scale<sp/>&quot;voxel&quot;<sp/>worlds<sp/>for<sp/>games,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case,<sp/>one<sp/>with<sp/>blocks<sp/>that<sp/>can<sp/>have<sp/>textures<sp/>and<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>also<sp/>be<sp/>a<sp/>few<sp/>shapes<sp/>other<sp/>than<sp/>cubes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Video<sp/>introduction:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.youtube.com/watch?v=2vnTtiLrV1w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Minecraft-viewer<sp/>sample<sp/>app<sp/>(not<sp/>very<sp/>simple<sp/>though):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://github.com/nothings/stb/tree/master/tests/caveview</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>works<sp/>by<sp/>creating<sp/>triangle<sp/>meshes.<sp/>The<sp/>library<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>converter<sp/>from<sp/>dense<sp/>3D<sp/>arrays<sp/>of<sp/>block<sp/>info<sp/>to<sp/>vertex<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>vertex<sp/>&amp;<sp/>fragment<sp/>shaders<sp/>for<sp/>the<sp/>vertex<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>assistance<sp/>in<sp/>setting<sp/>up<sp/>shader<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>portability,<sp/>none<sp/>of<sp/>the<sp/>library<sp/>code<sp/>actually<sp/>accesses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>3D<sp/>graphics<sp/>API.<sp/>(At<sp/>the<sp/>moment,<sp/>it&apos;s<sp/>not<sp/>actually<sp/>portable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>shaders<sp/>are<sp/>GLSL<sp/>only,<sp/>but<sp/>patches<sp/>are<sp/>welcome.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>have<sp/>to<sp/>do<sp/>all<sp/>the<sp/>caching<sp/>and<sp/>tracking<sp/>of<sp/>vertex<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>yourself.<sp/>However,<sp/>you<sp/>could<sp/>also<sp/>try<sp/>making<sp/>a<sp/>game<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>small<sp/>enough<sp/>world<sp/>that<sp/>it&apos;s<sp/>fully<sp/>loaded<sp/>rather<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>streaming.<sp/>Currently<sp/>the<sp/>preferred<sp/>vertex<sp/>format<sp/>is<sp/>20<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>quad.<sp/>There<sp/>are<sp/>designs<sp/>to<sp/>allow<sp/>much<sp/>more<sp/>compact<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>slight<sp/>reduction<sp/>in<sp/>shader<sp/>features,<sp/>but<sp/>no<sp/>roadmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>actually<sp/>implementing<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>USAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>#define<sp/>the<sp/>symbol<sp/>STB_VOXEL_RENDER_IMPLEMENTATION<sp/>in<sp/>*one*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>C/C++<sp/>file<sp/>before<sp/>the<sp/>#include<sp/>of<sp/>this<sp/>file;<sp/>the<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>will<sp/>be<sp/>generated<sp/>in<sp/>that<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>you<sp/>define<sp/>the<sp/>symbols<sp/>STB_VOXEL_RENDER_STATIC,<sp/>then<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>implementation<sp/>will<sp/>be<sp/>private<sp/>to<sp/>that<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FEATURES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>you<sp/>can<sp/>choose<sp/>textured<sp/>blocks<sp/>with<sp/>the<sp/>features<sp/>below,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>or<sp/>colored<sp/>voxels<sp/>with<sp/>2^24<sp/>colors<sp/>and<sp/>no<sp/>textures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>voxels<sp/>are<sp/>mostly<sp/>just<sp/>cubes,<sp/>but<sp/>there&apos;s<sp/>support<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>half-height<sp/>cubes<sp/>and<sp/>diagonal<sp/>slopes,<sp/>half-height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>diagonals,<sp/>and<sp/>even<sp/>odder<sp/>shapes<sp/>especially<sp/>for<sp/>doing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>more-continuous<sp/>&quot;ground&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>texture<sp/>coordinates<sp/>are<sp/>projections<sp/>along<sp/>one<sp/>of<sp/>the<sp/>major</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>axes,<sp/>with<sp/>the<sp/>per-texture<sp/>scaling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>a<sp/>number<sp/>of<sp/>aspects<sp/>of<sp/>the<sp/>shader<sp/>and<sp/>the<sp/>vertex<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>are<sp/>configurable;<sp/>the<sp/>library<sp/>generally<sp/>takes<sp/>care<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>coordinating<sp/>the<sp/>vertex<sp/>format<sp/>with<sp/>the<sp/>mesh<sp/>for<sp/>you.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FEATURES<sp/>(SHADER<sp/>PERSPECTIVE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>vertices<sp/>aligned<sp/>on<sp/>integer<sp/>lattice,<sp/>z<sp/>on<sp/>multiples<sp/>of<sp/>0.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>per-vertex<sp/>&quot;lighting&quot;<sp/>or<sp/>&quot;ambient<sp/>occlusion&quot;<sp/>value<sp/>(6<sp/>bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>per-vertex<sp/>texture<sp/>crossfade<sp/>(3<sp/>bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>per-face<sp/>texture<sp/>#1<sp/>id<sp/>(8-bit<sp/>index<sp/>into<sp/>array<sp/>texture)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>per-face<sp/>texture<sp/>#2<sp/>id<sp/>(8-bit<sp/>index<sp/>into<sp/>second<sp/>array<sp/>texture)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>per-face<sp/>color<sp/>(6-bit<sp/>palette<sp/>index,<sp/>2<sp/>bits<sp/>of<sp/>per-texture<sp/>boolean<sp/>enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>per-face<sp/>5-bit<sp/>normal<sp/>for<sp/>lighting<sp/>calculations<sp/>&amp;<sp/>texture<sp/>coord<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>per-face<sp/>2-bit<sp/>texture<sp/>matrix<sp/>rotation<sp/>to<sp/>rotate<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>indexed-by-texture-id<sp/>scale<sp/>factor<sp/>(separate<sp/>for<sp/>texture<sp/>#1<sp/>and<sp/>texture<sp/>#2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>indexed-by-texture-#2-id<sp/>blend<sp/>mode<sp/>(alpha<sp/>composite<sp/>or<sp/>modulate/multiply);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>the<sp/>first<sp/>is<sp/>good<sp/>for<sp/>decals,<sp/>the<sp/>second<sp/>for<sp/>detail<sp/>textures,<sp/>&quot;light<sp/>maps&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>etc;<sp/>both<sp/>modes<sp/>are<sp/>controlled<sp/>by<sp/>texture<sp/>#2&apos;s<sp/>alpha,<sp/>scaled<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>per-vertex<sp/>texture<sp/>crossfade<sp/>and<sp/>the<sp/>per-face<sp/>color<sp/>(if<sp/>enabled<sp/>on<sp/>texture<sp/>#2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>modulate/multiply<sp/>multiplies<sp/>by<sp/>an<sp/>extra<sp/>factor<sp/>of<sp/>2.0<sp/>so<sp/>that<sp/>if<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>make<sp/>detail<sp/>maps<sp/>whose<sp/>average<sp/>brightness<sp/>is<sp/>0.5<sp/>everything<sp/>works<sp/>nicely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>ambient<sp/>lighting:<sp/>half-lambert<sp/>directional<sp/>plus<sp/>constant,<sp/>all<sp/>scaled<sp/>by<sp/>vertex<sp/>ao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>face<sp/>can<sp/>be<sp/>fullbright<sp/>(emissive),<sp/>controlled<sp/>by<sp/>per-face<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>installable<sp/>lighting,<sp/>with<sp/>default<sp/>single-point-light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>installable<sp/>fog,<sp/>with<sp/>default<sp/>hacked<sp/>smoothstep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Note<sp/>that<sp/>all<sp/>the<sp/>variations<sp/>of<sp/>lighting<sp/>selection<sp/>and<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>blending<sp/>are<sp/>run-time<sp/>conditions<sp/>in<sp/>the<sp/>shader,<sp/>so<sp/>they<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>intermixed<sp/>in<sp/>a<sp/>single<sp/>mesh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTEGRATION<sp/>ARC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>way<sp/>to<sp/>get<sp/>this<sp/>library<sp/>to<sp/>work<sp/>from<sp/>scratch<sp/>is<sp/>to<sp/>do<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Step<sp/>1.<sp/>define<sp/>STBVOX_CONFIG_MODE<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>mode<sp/>uses<sp/>only<sp/>vertex<sp/>attributes<sp/>and<sp/>uniforms,<sp/>and<sp/>is<sp/>easiest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>get<sp/>working.<sp/>It<sp/>requires<sp/>32<sp/>bytes<sp/>per<sp/>quad<sp/>and<sp/>limits<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>of<sp/>some<sp/>tables<sp/>to<sp/>avoid<sp/>hitting<sp/>uniform<sp/>limits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Step<sp/>2.<sp/>define<sp/>STBVOX_CONFIG_MODE<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>requires<sp/>using<sp/>a<sp/>texture<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>quad<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reducing<sp/>the<sp/>size<sp/>to<sp/>20<sp/>bytes<sp/>per<sp/>quad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Step<sp/>3:<sp/>define<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>causes<sp/>some<sp/>uniforms<sp/>to<sp/>be<sp/>stored<sp/>as<sp/>texture<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instead.<sp/>This<sp/>increases<sp/>the<sp/>size<sp/>of<sp/>some<sp/>of<sp/>those<sp/>tables,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>avoids<sp/>a<sp/>potential<sp/>slow<sp/>path<sp/>(gathering<sp/>non-uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>from<sp/>uniforms)<sp/>on<sp/>some<sp/>hardware.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>In<sp/>the<sp/>future<sp/>I<sp/>might<sp/>add<sp/>additional<sp/>modes<sp/>that<sp/>have<sp/>significantly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>smaller<sp/>meshes<sp/>but<sp/>reduce<sp/>features,<sp/>down<sp/>as<sp/>small<sp/>as<sp/>6<sp/>bytes<sp/>per<sp/>quad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>See<sp/>elsewhere<sp/>in<sp/>this<sp/>file<sp/>for<sp/>a<sp/>table<sp/>of<sp/>candidate<sp/>modes.<sp/>Switching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>a<sp/>mode<sp/>will<sp/>require<sp/>changing<sp/>some<sp/>of<sp/>your<sp/>mesh<sp/>creation<sp/>code,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>everything<sp/>else<sp/>should<sp/>be<sp/>seamless.<sp/>(And<sp/>I&apos;d<sp/>like<sp/>to<sp/>change<sp/>the<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>so<sp/>that<sp/>mesh<sp/>creation<sp/>is<sp/>data-driven<sp/>the<sp/>way<sp/>the<sp/>uniforms<sp/>are,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>then<sp/>you<sp/>wouldn&apos;t<sp/>even<sp/>have<sp/>to<sp/>change<sp/>anything<sp/>but<sp/>the<sp/>mode<sp/>number.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPROVEMENTS<sp/>FOR<sp/>SHIP-WORTHY<sp/>PROGRAMS<sp/>USING<sp/>THIS<sp/>LIBRARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>I<sp/>currently<sp/>tolerate<sp/>a<sp/>certain<sp/>level<sp/>of<sp/>&quot;bugginess&quot;<sp/>in<sp/>this<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>I&apos;m<sp/>referring<sp/>to<sp/>things<sp/>which<sp/>look<sp/>a<sp/>little<sp/>wrong<sp/>(as<sp/>long<sp/>as<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>don&apos;t<sp/>cause<sp/>holes<sp/>or<sp/>cracks<sp/>in<sp/>the<sp/>output<sp/>meshes),<sp/>or<sp/>things<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>do<sp/>not<sp/>produce<sp/>as<sp/>optimal<sp/>a<sp/>mesh<sp/>as<sp/>possible.<sp/>Notable<sp/>examples:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>incorrect<sp/>lighting<sp/>on<sp/>slopes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>inefficient<sp/>meshes<sp/>for<sp/>vheight<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>I<sp/>am<sp/>willing<sp/>to<sp/>do<sp/>the<sp/>work<sp/>to<sp/>improve<sp/>these<sp/>things<sp/>if<sp/>someone<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>going<sp/>to<sp/>ship<sp/>a<sp/>substantial<sp/>program<sp/>that<sp/>would<sp/>be<sp/>improved<sp/>by<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(It<sp/>need<sp/>not<sp/>be<sp/>commercial,<sp/>nor<sp/>need<sp/>it<sp/>be<sp/>a<sp/>game.)<sp/>I<sp/>just<sp/>didn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>want<sp/>to<sp/>do<sp/>the<sp/>work<sp/>up<sp/>front<sp/>if<sp/>it<sp/>might<sp/>never<sp/>be<sp/>leveraged.<sp/>So<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>submit<sp/>a<sp/>bug<sp/>report<sp/>as<sp/>usual<sp/>(github<sp/>is<sp/>preferred),<sp/>but<sp/>add<sp/>a<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>that<sp/>this<sp/>is<sp/>for<sp/>a<sp/>thing<sp/>that<sp/>is<sp/>really<sp/>going<sp/>to<sp/>ship.<sp/>(That<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>you<sp/>need<sp/>to<sp/>be<sp/>far<sp/>enough<sp/>into<sp/>the<sp/>project<sp/>that<sp/>it&apos;s<sp/>clear<sp/>you&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>committed<sp/>to<sp/>it;<sp/>not<sp/>during<sp/>early<sp/>exploratory<sp/>development.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VOXEL<sp/>MESH<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>To<sp/>understand<sp/>the<sp/>API,<sp/>make<sp/>sure<sp/>you<sp/>first<sp/>understand<sp/>the<sp/>feature<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>listed<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Because<sp/>the<sp/>vertices<sp/>are<sp/>compact,<sp/>they<sp/>have<sp/>very<sp/>limited<sp/>spatial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>precision.<sp/>Thus<sp/>a<sp/>single<sp/>mesh<sp/>can<sp/>only<sp/>contain<sp/>the<sp/>data<sp/>for<sp/>a<sp/>limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>area.<sp/>To<sp/>make<sp/>very<sp/>large<sp/>voxel<sp/>maps,<sp/>you&apos;ll<sp/>need<sp/>to<sp/>build<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>vertex<sp/>buffers.<sp/>(But<sp/>you<sp/>want<sp/>this<sp/>anyway<sp/>for<sp/>frustum<sp/>culling.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Each<sp/>generated<sp/>mesh<sp/>has<sp/>three<sp/>components:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>vertex<sp/>data<sp/>(vertex<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>face<sp/>data<sp/>(optional,<sp/>stored<sp/>in<sp/>texture<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>mesh<sp/>transform<sp/>(uniforms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Once<sp/>you&apos;ve<sp/>generated<sp/>the<sp/>mesh<sp/>with<sp/>this<sp/>library,<sp/>it&apos;s<sp/>up<sp/>to<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>to<sp/>upload<sp/>it<sp/>to<sp/>the<sp/>GPU,<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>state,<sp/>and<sp/>to<sp/>render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Concept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>The<sp/>basic<sp/>design<sp/>is<sp/>that<sp/>you<sp/>pass<sp/>in<sp/>one<sp/>or<sp/>more<sp/>3D<sp/>arrays;<sp/>each<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>is<sp/>(typically)<sp/>one-byte-per-voxel<sp/>and<sp/>contains<sp/>information<sp/>about<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>or<sp/>more<sp/>properties<sp/>of<sp/>some<sp/>particular<sp/>voxel<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Because<sp/>there<sp/>is<sp/>so<sp/>much<sp/>per-vertex<sp/>and<sp/>per-face<sp/>data<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>output,<sp/>and<sp/>each<sp/>voxel<sp/>can<sp/>have<sp/>6<sp/>faces<sp/>and<sp/>8<sp/>vertices,<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>would<sp/>require<sp/>an<sp/>very<sp/>large<sp/>data<sp/>structure<sp/>to<sp/>describe<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>possibilities,<sp/>and<sp/>this<sp/>would<sp/>cause<sp/>the<sp/>mesh-creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>process<sp/>to<sp/>be<sp/>slow.<sp/>Instead,<sp/>the<sp/>API<sp/>provides<sp/>multiple<sp/>ways</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>to<sp/>express<sp/>each<sp/>property,<sp/>some<sp/>more<sp/>compact,<sp/>others<sp/>less<sp/>so;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>each<sp/>such<sp/>way<sp/>has<sp/>some<sp/>limitations<sp/>on<sp/>what<sp/>it<sp/>can<sp/>express.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>there<sp/>are<sp/>so<sp/>many<sp/>paths<sp/>and<sp/>combinations,<sp/>not<sp/>all<sp/>of<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>have<sp/>been<sp/>tested.<sp/>Just<sp/>report<sp/>bugs<sp/>and<sp/>I&apos;ll<sp/>fix<sp/>&apos;em.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>See<sp/>the<sp/>API<sp/>documentation<sp/>in<sp/>the<sp/>header-file<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Features<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Porting<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bugfixes<sp/>&amp;<sp/>Warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Sean<sp/>Barrett<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:r-leyh<sp/><sp/><sp/>Jesus<sp/>Fernandez</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Miguel<sp/>Lechon<sp/><sp/><sp/>github:Arbeiterunfallversicherungsgesetz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>Frase<sp/><sp/><sp/><sp/>James<sp/>Hofmann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stephen<sp/>Olsen<sp/><sp/><sp/>github:guitarfreak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VERSION<sp/>HISTORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.89<sp/><sp/><sp/>(2020-02-02)<sp/><sp/>bugfix<sp/>in<sp/>sample<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.88<sp/><sp/><sp/>(2019-03-04)<sp/><sp/>fix<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.87<sp/><sp/><sp/>(2019-02-25)<sp/><sp/>fix<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.86<sp/><sp/><sp/>(2019-02-07)<sp/><sp/>fix<sp/>typos<sp/>in<sp/>comments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.85<sp/><sp/><sp/>(2017-03-03)<sp/><sp/>add<sp/>block_selector<sp/>(by<sp/>guitarfreak)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.84<sp/><sp/><sp/>(2016-04-02)<sp/><sp/>fix<sp/>GLSL<sp/>syntax<sp/>error<sp/>on<sp/>glModelView<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.83<sp/><sp/><sp/>(2015-09-13)<sp/><sp/>remove<sp/>non-constant<sp/>struct<sp/>initializers<sp/>to<sp/>support<sp/>more<sp/>compilers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.82<sp/><sp/><sp/>(2015-08-01)<sp/><sp/>added<sp/>input.packed_compact<sp/>to<sp/>store<sp/>rot,<sp/>vheight<sp/>&amp;<sp/>texlerp<sp/>efficiently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>broken<sp/>tex_overlay2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.81<sp/><sp/><sp/>(2015-05-28)<sp/><sp/>fix<sp/>broken<sp/>STBVOX_CONFIG_OPTIMIZED_VHEIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.80<sp/><sp/><sp/>(2015-04-11)<sp/><sp/>fix<sp/>broken<sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING<sp/>refactoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change<sp/>STBVOX_MAKE_LIGHTING<sp/>to<sp/>STBVOX_MAKE_LIGHTING_EXT<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>header<sp/>defs<sp/>don&apos;t<sp/>need<sp/>to<sp/>see<sp/>config<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>STBVOX_CONFIG_VHEIGHT_IN_LIGHTING<sp/>and<sp/>other<sp/>vheight<sp/>fixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>added<sp/>documentation<sp/>for<sp/>vheight<sp/>(&quot;weird<sp/>slopes&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.79<sp/><sp/><sp/>(2015-04-01)<sp/><sp/>fix<sp/>the<sp/>missing<sp/>types<sp/>from<sp/>0.78;<sp/>fix<sp/>string<sp/>constants<sp/>being<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.78<sp/><sp/><sp/>(2015-04-02)<sp/><sp/>bad<sp/>&quot;#else&quot;,<sp/>compile<sp/>as<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.77<sp/><sp/><sp/>(2015-04-01)<sp/><sp/>documentation<sp/>tweaks,<sp/>rename<sp/>config<sp/>var<sp/>to<sp/>STB_VOXEL_RENDER_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.76<sp/><sp/><sp/>(2015-04-01)<sp/><sp/>typos,<sp/>signed/unsigned<sp/>shader<sp/>issue,<sp/>more<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.75<sp/><sp/><sp/>(2015-04-01)<sp/><sp/>initial<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HISTORICAL<sp/>FOUNDATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>stb_voxel_render<sp/><sp/><sp/>20-byte<sp/>quads<sp/><sp/><sp/>2015/01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>zmc<sp/>engine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32-byte<sp/>quads<sp/><sp/><sp/>2013/12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>zmc<sp/>engine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>96-byte<sp/>quads<sp/><sp/><sp/>2011/10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>See<sp/>end<sp/>of<sp/>file<sp/>for<sp/>license<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_STB_VOXEL_RENDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_STB_VOXEL_RENDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref><sp/><ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_VOXEL_RENDER_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVXDEC<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVXDEC<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONFIGURATION<sp/>MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>#define<sp/>STBVOX_CONFIG_MODE<sp/>&lt;integer&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>REQUIRED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Configures<sp/>the<sp/>overall<sp/>behavior<sp/>of<sp/>stb_voxel_render.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>can<sp/>affect<sp/>the<sp/>shaders,<sp/>the<sp/>uniform<sp/>info,<sp/>and<sp/>other<sp/>things.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(If<sp/>you<sp/>need<sp/>more<sp/>than<sp/>one<sp/>mode<sp/>in<sp/>the<sp/>same<sp/>app,<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>use<sp/>STB_VOXEL_RENDER_STATIC<sp/>to<sp/>create<sp/>multiple<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>in<sp/>separate<sp/>files,<sp/>and<sp/>then<sp/>wrap<sp/>them.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Meaning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textured<sp/>blocks,<sp/>32-byte<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textured<sp/>blocks,<sp/>20-byte<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Untextured<sp/>blocks,<sp/>32-byte<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>21<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Untextured<sp/>blocks,<sp/>20-byte<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>#define<sp/>STBVOX_CONFIG_PRECISION_Z<sp/><sp/>&lt;integer&gt;<sp/><sp/><sp/>//<sp/>OPTIONAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>of<sp/>fractional<sp/>position<sp/>for<sp/>Z.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Only<sp/>0<sp/>or<sp/>1<sp/>are<sp/>valid.<sp/>1<sp/>is<sp/>the<sp/>default.<sp/>If<sp/>0,<sp/>then<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>single<sp/>mesh<sp/>has<sp/>twice<sp/>the<sp/>legal<sp/>Z<sp/>range;<sp/>e.g.<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>modes<sp/>0,1,20,21,<sp/>Z<sp/>in<sp/>the<sp/>mesh<sp/>can<sp/>extend<sp/>to<sp/>511<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>of<sp/>255.<sp/>However,<sp/>half-height<sp/>blocks<sp/>cannot<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>of<sp/>the<sp/>following<sp/>are<sp/>just<sp/>#ifdef<sp/>tested<sp/>so<sp/>need<sp/>no<sp/>values,<sp/>and<sp/>are<sp/>optional.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_BLOCKTYPE_SHORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>unsigned<sp/>16-bit<sp/>values<sp/>for<sp/>&apos;blocktype&apos;<sp/>in<sp/>the<sp/>input<sp/>instead<sp/>of<sp/>8-bit<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_OPENGL_MODELVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>the<sp/>gl_ModelView<sp/>matrix<sp/>rather<sp/>than<sp/>the<sp/>explicit<sp/>uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_HLSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOT<sp/>IMPLEMENTED!<sp/>Define<sp/>HLSL<sp/>shaders<sp/>instead<sp/>of<sp/>GLSL<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stores<sp/>many<sp/>of<sp/>the<sp/>uniform<sp/>arrays<sp/>in<sp/>texture<sp/>buffers<sp/>instead,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>they<sp/>can<sp/>be<sp/>larger<sp/>and<sp/>may<sp/>be<sp/>more<sp/>efficient<sp/>on<sp/>some<sp/>hardware.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_LIGHTING_SIMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Creates<sp/>a<sp/>simple<sp/>lighting<sp/>engine<sp/>with<sp/>a<sp/>single<sp/>point<sp/>light<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>addition<sp/>to<sp/>the<sp/>default<sp/>half-lambert<sp/>ambient<sp/>light.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Declares<sp/>a<sp/>lighting<sp/>function<sp/>hook;<sp/>you<sp/>must<sp/>append<sp/>a<sp/>lighting<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>shader<sp/>before<sp/>compiling<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>compute_lighting(vec3<sp/>pos,<sp/>vec3<sp/>norm,<sp/>vec3<sp/>albedo,<sp/>vec3<sp/>ambient);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;ambient&apos;<sp/>is<sp/>the<sp/>half-lambert<sp/>ambient<sp/>light<sp/>with<sp/>vertex<sp/>ambient-occlusion<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_FOG_SMOOTHSTEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>a<sp/>simple<sp/>unrealistic<sp/>fog<sp/>system<sp/>designed<sp/>to<sp/>maximize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unobscured<sp/>view<sp/>distance<sp/>while<sp/>not<sp/>looking<sp/>too<sp/>weird<sp/>when<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emerge<sp/>from<sp/>the<sp/>fog.<sp/>Configured<sp/>using<sp/>an<sp/>extra<sp/>array<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>STBVOX_UNIFORM_ambient<sp/>uniform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_FOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>a<sp/>fog<sp/>function<sp/>hook;<sp/>you<sp/>must<sp/>append<sp/>a<sp/>fog<sp/>function<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>shader<sp/>before<sp/>compiling<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>compute_fog(vec3<sp/>color,<sp/>vec3<sp/>relative_pos,<sp/>float<sp/>fragment_alpha);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;color&quot;<sp/>is<sp/>the<sp/>incoming<sp/>pre-fogged<sp/>color,<sp/>fragment_alpha<sp/>is<sp/>the<sp/>alpha<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>relative_pos<sp/>is<sp/>the<sp/>vector<sp/>from<sp/>the<sp/>point<sp/>to<sp/>the<sp/>camera<sp/>in<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>disables<sp/>all<sp/>processing<sp/>of<sp/>texture<sp/>2<sp/>in<sp/>the<sp/>shader<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>you<sp/>don&apos;t<sp/>use<sp/>it.<sp/>Eventually<sp/>this<sp/>could<sp/>be<sp/>replaced<sp/>with<sp/>a<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>omits<sp/>the<sp/>unused<sp/>data<sp/>entirely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_TEX1_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_TEX2_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>you<sp/>want<sp/>to<sp/>edge<sp/>clamp<sp/>the<sp/>textures,<sp/>instead<sp/>of<sp/>letting<sp/>them<sp/>wrap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>this<sp/>flag.<sp/>By<sp/>default<sp/>stb_voxel_render<sp/>relies<sp/>on<sp/>texture<sp/>wrapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>simplify<sp/>texture<sp/>coordinate<sp/>generation.<sp/>This<sp/>flag<sp/>forces<sp/>it<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>correctly,<sp/>although<sp/>there<sp/>can<sp/>still<sp/>be<sp/>minor<sp/>artifacts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Changes<sp/>the<sp/>meaning<sp/>of<sp/>the<sp/>&apos;lighting&apos;<sp/>mesher<sp/>input<sp/>variable<sp/>to<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>the<sp/>rotation;<sp/>see<sp/>later<sp/>discussion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_VHEIGHT_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Changes<sp/>the<sp/>meaning<sp/>of<sp/>the<sp/>&apos;lighting&apos;<sp/>mesher<sp/>input<sp/>variable<sp/>to<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>the<sp/>vheight;<sp/>see<sp/>later<sp/>discussion.<sp/>Cannot<sp/>use<sp/>both<sp/>this<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>previous<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_PREMULTIPLIED_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adjusts<sp/>the<sp/>shader<sp/>calculations<sp/>on<sp/>the<sp/>assumption<sp/>that<sp/>tex1.rgba,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex2.rgba,<sp/>and<sp/>color.rgba<sp/>all<sp/>use<sp/>premultiplied<sp/>values,<sp/>and<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>output<sp/>of<sp/>the<sp/>fragment<sp/>shader<sp/>should<sp/>be<sp/>premultiplied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>STBVOX_CONFIG_UNPREMULTIPLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Only<sp/>meaningful<sp/>if<sp/>STBVOX_CONFIG_PREMULTIPLIED_ALPHA<sp/>is<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Changes<sp/>the<sp/>behavior<sp/>described<sp/>above<sp/>so<sp/>that<sp/>the<sp/>inputs<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>still<sp/>premultiplied<sp/>alpha,<sp/>but<sp/>the<sp/>output<sp/>of<sp/>the<sp/>fragment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader<sp/>is<sp/>not<sp/>premultiplied<sp/>alpha.<sp/>This<sp/>is<sp/>needed<sp/>when<sp/>allowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-unit<sp/>alpha<sp/>values<sp/>but<sp/>not<sp/>doing<sp/>alpha-blending<sp/>(for<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>alpha<sp/>testing).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MESHING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>mesh<sp/>represents<sp/>a<sp/>(typically)<sp/>small<sp/>chunk<sp/>of<sp/>a<sp/>larger<sp/>world.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Meshes<sp/>encode<sp/>coordinates<sp/>using<sp/>small<sp/>integers,<sp/>so<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coordinates<sp/>must<sp/>be<sp/>relative<sp/>to<sp/>some<sp/>base<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>of<sp/>the<sp/>coordinates<sp/>in<sp/>the<sp/>functions<sp/>below<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>relative<sp/>coordinates<sp/>unless<sp/>explicitly<sp/>stated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Input<sp/>to<sp/>the<sp/>meshing<sp/>step<sp/>is<sp/>documented<sp/>further<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_init_mesh_maker(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>function<sp/>to<sp/>initialize<sp/>a<sp/>mesh-maker<sp/>context<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>build<sp/>meshes.<sp/>You<sp/>should<sp/>have<sp/>one<sp/>context<sp/>per<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that&apos;s<sp/>building<sp/>meshes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_buffer(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>to<sp/>set<sp/>the<sp/>buffer<sp/>into<sp/>which<sp/>stbvox<sp/>will<sp/>write<sp/>the<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>creates.<sp/>It<sp/>can<sp/>build<sp/>more<sp/>than<sp/>one<sp/>mesh<sp/>in<sp/>parallel<sp/>(distinguished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>&apos;mesh&apos;<sp/>parameter),<sp/>and<sp/>each<sp/>mesh<sp/>can<sp/>be<sp/>made<sp/>up<sp/>of<sp/>more<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>buffer<sp/>(distinguished<sp/>by<sp/>the<sp/>&apos;slot&apos;<sp/>parameter).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>meshes<sp/>are<sp/>under<sp/>your<sp/>control;<sp/>use<sp/>the<sp/>&apos;selector&apos;<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>variable<sp/>to<sp/>choose<sp/>which<sp/>mesh<sp/>each<sp/>voxel&apos;s<sp/>vertices<sp/>are<sp/>written<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>you<sp/>can<sp/>use<sp/>this<sp/>to<sp/>generate<sp/>separate<sp/>meshes<sp/>for<sp/>opaque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>transparent<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>query<sp/>the<sp/>number<sp/>of<sp/>slots<sp/>by<sp/>calling<sp/>stbvox_get_buffer_count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>described<sp/>below.<sp/>The<sp/>meaning<sp/>of<sp/>the<sp/>buffer<sp/>for<sp/>each<sp/>slot<sp/>depends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>STBVOX_CONFIG_MODE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>In<sp/>mode<sp/>0<sp/>&amp;<sp/>mode<sp/>20,<sp/>there<sp/>is<sp/>only<sp/>one<sp/>slot.<sp/>The<sp/>mesh<sp/>data<sp/>for<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>slot<sp/>is<sp/>two<sp/>interleaved<sp/>vertex<sp/>attributes:<sp/>attr_vertex,<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>32-bit<sp/>uint,<sp/>and<sp/>attr_face,<sp/>a<sp/>single<sp/>32-bit<sp/>uint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>In<sp/>mode<sp/>1<sp/>&amp;<sp/>mode<sp/>21,<sp/>there<sp/>are<sp/>two<sp/>slots.<sp/>The<sp/>first<sp/>buffer<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>be<sp/>four<sp/>times<sp/>as<sp/>large<sp/>as<sp/>the<sp/>second<sp/>buffer.<sp/>The<sp/>first<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>contains<sp/>a<sp/>single<sp/>vertex<sp/>attribute:<sp/>&apos;attr_vertex&apos;,<sp/>a<sp/>single<sp/>32-bit<sp/>uint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>second<sp/>buffer<sp/>contains<sp/>texture<sp/>buffer<sp/>data<sp/>(an<sp/>array<sp/>of<sp/>32-bit<sp/>uints)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>that<sp/>will<sp/>be<sp/>accessed<sp/>through<sp/>the<sp/>sampler<sp/>identified<sp/>by<sp/>STBVOX_UNIFORM_face_data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_buffer_count(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>buffers<sp/>needed<sp/>per<sp/>mesh<sp/>as<sp/>described<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_buffer_size_per_quad(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>how<sp/>much<sp/>of<sp/>a<sp/>given<sp/>buffer<sp/>will<sp/>get<sp/>used<sp/>per<sp/>quad.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allows<sp/>you<sp/>to<sp/>choose<sp/>correct<sp/>relative<sp/>sizes<sp/>for<sp/>each<sp/>buffer,<sp/>although</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>values<sp/>are<sp/>fixed<sp/>based<sp/>on<sp/>the<sp/>configuration<sp/>you&apos;ve<sp/>selected<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compile<sp/>time,<sp/>and<sp/>the<sp/>details<sp/>are<sp/>described<sp/>in<sp/>stbvox_set_buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_default_mesh(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Selects<sp/>which<sp/>mesh<sp/>the<sp/>mesher<sp/>will<sp/>output<sp/>to<sp/>(see<sp/>previous<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>input<sp/>doesn&apos;t<sp/>specify<sp/>a<sp/>per-voxel<sp/>selector.<sp/>(I<sp/>doubt<sp/>this<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>useful,<sp/>but<sp/>it&apos;s<sp/>here<sp/>just<sp/>in<sp/>case.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">STBVXDEC<sp/><ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref><sp/>*stbvox_get_input_description(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>call<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>stbvox_input_description<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>stbvox_mesh_maker<sp/>(which<sp/>you<sp/>should<sp/>otherwise<sp/>treat<sp/>as<sp/>opaque).<sp/>You</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>zero<sp/>this<sp/>structure,<sp/>then<sp/>fill<sp/>out<sp/>the<sp/>relevant<sp/>pointers<sp/>to<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>describing<sp/>your<sp/>voxel<sp/>object/world.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>further<sp/>documentation<sp/>at<sp/>the<sp/>description<sp/>of<sp/>stbvox_input_description<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_input_stride(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_stride_in_elements,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_stride_in_elements);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>sets<sp/>the<sp/>stride<sp/>between<sp/>successive<sp/>elements<sp/>of<sp/>the<sp/>3D<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>stbvox_input_description.<sp/>Z<sp/>values<sp/>are<sp/>always<sp/>stored<sp/>consecutively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(The<sp/>preferred<sp/>coordinate<sp/>system<sp/>for<sp/>stbvox<sp/>is<sp/>X<sp/>right,<sp/>Y<sp/>forwards,<sp/>Z<sp/>up.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_input_range(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z1);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>sets<sp/>the<sp/>range<sp/>of<sp/>values<sp/>in<sp/>the<sp/>3D<sp/>array<sp/>for<sp/>the<sp/>voxels<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>mesh<sp/>generator<sp/>will<sp/>convert.<sp/>The<sp/>lower<sp/>values<sp/>are<sp/>inclusive,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>higher<sp/>values<sp/>are<sp/>exclusive,<sp/>so<sp/>(0,0,0)<sp/>to<sp/>(16,16,16)<sp/>generates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mesh<sp/>data<sp/>associated<sp/>with<sp/>voxels<sp/>up<sp/>to<sp/>(15,15,15)<sp/>but<sp/>no<sp/>higher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>mesh<sp/>generate<sp/>generates<sp/>faces<sp/>at<sp/>the<sp/>boundary<sp/>between<sp/>open<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>solid<sp/>space<sp/>but<sp/>associates<sp/>them<sp/>with<sp/>the<sp/>solid<sp/>space,<sp/>so<sp/>if<sp/>(15,0,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>open<sp/>and<sp/>(16,0,0)<sp/>is<sp/>solid,<sp/>then<sp/>the<sp/>mesh<sp/>will<sp/>contain<sp/>the<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>them<sp/>if<sp/>x0<sp/>&lt;=<sp/>16<sp/>and<sp/>x1<sp/>&gt;<sp/>16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>mesh<sp/>generator<sp/>will<sp/>access<sp/>array<sp/>elements<sp/>1<sp/>beyond<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limits<sp/>set<sp/>in<sp/>these<sp/>parameters.<sp/>For<sp/>example,<sp/>if<sp/>you<sp/>set<sp/>the<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>(0,0,0)<sp/>and<sp/>(16,16,16),<sp/>then<sp/>the<sp/>generator<sp/>will<sp/>access<sp/>all<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>voxels<sp/>between<sp/>(-1,-1,-1)<sp/>and<sp/>(16,16,16),<sp/>including<sp/>(16,16,16).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>have<sp/>to<sp/>do<sp/>pointer<sp/>arithmetic<sp/>to<sp/>make<sp/>it<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>caveview<sp/>processes<sp/>mesh<sp/>chunks<sp/>that<sp/>are<sp/>32x32x16,<sp/>but<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/>does<sp/>this<sp/>using<sp/>input<sp/>buffers<sp/>that<sp/>are<sp/>34x34x18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>lower<sp/>limits<sp/>are<sp/>x0<sp/>&gt;=<sp/>0,<sp/>y0<sp/>&gt;=<sp/>0,<sp/>and<sp/>z0<sp/>&gt;=<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>upper<sp/>limits<sp/>are<sp/>mode<sp/>dependent,<sp/>but<sp/>all<sp/>the<sp/>current<sp/>methods<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limited<sp/>to<sp/>x1<sp/>&lt;<sp/>127,<sp/>y1<sp/>&lt;<sp/>127,<sp/>z1<sp/>&lt;<sp/>255.<sp/>Note<sp/>that<sp/>these<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>powers<sp/>of<sp/>two;<sp/>if<sp/>you<sp/>want<sp/>to<sp/>use<sp/>power-of-two<sp/>chunks<sp/>(to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>efficient<sp/>to<sp/>decide<sp/>which<sp/>chunk<sp/>a<sp/>coordinate<sp/>falls<sp/>in),<sp/>you&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limited<sp/>to<sp/>at<sp/>most<sp/>x1=64,<sp/>y1=64,<sp/>z1=128.<sp/>For<sp/>classic<sp/>Minecraft-style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>worlds<sp/>with<sp/>limited<sp/>vertical<sp/>extent,<sp/>I<sp/>recommend<sp/>using<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>chunk<sp/>for<sp/>the<sp/>entire<sp/>height,<sp/>which<sp/>limits<sp/>the<sp/>height<sp/>to<sp/>255<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(one<sp/>less<sp/>than<sp/>Minecraft),<sp/>and<sp/>only<sp/>chunk<sp/>the<sp/>map<sp/>in<sp/>X<sp/>&amp;<sp/>Y.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_make_mesh(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>function<sp/>to<sp/>create<sp/>mesh<sp/>data<sp/>for<sp/>the<sp/>currently<sp/>configured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>of<sp/>input<sp/>data.<sp/>This<sp/>appends<sp/>to<sp/>the<sp/>currently<sp/>configured<sp/>mesh<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffer.<sp/>Returns<sp/>1<sp/>on<sp/>success.<sp/>If<sp/>there<sp/>is<sp/>not<sp/>enough<sp/>room<sp/>in<sp/>the<sp/>buffer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>outputs<sp/>as<sp/>much<sp/>as<sp/>it<sp/>can,<sp/>and<sp/>returns<sp/>0;<sp/>you<sp/>need<sp/>to<sp/>switch<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffers<sp/>(either<sp/>by<sp/>calling<sp/>stbvox_set_buffer<sp/>to<sp/>set<sp/>new<sp/>buffers,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>copying<sp/>the<sp/>data<sp/>out<sp/>and<sp/>calling<sp/>stbvox_reset_buffers),<sp/>and<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/>call<sp/>this<sp/>function<sp/>again<sp/>without<sp/>changing<sp/>any<sp/>of<sp/>the<sp/>input<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>function<sp/>appends;<sp/>you<sp/>can<sp/>call<sp/>it<sp/>multiple<sp/>times<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>build<sp/>a<sp/>single<sp/>mesh.<sp/>For<sp/>example,<sp/>caveview<sp/>uses<sp/>chunks<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>32x32x255,<sp/>but<sp/>builds<sp/>the<sp/>mesh<sp/>for<sp/>it<sp/>by<sp/>processing<sp/>32x32x16<sp/>at<sp/>atime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(this<sp/>is<sp/>faster<sp/>as<sp/>it<sp/>is<sp/>reuses<sp/>the<sp/>same<sp/>34x34x18<sp/>input<sp/>buffers<sp/>rather</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>needing<sp/>34x34x257<sp/>input<sp/>buffers).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Once<sp/>you&apos;re<sp/>done<sp/>creating<sp/>a<sp/>mesh<sp/>into<sp/>a<sp/>given<sp/>buffer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>consider<sp/>the<sp/>following<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_quad_count(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>quads<sp/>in<sp/>the<sp/>mesh<sp/>currently<sp/>generated<sp/>by<sp/>mm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>sum<sp/>of<sp/>all<sp/>consecutive<sp/>stbvox_make_mesh<sp/>runs<sp/>appending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>same<sp/>buffer.<sp/>&apos;mesh&apos;<sp/>distinguishes<sp/>between<sp/>the<sp/>multiple<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>meshes<sp/>available<sp/>via<sp/>&apos;selector&apos;<sp/>or<sp/>stbvox_set_default_mesh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Typically<sp/>you<sp/>use<sp/>this<sp/>function<sp/>when<sp/>you&apos;re<sp/>done<sp/>building<sp/>the<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>want<sp/>to<sp/>record<sp/>how<sp/>to<sp/>draw<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>there<sp/>are<sp/>no<sp/>index<sp/>buffers;<sp/>the<sp/>data<sp/>stored<sp/>in<sp/>the<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>drawn<sp/>as<sp/>quads<sp/>(e.g.<sp/>with<sp/>GL_QUAD);<sp/>if<sp/>your<sp/>API<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>support<sp/>quads,<sp/>you<sp/>can<sp/>create<sp/>a<sp/>single<sp/>index<sp/>buffer<sp/>large<sp/>enough<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>draw<sp/>your<sp/>largest<sp/>vertex<sp/>buffer,<sp/>and<sp/>reuse<sp/>it<sp/>for<sp/>every<sp/>rendering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Note<sp/>that<sp/>if<sp/>you<sp/>use<sp/>32-bit<sp/>indices,<sp/>you&apos;ll<sp/>use<sp/>24<sp/>bytes<sp/>of<sp/>bandwidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>quad,<sp/>more<sp/>than<sp/>the<sp/>20<sp/>bytes<sp/>for<sp/>the<sp/>vertex/face<sp/>mesh<sp/>data.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_mesh_coordinates(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>global<sp/>coordinates<sp/>for<sp/>this<sp/>chunk,<sp/>such<sp/>that<sp/>(0,0,0)<sp/>relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coordinates<sp/>will<sp/>be<sp/>at<sp/>(x,y,z)<sp/>in<sp/>global<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_get_bounds(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bounds[2][3]);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>bounds<sp/>for<sp/>the<sp/>mesh<sp/>in<sp/>global<sp/>coordinates.<sp/>Use<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>e.g.<sp/>frustum<sp/>culling<sp/>the<sp/>mesh.<sp/>@BUG:<sp/>this<sp/>just<sp/>uses<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>from<sp/>stbvox_set_input_range(),<sp/>so<sp/>if<sp/>you<sp/>build<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appending<sp/>multiple<sp/>values,<sp/>this<sp/>will<sp/>be<sp/>wrong,<sp/>and<sp/>you<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>stbvox_set_input_range()<sp/>to<sp/>the<sp/>full<sp/>size.<sp/>Someday<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>switch<sp/>to<sp/>tracking<sp/>the<sp/>actual<sp/>bounds<sp/>of<sp/>the<sp/>*mesh*,<sp/>though.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_get_transform(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>transform[3][3]);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>&apos;transform&apos;<sp/>data<sp/>for<sp/>the<sp/>shader<sp/>uniforms.<sp/>It<sp/>is<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>job<sp/>to<sp/>set<sp/>this<sp/>to<sp/>the<sp/>shader<sp/>before<sp/>drawing<sp/>the<sp/>mesh.<sp/>It<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>uniform<sp/>that<sp/>needs<sp/>to<sp/>change<sp/>per-mesh.<sp/>Note<sp/>that<sp/>it<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>3x3<sp/>matrix,<sp/>but<sp/>rather<sp/>a<sp/>scale<sp/>to<sp/>decode<sp/>fixed<sp/>point<sp/>numbers<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>floats,<sp/>a<sp/>translate<sp/>from<sp/>relative<sp/>to<sp/>global<sp/>space,<sp/>and<sp/>a<sp/>special</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>translation<sp/>for<sp/>texture<sp/>coordinate<sp/>generation<sp/>that<sp/>avoids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>floating-point<sp/>precision<sp/>issues.<sp/>@TODO:<sp/>currently<sp/>we<sp/>add<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>global<sp/>translation<sp/>to<sp/>the<sp/>vertex,<sp/>than<sp/>multiply<sp/>by<sp/>modelview,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>this<sp/>means<sp/>if<sp/>camera<sp/>location<sp/>and<sp/>vertex<sp/>are<sp/>far<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>origin,<sp/>we<sp/>lose<sp/>precision.<sp/>Need<sp/>to<sp/>make<sp/>a<sp/>special<sp/>modelview<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>translation<sp/>(or<sp/>some<sp/>of<sp/>it)<sp/>factored<sp/>out<sp/>to<sp/>avoid<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_reset_buffers(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>function<sp/>if<sp/>you&apos;re<sp/>done<sp/>with<sp/>the<sp/>current<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>want<sp/>to<sp/>reuse<sp/>it<sp/>(e.g.<sp/>you&apos;re<sp/>done<sp/>appending<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbvox_make_mesh<sp/>and<sp/>you&apos;ve<sp/>copied<sp/>the<sp/>data<sp/>out<sp/>to<sp/>your<sp/>graphics<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>can<sp/>reuse<sp/>the<sp/>buffer).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RENDERING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_get_vertex_shader(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>(currently<sp/>GLSL-only)<sp/>vertex<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_get_fragment_shader(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>(currently<sp/>GLSL-only)<sp/>fragment<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>override<sp/>the<sp/>lighting<sp/>and<sp/>fogging<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>appending<sp/>data<sp/>to<sp/>the<sp/>end<sp/>of<sp/>these;<sp/>see<sp/>the<sp/>#define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documentation<sp/>for<sp/>more<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_get_fragment_shader_alpha_only(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>slightly<sp/>cheaper<sp/>fragment<sp/>shader<sp/>that<sp/>computes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>alpha<sp/>but<sp/>not<sp/>color.<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>e.g.<sp/>a<sp/>depth-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pass<sp/>when<sp/>using<sp/>alpha<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref><sp/><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_uniform_info(<ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref><sp/>*<ref refid="structinfo" kindref="compound">info</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uniform);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>information<sp/>about<sp/>a<sp/>uniform<sp/>necessary<sp/>for<sp/>you<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>each<sp/>uniform<sp/>with<sp/>a<sp/>minimal<sp/>amount<sp/>of<sp/>explicit<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>sample<sp/>code<sp/>after<sp/>the<sp/>structure<sp/>definition<sp/>for<sp/>stbvox_uniform_info,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>further<sp/>down<sp/>in<sp/>this<sp/>header<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;uniform&quot;<sp/>is<sp/>from<sp/>the<sp/>list<sp/>immediately<sp/>following.<sp/>For<sp/>many</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>these,<sp/>default<sp/>values<sp/>are<sp/>provided<sp/>which<sp/>you<sp/>can<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Most<sp/>values<sp/>are<sp/>shared<sp/>for<sp/>most<sp/>draw<sp/>calls;<sp/>e.g.<sp/>for<sp/>stateful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/>APIs<sp/>you<sp/>can<sp/>set<sp/>most<sp/>of<sp/>the<sp/>state<sp/>only<sp/>once.<sp/>Only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STBVOX_UNIFORM_transform<sp/>needs<sp/>to<sp/>change<sp/>per<sp/>draw<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STBVOX_UNIFORM_texscale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>64-<sp/>or<sp/>128-long<sp/>vec4<sp/>array.<sp/>(128<sp/>only<sp/>if<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x:<sp/>scale<sp/>factor<sp/>to<sp/>apply<sp/>to<sp/>texture<sp/>#1.<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>two.<sp/>1.0<sp/>means<sp/>&apos;face-sized&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>y:<sp/>scale<sp/>factor<sp/>to<sp/>apply<sp/>to<sp/>texture<sp/>#2.<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>two.<sp/>1.0<sp/>means<sp/>&apos;face-sized&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>z:<sp/>blend<sp/>mode<sp/>indexed<sp/>by<sp/>texture<sp/>#2.<sp/>0.0<sp/>is<sp/>alpha<sp/>compositing;<sp/>1.0<sp/>is<sp/>multiplication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>w:<sp/>unused<sp/>currently.<sp/>@TODO<sp/>use<sp/>to<sp/>support<sp/>texture<sp/>animation?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Texscale<sp/>is<sp/>indexed<sp/>by<sp/>the<sp/>bottom<sp/>6<sp/>or<sp/>7<sp/>bits<sp/>of<sp/>the<sp/>texture<sp/>id;<sp/>thus<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>example<sp/>the<sp/>texture<sp/>at<sp/>index<sp/>0<sp/>in<sp/>the<sp/>array<sp/>and<sp/>the<sp/>texture<sp/>in<sp/>index<sp/>128<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>array<sp/>must<sp/>be<sp/>scaled<sp/>the<sp/>same.<sp/>This<sp/>means<sp/>that<sp/>if<sp/>you<sp/>only<sp/>have<sp/>64<sp/>or<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>unique<sp/>textures,<sp/>they<sp/>all<sp/>get<sp/>distinct<sp/>values<sp/>anyway;<sp/>otherwise<sp/>you<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>to<sp/>group<sp/>them<sp/>in<sp/>pairs<sp/>or<sp/>sets<sp/>of<sp/>four.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STBVOX_UNIFORM_ambient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>4-long<sp/>vec4<sp/>array:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ambient[0].xyz<sp/><sp/><sp/>-<sp/>negative<sp/>of<sp/>direction<sp/>of<sp/>a<sp/>directional<sp/>light<sp/>for<sp/>half-lambert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ambient[1].rgb<sp/><sp/><sp/>-<sp/>color<sp/>of<sp/>light<sp/>scaled<sp/>by<sp/>NdotL<sp/>(can<sp/>be<sp/>negative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ambient[2].rgb<sp/><sp/><sp/>-<sp/>constant<sp/>light<sp/>added<sp/>to<sp/>above<sp/>calculation;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effectively<sp/>light<sp/>ranges<sp/>from<sp/>ambient[2]-ambient[1]<sp/>to<sp/>ambient[2]+ambient[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ambient[3].rgb<sp/><sp/><sp/>-<sp/>fog<sp/>color<sp/>for<sp/>STBVOX_CONFIG_FOG_SMOOTHSTEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ambient[3].a<sp/><sp/><sp/><sp/><sp/>-<sp/>reciprocal<sp/>of<sp/>squared<sp/>distance<sp/>of<sp/>farthest<sp/>fog<sp/>point<sp/>(viewing<sp/>distance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>+-----<sp/>has<sp/>a<sp/>default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>|<sp/><sp/>+--<sp/>you<sp/>should<sp/>always<sp/>use<sp/>the<sp/>default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>V<sp/><sp/>V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_face_data,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>sampler<sp/>with<sp/>the<sp/>face<sp/>texture<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_transform,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>transform<sp/>data<sp/>from<sp/>stbvox_get_transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_tex_array,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>array<sp/>of<sp/>two<sp/>texture<sp/>samplers<sp/>containing<sp/>the<sp/>two<sp/>texture<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_texscale,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>table<sp/>of<sp/>texture<sp/>properties,<sp/>see<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_color_table,<sp/></highlight><highlight class="comment">//<sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/><sp/>64<sp/>vec4<sp/>RGBA<sp/>values;<sp/>a<sp/>default<sp/>palette<sp/>is<sp/>provided;<sp/>if<sp/>A<sp/>&gt;<sp/>1.0,<sp/>fullbright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_normals,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Y<sp/><sp/>Y<sp/><sp/><sp/>table<sp/>of<sp/>normals,<sp/>internal-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_texgen,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Y<sp/><sp/>Y<sp/><sp/><sp/>table<sp/>of<sp/>texgen<sp/>vectors,<sp/>internal-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_ambient,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/>lighting<sp/>&amp;<sp/>fog<sp/>info,<sp/>see<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_camera_pos,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/><sp/>camera<sp/>position<sp/>in<sp/>global<sp/>voxel<sp/>space<sp/>(for<sp/>lighting<sp/>&amp;<sp/>fog)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_count,</highlight></codeline>
<codeline lineno="581"><highlight class="normal">};</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_TYPE_none,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_TYPE_sampler,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_TYPE_vec2,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_TYPE_vec3,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/>STBVOX_UNIFORM_TYPE_vec4,</highlight></codeline>
<codeline lineno="590"><highlight class="normal">};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="structstbvox__uniform__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref></highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>type<sp/>of<sp/>uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_per_element;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>size<sp/>of<sp/>each<sp/>uniform<sp/>array<sp/>element<sp/>(e.g.<sp/>vec3<sp/>=<sp/>12<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array_length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>the<sp/>uniform<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>in<sp/>the<sp/>shader<sp/>@TODO<sp/>use<sp/>numeric<sp/>binding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*default_value;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>NULL,<sp/>you<sp/>can<sp/>use<sp/>this<sp/>as<sp/>the<sp/>uniform<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_tex_buffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>true,<sp/>then<sp/>the<sp/>uniform<sp/>is<sp/>a<sp/>sampler<sp/>but<sp/>the<sp/>data<sp/>can<sp/>come<sp/>from<sp/>default_value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">};</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uniform<sp/>sample<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Run<sp/>this<sp/>once<sp/>per<sp/>frame<sp/>before<sp/>drawing<sp/>all<sp/>the<sp/>meshes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>still<sp/>need<sp/>to<sp/>separately<sp/>set<sp/>the<sp/>&apos;transform&apos;<sp/>uniform<sp/>for<sp/>every<sp/>mesh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup_uniforms(GLuint<sp/>shader,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>camera_pos[4],<sp/>GLuint<sp/>tex1,<sp/>GLuint<sp/>tex2)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/>glUseProgram(shader);<sp/></highlight><highlight class="comment">//<sp/>so<sp/>uniform<sp/>binding<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>STBVOX_UNIFORM_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref><sp/>sui;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbvox_get_uniform_info(&amp;sui,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>loc<sp/>=<sp/>glGetUniformLocation(shader,<sp/>sui.name);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loc<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_camera_pos:<sp/></highlight><highlight class="comment">//<sp/>only<sp/>needed<sp/>for<sp/>fog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4fv(loc,<sp/>sui.array_length,<sp/>camera_pos);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_tex_array:<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLuint<sp/>tex_unit[2]<sp/>=<sp/>{<sp/>0,<sp/>1<sp/>};<sp/></highlight><highlight class="comment">//<sp/>your<sp/>choice<sp/>of<sp/>samplers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1iv(loc,<sp/>2,<sp/>tex_unit);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0<sp/>+<sp/>tex_unit[0]);<sp/>glBindTexture(GL_TEXTURE_2D_ARRAY,<sp/>tex1);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0<sp/>+<sp/>tex_unit[1]);<sp/>glBindTexture(GL_TEXTURE_2D_ARRAY,<sp/>tex2);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);<sp/></highlight><highlight class="comment">//<sp/>reset<sp/>to<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_face_data:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1i(loc,<sp/>SAMPLER_YOU_WILL_BIND_PER_MESH_FACE_DATA_TO);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_ambient:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>definitely<sp/>want<sp/>to<sp/>override<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_color_table:<sp/></highlight><highlight class="comment">//<sp/>you<sp/>might<sp/>want<sp/>to<sp/>override<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_texscale:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>want<sp/>to<sp/>override<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4fv(loc,<sp/>sui.array_length,<sp/>sui.default_value);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_normals:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>never<sp/>want<sp/>to<sp/>override<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBVOX_UNIFORM_texgen:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>never<sp/>want<sp/>to<sp/>override<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3fv(loc,<sp/>sui.array_length,<sp/>sui.default_value);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INPUT<sp/>TO<sp/>MESHING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shapes<sp/>of<sp/>blocks<sp/>that<sp/>aren&apos;t<sp/>always<sp/>cubes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_empty,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_knockout,<sp/><sp/></highlight><highlight class="comment">//<sp/>creates<sp/>a<sp/>hole<sp/>in<sp/>the<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_solid,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_transp,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solid<sp/>geometry,<sp/>but<sp/>transparent<sp/>contents<sp/>so<sp/>neighbors<sp/>generate<sp/>normally,<sp/>unless<sp/>same<sp/>blocktype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>following<sp/>4<sp/>can<sp/>be<sp/>represented<sp/>by<sp/>vheight<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_slab_upper,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_slab_lower,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_floor_slope_north_is_top,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_ceil_slope_north_is_bottom,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_floor_slope_north_is_top_as_wall_UNIMPLEMENTED,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>floor_slope<sp/>above,<sp/>but<sp/>uses<sp/>wall&apos;s<sp/>texture<sp/>&amp;<sp/>texture<sp/>projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_ceil_slope_north_is_bottom_as_wall_UNIMPLEMENTED,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_crossed_pair,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>corner-to-corner<sp/>pairs,<sp/>with<sp/>normal<sp/>vector<sp/>bumped<sp/>upwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_force,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>GEOM_transp,<sp/>but<sp/>faces<sp/>visible<sp/>even<sp/>if<sp/>neighbor<sp/>is<sp/>same<sp/>type,<sp/>e.g.<sp/>minecraft<sp/>fancy<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>access<sp/>vheight<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_floor_vheight_03<sp/>=<sp/>12,<sp/><sp/></highlight><highlight class="comment">//<sp/>diagonal<sp/>is<sp/>SW-NE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_floor_vheight_12,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>diagonal<sp/>is<sp/>SE-NW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_ceil_vheight_03,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_ceil_vheight_12,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/>STBVOX_GEOM_count,<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>geom<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">};</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FACE_east,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FACE_north,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FACE_west,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FACE_south,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FACE_up,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FACE_down,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FACE_count,</highlight></codeline>
<codeline lineno="702"><highlight class="normal">};</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBVOX_CONFIG_BLOCKTYPE_SHORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>stbvox_block_type;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_block_type;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>24-bit<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="structstbvox__rgb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>r,g,b;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}<sp/><ref refid="structstbvox__rgb" kindref="compound">stbvox_rgb</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_COLOR_TEX1_ENABLE<sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_COLOR_TEX2_ENABLE<sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>data<sp/>structure<sp/>you<sp/>fill<sp/>out.<sp/>Most<sp/>of<sp/>the<sp/>arrays<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NULL,<sp/>except<sp/>when<sp/>one<sp/>is<sp/>required<sp/>to<sp/>get<sp/>the<sp/>value<sp/>to<sp/>index<sp/>another.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>compass<sp/>system<sp/>used<sp/>in<sp/>the<sp/>following<sp/>descriptions<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>east<sp/>means<sp/>increasing<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>north<sp/>means<sp/>increasing<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>up<sp/>means<sp/>increasing<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="structstbvox__input__description" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref></highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lighting_at_vertices;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>is<sp/>lighting<sp/>values<sp/>(i.e.<sp/>ambient<sp/>occlusion)<sp/>are<sp/>at<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>center,<sp/>and<sp/>the<sp/>vertex<sp/>light<sp/>is<sp/>gathered<sp/>from<sp/>those<sp/>adjacent<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>centers<sp/>that<sp/>the<sp/>vertex<sp/>is<sp/>facing.<sp/>This<sp/>makes<sp/>smooth<sp/>lighting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>consistent<sp/>across<sp/>adjacent<sp/>faces<sp/>with<sp/>the<sp/>same<sp/>orientation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>this<sp/>flag<sp/>to<sp/>non-zero<sp/>gives<sp/>you<sp/>explicit<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>light<sp/>at<sp/>each<sp/>vertex,<sp/>but<sp/>now<sp/>the<sp/>lighting/ao<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shared<sp/>by<sp/>all<sp/>vertices<sp/>at<sp/>the<sp/>same<sp/>point,<sp/>even<sp/>if<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>different<sp/>normals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>mostly<sp/>3D<sp/>maps<sp/>you<sp/>use<sp/>to<sp/>define<sp/>your<sp/>voxel<sp/>world,<sp/>using<sp/>x_stride<sp/>and<sp/>y_stride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>for<sp/>cache<sp/>efficiency,<sp/>you<sp/>want<sp/>to<sp/>use<sp/>the<sp/>block_foo<sp/>palettes<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbvox__rgb" kindref="compound">stbvox_rgb</ref><sp/>*<ref refid="structrgb" kindref="compound">rgb</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>24-bit<sp/>voxel<sp/>color<sp/>for<sp/>STBVOX_CONFIG_MODE<sp/>=<sp/>20<sp/>or<sp/>21<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lighting;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>The<sp/>lighting<sp/>value<sp/>/<sp/>ambient<sp/>occlusion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>that<sp/>is<sp/>used<sp/>to<sp/>define<sp/>the<sp/>vertex<sp/>lighting<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>raw<sp/>lighting<sp/>values<sp/>are<sp/>defined<sp/>at<sp/>the<sp/>center<sp/>of<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(or<sp/>at<sp/>vertex<sp/>if<sp/>&apos;lighting_at_vertices&apos;<sp/>is<sp/>true).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>macro<sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING<sp/>is<sp/>defined,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>an<sp/>additional<sp/>2-bit<sp/>block<sp/>rotation<sp/>value<sp/>is<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>field<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_LIGHTING_EXT(lighting,rot)--here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;lighting&apos;<sp/>should<sp/>still<sp/>be<sp/>8<sp/>bits,<sp/>as<sp/>the<sp/>macro<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>discard<sp/>the<sp/>bottom<sp/>bits<sp/>automatically.<sp/>Similarly,<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>STBVOX_CONFIG_VHEIGHT_IN_LIGHTING,<sp/>encode<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STBVOX_MAKE_LIGHTING_EXT(lighting,vheight).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Rationale:<sp/>rotation<sp/>needs<sp/>to<sp/>be<sp/>independent<sp/>of<sp/>blocktype,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>is<sp/>only<sp/>2<sp/>bits<sp/>so<sp/>doesn&apos;t<sp/>want<sp/>to<sp/>be<sp/>its<sp/>own<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lighting<sp/>is<sp/>the<sp/>one<sp/>thing<sp/>that<sp/>was<sp/>likely<sp/>to<sp/>already<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>use<sp/>and<sp/>that<sp/>I<sp/>could<sp/>easily<sp/>steal<sp/>2<sp/>bits<sp/>from.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/>stbvox_block_type<sp/>*blocktype;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>This<sp/>is<sp/>a<sp/>core<sp/>&quot;block<sp/>type&quot;<sp/>value,<sp/>which<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>index<sp/>into<sp/>other<sp/>arrays;<sp/>essentially<sp/>a<sp/>&quot;palette&quot;.<sp/>This<sp/>is<sp/>much<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory-efficient<sp/>and<sp/>performance-friendly<sp/>than<sp/>storing<sp/>the<sp/>values<sp/>explicitly,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>only<sp/>makes<sp/>sense<sp/>if<sp/>the<sp/>values<sp/>are<sp/>always<sp/>synchronized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>voxel&apos;s<sp/>blocktype<sp/>is<sp/>0,<sp/>it<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>empty<sp/>(STBVOX_GEOM_empty),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>no<sp/>other<sp/>blocktypes<sp/>should<sp/>be<sp/>STBVOX_GEOM_empty.<sp/>(Only<sp/>if<sp/>you<sp/>do<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>blocktypes<sp/>should<sp/>STBVOX_GEOM_empty<sp/>ever<sp/>used.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normally<sp/>it<sp/>is<sp/>an<sp/>unsigned<sp/>byte,<sp/>but<sp/>you<sp/>can<sp/>override<sp/>it<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>short<sp/>if<sp/>you<sp/>have<sp/>too<sp/>many<sp/>blocktypes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*geometry;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>Contains<sp/>the<sp/>geometry<sp/>type<sp/>for<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>contains<sp/>a<sp/>2-bit<sp/>rotation<sp/>for<sp/>how<sp/>the<sp/>whole<sp/>block<sp/>is<sp/>rotated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>includes<sp/>a<sp/>2-bit<sp/>vheight<sp/>value<sp/>when<sp/>using<sp/>shared<sp/>vheight<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>separate<sp/>vheight<sp/>documentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_GEOMETRY(geom,<sp/>rot,<sp/>vheight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_geometry;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>containing<sp/>the<sp/>geometry<sp/>for<sp/>this<sp/>block,<sp/>plus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>2-bit<sp/>&quot;simple<sp/>rotation&quot;.<sp/>Note<sp/>rotation<sp/>has<sp/>limited<sp/>use<sp/>since<sp/>it&apos;s<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>independent<sp/>of<sp/>blocktype.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_GEOMETRY(geom,simple_rot,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_tex1;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>containing<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char<sp/>(*block_tex1_face)[6];</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>and<sp/>face<sp/>containing<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>N/E/S/W<sp/>face<sp/>choices<sp/>can<sp/>be<sp/>rotated<sp/>by<sp/>one<sp/>of<sp/>the<sp/>rotation<sp/>selectors;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>top<sp/>&amp;<sp/>bottom<sp/>face<sp/>textures<sp/>will<sp/>rotate<sp/>to<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>it<sp/>only<sp/>makes<sp/>sense<sp/>to<sp/>use<sp/>one<sp/>of<sp/>block_tex1<sp/>or<sp/>block_tex1_face;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>pattern<sp/>repeats<sp/>throughout<sp/>and<sp/>this<sp/>notice<sp/>is<sp/>not<sp/>repeated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tex2;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>Contains<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>on<sp/>all<sp/>faces<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_tex2;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>containing<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char<sp/>(*block_tex2_face)[6];</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>and<sp/>face<sp/>containing<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>N/E/S/W<sp/>face<sp/>choices<sp/>can<sp/>be<sp/>rotated<sp/>by<sp/>one<sp/>of<sp/>the<sp/>rotation<sp/>selectors;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>top<sp/>&amp;<sp/>bottom<sp/>face<sp/>textures<sp/>will<sp/>rotate<sp/>to<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*color;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>Contains<sp/>the<sp/>color<sp/>for<sp/>all<sp/>faces<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>core<sp/>color<sp/>value<sp/>is<sp/>0..63.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_COLOR(color_number,<sp/>tex1_enable,<sp/>tex2_enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_color;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>containing<sp/>the<sp/>color<sp/>value<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>core<sp/>color<sp/>value<sp/>is<sp/>0..63.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_COLOR(color_number,<sp/>tex1_enable,<sp/>tex2_enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char<sp/>(*block_color_face)[6];</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>and<sp/>face<sp/>containing<sp/>the<sp/>color<sp/>value<sp/>to<sp/>apply<sp/>to<sp/>that<sp/>face.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>core<sp/>color<sp/>value<sp/>is<sp/>0..63.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_COLOR(color_number,<sp/>tex1_enable,<sp/>tex2_enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_texlerp;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>containing<sp/>3-bit<sp/>scalar<sp/>for<sp/>texture<sp/>#2<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(known<sp/>throughout<sp/>as<sp/>&apos;texlerp&apos;).<sp/>This<sp/>is<sp/>constant<sp/>over<sp/>every<sp/>face<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>though<sp/>the<sp/>property<sp/>is<sp/>potentially<sp/>per-vertex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char<sp/>(*block_texlerp_face)[6];</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>and<sp/>face<sp/>containing<sp/>3-bit<sp/>scalar<sp/>for<sp/>texture<sp/>#2<sp/>alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>constant<sp/>over<sp/>the<sp/>face<sp/>even<sp/>though<sp/>the<sp/>property<sp/>is<sp/>potentially<sp/>per-vertex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_vheight;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>containing<sp/>the<sp/>vheight<sp/>values<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>or<sp/>bottom<sp/>face<sp/>of<sp/>this<sp/>block.<sp/>These<sp/>will<sp/>rotate<sp/>properly<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>is<sp/>rotated.<sp/>See<sp/>discussion<sp/>of<sp/>vheight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_VHEIGHT(sw_height,<sp/>se_height,<sp/>nw_height,<sp/>ne_height)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*selector;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>3D<sp/>coordinates<sp/>indicating<sp/>which<sp/>output<sp/>mesh<sp/>to<sp/>select.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_selector;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>indicating<sp/>which<sp/>output<sp/>mesh<sp/>to<sp/>select.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*side_texrot;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>3D<sp/>coordinates<sp/>encoding<sp/>2-bit<sp/>texture<sp/>rotations<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>faces<sp/>on<sp/>the<sp/>E/N/W/S<sp/>sides<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_SIDE_TEXROT(rot_e,<sp/>rot_n,<sp/>rot_w,<sp/>rot_s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*block_side_texrot;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>blocktype<sp/>encoding<sp/>2-bit<sp/>texture<sp/>rotations<sp/>for<sp/>the<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>E/N/W/S<sp/>sides<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_SIDE_TEXROT(rot_e,<sp/>rot_n,<sp/>rot_w,<sp/>rot_s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*overlay;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>into<sp/>palettes<sp/>listed<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>If<sp/>0,<sp/>there<sp/>is<sp/>no<sp/>overlay.<sp/>If<sp/>non-zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>indexes<sp/>into<sp/>to<sp/>the<sp/>below<sp/>arrays<sp/>and<sp/>overrides<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defined<sp/>by<sp/>the<sp/>blocktype.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char<sp/>(*overlay_tex1)[6];</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>overlay<sp/>value<sp/>and<sp/>face,<sp/>containing<sp/>an<sp/>override<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#1.<sp/>If<sp/>0,<sp/>the<sp/>value<sp/>defined<sp/>by<sp/>blocktype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char<sp/>(*overlay_tex2)[6];</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>overlay<sp/>value<sp/>and<sp/>face,<sp/>containing<sp/>an<sp/>override<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#2.<sp/>If<sp/>0,<sp/>the<sp/>value<sp/>defined<sp/>by<sp/>blocktype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char<sp/>(*overlay_color)[6];</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>overlay<sp/>value<sp/>and<sp/>face,<sp/>containing<sp/>an<sp/>override<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>face<sp/>color.<sp/>If<sp/>0,<sp/>the<sp/>value<sp/>defined<sp/>by<sp/>blocktype<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*overlay_side_texrot;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>overlay<sp/>value,<sp/>encoding<sp/>2-bit<sp/>texture<sp/>rotations<sp/>for<sp/>the<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>E/N/W/S<sp/>sides<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_SIDE_TEXROT(rot_e,<sp/>rot_n,<sp/>rot_w,<sp/>rot_s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rotate;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>Allows<sp/>independent<sp/>rotation<sp/>of<sp/>several</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parts<sp/>of<sp/>the<sp/>voxel,<sp/>where<sp/>by<sp/>rotation<sp/>I<sp/>mean<sp/>swapping<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>colors<sp/>between<sp/>E/N/S/W<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Block:<sp/>rotates<sp/>anything<sp/>indexed<sp/>by<sp/>blocktype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Overlay:<sp/>rotates<sp/>anything<sp/>indexed<sp/>by<sp/>overlay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>EColor:<sp/>rotates<sp/>faces<sp/>defined<sp/>in<sp/>ecolor_facemask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_MATROT(block,overlay,ecolor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tex2_for_tex1;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>indexed<sp/>by<sp/>tex1<sp/>containing<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>this<sp/>if<sp/>the<sp/>two<sp/>are<sp/>always/almost-always<sp/>strictly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correlated<sp/>(e.g.<sp/>if<sp/>tex2<sp/>is<sp/>a<sp/>detail<sp/>texture<sp/>for<sp/>tex1),<sp/>as<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>more<sp/>efficient<sp/>(touching<sp/>fewer<sp/>cache<sp/>lines)<sp/>than<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>block_tex2_face.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tex2_replace;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>Specifies<sp/>the<sp/>texture<sp/>id<sp/>for<sp/>texture<sp/>#2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>on<sp/>a<sp/>single<sp/>face<sp/>of<sp/>the<sp/>voxel,<sp/>which<sp/>must<sp/>be<sp/>E/N/W/S<sp/>(not<sp/>U/D).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>texture<sp/>id<sp/>is<sp/>limited<sp/>to<sp/>6<sp/>bits<sp/>unless<sp/>tex2_facemask<sp/>is<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defined<sp/>(see<sp/>below).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_TEX2_REPLACE(tex2,<sp/>face)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tex2_facemask;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>Specifies<sp/>which<sp/>of<sp/>the<sp/>six<sp/>faces<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>their<sp/>tex2<sp/>replaced<sp/>by<sp/>the<sp/>value<sp/>of<sp/>tex2_replace.<sp/>In<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case,<sp/>all<sp/>8<sp/>bits<sp/>of<sp/>tex2_replace<sp/>are<sp/>used<sp/>as<sp/>the<sp/>texture<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_FACE_MASK(east,north,west,south,up,down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*extended_color;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinate.<sp/>Specifies<sp/>a<sp/>value<sp/>that<sp/>indexes<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ecolor<sp/>arrays<sp/>below<sp/>(both<sp/>of<sp/>which<sp/>must<sp/>be<sp/>defined).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ecolor_color;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>extended_color<sp/>value,<sp/>specifies<sp/>an<sp/>optional<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>color<sp/>value<sp/>on<sp/>some<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_COLOR(color_number,<sp/>tex1_enable,<sp/>tex2_enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ecolor_facemask;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>extended_color<sp/>value,<sp/>this<sp/>specifies<sp/>which<sp/>faces<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>in<sp/>ecolor_color<sp/>should<sp/>be<sp/>applied<sp/>to.<sp/>The<sp/>faces<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>independently<sp/>rotated<sp/>by<sp/>the<sp/>ecolor<sp/>value<sp/>of<sp/>&apos;rotate&apos;,<sp/>if<sp/>it<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_FACE_MASK(e,n,w,s,u,d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*color2;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>specifies<sp/>an<sp/>alternative<sp/>color<sp/>to<sp/>apply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>some<sp/>of<sp/>the<sp/>faces<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_COLOR(color_number,<sp/>tex1_enable,<sp/>tex2_enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*color2_facemask;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>specifies<sp/>which<sp/>faces<sp/>should<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>defined<sp/>in<sp/>color2.<sp/>No<sp/>rotation<sp/>value<sp/>is<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_FACE_MASK(e,n,w,s,u,d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*color3;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>specifies<sp/>an<sp/>alternative<sp/>color<sp/>to<sp/>apply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>some<sp/>of<sp/>the<sp/>faces<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_COLOR(color_number,<sp/>tex1_enable,<sp/>tex2_enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*color3_facemask;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>specifies<sp/>which<sp/>faces<sp/>should<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>defined<sp/>in<sp/>color3.<sp/>No<sp/>rotation<sp/>value<sp/>is<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_FACE_MASK(e,n,w,s,u,d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*texlerp_simple;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>this<sp/>is<sp/>the<sp/>smallest<sp/>texlerp<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>can<sp/>do<sp/>useful<sp/>work.<sp/>It<sp/>consits<sp/>of<sp/>three<sp/>values:<sp/>baselerp,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertlerp,<sp/>and<sp/>face_vertlerp.<sp/>Baselerp<sp/>defines<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>on<sp/>all<sp/>of<sp/>the<sp/>faces<sp/>but<sp/>one,<sp/>from<sp/>the<sp/>STBVOX_TEXLERP_BASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values.<sp/>face_vertlerp<sp/>is<sp/>one<sp/>of<sp/>the<sp/>6<sp/>face<sp/>values<sp/>(or<sp/>STBVOX_FACE_NONE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>specifies<sp/>the<sp/>face<sp/>should<sp/>use<sp/>the<sp/>vertlerp<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertlerp<sp/>defines<sp/>a<sp/>lerp<sp/>value<sp/>at<sp/>every<sp/>vertex<sp/>of<sp/>the<sp/>mesh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Thus,<sp/>one<sp/>face<sp/>can<sp/>have<sp/>per-vertex<sp/>texlerp<sp/>values,<sp/>and<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>are<sp/>encoded<sp/>in<sp/>the<sp/>space<sp/>so<sp/>that<sp/>they<sp/>will<sp/>be<sp/>shared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>adjacent<sp/>faces<sp/>that<sp/>also<sp/>use<sp/>vertlerp,<sp/>allowing<sp/>continuity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>is<sp/>used<sp/>for<sp/>the<sp/>&quot;texture<sp/>crossfade&quot;<sp/>bit<sp/>of<sp/>the<sp/>release<sp/>video).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_TEXLERP_SIMPLE(baselerp,<sp/>vertlerp,<sp/>face_vertlerp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>texlerp<sp/>encodings<sp/>are<sp/>experimental<sp/>and<sp/>maybe<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>useful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*texlerp;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>this<sp/>defines<sp/>four<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>vertlerp<sp/>is<sp/>a<sp/>lerp<sp/>value<sp/>at<sp/>every<sp/>vertex<sp/>of<sp/>the<sp/>mesh<sp/>(using<sp/>STBVOX_TEXLERP_BASE<sp/>values).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ud<sp/>is<sp/>the<sp/>value<sp/>to<sp/>use<sp/>on<sp/>up<sp/>and<sp/>down<sp/>faces,<sp/>from<sp/>STBVOX_TEXLERP_FACE<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ew<sp/>is<sp/>the<sp/>value<sp/>to<sp/>use<sp/>on<sp/>east<sp/>and<sp/>west<sp/>faces,<sp/>from<sp/>STBVOX_TEXLERP_FACE<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ns<sp/>is<sp/>the<sp/>value<sp/>to<sp/>use<sp/>on<sp/>north<sp/>and<sp/>south<sp/>faces,<sp/>from<sp/>STBVOX_TEXLERP_FACE<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>of<sp/>ud,<sp/>ew,<sp/>or<sp/>ns<sp/>is<sp/>STBVOX_TEXLERP_FACE_use_vert,<sp/>then<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertlerp<sp/>values<sp/>for<sp/>the<sp/>vertices<sp/>are<sp/>gathered<sp/>and<sp/>used<sp/>for<sp/>those<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_TEXLERP(vertlerp,ud,ew,sw)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*texlerp_vert3;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>this<sp/>works<sp/>with<sp/>texlerp<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>provides<sp/>a<sp/>unique<sp/>texlerp<sp/>value<sp/>for<sp/>every<sp/>direction<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>every<sp/>vertex.<sp/>The<sp/>same<sp/>rules<sp/>of<sp/>whether<sp/>faces<sp/>share<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>applies.<sp/>The<sp/>STBVOX_TEXLERP_FACE<sp/>vertlerp<sp/>value<sp/>defined<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texlerp<sp/>is<sp/>only<sp/>used<sp/>for<sp/>the<sp/>down<sp/>direction.<sp/>The<sp/>values<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>vertex<sp/>in<sp/>other<sp/>directions<sp/>are<sp/>defined<sp/>in<sp/>this<sp/>array,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>each<sp/>uses<sp/>the<sp/>STBVOX_TEXLERP3<sp/>values<sp/>(i.e.<sp/>full<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3-bit<sp/>texlerp<sp/>values).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_VERT3(vertlerp_e,vertlerp_n,vertlerp_w,vertlerp_s,vertlerp_u)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*texlerp_face3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e:3,n:3,w:3,s:3,u:2,d:2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>this<sp/>provides<sp/>a<sp/>compact<sp/>way<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fully<sp/>specify<sp/>the<sp/>texlerp<sp/>value<sp/>indepenendly<sp/>for<sp/>every<sp/>face,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>doesn&apos;t<sp/>allow<sp/>per-vertex<sp/>variation.<sp/>E/N/W/S<sp/>values<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>encoded<sp/>using<sp/>STBVOX_TEXLERP3<sp/>values,<sp/>whereas<sp/>up<sp/>and<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>STBVOX_TEXLERP_SIMPLE<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_FACE3(face_e,face_n,face_w,face_s,face_u,face_d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vheight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STBVOX_MAKE_VHEIGHT<sp/><sp/><sp/>--<sp/>sw:2,<sp/>se:2,<sp/>nw:2,<sp/>ne:2,<sp/>doesn&apos;t<sp/>rotate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>3D<sp/>coordinates,<sp/>this<sp/>defines<sp/>the<sp/>four</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vheight<sp/>values<sp/>to<sp/>use<sp/>if<sp/>the<sp/>geometry<sp/>is<sp/>STBVOX_GEOM_vheight*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>vheight<sp/>discussion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*packed_compact;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>block<sp/>rotation,<sp/>vheight,<sp/>and<sp/>texlerp<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>block<sp/>rotation:<sp/>2<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vertex<sp/>vheight:<sp/>2<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>use_texlerp<sp/><sp/><sp/>:<sp/>1<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vertex<sp/>texlerp:<sp/>3<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>STBVOX_CONFIG_UP_TEXLERP_PACKED<sp/>is<sp/>defined,<sp/>then<sp/>&apos;vertex<sp/>texlerp&apos;<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>up<sp/>faces<sp/>if<sp/>use_texlerp<sp/>is<sp/>1.<sp/>If<sp/>STBVOX_CONFIG_DOWN_TEXLERP_PACKED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>defined,<sp/>then<sp/>&apos;vertex<sp/>texlerp&apos;<sp/>is<sp/>used<sp/>for<sp/>down<sp/>faces<sp/>if<sp/>use_texlerp<sp/>is<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>if<sp/>those<sp/>symbols<sp/>are<sp/>defined<sp/>but<sp/>packed_compact<sp/>is<sp/>NULL,<sp/>the<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texlerp<sp/>default<sp/>will<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>with<sp/>STBVOX_MAKE_PACKED_COMPACT(rot,<sp/>vheight,<sp/>texlerp,<sp/>use_texlerp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@OPTIMIZE<sp/>allow<sp/>specializing;<sp/>build<sp/>a<sp/>single<sp/>struct<sp/>with<sp/>all<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3D-indexed<sp/>arrays<sp/>combined<sp/>so<sp/>it&apos;s<sp/>AoS<sp/>instead<sp/>of<sp/>SoA<sp/>for<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cache<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>VHEIGHT<sp/>DOCUMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>&quot;vheight&quot;<sp/>is<sp/>the<sp/>internal<sp/>name<sp/>for<sp/>the<sp/>special<sp/>block<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>with<sp/>sloped<sp/>tops<sp/>or<sp/>bottoms.<sp/>&quot;vheight&quot;<sp/>stands<sp/>for<sp/>&quot;vertex<sp/>height&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Note<sp/>that<sp/>these<sp/>blocks<sp/>are<sp/>very<sp/>flexible<sp/>(there<sp/>are<sp/>256<sp/>of<sp/>them,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>although<sp/>at<sp/>least<sp/>17<sp/>of<sp/>them<sp/>should<sp/>never<sp/>be<sp/>used),<sp/>but<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>also<sp/>have<sp/>a<sp/>disadvantage<sp/>that<sp/>they<sp/>generate<sp/>extra<sp/>invisible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>faces;<sp/>the<sp/>generator<sp/>does<sp/>not<sp/>currently<sp/>detect<sp/>whether<sp/>adjacent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>vheight<sp/>blocks<sp/>hide<sp/>each<sp/>others<sp/>sides,<sp/>so<sp/>those<sp/>side<sp/>faces<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>always<sp/>generated.<sp/>For<sp/>a<sp/>continuous<sp/>ground<sp/>terrain,<sp/>this<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>that<sp/>you<sp/>may<sp/>generate<sp/>5x<sp/>as<sp/>many<sp/>quads<sp/>as<sp/>needed.<sp/>See<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>on<sp/>&quot;improvements<sp/>for<sp/>shipping<sp/>products&quot;<sp/>in<sp/>the<sp/>introduction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/>STBVOX_VERTEX_HEIGHT_0,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/>STBVOX_VERTEX_HEIGHT_half,</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/>STBVOX_VERTEX_HEIGHT_1,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/>STBVOX_VERTEX_HEIGHT_one_and_a_half,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>the<sp/>&quot;vheight&quot;<sp/>values.<sp/>Vheight<sp/>stands<sp/>for<sp/>&quot;vertex<sp/>height&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>idea<sp/>is<sp/>that<sp/>for<sp/>a<sp/>&quot;floor<sp/>vheight&quot;<sp/>block,<sp/>you<sp/>take<sp/>a<sp/>cube<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reposition<sp/>the<sp/>top-most<sp/>vertices<sp/>at<sp/>various<sp/>heights<sp/>as<sp/>specified<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>vheight<sp/>values.<sp/>Similarly,<sp/>a<sp/>&quot;ceiling<sp/>vheight&quot;<sp/>block<sp/>takes<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cube<sp/>and<sp/>repositions<sp/>the<sp/>bottom-most<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>floor<sp/>block<sp/>only<sp/>adjusts<sp/>the<sp/>top<sp/>four<sp/>vertices;<sp/>the<sp/>bottom<sp/>four<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="comment">//<sp/>remain<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>block.<sp/>The<sp/>height<sp/>values<sp/>are<sp/>2<sp/>bits,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="comment">//<sp/>measured<sp/>in<sp/>halves<sp/>of<sp/>a<sp/>block;<sp/>so<sp/>you<sp/>can<sp/>specify<sp/>heights<sp/>of<sp/>0/2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1/2,<sp/>2/2,<sp/>or<sp/>3/2.<sp/>0<sp/>is<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>block,<sp/>1<sp/>is<sp/>halfway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="comment">//<sp/>up<sp/>the<sp/>block,<sp/>2<sp/>is<sp/>the<sp/>top<sp/>of<sp/>the<sp/>block,<sp/>and<sp/>3<sp/>is<sp/>halfway<sp/>up<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="comment">//<sp/>next<sp/>block<sp/>(and<sp/>actually<sp/>outside<sp/>of<sp/>the<sp/>block).<sp/>The<sp/>value<sp/>3<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="comment">//<sp/>actually<sp/>legal<sp/>for<sp/>floor<sp/>vheight<sp/>(but<sp/>not<sp/>ceiling),<sp/>and<sp/>allows<sp/>you<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(A)<sp/>have<sp/>smoother<sp/>terrain<sp/>by<sp/>having<sp/>slopes<sp/>that<sp/>cross<sp/>blocks,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.g.<sp/>(1,1,3,3)<sp/>is<sp/>a<sp/>regular-seeming<sp/>slope<sp/>halfway<sp/>between<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(B)<sp/>make<sp/>slopes<sp/>steeper<sp/>than<sp/>45-degrees,<sp/>e.g.<sp/>(0,0,3,3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Because<sp/>only<sp/>z<sp/>coordinates<sp/>have<sp/>half-block<sp/>precision,<sp/>and<sp/>x&amp;y<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limited<sp/>to<sp/>block<sp/>corner<sp/>precision,<sp/>it&apos;s<sp/>not<sp/>possible<sp/>to<sp/>make<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="comment">//<sp/>things<sp/>&quot;properly&quot;<sp/>out<sp/>of<sp/>blocks,<sp/>e.g.<sp/>a<sp/>half-slope<sp/>block<sp/>on<sp/>its<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>a<sp/>sloped<sp/>block<sp/>halfway<sp/>between<sp/>blocks<sp/>that&apos;s<sp/>made<sp/>out<sp/>of<sp/>two<sp/>blocks.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>define<sp/>STBVOX_CONFIG_OPTIMIZED_VHEIGHT,<sp/>then<sp/>the<sp/>top<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(or<sp/>bottom<sp/>face<sp/>for<sp/>a<sp/>ceiling<sp/>vheight<sp/>block)<sp/>will<sp/>be<sp/>drawn<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="comment">//<sp/>single<sp/>quad<sp/>even<sp/>if<sp/>the<sp/>four<sp/>vertex<sp/>heights<sp/>aren&apos;t<sp/>planar,<sp/>and<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="comment">//<sp/>single<sp/>normal<sp/>will<sp/>be<sp/>used<sp/>over<sp/>the<sp/>entire<sp/>quad.<sp/>If<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>define<sp/>it,<sp/>then<sp/>if<sp/>the<sp/>top<sp/>face<sp/>is<sp/>non-planar,<sp/>it<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="comment">//<sp/>split<sp/>into<sp/>two<sp/>triangles,<sp/>each<sp/>with<sp/>their<sp/>own<sp/>normal/lighting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Note<sp/>that<sp/>since<sp/>all<sp/>output<sp/>from<sp/>stb_voxel_render<sp/>is<sp/>quad<sp/>meshes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">//<sp/>triangles<sp/>are<sp/>actually<sp/>rendered<sp/>as<sp/>degenerate<sp/>quads.)<sp/>In<sp/>this<sp/>case,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>distinction<sp/>between<sp/>STBVOX_GEOM_floor_vheight_03<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STBVOX_GEOM_floor_vheight_12<sp/>comes<sp/>into<sp/>play;<sp/>the<sp/>former<sp/>introduces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>edge<sp/>from<sp/>the<sp/>SW<sp/>to<sp/>NE<sp/>corner<sp/>(i.e.<sp/>from<sp/>&lt;0,0,?&gt;<sp/>to<sp/>&lt;1,1,?&gt;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>latter<sp/>introduces<sp/>an<sp/>edge<sp/>from<sp/>the<sp/>NW<sp/>to<sp/>SE<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(i.e.<sp/>from<sp/>&lt;0,1,?&gt;<sp/>to<sp/>&lt;1,0,?&gt;.)<sp/>For<sp/>a<sp/>&quot;lazy<sp/>mesh&quot;<sp/>look,<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exclusively<sp/>_03<sp/>or<sp/>_12.<sp/>For<sp/>a<sp/>&quot;classic<sp/>mesh&quot;<sp/>look,<sp/>alternate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_03<sp/>and<sp/>_12<sp/>in<sp/>a<sp/>checkerboard<sp/>pattern.<sp/>For<sp/>a<sp/>&quot;smoothest<sp/>surface&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">//<sp/>look,<sp/>choose<sp/>the<sp/>edge<sp/>based<sp/>on<sp/>actual<sp/>vertex<sp/>heights.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>four<sp/>vertex<sp/>heights<sp/>can<sp/>come<sp/>from<sp/>several<sp/>places.<sp/>The<sp/>simplest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="comment">//<sp/>encoding<sp/>is<sp/>to<sp/>just<sp/>use<sp/>the<sp/>&apos;vheight&apos;<sp/>parameter<sp/>which<sp/>stores<sp/>four</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>explicit<sp/>vertex<sp/>heights<sp/>for<sp/>every<sp/>block.<sp/>This<sp/>allows<sp/>total<sp/>independence,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>at<sp/>the<sp/>cost<sp/>of<sp/>the<sp/>largest<sp/>memory<sp/>usage,<sp/>1<sp/>byte<sp/>per<sp/>3D<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Encode<sp/>this<sp/>with<sp/>STBVOX_MAKE_VHEIGHT(vh_sw,<sp/>vh_se,<sp/>vh_nw,<sp/>vh_ne).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>coordinates<sp/>are<sp/>absolute,<sp/>not<sp/>affected<sp/>by<sp/>block<sp/>rotations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>alternative<sp/>if<sp/>you<sp/>just<sp/>want<sp/>to<sp/>encode<sp/>some<sp/>very<sp/>specific<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment">//<sp/>types,<sp/>not<sp/>all<sp/>the<sp/>possibilities--say<sp/>you<sp/>just<sp/>want<sp/>half-height<sp/>slopes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>you<sp/>want<sp/>(0,0,1,1)<sp/>and<sp/>(1,1,2,2)--then<sp/>you<sp/>can<sp/>use<sp/>block_vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>specify<sp/>them.<sp/>The<sp/>geometry<sp/>rotation<sp/>will<sp/>cause<sp/>block_vheight<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>rotated<sp/>(because<sp/>it&apos;s<sp/>as<sp/>if<sp/>you&apos;re<sp/>just<sp/>defining<sp/>a<sp/>type<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="comment">//<sp/>block).<sp/>This<sp/>value<sp/>is<sp/>also<sp/>encoded<sp/>with<sp/>STBVOX_MAKE_VHEIGHT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>want<sp/>to<sp/>save<sp/>memory<sp/>and<sp/>you&apos;re<sp/>creating<sp/>a<sp/>&quot;continuous<sp/>ground&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sort<sp/>of<sp/>effect,<sp/>you<sp/>can<sp/>make<sp/>each<sp/>vertex<sp/>of<sp/>the<sp/>lattice<sp/>share<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vheight<sp/>value;<sp/>that<sp/>is,<sp/>two<sp/>adjacent<sp/>blocks<sp/>that<sp/>share<sp/>a<sp/>vertex<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">//<sp/>always<sp/>get<sp/>the<sp/>same<sp/>vheight<sp/>value<sp/>for<sp/>that<sp/>vertex.<sp/>Then<sp/>you<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>store<sp/>two<sp/>bits<sp/>of<sp/>vheight<sp/>for<sp/>every<sp/>block,<sp/>which<sp/>you<sp/>do<sp/>by<sp/>storing<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>part<sp/>another<sp/>data<sp/>structure.<sp/>Store<sp/>the<sp/>south-west<sp/>vertex&apos;s<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>block.<sp/>You<sp/>can<sp/>either<sp/>use<sp/>the<sp/>&quot;geometry&quot;<sp/>mesh<sp/>variable<sp/>(it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>parameter<sp/>to<sp/>STBVOX_MAKE_GEOMETRY)<sp/>or<sp/>you<sp/>can<sp/>store<sp/>it<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;lighting&quot;<sp/>mesh<sp/>variable<sp/>if<sp/>you<sp/>defined<sp/>STBVOX_CONFIG_VHEIGHT_IN_LIGHTING,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>STBVOX_MAKE_LIGHTING_EXT(lighting,vheight).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>if<sp/>you<sp/>start<sp/>with<sp/>a<sp/>2D<sp/>height<sp/>map<sp/>and<sp/>generate<sp/>vheight<sp/>data<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it,<sp/>you<sp/>don&apos;t<sp/>necessarily<sp/>store<sp/>only<sp/>one<sp/>value<sp/>per<sp/>(x,y)<sp/>coordinate,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>same<sp/>value<sp/>may<sp/>need<sp/>to<sp/>be<sp/>set<sp/>up<sp/>at<sp/>multiple<sp/>z<sp/>heights.<sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>example,<sp/>if<sp/>height(8,8)<sp/>=<sp/>13.5,<sp/>then<sp/>you<sp/>want<sp/>the<sp/>block<sp/>at<sp/>(8,8,13)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>store<sp/>STBVOX_VERTEX_HEIGHT_half,<sp/>and<sp/>this<sp/>will<sp/>be<sp/>used<sp/>by<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>(7,7,13),<sp/>(8,7,13),<sp/>(7,8,13),<sp/>and<sp/>(8,8,13).<sp/>However,<sp/>if<sp/>you&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allowing<sp/>steep<sp/>slopes,<sp/>it<sp/>might<sp/>be<sp/>the<sp/>case<sp/>that<sp/>you<sp/>have<sp/>a<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>(7,7,12)<sp/>which<sp/>is<sp/>supposed<sp/>to<sp/>stick<sp/>up<sp/>to<sp/>13.5;<sp/>that<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>also<sp/>need<sp/>to<sp/>store<sp/>STBVOX_VERTEX_HEIGHT_one_and_a_half<sp/>at<sp/>(8,8,12).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_FACE_0,</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_FACE_half,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_FACE_1,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_FACE_use_vert,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_BASE_0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_BASE_2_7,<sp/><sp/></highlight><highlight class="comment">//<sp/>2/7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_BASE_5_7,<sp/><sp/></highlight><highlight class="comment">//<sp/>4/7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP_BASE_1<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_0_8,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_1_8,</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_2_8,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_3_8,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_4_8,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_5_8,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_6_8,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/>STBVOX_TEXLERP3_7_8,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_FACE_NONE<sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_BLOCKTYPE_EMPTY<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBVOX_BLOCKTYPE_SHORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_BLOCKTYPE_HOLE<sp/><sp/>65535</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_BLOCKTYPE_HOLE<sp/><sp/><sp/><sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_GEOMETRY(geom,<sp/>rotate,<sp/>vheight)<sp/>((geom)<sp/>+<sp/>(rotate)*16<sp/>+<sp/>(vheight)*64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_VHEIGHT(v_sw,<sp/>v_se,<sp/>v_nw,<sp/>v_ne)<sp/>((v_sw)<sp/>+<sp/>(v_se)*4<sp/>+<sp/>(v_nw)*16<sp/>+<sp/>(v_ne)*64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_MATROT(block,<sp/>overlay,<sp/>color)<sp/><sp/>((block)<sp/>+<sp/>(overlay)*4<sp/>+<sp/>(color)*64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_TEX2_REPLACE(tex2,<sp/>tex2_replace_face)<sp/>((tex2)<sp/>+<sp/>((tex2_replace_face)<sp/>&amp;<sp/>3)*64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_TEXLERP(ns2,<sp/>ew2,<sp/>ud2,<sp/>vert)<sp/><sp/>((ew2)<sp/>+<sp/>(ns2)*4<sp/>+<sp/>(ud2)*16<sp/>+<sp/>(vert)*64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_TEXLERP_SIMPLE(baselerp,vert,face)<sp/><sp/><sp/>((vert)*32<sp/>+<sp/>(face)*4<sp/>+<sp/>(baselerp))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_TEXLERP1(vert,e2,n2,w2,s2,u4,d2)<sp/>STBVOX_MAKE_TEXLERP(s2,<sp/>w2,<sp/>d2,<sp/>vert)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_TEXLERP2(vert,e2,n2,w2,s2,u4,d2)<sp/>((u2)*16<sp/>+<sp/>(n2)*4<sp/>+<sp/>(s2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_FACE_MASK(e,n,w,s,u,d)<sp/><sp/>((e)+(n)*2+(w)*4+(s)*8+(u)*16+(d)*32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_SIDE_TEXROT(e,n,w,s)<sp/>((e)+(n)*4+(w)*16+(s)*64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_COLOR(color,t1,t2)<sp/>((color)+(t1)*64+(t2)*128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_TEXLERP_VERT3(e,n,w,s,u)<sp/><sp/><sp/>((e)+(n)*8+(w)*64+(s)*512+(u)*4096)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_TEXLERP_FACE3(e,n,w,s,u,d)<sp/>((e)+(n)*8+(w)*64+(s)*512+(u)*4096+(d)*16384)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_PACKED_COMPACT(rot,<sp/>vheight,<sp/>texlerp,<sp/>def)<sp/>((rot)+4*(vheight)+16*(use)+32*(texlerp))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_LIGHTING_EXT(lighting,<sp/>rot)<sp/><sp/>(((lighting)&amp;~3)+(rot))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAKE_LIGHTING(lighting)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lighting)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBVOX_MAX_MESHES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAX_MESHES<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opaque<sp/>&amp;<sp/>transparent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAX_MESH_SLOTS<sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>vertex<sp/>&amp;<sp/>two<sp/>faces,<sp/>or<sp/>two<sp/>vertex<sp/>and<sp/>one<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>mess<sp/>with<sp/>this<sp/>directly,<sp/>it&apos;s<sp/>just<sp/>here<sp/>so<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>declare<sp/>stbvox_mesh_maker<sp/>on<sp/>the<sp/>stack<sp/>or<sp/>as<sp/>a<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182" refid="structstbvox__mesh__maker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref><sp/>input;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_x,<sp/>cur_y,<sp/>cur_z;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>unprocessed<sp/>voxel<sp/>if<sp/>it<sp/>splits<sp/>into<sp/>multiple<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,y0,z0,x1,y1,z1;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_stride_in_bytes;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_stride_in_bytes;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config_dirty;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_mesh;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tags;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cube_vertex_offset[6][4];<sp/></highlight><highlight class="comment">//<sp/>this<sp/>allows<sp/>access<sp/>per-vertex<sp/>data<sp/>stored<sp/>block-centered<sp/>(like<sp/>texlerp,<sp/>ambient)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertex_gather_offset[6][4];</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos_x,pos_y,pos_z;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>computed<sp/>from<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output_cur<sp/><sp/><sp/>[STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output_end<sp/><sp/><sp/>[STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output_buffer[STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>output_len<sp/><sp/><sp/>[STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>computed<sp/>from<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>output_size<sp/><sp/>[STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];<sp/></highlight><highlight class="comment">//<sp/>per<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>output_step<sp/><sp/>[STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];<sp/></highlight><highlight class="comment">//<sp/>per<sp/>vertex<sp/>or<sp/>per<sp/>face,<sp/>depending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>num_mesh_slots;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_tex_scale[128][2];</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/><sp/>INCLUDE_STB_VOXEL_RENDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_VOXEL_RENDER_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>memset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>use<sp/>our<sp/>own<sp/>names<sp/>to<sp/>avoid<sp/>the<sp/>_MSC_VER<sp/>path<sp/>having<sp/>conflicting<sp/>type<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/>stbvox_uint16;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/>stbvox_uint32;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>stbvox_uint16;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>stbvox_uint32;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_NOTUSED(v)<sp/><sp/>(void)(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_NOTUSED(v)<sp/><sp/>(void)sizeof(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBVOX_CONFIG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Must<sp/>defined<sp/>STBVOX_CONFIG_MODE<sp/>to<sp/>select<sp/>the<sp/>mode&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBVOX_CONFIG_ROTATION_IN_LIGHTING)<sp/>&amp;&amp;<sp/>defined(STBVOX_CONFIG_VHEIGHT_IN_LIGHTING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Can&apos;t<sp/>store<sp/>both<sp/>rotation<sp/>and<sp/>vheight<sp/>in<sp/>lighting&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>are<sp/>candidate<sp/>voxel<sp/>modes.<sp/>Only<sp/>modes<sp/>0,<sp/>1,<sp/>and<sp/>20,<sp/>and<sp/>21<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>currently<sp/>implemented.<sp/>Reducing<sp/>the<sp/>storage-per-quad<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>improve<sp/>performance,<sp/>although<sp/>obviously<sp/>it<sp/>allow<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>create<sp/>larger<sp/>worlds<sp/>without<sp/>streaming.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------<sp/><sp/>Two<sp/>textures<sp/>-----------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>One<sp/>texture<sp/>--<sp/><sp/><sp/><sp/><sp/>----<sp/>Color<sp/>only<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode:<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/>11<sp/><sp/><sp/><sp/>12<sp/><sp/><sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/>21<sp/><sp/><sp/><sp/>22<sp/><sp/><sp/><sp/>23<sp/><sp/><sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uses<sp/>Tex<sp/>Buffer<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>bytes<sp/>per<sp/>quad<sp/><sp/><sp/><sp/>32<sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/>14<sp/><sp/><sp/><sp/>12<sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/>32<sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-blocks<sp/><sp/><sp/>all<sp/><sp/><sp/>all<sp/><sp/><sp/>some<sp/><sp/>some<sp/><sp/>some<sp/>slabs<sp/>stairs<sp/><sp/><sp/><sp/><sp/>some<sp/><sp/>some<sp/><sp/>none<sp/><sp/><sp/><sp/>all<sp/><sp/><sp/>all<sp/><sp/>slabs<sp/>slabs<sp/><sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex1<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/><sp/><sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex2<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>256<sp/><sp/><sp/>128<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>2^24<sp/><sp/>2^24<sp/><sp/>2^24<sp/><sp/>2^24<sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex<sp/>ao<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>vertex<sp/>texlerp<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>Y<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>x&amp;y<sp/>extents<sp/><sp/><sp/>127<sp/><sp/><sp/>127<sp/><sp/><sp/>128<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/>128<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64<sp/><sp/><sp/>128<sp/><sp/><sp/>128<sp/><sp/><sp/><sp/><sp/>127<sp/><sp/><sp/>127<sp/><sp/><sp/>128<sp/><sp/><sp/>128<sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>extents<sp/><sp/><sp/>255<sp/><sp/><sp/>255<sp/><sp/><sp/>128<sp/><sp/><sp/><sp/>64?<sp/><sp/><sp/>64?<sp/><sp/><sp/>64<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/>128<sp/><sp/><sp/><sp/><sp/>255<sp/><sp/><sp/>255<sp/><sp/><sp/>128<sp/><sp/><sp/><sp/>64<sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>sure<sp/>why<sp/>I<sp/>only<sp/>wrote<sp/>down<sp/>the<sp/>above<sp/>&quot;result<sp/>data&quot;<sp/>and<sp/>didn&apos;t<sp/>preserve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>vertex<sp/>formats,<sp/>but<sp/>here<sp/>I&apos;ve<sp/>tried<sp/>to<sp/>reconstruct<sp/>the<sp/>designs...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mode<sp/>#<sp/>3<sp/>is<sp/>wrong,<sp/>one<sp/>byte<sp/>too<sp/>large,<sp/>but<sp/>they<sp/>may<sp/>have<sp/>been<sp/>an<sp/>error<sp/>originally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode:<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/>11<sp/><sp/><sp/><sp/>12<sp/><sp/><sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/>21<sp/><sp/><sp/><sp/>22<sp/><sp/><sp/><sp/>23<sp/><sp/><sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>bytes<sp/>per<sp/>quad<sp/><sp/><sp/><sp/>32<sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/>14<sp/><sp/><sp/><sp/>12<sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vertex<sp/>x<sp/>bits<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vertex<sp/>y<sp/>bits<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vertex<sp/>z<sp/>bits<sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>vertex<sp/>ao<sp/>bits<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>vertex<sp/>txl<sp/>bits<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3)<sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>face<sp/>tex1<sp/>bits<sp/><sp/><sp/><sp/>(8)<sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>face<sp/>tex2<sp/>bits<sp/><sp/><sp/><sp/>(8)<sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>face<sp/>color<sp/>bits<sp/><sp/><sp/><sp/>(8)<sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>face<sp/>normal<sp/>bits<sp/><sp/><sp/><sp/>(8)<sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>face<sp/>x<sp/>bits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>face<sp/>y<sp/>bits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>face<sp/>z<sp/>bits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STBVOX_CONFIG_MODE==0<sp/>||<sp/>STBVOX_CONFIG_MODE==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_ICONFIG_VERTEX_32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_ICONFIG_FACE1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>STBVOX_CONFIG_MODE==20<sp/>||<sp/>STBVOX_CONFIG_MODE==21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_ICONFIG_VERTEX_32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_ICONFIG_FACE1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_ICONFIG_UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Selected<sp/>value<sp/>of<sp/>STBVOX_CONFIG_MODE<sp/>is<sp/>not<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STBVOX_CONFIG_MODE==0<sp/>||<sp/>STBVOX_CONFIG_MODE==20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_ICONFIG_FACE_ATTRIBUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBVOX_CONFIG_HLSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>fallback<sp/>if<sp/>all<sp/>others<sp/>are<sp/>exhausted<sp/>is<sp/>GLSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_ICONFIG_GLSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBVOX_CONFIG_OPENGL_MODELVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_ICONFIG_OPENGL_3_1_COMPATIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBVOX_ICONFIG_VERTEX_32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stbvox_uint32<sp/>stbvox_mesh_vertex;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbvox_vertex_encode(x,y,z,ao,texlerp)<sp/>\</highlight></codeline>
<codeline lineno="1323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>((stbvox_uint32)<sp/>((x)+((y)&lt;&lt;7)+((z)&lt;&lt;14)+((ao)&lt;&lt;23)+((texlerp)&lt;&lt;29)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(STBVOX_ICONFIG_VERTEX_16_1)<sp/><sp/></highlight><highlight class="comment">//<sp/>mode=2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stbvox_uint16<sp/>stbvox_mesh_vertex;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbvox_vertex_encode(x,y,z,ao,texlerp)<sp/>\</highlight></codeline>
<codeline lineno="1327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>((stbvox_uint16)<sp/>((z)+((ao)&lt;&lt;7)+((texlerp)&lt;&lt;13)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(STBVOX_ICONFIG_VERTEX_16_2)<sp/><sp/></highlight><highlight class="comment">//<sp/>mode=3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stbvox_uint16<sp/>stbvox_mesh_vertex;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbvox_vertex_encode(x,y,z,ao,texlerp)<sp/>\</highlight></codeline>
<codeline lineno="1331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>((stbvox_uint16)<sp/>((x)+((z)&lt;&lt;6))+((ao)&lt;&lt;10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(STBVOX_ICONFIG_VERTEX_8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stbvox_uint8<sp/>stbvox_mesh_vertex;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbvox_vertex_encode(x,y,z,ao,texlerp)<sp/>\</highlight></codeline>
<codeline lineno="1335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>((stbvox_uint8)<sp/>((z)+((ao)&lt;&lt;6))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#error<sp/>&quot;internal<sp/>error,<sp/>no<sp/>vertex<sp/>type&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBVOX_ICONFIG_FACE1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tex1,tex2,color,face_info;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/>}<sp/>stbvox_mesh_face;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#error<sp/>&quot;internal<sp/>error,<sp/>no<sp/>face<sp/>type&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>20-byte<sp/>quad<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>vertex:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>x:7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>y:7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>z:9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ao:6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>tex_lerp:3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>face:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>tex1:8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>tex2:8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>face:8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>color:8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Faces:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Faces<sp/>use<sp/>the<sp/>bottom<sp/>3<sp/>bits<sp/>to<sp/>choose<sp/>the<sp/>texgen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mode,<sp/>and<sp/>all<sp/>the<sp/>bits<sp/>to<sp/>choose<sp/>the<sp/>normal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thus<sp/>the<sp/>bottom<sp/>3<sp/>bits<sp/>have<sp/>to<sp/>be:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/>n,<sp/>w,<sp/>s,<sp/>u,<sp/>d,<sp/>u,<sp/>d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>use<sp/>compact<sp/>names<sp/>so<sp/>tables<sp/>are<sp/>readable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/>STBVF_e,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/>STBVF_n,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/>STBVF_w,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/>STBVF_s,</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/>STBVF_u,</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/>STBVF_d,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/>STBVF_eu,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/>STBVF_ed,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/>STBVF_eu_wall,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/>STBVF_nu_wall,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/>STBVF_wu_wall,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>STBVF_su_wall,</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/>STBVF_ne_u,</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/>STBVF_ne_d,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/>STBVF_nu,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/>STBVF_nd,</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/>STBVF_ed_wall,</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/>STBVF_nd_wall,</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/>STBVF_wd_wall,</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/>STBVF_sd_wall,</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/>STBVF_nw_u,</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/>STBVF_nw_d,</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/>STBVF_wu,</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/>STBVF_wd,</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/>STBVF_ne_u_cross,</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/>STBVF_nw_u_cross,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/>STBVF_sw_u_cross,</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/>STBVF_se_u_cross,</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/>STBVF_sw_u,</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/>STBVF_sw_d,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/>STBVF_su,</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/>STBVF_sd,</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>we<sp/>need<sp/>more<sp/>than<sp/>5<sp/>bits<sp/>to<sp/>encode<sp/>the<sp/>normal<sp/>to<sp/>fit<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>for<sp/>now<sp/>we<sp/>use<sp/>the<sp/>right<sp/>projection<sp/>but<sp/>the<sp/>wrong<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/>STBVF_se_u<sp/>=<sp/>STBVF_su,</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/>STBVF_se_d<sp/>=<sp/>STBVF_sd,</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/>STBVF_count,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tables<sp/>--<sp/>i&apos;d<sp/>prefer<sp/>if<sp/>these<sp/>were<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file,<sp/>but:<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbvox_default_texgen[2][32][3]<sp/>=</highlight></codeline>
<codeline lineno="1429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/><sp/>0,<sp/>1,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/><sp/>0,-1,0<sp/>},<sp/>{<sp/>0,<sp/>0,-1<sp/>},</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>0,-1<sp/>},</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>0,-1,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/><sp/>0,<sp/>1,0<sp/>},<sp/>{<sp/>0,<sp/>0,-1<sp/>},</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>0,-1<sp/>},</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,-1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,-1,<sp/>0<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,-1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,-1,<sp/>0<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>0,<sp/>0,-1<sp/>},<sp/>{<sp/><sp/>0,<sp/>1,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/><sp/>0,-1,0<sp/>},</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0,-1<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0,-1<sp/>},<sp/>{<sp/><sp/>0,-1,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/><sp/>0,<sp/>1,0<sp/>},</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0,-1<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>0,-1,<sp/>0<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,-1,<sp/>0<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>0,-1,<sp/>0<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},<sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>{<sp/>-1,<sp/>0,0<sp/>},<sp/>{<sp/>0,-1,<sp/>0<sp/>},<sp/>{<sp/><sp/>1,<sp/>0,0<sp/>},</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_RSQRT2<sp/><sp/><sp/>0.7071067811865f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_RSQRT3<sp/><sp/><sp/>0.5773502691896f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbvox_default_normals[32][3]<sp/>=</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/>{<sp/>1,0,0<sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>east</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,1,0<sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>north</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-1,0,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>west</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,-1,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>south</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,0,1<sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,0,-1<sp/>},<sp/></highlight><highlight class="comment">//<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT2,0,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>east<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT2,0,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>east<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT2,0,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>east<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,<sp/>STBVOX_RSQRT2,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>north<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT2,0,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>west<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,-STBVOX_RSQRT2,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>south<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ne<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3,-STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ne<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,<sp/>STBVOX_RSQRT2,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>north<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,<sp/>STBVOX_RSQRT2,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>north<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT2,0,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>east<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,<sp/>STBVOX_RSQRT2,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>north<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT2,0,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>west<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,-STBVOX_RSQRT2,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>south<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>NW<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3,-STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>NW<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT2,0,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>west<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT2,0,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>west<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3,STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>NE<sp/>&amp;<sp/>up<sp/>crossed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3,STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>NW<sp/>&amp;<sp/>up<sp/>crossed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT3,-STBVOX_RSQRT3,STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>SW<sp/>&amp;<sp/>up<sp/>crossed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>STBVOX_RSQRT3,-STBVOX_RSQRT3,STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>SE<sp/>&amp;<sp/>up<sp/>crossed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT3,-STBVOX_RSQRT3,<sp/>STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>SW<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/>{<sp/>-STBVOX_RSQRT3,-STBVOX_RSQRT3,-STBVOX_RSQRT3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>SW<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,-STBVOX_RSQRT2,<sp/>STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>south<sp/>&amp;<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,-STBVOX_RSQRT2,<sp/>-STBVOX_RSQRT2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>south<sp/>&amp;<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbvox_default_texscale[128][4]<sp/>=</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/>{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},{1,1,0,0},</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_default_palette_compact[64][3]<sp/>=</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/>{<sp/>255,255,255<sp/>},<sp/>{<sp/>238,238,238<sp/>},<sp/>{<sp/>221,221,221<sp/>},<sp/>{<sp/>204,204,204<sp/>},</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/>{<sp/>187,187,187<sp/>},<sp/>{<sp/>170,170,170<sp/>},<sp/>{<sp/>153,153,153<sp/>},<sp/>{<sp/>136,136,136<sp/>},</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>{<sp/>119,119,119<sp/>},<sp/>{<sp/>102,102,102<sp/>},<sp/>{<sp/><sp/>85,<sp/>85,<sp/>85<sp/>},<sp/>{<sp/><sp/>68,<sp/>68,<sp/>68<sp/>},</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>51,<sp/>51,<sp/>51<sp/>},<sp/>{<sp/><sp/>34,<sp/>34,<sp/>34<sp/>},<sp/>{<sp/><sp/>17,<sp/>17,<sp/>17<sp/>},<sp/>{<sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/>{<sp/>255,240,240<sp/>},<sp/>{<sp/>255,220,220<sp/>},<sp/>{<sp/>255,160,160<sp/>},<sp/>{<sp/>255,<sp/>32,<sp/>32<sp/>},</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/>{<sp/>200,120,160<sp/>},<sp/>{<sp/>200,<sp/>60,150<sp/>},<sp/>{<sp/>220,100,130<sp/>},<sp/>{<sp/>255,<sp/><sp/>0,128<sp/>},</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/>{<sp/>240,240,255<sp/>},<sp/>{<sp/>220,220,255<sp/>},<sp/>{<sp/>160,160,255<sp/>},<sp/>{<sp/><sp/>32,<sp/>32,255<sp/>},</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/>{<sp/>120,160,200<sp/>},<sp/>{<sp/><sp/>60,150,200<sp/>},<sp/>{<sp/>100,130,220<sp/>},<sp/>{<sp/><sp/><sp/>0,128,255<sp/>},</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/>{<sp/>240,255,240<sp/>},<sp/>{<sp/>220,255,220<sp/>},<sp/>{<sp/>160,255,160<sp/>},<sp/>{<sp/><sp/>32,255,<sp/>32<sp/>},</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/>{<sp/>160,200,120<sp/>},<sp/>{<sp/>150,200,<sp/>60<sp/>},<sp/>{<sp/>130,220,100<sp/>},<sp/>{<sp/>128,255,<sp/><sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/>{<sp/>255,255,240<sp/>},<sp/>{<sp/>255,255,220<sp/>},<sp/>{<sp/>220,220,180<sp/>},<sp/>{<sp/>255,255,<sp/>32<sp/>},</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/>{<sp/>200,160,120<sp/>},<sp/>{<sp/>200,150,<sp/>60<sp/>},<sp/>{<sp/>220,130,100<sp/>},<sp/>{<sp/>255,128,<sp/><sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/>{<sp/>255,240,255<sp/>},<sp/>{<sp/>255,220,255<sp/>},<sp/>{<sp/>220,180,220<sp/>},<sp/>{<sp/>255,<sp/>32,255<sp/>},</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/>{<sp/>160,120,200<sp/>},<sp/>{<sp/>150,<sp/>60,200<sp/>},<sp/>{<sp/>130,100,220<sp/>},<sp/>{<sp/>128,<sp/><sp/>0,255<sp/>},</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/>{<sp/>240,255,255<sp/>},<sp/>{<sp/>220,255,255<sp/>},<sp/>{<sp/>180,220,220<sp/>},<sp/>{<sp/><sp/>32,255,255<sp/>},</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/>{<sp/>120,200,160<sp/>},<sp/>{<sp/><sp/>60,200,150<sp/>},<sp/>{<sp/>100,220,130<sp/>},<sp/>{<sp/><sp/><sp/>0,255,128<sp/>},</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbvox_default_ambient[4][4]<sp/>=</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,0,1<sp/><sp/><sp/><sp/><sp/><sp/>,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>reversed<sp/>lighting<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0.5,0.5,0.5,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>directional<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0.5,0.5,0.5,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>constant<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0.5,0.5,0.5,1.0f/1000.0f/1000.0f<sp/>},<sp/></highlight><highlight class="comment">//<sp/>fog<sp/>data<sp/>for<sp/>simple_fog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbvox_default_palette[64][4];</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_build_default_palette(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>64;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_default_palette[i][0]<sp/>=<sp/>stbvox_default_palette_compact[i][0]<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_default_palette[i][1]<sp/>=<sp/>stbvox_default_palette_compact[i][1]<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_default_palette[i][2]<sp/>=<sp/>stbvox_default_palette_compact[i][2]<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_default_palette[i][3]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBVOX_ICONFIG_OPENGL_3_1_COMPATIBILITY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_SHADER_VERSION<sp/>&quot;#version<sp/>150<sp/>compatibility\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(STBVOX_ICONFIG_OPENGL_3_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_SHADER_VERSION<sp/>&quot;#version<sp/>130\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(STBVOX_ICONFIG_GLSL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_SHADER_VERSION<sp/>&quot;#version<sp/>150\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_SHADER_VERSION<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_vertex_program<sp/>=</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBVOX_SHADER_VERSION</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_ICONFIG_FACE_ATTRIBUTE<sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>TAG_face_sampled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>uvec4<sp/>attr_face;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>usamplerBuffer<sp/>facearray;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_ICONFIG_FACE_ARRAY_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>usamplerBuffer<sp/>facearray2;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>input<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>uint<sp/>attr_vertex;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per-buffer<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec3<sp/>transform[3];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per-frame<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec4<sp/>camera_pos;\n&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>4th<sp/>value<sp/>is<sp/>used<sp/>for<sp/>arbitrary<sp/>hacking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>simplify<sp/>things,<sp/>we<sp/>avoid<sp/>using<sp/>more<sp/>than<sp/>256<sp/>uniform<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>fragment<sp/>shader<sp/>to<sp/>avoid<sp/>possible<sp/>1024<sp/>component<sp/>limit,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>access<sp/>this<sp/>table<sp/>in<sp/>the<sp/>fragment<sp/>shader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec3<sp/>normal_table[32];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_OPENGL_MODELVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>mat4x4<sp/>model_view;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fragment<sp/>output<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;flat<sp/>out<sp/>uvec4<sp/><sp/>facedata;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>out<sp/><sp/>vec3<sp/><sp/>voxelspace_pos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>out<sp/><sp/>vec3<sp/><sp/>vnormal;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>out<sp/>float<sp/><sp/>texlerp;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>out<sp/>float<sp/><sp/>amb_occ;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>handle<sp/>the<sp/>HLSL<sp/>way<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;void<sp/>main()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_ICONFIG_FACE_ATTRIBUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>facedata<sp/>=<sp/>attr_face;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>int<sp/>faceID<sp/>=<sp/>gl_VertexID<sp/>&gt;&gt;<sp/>2;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>facedata<sp/><sp/><sp/>=<sp/>texelFetch(facearray,<sp/>faceID);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>data<sp/>for<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>offset;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>offset.x<sp/>=<sp/>float(<sp/>(attr_vertex<sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>127u<sp/>);\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a[0..6]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>offset.y<sp/>=<sp/>float(<sp/>(attr_vertex<sp/>&gt;&gt;<sp/><sp/>7u)<sp/>&amp;<sp/>127u<sp/>);\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a[7..13]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>offset.z<sp/>=<sp/>float(<sp/>(attr_vertex<sp/>&gt;&gt;<sp/>14u)<sp/>&amp;<sp/>511u<sp/>);\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a[14..22]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>amb_occ<sp/><sp/>=<sp/>float(<sp/>(attr_vertex<sp/>&gt;&gt;<sp/>23u)<sp/>&amp;<sp/><sp/>63u<sp/>)<sp/>/<sp/>63.0;\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a[23..28]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texlerp<sp/><sp/>=<sp/>float(<sp/>(attr_vertex<sp/>&gt;&gt;<sp/>29u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>/<sp/><sp/>7.0;\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a[29..31]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vnormal<sp/>=<sp/>normal_table[(facedata.w&gt;&gt;2u)<sp/>&amp;<sp/>31u];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>voxelspace_pos<sp/>=<sp/>offset<sp/>*<sp/>transform[0];\n&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh-to-object<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>position<sp/><sp/>=<sp/>voxelspace_pos<sp/>+<sp/>transform[1];\n&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh-to-object<sp/>translate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_DEBUG_TEST_NORMALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>if<sp/>((facedata.w<sp/>&amp;<sp/>28u)<sp/>==<sp/>16u<sp/>||<sp/>(facedata.w<sp/>&amp;<sp/>28u)<sp/>==<sp/>24u)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>+=<sp/>vnormal.xyz<sp/>*<sp/>camera_pos.w;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_OPENGL_MODELVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>gl_Position<sp/>=<sp/>model_view<sp/>*<sp/>vec4(position,1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>gl_Position<sp/>=<sp/>gl_ModelViewProjectionMatrix<sp/>*<sp/>vec4(position,1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_fragment_program<sp/>=</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBVOX_SHADER_VERSION</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rlerp<sp/>is<sp/>lerp<sp/>but<sp/>with<sp/>t<sp/>on<sp/>the<sp/>left,<sp/>like<sp/>god<sp/>intended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(STBVOX_ICONFIG_GLSL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;#define<sp/>rlerp(t,x,y)<sp/>mix(x,y,t)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(STBVOX_CONFIG_HLSL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;#define<sp/>rlerp(t,x,y)<sp/>lerp(x,y,t)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>&quot;need<sp/>definition<sp/>of<sp/>rlerp()&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex-shader<sp/>output<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;flat<sp/>in<sp/>uvec4<sp/><sp/>facedata;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>in<sp/><sp/>vec3<sp/><sp/>voxelspace_pos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>in<sp/><sp/>vec3<sp/><sp/>vnormal;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>in<sp/>float<sp/><sp/>texlerp;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>in<sp/>float<sp/><sp/>amb_occ;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per-buffer<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec3<sp/>transform[3];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per-frame<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec4<sp/>camera_pos;\n&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>4th<sp/>value<sp/>is<sp/>used<sp/>for<sp/>arbitrary<sp/>hacking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probably<sp/>constant<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec4<sp/>ambient[4];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_ICONFIG_UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generally<sp/>constant<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>sampler2DArray<sp/>tex_array[2];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>samplerBuffer<sp/>color_table;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>samplerBuffer<sp/>texscale;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>samplerBuffer<sp/>texgen;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec4<sp/>color_table[64];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec4<sp/>texscale[64];\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>128,<sp/>to<sp/>avoid<sp/>running<sp/>out<sp/>of<sp/>uniforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec3<sp/>texgen[64];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;out<sp/>vec4<sp/><sp/>outcolor;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(STBVOX_CONFIG_LIGHTING)<sp/>||<sp/>defined(STBVOX_CONFIG_LIGHTING_SIMPLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vec3<sp/>compute_lighting(vec3<sp/>pos,<sp/>vec3<sp/>norm,<sp/>vec3<sp/>albedo,<sp/>vec3<sp/>ambient);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(STBVOX_CONFIG_FOG)<sp/>||<sp/>defined(STBVOX_CONFIG_FOG_SMOOTHSTEP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vec3<sp/>compute_fog(vec3<sp/>color,<sp/>vec3<sp/>relative_pos,<sp/>float<sp/>fragment_alpha);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;void<sp/>main()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>albedo;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>fragment_alpha;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_ICONFIG_UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unpack<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>tex1_id<sp/>=<sp/>facedata.x;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>tex2_id<sp/>=<sp/>facedata.y;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>texprojid<sp/>=<sp/>facedata.w<sp/>&amp;<sp/>31u;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>color_id<sp/><sp/>=<sp/>facedata.z;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>from<sp/>uniforms<sp/>/<sp/>texture<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_s<sp/>=<sp/>texgen[texprojid];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_t<sp/>=<sp/>texgen[texprojid+32u];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>tex1_scale<sp/>=<sp/>texscale[tex1_id<sp/>&amp;<sp/>63u].x;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>color<sp/>=<sp/>color_table[color_id<sp/>&amp;<sp/>63u];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex2_props<sp/>=<sp/>texscale[tex2_id<sp/>&amp;<sp/>63u];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_s<sp/>=<sp/>texelFetch(texgen,<sp/>int(texprojid)).xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_t<sp/>=<sp/>texelFetch(texgen,<sp/>int(texprojid+32u)).xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>tex1_scale<sp/>=<sp/>texelFetch(texscale,<sp/>int(tex1_id<sp/>&amp;<sp/>127u)).x;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>color<sp/>=<sp/>texelFetch(color_table,<sp/>int(color_id<sp/>&amp;<sp/>63u));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex2_props<sp/>=<sp/>texelFetch(texscale,<sp/>int(tex1_id<sp/>&amp;<sp/>127u));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>tex2_scale<sp/>=<sp/>tex2_props.y;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>bool<sp/>texblend_mode<sp/>=<sp/>tex2_props.z<sp/>!=<sp/>0.0;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec2<sp/>texcoord;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texturespace_pos<sp/>=<sp/>voxelspace_pos<sp/>+<sp/>transform[2].xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texcoord.s<sp/>=<sp/>dot(texturespace_pos,<sp/>texgen_s);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texcoord.t<sp/>=<sp/>dot(texturespace_pos,<sp/>texgen_t);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec2<sp/><sp/>texcoord_1<sp/>=<sp/>tex1_scale<sp/>*<sp/>texcoord;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec2<sp/><sp/>texcoord_2<sp/>=<sp/>tex2_scale<sp/>*<sp/>texcoord;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_TEX1_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texcoord_1<sp/>=<sp/>texcoord_1<sp/>-<sp/>floor(texcoord_1);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex1<sp/>=<sp/>textureGrad(tex_array[0],<sp/>vec3(texcoord_1,<sp/>float(tex1_id)),<sp/>dFdx(tex1_scale*texcoord),<sp/>dFdy(tex1_scale*texcoord));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex1<sp/>=<sp/>texture(tex_array[0],<sp/>vec3(texcoord_1,<sp/>float(tex1_id)));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_TEX2_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texcoord_2<sp/>=<sp/>texcoord_2<sp/>-<sp/>floor(texcoord_2);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex2<sp/>=<sp/>textureGrad(tex_array[0],<sp/>vec3(texcoord_2,<sp/>float(tex2_id)),<sp/>dFdx(tex2_scale*texcoord),<sp/>dFdy(tex2_scale*texcoord));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex2<sp/>=<sp/>texture(tex_array[1],<sp/>vec3(texcoord_2,<sp/>float(tex2_id)));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>bool<sp/>emissive<sp/>=<sp/>(color.a<sp/>&gt;<sp/>1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>color.a<sp/>=<sp/>min(color.a,<sp/>1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recolor<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>if<sp/>((color_id<sp/>&amp;<sp/><sp/>64u)<sp/>!=<sp/>0u)<sp/>tex1.rgba<sp/>*=<sp/>color.rgba;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>fragment_alpha<sp/>=<sp/>tex1.a;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>if<sp/>((color_id<sp/>&amp;<sp/>128u)<sp/>!=<sp/>0u)<sp/>tex2.rgba<sp/>*=<sp/>color.rgba;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_PREMULTIPLIED_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>tex2.rgba<sp/>*=<sp/>texlerp;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>tex2.a<sp/>*=<sp/>texlerp;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>if<sp/>(texblend_mode)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>albedo<sp/>=<sp/>tex1.xyz<sp/>*<sp/>rlerp(tex2.a,<sp/>vec3(1.0,1.0,1.0),<sp/>2.0*tex2.xyz);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>else<sp/>{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_PREMULTIPLIED_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>albedo<sp/>=<sp/>(1.0-tex2.a)*tex1.xyz<sp/>+<sp/>tex2.xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>albedo<sp/>=<sp/>rlerp(tex2.a,<sp/>tex1.xyz,<sp/>tex2.xyz);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>fragment_alpha<sp/>=<sp/>tex1.a*(1-tex2.a)+tex2.a;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>albedo<sp/>=<sp/>tex1.xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else<sp/></highlight><highlight class="comment">//<sp/>UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>color;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>color.xyz<sp/>=<sp/>vec3(facedata.xyz)<sp/>/<sp/>255.0;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>bool<sp/>emissive<sp/>=<sp/>false;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>albedo<sp/>=<sp/>color.xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>fragment_alpha<sp/>=<sp/>1.0;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_ICONFIG_VARYING_VERTEX_NORMALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currently,<sp/>there<sp/>are<sp/>no<sp/>modes<sp/>that<sp/>trigger<sp/>this<sp/>path;<sp/>idea<sp/>is<sp/>that<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>be<sp/>a<sp/>couple<sp/>of<sp/>bits<sp/>per<sp/>vertex<sp/>to<sp/>perturb<sp/>the<sp/>normal<sp/>to<sp/>e.g.<sp/>get<sp/>curved<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>normal<sp/>=<sp/>normalize(vnormal);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>normal<sp/>=<sp/>vnormal;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>ambient_color<sp/>=<sp/>dot(normal,<sp/>ambient[0].xyz)<sp/>*<sp/>ambient[1].xyz<sp/>+<sp/>ambient[2].xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>ambient_color<sp/>=<sp/>clamp(ambient_color,<sp/>0.0,<sp/>1.0);&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>ambient_color<sp/>*=<sp/>amb_occ;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>lit_color;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>if<sp/>(!emissive)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(STBVOX_ICONFIG_LIGHTING)<sp/>||<sp/>defined(STBVOX_CONFIG_LIGHTING_SIMPLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>lit_color<sp/>=<sp/>compute_lighting(voxelspace_pos<sp/>+<sp/>transform[1],<sp/>normal,<sp/>albedo,<sp/>ambient_color);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>lit_color<sp/>=<sp/>albedo<sp/>*<sp/>ambient_color<sp/>;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>else\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>lit_color<sp/>=<sp/>albedo;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(STBVOX_ICONFIG_FOG)<sp/>||<sp/>defined(STBVOX_CONFIG_FOG_SMOOTHSTEP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>dist<sp/>=<sp/>voxelspace_pos<sp/>+<sp/>(transform[1]<sp/>-<sp/>camera_pos.xyz);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>lit_color<sp/>=<sp/>compute_fog(lit_color,<sp/>dist,<sp/>fragment_alpha);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_UNPREMULTIPLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>final_color<sp/>=<sp/>vec4(lit_color/fragment_alpha,<sp/>fragment_alpha);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>final_color<sp/>=<sp/>vec4(lit_color,<sp/>fragment_alpha);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>outcolor<sp/>=<sp/>final_color;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_LIGHTING_SIMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec3<sp/>light_source[2];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vec3<sp/>compute_lighting(vec3<sp/>pos,<sp/>vec3<sp/>norm,<sp/>vec3<sp/>albedo,<sp/>vec3<sp/>ambient)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>light_dir<sp/>=<sp/>light_source[0]<sp/>-<sp/>pos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>lambert<sp/>=<sp/>dot(light_dir,<sp/>norm)<sp/>/<sp/>dot(light_dir,<sp/>light_dir);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>diffuse<sp/>=<sp/>clamp(light_source[1]<sp/>*<sp/>clamp(lambert,<sp/>0.0,<sp/>1.0),<sp/>0.0,<sp/>1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>return<sp/>(diffuse<sp/>+<sp/>ambient)<sp/>*<sp/>albedo;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_FOG_SMOOTHSTEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vec3<sp/>compute_fog(vec3<sp/>color,<sp/>vec3<sp/>relative_pos,<sp/>float<sp/>fragment_alpha)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>f<sp/>=<sp/>dot(relative_pos,relative_pos)*ambient[3].w;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&quot;<sp/><sp/><sp/>f<sp/>=<sp/>rlerp(f,<sp/>-2,1);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>f<sp/>=<sp/>clamp(f,<sp/>0.0,<sp/>1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>f<sp/>=<sp/>3.0*f*f<sp/>-<sp/>2.0*f*f*f;\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>smoothstep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&quot;<sp/><sp/><sp/>f<sp/>=<sp/>f*f;\n&quot;<sp/><sp/>//<sp/>fade<sp/>in<sp/>more<sp/>smoothly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_PREMULTIPLIED_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>return<sp/>rlerp(f,<sp/>color.xyz,<sp/>ambient[3].xyz*fragment_alpha);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>return<sp/>rlerp(f,<sp/>color.xyz,<sp/>ambient[3].xyz);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="comment">//<sp/>still<sp/>requires<sp/>full<sp/>alpha<sp/>lookups,<sp/>including<sp/>tex2<sp/>if<sp/>texblend<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_fragment_program_alpha_only<sp/>=</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/>STBVOX_SHADER_VERSION</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex-shader<sp/>output<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;flat<sp/>in<sp/>uvec4<sp/><sp/>facedata;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>in<sp/><sp/>vec3<sp/><sp/>voxelspace_pos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>in<sp/>float<sp/><sp/>texlerp;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per-buffer<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec3<sp/>transform[3];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBVOX_ICONFIG_UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generally<sp/>constant<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>sampler2DArray<sp/>tex_array[2];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>samplerBuffer<sp/>texscale;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>samplerBuffer<sp/>texgen;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec4<sp/>texscale[64];\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>128,<sp/>to<sp/>avoid<sp/>running<sp/>out<sp/>of<sp/>uniforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;uniform<sp/>vec3<sp/>texgen[64];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;out<sp/>vec4<sp/><sp/>outcolor;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;void<sp/>main()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>albedo;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>fragment_alpha;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBVOX_ICONFIG_UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unpack<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>tex1_id<sp/>=<sp/>facedata.x;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>tex2_id<sp/>=<sp/>facedata.y;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>texprojid<sp/>=<sp/>facedata.w<sp/>&amp;<sp/>31u;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>uint<sp/>color_id<sp/><sp/>=<sp/>facedata.z;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>from<sp/>uniforms<sp/>/<sp/>texture<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_s<sp/>=<sp/>texgen[texprojid];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_t<sp/>=<sp/>texgen[texprojid+32u];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>tex1_scale<sp/>=<sp/>texscale[tex1_id<sp/>&amp;<sp/>63u].x;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>color<sp/>=<sp/>color_table[color_id<sp/>&amp;<sp/>63u];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex2_props<sp/>=<sp/>texscale[tex2_id<sp/>&amp;<sp/>63u];\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_s<sp/>=<sp/>texelFetch(texgen,<sp/>int(texprojid)).xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texgen_t<sp/>=<sp/>texelFetch(texgen,<sp/>int(texprojid+32u)).xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>tex1_scale<sp/>=<sp/>texelFetch(texscale,<sp/>int(tex1_id<sp/>&amp;<sp/>127u)).x;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>color<sp/>=<sp/>texelFetch(color_table,<sp/>int(color_id<sp/>&amp;<sp/>63u));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex2_props<sp/>=<sp/>texelFetch(texscale,<sp/>int(tex2_id<sp/>&amp;<sp/>127u));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>float<sp/>tex2_scale<sp/>=<sp/>tex2_props.y;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>bool<sp/>texblend_mode<sp/>=<sp/>tex2_props.z<sp/>&amp;((facedata.w<sp/>&amp;<sp/>128u)<sp/>!=<sp/>0u);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>color.a<sp/>=<sp/>min(color.a,<sp/>1.0);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec2<sp/>texcoord;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec3<sp/>texturespace_pos<sp/>=<sp/>voxelspace_pos<sp/>+<sp/>transform[2].xyz;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texcoord.s<sp/>=<sp/>dot(texturespace_pos,<sp/>texgen_s);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texcoord.t<sp/>=<sp/>dot(texturespace_pos,<sp/>texgen_t);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec2<sp/><sp/>texcoord_1<sp/>=<sp/>tex1_scale<sp/>*<sp/>texcoord;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec2<sp/><sp/>texcoord_2<sp/>=<sp/>tex2_scale<sp/>*<sp/>texcoord;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_TEX1_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>texcoord_1<sp/>=<sp/>texcoord_1<sp/>-<sp/>floor(texcoord_1);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex1<sp/>=<sp/>textureGrad(tex_array[0],<sp/>vec3(texcoord_1,<sp/>float(tex1_id)),<sp/>dFdx(tex1_scale*texcoord),<sp/>dFdy(tex1_scale*texcoord));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vec4<sp/>tex1<sp/>=<sp/>texture(tex_array[0],<sp/>vec3(texcoord_1,<sp/>float(tex1_id)));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>if<sp/>((color_id<sp/>&amp;<sp/><sp/>64u)<sp/>!=<sp/>0u)<sp/>tex1.a<sp/>*=<sp/>color.a;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>fragment_alpha<sp/>=<sp/>tex1.a;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_DISABLE_TEX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>if<sp/>(!texblend_mode)<sp/>{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_TEX2_EDGE_CLAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>texcoord_2<sp/>=<sp/>texcoord_2<sp/>-<sp/>floor(texcoord_2);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>vec4<sp/>tex2<sp/>=<sp/>textureGrad(tex_array[0],<sp/>vec3(texcoord_2,<sp/>float(tex2_id)),<sp/>dFdx(tex2_scale*texcoord),<sp/>dFdy(tex2_scale*texcoord));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>vec4<sp/>tex2<sp/>=<sp/>texture(tex_array[1],<sp/>vec3(texcoord_2,<sp/>float(tex2_id)));\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>tex2.a<sp/>*=<sp/>texlerp;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((color_id<sp/>&amp;<sp/>128u)<sp/>!=<sp/>0u)<sp/>tex2.rgba<sp/>*=<sp/>color.a;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>fragment_alpha<sp/>=<sp/>tex1.a*(1-tex2.a)+tex2.a;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else<sp/></highlight><highlight class="comment">//<sp/>UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>fragment_alpha<sp/>=<sp/>1.0;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>outcolor<sp/>=<sp/>vec4(0.0,<sp/>0.0,<sp/>0.0,<sp/>fragment_alpha);\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_get_vertex_shader(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stbvox_vertex_program;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_get_fragment_shader(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stbvox_fragment_program;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbvox_get_fragment_shader_alpha_only(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stbvox_fragment_program_alpha_only;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbvox_dummy_transform[3][3];</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBVOX_CONFIG_PREFER_TEXBUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_TEXBUF<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_TEXBUF<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref><sp/>stbvox_uniforms[]<sp/>=</highlight></codeline>
<codeline lineno="1994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_sampler<sp/><sp/>,<sp/><sp/>4,<sp/><sp/><sp/>1,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;facearray&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_vec3<sp/><sp/><sp/><sp/><sp/>,<sp/>12,<sp/><sp/><sp/>3,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;transform&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>stbvox_dummy_transform[0]<sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_sampler<sp/><sp/>,<sp/><sp/>4,<sp/><sp/><sp/>2,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;tex_array&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_vec4<sp/><sp/><sp/><sp/><sp/>,<sp/>16,<sp/>128,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;texscale&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>stbvox_default_texscale[0]<sp/>,<sp/>STBVOX_TEXBUF<sp/>},</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_vec4<sp/><sp/><sp/><sp/><sp/>,<sp/>16,<sp/><sp/>64,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;color_table&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>stbvox_default_palette[0]<sp/><sp/>,<sp/>STBVOX_TEXBUF<sp/>},</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_vec3<sp/><sp/><sp/><sp/><sp/>,<sp/>12,<sp/><sp/>32,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;normal_table&quot;</highlight><highlight class="normal"><sp/>,<sp/>stbvox_default_normals[0]<sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_vec3<sp/><sp/><sp/><sp/><sp/>,<sp/>12,<sp/><sp/>64,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;texgen&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>stbvox_default_texgen[0][0],<sp/>STBVOX_TEXBUF<sp/>},</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_vec4<sp/><sp/><sp/><sp/><sp/>,<sp/>16,<sp/><sp/><sp/>4,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;ambient&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>stbvox_default_ambient[0]<sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_UNIFORM_TYPE_vec4<sp/><sp/><sp/><sp/><sp/>,<sp/>16,<sp/><sp/><sp/>1,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;camera_pos&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>stbvox_dummy_transform[0]<sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2004"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal">STBVXDEC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_uniform_info(<ref refid="structstbvox__uniform__info" kindref="compound">stbvox_uniform_info</ref><sp/>*<ref refid="structinfo" kindref="compound">info</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uniform)</highlight></codeline>
<codeline lineno="2007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform<sp/>&lt;<sp/>0<sp/>||<sp/>uniform<sp/>&gt;=<sp/>STBVOX_UNIFORM_count)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/>*<ref refid="structinfo" kindref="compound">info</ref><sp/>=<sp/>stbvox_uniforms[uniform];</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_GET_GEO(geom_data)<sp/><sp/>((geom_data)<sp/>&amp;<sp/>15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>block:2;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>overlay:2;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>facerot:2;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ecolor:2;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal">}<sp/>stbvox_rotate;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x,y,z;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal">}<sp/>stbvox_pos;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_rotate_face[6][4]<sp/>=</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,1,2,3<sp/>},</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/>{<sp/>1,2,3,0<sp/>},</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/>{<sp/>2,3,0,1<sp/>},</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/>{<sp/>3,0,1,2<sp/>},</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/>{<sp/>4,4,4,4<sp/>},</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/>{<sp/>5,5,5,5<sp/>},</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_ROTATE(x,r)<sp/><sp/><sp/>stbvox_rotate_face[x][r]<sp/></highlight><highlight class="comment">//<sp/>(((x)+(r))&amp;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal">stbvox_mesh_face<sp/>stbvox_compute_mesh_face_value(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/>stbvox_rotate<sp/>rot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normal)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/>stbvox_mesh_face<sp/>face_data<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/>stbvox_block_type<sp/>bt<sp/>=<sp/>mm-&gt;input.blocktype[v_off];</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bt_face<sp/>=<sp/>STBVOX_ROTATE(face,<sp/>rot.block);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>facerot<sp/>=<sp/>rot.facerot;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_ICONFIG_UNTEXTURED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.rgb)<sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex1<sp/><sp/>=<sp/>mm-&gt;input.rgb[v_off].r;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex2<sp/><sp/>=<sp/>mm-&gt;input.rgb[v_off].g;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>mm-&gt;input.rgb[v_off].b;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.face_info<sp/>=<sp/>(normal&lt;&lt;2);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>face_data;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>color_face;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.color)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>mm-&gt;input.color[v_off];</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_tex1)</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex1<sp/>=<sp/>mm-&gt;input.block_tex1[bt];</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_tex1_face)</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex1<sp/>=<sp/>mm-&gt;input.block_tex1_face[bt][bt_face];</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex1<sp/>=<sp/>bt;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_tex2)</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex2<sp/>=<sp/>mm-&gt;input.block_tex2[bt];</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_tex2_face)</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex2<sp/>=<sp/>mm-&gt;input.block_tex2_face[bt][bt_face];</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_color)<sp/>{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mcol<sp/>=<sp/>mm-&gt;input.block_color[bt];</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mcol)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>mcol;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_color_face)<sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mcol<sp/>=<sp/>mm-&gt;input.block_color_face[bt][bt_face];</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mcol)</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>mcol;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face<sp/>&lt;=<sp/>STBVOX_FACE_south)<sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.side_texrot)</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facerot<sp/>=<sp/>mm-&gt;input.side_texrot[v_off]<sp/>&gt;&gt;<sp/>(2<sp/>*<sp/>face);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_side_texrot)</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facerot<sp/>=<sp/>mm-&gt;input.block_side_texrot[v_off]<sp/>&gt;&gt;<sp/>(2<sp/>*<sp/>bt_face);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.overlay)<sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>over_face<sp/>=<sp/>STBVOX_ROTATE(face,<sp/>rot.overlay);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>over<sp/>=<sp/>mm-&gt;input.overlay[v_off];</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(over)<sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.overlay_tex1)<sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rep1<sp/>=<sp/>mm-&gt;input.overlay_tex1[over][over_face];</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rep1)</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex1<sp/>=<sp/>rep1;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.overlay_tex2)<sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rep2<sp/>=<sp/>mm-&gt;input.overlay_tex2[over][over_face];</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rep2)</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex2<sp/>=<sp/>rep2;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.overlay_color)<sp/>{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rep3<sp/>=<sp/>mm-&gt;input.overlay_color[over][over_face];</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rep3)</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>rep3;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.overlay_side_texrot<sp/>&amp;&amp;<sp/>face<sp/>&lt;=<sp/>STBVOX_FACE_south)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facerot<sp/>=<sp/>mm-&gt;input.overlay_side_texrot[over]<sp/>&gt;&gt;<sp/>(2*over_face);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.tex2_for_tex1)</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex2<sp/>=<sp/>mm-&gt;input.tex2_for_tex1[face_data.tex1];</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.tex2)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex2<sp/>=<sp/>mm-&gt;input.tex2[v_off];</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.tex2_replace)<sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.tex2_facemask[v_off]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>face))</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.tex2<sp/>=<sp/>mm-&gt;input.tex2_replace[v_off];</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/>color_face<sp/>=<sp/>STBVOX_ROTATE(face,<sp/>rot.ecolor);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.extended_color)<sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>mm-&gt;input.extended_color[v_off];</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.ecolor_facemask[ec]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>color_face))</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>mm-&gt;input.ecolor_color[ec];</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.color2)<sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.color2_facemask[v_off]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>color_face))</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>mm-&gt;input.color2[v_off];</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.color3<sp/>&amp;&amp;<sp/>(mm-&gt;input.color3_facemask[v_off]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>color_face)))</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_data.color<sp/>=<sp/>mm-&gt;input.color3[v_off];</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/>face_data.face_info<sp/>=<sp/>(normal&lt;&lt;2)<sp/>+<sp/>facerot;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>face_data;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>types<sp/>of<sp/>faces<sp/>each<sp/>block<sp/>can<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_none<sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_upper<sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_lower<sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_solid<sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_diag_012,</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_diag_023,</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_diag_013,</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_diag_123,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_force<sp/><sp/><sp/>,<sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>be<sp/>covered<sp/>up,<sp/>used<sp/>for<sp/>internal<sp/>faces,<sp/>also<sp/>hides<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_partial<sp/>,<sp/></highlight><highlight class="comment">//<sp/>only<sp/>covered<sp/>by<sp/>solid,<sp/>never<sp/>covers<sp/>anything<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/>STBVOX_FT_count</highlight></codeline>
<codeline lineno="2160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_face_lerp[6]<sp/>=<sp/>{<sp/>0,2,0,2,4,4<sp/>};</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_vert3_lerp[5]<sp/>=<sp/>{<sp/>0,3,6,9,12<sp/>};</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_vert_lerp_for_face_lerp[4]<sp/>=<sp/>{<sp/>0,<sp/>4,<sp/>7,<sp/>7<sp/>};</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_face3_lerp[6]<sp/>=<sp/>{<sp/>0,3,6,9,12,14<sp/>};</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_vert_lerp_for_simple[4]<sp/>=<sp/>{<sp/>0,2,5,7<sp/>};</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_face3_updown[8]<sp/>=<sp/>{<sp/>0,2,5,7,0,2,5,7<sp/>};<sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>top<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertex<sp/>offsets<sp/>for<sp/>face<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_vertex_vector[6][4][3]<sp/>=</highlight></codeline>
<codeline lineno="2171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>1,0,1<sp/>},<sp/>{<sp/>1,1,1<sp/>},<sp/>{<sp/>1,1,0<sp/>},<sp/>{<sp/>1,0,0<sp/>}<sp/>},<sp/></highlight><highlight class="comment">//<sp/>east</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>1,1,1<sp/>},<sp/>{<sp/>0,1,1<sp/>},<sp/>{<sp/>0,1,0<sp/>},<sp/>{<sp/>1,1,0<sp/>}<sp/>},<sp/></highlight><highlight class="comment">//<sp/>north</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>0,1,1<sp/>},<sp/>{<sp/>0,0,1<sp/>},<sp/>{<sp/>0,0,0<sp/>},<sp/>{<sp/>0,1,0<sp/>}<sp/>},<sp/></highlight><highlight class="comment">//<sp/>west</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>0,0,1<sp/>},<sp/>{<sp/>1,0,1<sp/>},<sp/>{<sp/>1,0,0<sp/>},<sp/>{<sp/>0,0,0<sp/>}<sp/>},<sp/></highlight><highlight class="comment">//<sp/>south</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>0,1,1<sp/>},<sp/>{<sp/>1,1,1<sp/>},<sp/>{<sp/>1,0,1<sp/>},<sp/>{<sp/>0,0,1<sp/>}<sp/>},<sp/></highlight><highlight class="comment">//<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>0,0,0<sp/>},<sp/>{<sp/>1,0,0<sp/>},<sp/>{<sp/>1,1,0<sp/>},<sp/>{<sp/>0,1,0<sp/>}<sp/>},<sp/></highlight><highlight class="comment">//<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbvox_vertex_vector,<sp/>but<sp/>read<sp/>coordinates<sp/>as<sp/>binary<sp/>numbers,<sp/>zyx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_vertex_selector[6][4]<sp/>=</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/>{<sp/>5,7,3,1<sp/>},</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/>{<sp/>7,6,2,3<sp/>},</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/>{<sp/>6,4,0,2<sp/>},</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/>{<sp/>4,5,1,0<sp/>},</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/>{<sp/>6,7,5,4<sp/>},</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,1,3,2<sp/>},</highlight></codeline>
<codeline lineno="2189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbvox_mesh_vertex<sp/>stbvox_vmesh_delta_normal[6][4]<sp/>=</highlight></codeline>
<codeline lineno="2192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(1,0,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(1,1,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,1,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,0,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,1,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,1,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,1,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbvox_mesh_vertex<sp/>stbvox_vmesh_pre_vheight[6][4]<sp/>=</highlight></codeline>
<codeline lineno="2220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbvox_mesh_vertex<sp/>stbvox_vmesh_delta_half_z[6][4]<sp/>=</highlight></codeline>
<codeline lineno="2248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(1,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(1,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,2,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbvox_mesh_vertex<sp/>stbvox_vmesh_crossed_pair[6][4]<sp/>=</highlight></codeline>
<codeline lineno="2276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(1,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(1,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>used,<sp/>so<sp/>we<sp/>leave<sp/>it<sp/>non-degenerate<sp/>to<sp/>make<sp/>sure<sp/>it<sp/>doesn&apos;t<sp/>get<sp/>gen&apos;d<sp/>accidentally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,2,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,2,0,0)<sp/><sp/>},</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,0,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(1,1,0,0,0)<sp/>,</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,1,0,0,0)<sp/><sp/>}</highlight></codeline>
<codeline lineno="2302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_MAX_GEOM<sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_NUM_ROTATION<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>used<sp/>to<sp/>determine<sp/>if<sp/>a<sp/>face<sp/>is<sp/>ever<sp/>generated<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_hasface[STBVOX_MAX_GEOM][STBVOX_NUM_ROTATION]<sp/>=</highlight></codeline>
<codeline lineno="2309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,0,0,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,0,0,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>knockout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>solid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>transp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>slab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>slab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/>{<sp/>1|2|4|48,<sp/>8|1|2|48,<sp/>4|8|1|48,<sp/>2|4|8|48,<sp/>},<sp/></highlight><highlight class="comment">//<sp/>floor<sp/>slopes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/>{<sp/>1|2|4|48,<sp/>8|1|2|48,<sp/>4|8|1|48,<sp/>2|4|8|48,<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ceil<sp/>slopes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/>{<sp/>47,47,47,47<sp/>},<sp/></highlight><highlight class="comment">//<sp/>wall-projected<sp/>diagonal<sp/>with<sp/>down<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/>{<sp/>31,31,31,31<sp/>},<sp/></highlight><highlight class="comment">//<sp/>wall-projected<sp/>diagonal<sp/>with<sp/>up<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>crossed-pair<sp/>has<sp/>special<sp/>handling,<sp/>but<sp/>avoid<sp/>early-out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/>{<sp/>63,63,63,63<sp/>},<sp/></highlight><highlight class="comment">//<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>determines<sp/>which<sp/>face<sp/>type<sp/>above<sp/>is<sp/>visible<sp/>on<sp/>each<sp/>side<sp/>of<sp/>the<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_facetype[STBVOX_GEOM_count][6]<sp/>=</highlight></codeline>
<codeline lineno="2330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,<sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>STBVOX_GEOM_empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid<sp/>},<sp/></highlight><highlight class="comment">//<sp/>knockout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_solid<sp/>},<sp/></highlight><highlight class="comment">//<sp/>solid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force<sp/>},<sp/></highlight><highlight class="comment">//<sp/>transp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_upper,<sp/>STBVOX_FT_upper,<sp/>STBVOX_FT_upper,<sp/>STBVOX_FT_upper,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_force<sp/>},</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_lower,<sp/>STBVOX_FT_lower,<sp/>STBVOX_FT_lower,<sp/>STBVOX_FT_lower,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_solid<sp/>},</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_diag_123,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_diag_023,<sp/>STBVOX_FT_none,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_solid<sp/>},</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_diag_012,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_diag_013,<sp/>STBVOX_FT_none,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_force<sp/>},</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_diag_123,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_diag_023,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_none,<sp/>STBVOX_FT_solid<sp/>},</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_diag_012,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_diag_013,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_none<sp/>},</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>0,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>crossed<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_force<sp/>},<sp/></highlight><highlight class="comment">//<sp/>GEOM_force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_solid<sp/>},<sp/></highlight><highlight class="comment">//<sp/>floor<sp/>vheight,<sp/>all<sp/>neighbors<sp/>forced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,<sp/>STBVOX_FT_force,<sp/>STBVOX_FT_solid<sp/>},<sp/></highlight><highlight class="comment">//<sp/>floor<sp/>vheight,<sp/>all<sp/>neighbors<sp/>forced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_force<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ceil<sp/>vheight,<sp/>all<sp/>neighbors<sp/>forced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/>{<sp/>STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,STBVOX_FT_partial,<sp/>STBVOX_FT_solid,<sp/>STBVOX_FT_force<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ceil<sp/>vheight,<sp/>all<sp/>neighbors<sp/>forced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>table<sp/>indicates<sp/>what<sp/>normal<sp/>to<sp/>use<sp/>for<sp/>the<sp/>&quot;up&quot;<sp/>face<sp/>of<sp/>a<sp/>sloped<sp/>geom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO<sp/>this<sp/>could<sp/>be<sp/>done<sp/>with<sp/>math<sp/>given<sp/>the<sp/>current<sp/>arrangement<sp/>of<sp/>the<sp/>enum,<sp/>but<sp/>let&apos;s<sp/>not<sp/>require<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_floor_slope_for_rot[4]<sp/>=</highlight></codeline>
<codeline lineno="2355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/>STBVF_su,</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/>STBVF_wu,<sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>why<sp/>is<sp/>this<sp/>reversed<sp/>from<sp/>what<sp/>it<sp/>should<sp/>be?<sp/>this<sp/>is<sp/>a<sp/>north-is-up<sp/>face,<sp/>so<sp/>slope<sp/>should<sp/>be<sp/>south&amp;up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/>STBVF_nu,</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/>STBVF_eu,</highlight></codeline>
<codeline lineno="2360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_ceil_slope_for_rot[4]<sp/>=</highlight></codeline>
<codeline lineno="2363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/>STBVF_sd,</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/>STBVF_ed,</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/>STBVF_nd,</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/>STBVF_wd,</highlight></codeline>
<codeline lineno="2368"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>table<sp/>indicates<sp/>whether,<sp/>for<sp/>each<sp/>pair<sp/>of<sp/>types<sp/>above,<sp/>a<sp/>face<sp/>is<sp/>visible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>each<sp/>value<sp/>indicates<sp/>whether<sp/>a<sp/>given<sp/>type<sp/>is<sp/>visible<sp/>for<sp/>all<sp/>neighbor<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>stbvox_face_visible[STBVOX_FT_count]<sp/>=</highlight></codeline>
<codeline lineno="2373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>encode<sp/>the<sp/>table<sp/>by<sp/>listing<sp/>which<sp/>cases<sp/>cause<sp/>*obscuration*,<sp/>and<sp/>bitwise<sp/>inverting<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>table<sp/>is<sp/>pre-shifted<sp/>by<sp/>5<sp/>to<sp/>save<sp/>a<sp/>shift<sp/>when<sp/>it&apos;s<sp/>accessed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<sp/>((~0x07ffu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>none<sp/>is<sp/>completely<sp/>obscured<sp/>by<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/>|<sp/>(1&lt;&lt;STBVOX_FT_upper)<sp/><sp/><sp/>))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>upper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/>|<sp/>(1&lt;&lt;STBVOX_FT_lower)<sp/><sp/><sp/>))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>solid<sp/>is<sp/>only<sp/>completely<sp/>obscured<sp/>only<sp/>by<sp/>solid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/>|<sp/>(1&lt;&lt;STBVOX_FT_diag_013)))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>diag012<sp/>matches<sp/>diag013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/>|<sp/>(1&lt;&lt;STBVOX_FT_diag_123)))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>diag023<sp/>matches<sp/>diag123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/>|<sp/>(1&lt;&lt;STBVOX_FT_diag_012)))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>diag013<sp/>matches<sp/>diag012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/>|<sp/>(1&lt;&lt;STBVOX_FT_diag_023)))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>diag123<sp/>matches<sp/>diag023</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<sp/>((~0u<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>is<sp/>always<sp/>rendered<sp/>regardless,<sp/>always<sp/>forces<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>((~((1u&lt;&lt;STBVOX_FT_solid)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))&lt;&lt;5),<sp/><sp/></highlight><highlight class="comment">//<sp/>partial<sp/>is<sp/>only<sp/>completely<sp/>obscured<sp/>only<sp/>by<sp/>solid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>vertex<sp/>heights<sp/>of<sp/>the<sp/>block<sp/>types,<sp/>in<sp/>binary<sp/>vertex<sp/>order<sp/>(zyx):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lower:<sp/>SW,<sp/>SE,<sp/>NW,<sp/>NE;<sp/>upper:<sp/>SW,<sp/>SE,<sp/>NW,<sp/>NE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbvox_mesh_vertex<sp/>stbvox_geometry_vheight[8][8]<sp/>=</highlight></codeline>
<codeline lineno="2391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBVOX_HEIGHTS(a,b,c,d,e,f,g,h)<sp/>\</highlight></codeline>
<codeline lineno="2393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>{<sp/>stbvox_vertex_encode(0,0,a,0,0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="2394"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,b,0,0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="2395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,c,0,0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="2396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,d,0,0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="2397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,e,0,0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="2398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,f,0,0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="2399"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,g,0,0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="2400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_vertex_encode(0,0,h,0,0)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(0,0,0,0,<sp/>2,2,2,2),</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(0,0,0,0,<sp/>2,2,2,2),</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(0,0,0,0,<sp/>2,2,2,2),</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(0,0,0,0,<sp/>2,2,2,2),</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(1,1,1,1,<sp/>2,2,2,2),</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(0,0,0,0,<sp/>1,1,1,1),</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(0,0,0,0,<sp/>0,0,2,2),</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/>STBVOX_HEIGHTS(2,2,0,0,<sp/>2,2,2,2),</highlight></codeline>
<codeline lineno="2410"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotate<sp/>vertices<sp/>defined<sp/>as<sp/>[z][y][x]<sp/>coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_rotate_vertex[8][4]<sp/>=</highlight></codeline>
<codeline lineno="2414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/>{<sp/>0,1,3,2<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/>{<sp/>1,3,2,0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/>{<sp/>2,0,1,3<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/>{<sp/>3,2,0,1<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/>{<sp/>4,5,7,6<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/>{<sp/>5,7,6,4<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/>{<sp/>6,4,5,7<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/>{<sp/>7,6,4,5<sp/>},<sp/></highlight><highlight class="comment">//<sp/>zyx=111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBVOX_CONFIG_OPTIMIZED_VHEIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>optimized<sp/>vheight<sp/>generates<sp/>a<sp/>single<sp/>normal<sp/>over<sp/>the<sp/>entire<sp/>face,<sp/>even<sp/>if<sp/>it&apos;s<sp/>not<sp/>planar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_optimized_face_up_normal[4][4][4][4]<sp/>=</highlight></codeline>
<codeline lineno="2428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="2518"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>normal<sp/>to<sp/>use<sp/>for<sp/>a<sp/>given<sp/>vheight<sp/>that&apos;s<sp/>planar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO:<sp/>this<sp/>table<sp/>was<sp/>constructed<sp/>by<sp/>hand<sp/>and<sp/>may<sp/>have<sp/>bugs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nw<sp/>se<sp/>sw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_planar_face_up_normal[4][4][4]<sp/>=</highlight></codeline>
<codeline lineno="2524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sw,se,nw,ne;<sp/><sp/>ne<sp/>=<sp/>se+nw-sw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,0,0,0;<sp/>1,0,0,-1;<sp/>2,0,0,-2;<sp/>3,0,0,-3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,1,0,1;<sp/>1,1,0,<sp/>0;<sp/>2,1,0,-1;<sp/>3,1,0,-2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,2,0,2;<sp/>1,2,0,<sp/>1;<sp/>2,2,0,<sp/>0;<sp/>3,2,0,-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,3,0,3;<sp/>1,3,0,<sp/>2;<sp/>2,3,0,<sp/>1;<sp/>3,3,0,<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,0,1,1;<sp/>1,0,1,<sp/>0;<sp/>2,0,1,-1;<sp/>3,0,1,-2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,1,1,2;<sp/>1,1,1,<sp/>1;<sp/>2,1,1,<sp/>0;<sp/>3,1,1,-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u<sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,2,1,3;<sp/>1,2,1,<sp/>2;<sp/>2,2,1,<sp/>1;<sp/>3,2,1,<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,3,1,4;<sp/>1,3,1,<sp/>3;<sp/>2,3,1,<sp/>2;<sp/>3,3,1,<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_se_u,<sp/>STBVF_eu<sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,0,2,2;<sp/>1,0,2,<sp/>1;<sp/>2,0,2,<sp/>0;<sp/>3,0,2,-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u<sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,1,2,3;<sp/>1,1,2,<sp/>2;<sp/>2,1,2,<sp/>1;<sp/>3,1,2,<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u<sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,2,2,4;<sp/>1,2,2,<sp/>3;<sp/>2,2,2,<sp/>2;<sp/>3,2,2,<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,3,2,5;<sp/>1,3,2,<sp/>4;<sp/>2,3,2,<sp/>3;<sp/>3,3,2,<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_se_u,<sp/>STBVF_se_u,<sp/>STBVF_eu<sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,0,3,3;<sp/>1,0,3,<sp/>2;<sp/>2,0,3,<sp/>1;<sp/>3,0,3,<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_se_u,<sp/>STBVF_eu<sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,1,3,4;<sp/>1,1,3,<sp/>3;<sp/>2,1,3,<sp/>2;<sp/>3,1,3,<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,2,3,5;<sp/>1,2,3,<sp/>4;<sp/>2,2,3,<sp/>3;<sp/>3,2,3,<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/><sp/>0,3,3,6;<sp/>1,3,3,<sp/>5;<sp/>2,3,3,<sp/>4;<sp/>3,3,3,<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>tables<sp/>were<sp/>constructed<sp/>automatically<sp/>using<sp/>a<sp/>variant<sp/>of<sp/>the<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>below;<sp/>however,<sp/>they<sp/>seem<sp/>wrong,<sp/>so<sp/>who<sp/>knows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_face_up_normal_012[4][4][4]<sp/>=</highlight></codeline>
<codeline lineno="2551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2573"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_face_up_normal_013[4][4][4]<sp/>=</highlight></codeline>
<codeline lineno="2576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_face_up_normal_023[4][4][4]<sp/>=</highlight></codeline>
<codeline lineno="2601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_face_up_normal_123[4][4][4]<sp/>=</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>STBVF_nw_u,<sp/>},</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_nu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_eu<sp/><sp/>,<sp/>STBVF_ne_u,<sp/>},</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/>},{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_sw_u,<sp/>STBVF_wu<sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_su<sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>},</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2648"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_get_quad_vertex_pointer(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh,<sp/>stbvox_mesh_vertex<sp/>**vertices,<sp/>stbvox_mesh_face<sp/>face)</highlight></codeline>
<codeline lineno="2652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>mm-&gt;output_cur[mesh][0];</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>=<sp/>mm-&gt;output_step[mesh][0];</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>a<sp/>new<sp/>quad<sp/>from<sp/>the<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/>vertices[0]<sp/>=<sp/>(stbvox_mesh_vertex<sp/>*)<sp/>p;<sp/>p<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/>vertices[1]<sp/>=<sp/>(stbvox_mesh_vertex<sp/>*)<sp/>p;<sp/>p<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/>vertices[2]<sp/>=<sp/>(stbvox_mesh_vertex<sp/>*)<sp/>p;<sp/>p<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/>vertices[3]<sp/>=<sp/>(stbvox_mesh_vertex<sp/>*)<sp/>p;<sp/>p<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;output_cur[mesh][0]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>the<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_ICONFIG_FACE_ATTRIBUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>face<sp/>as<sp/>interleaved<sp/>vertex<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(stbvox_mesh_face<sp/>*)<sp/>(vertices[0]+1)<sp/>=<sp/>face;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(stbvox_mesh_face<sp/>*)<sp/>(vertices[1]+1)<sp/>=<sp/>face;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(stbvox_mesh_face<sp/>*)<sp/>(vertices[2]+1)<sp/>=<sp/>face;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(stbvox_mesh_face<sp/>*)<sp/>(vertices[3]+1)<sp/>=<sp/>face;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(stbvox_mesh_face<sp/>*)<sp/>mm-&gt;output_cur[mesh][1]<sp/>=<sp/>face;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_cur[mesh][1]<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="2674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_make_mesh_for_face(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/>stbvox_rotate<sp/>rot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_off,<sp/>stbvox_pos<sp/>pos,<sp/>stbvox_mesh_vertex<sp/>vertbase,<sp/>stbvox_mesh_vertex<sp/>*face_coord,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normal)</highlight></codeline>
<codeline lineno="2677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/>stbvox_mesh_face<sp/>face_data<sp/>=<sp/>stbvox_compute_mesh_face_value(mm,rot,face,v_off,<sp/>normal);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>still<sp/>need<sp/>to<sp/>compute<sp/>ao<sp/>&amp;<sp/>texlerp<sp/>for<sp/>each<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>compute<sp/>texlerp<sp/>into<sp/>p1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>p1[4]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined(STBVOX_CONFIG_DOWN_TEXLERP_PACKED)<sp/>&amp;&amp;<sp/>defined(STBVOX_CONFIG_UP_TEXLERP_PACKED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBVOX_USE_PACKED(f)<sp/>((f)<sp/>==<sp/>STBVOX_FACE_up<sp/>||<sp/>(f)<sp/>==<sp/>STBVOX_FACE_down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#elif<sp/>defined(STBVOX_CONFIG_UP_TEXLERP_PACKED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBVOX_USE_PACKED(f)<sp/>((f)<sp/>==<sp/>STBVOX_FACE_up<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#elif<sp/>defined(STBVOX_CONFIG_DOWN_TEXLERP_PACKED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBVOX_USE_PACKED(f)<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(f)<sp/>==<sp/>STBVOX_FACE_down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined(STBVOX_CONFIG_DOWN_TEXLERP_PACKED)<sp/>||<sp/>defined(STBVOX_CONFIG_UP_TEXLERP_PACKED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(STBVOX_USE_PACKED(face))<sp/>{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mm-&gt;input.packed_compact<sp/>||<sp/>0==(mm-&gt;input.packed_compact[v_off]&amp;16))</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>set_default;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][0]]<sp/>&gt;&gt;<sp/>5);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[1]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][1]]<sp/>&gt;&gt;<sp/>5);</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[2]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][2]]<sp/>&gt;&gt;<sp/>5);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[3]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][3]]<sp/>&gt;&gt;<sp/>5);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[0]);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[1]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[1]);</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[2]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[2]);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[3]);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>skip;</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_texlerp)<sp/>{</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_block_type<sp/>bt<sp/>=<sp/>mm-&gt;input.blocktype[v_off];</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>mm-&gt;input.block_texlerp[bt];</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>p1[1]<sp/>=<sp/>p1[2]<sp/>=<sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,val);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_texlerp_face)<sp/>{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_block_type<sp/>bt<sp/>=<sp/>mm-&gt;input.blocktype[v_off];</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bt_face<sp/>=<sp/>STBVOX_ROTATE(face,<sp/>rot.block);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>mm-&gt;input.block_texlerp_face[bt][bt_face];</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>p1[1]<sp/>=<sp/>p1[2]<sp/>=<sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,val);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.texlerp_face3)<sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>(mm-&gt;input.texlerp_face3[v_off]<sp/>&gt;&gt;<sp/>stbvox_face3_lerp[face])<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face<sp/>&gt;=<sp/>STBVOX_FACE_up)</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>stbvox_face3_updown[val];</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>p1[1]<sp/>=<sp/>p1[2]<sp/>=<sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,val);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.texlerp_simple)<sp/>{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>mm-&gt;input.texlerp_simple[v_off];</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lerp_face<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lerp_face<sp/>==<sp/>face)<sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>(mm-&gt;input.texlerp_simple[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][0]]<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[1]<sp/>=<sp/>(mm-&gt;input.texlerp_simple[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][1]]<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[2]<sp/>=<sp/>(mm-&gt;input.texlerp_simple[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][2]]<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[3]<sp/>=<sp/>(mm-&gt;input.texlerp_simple[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][3]]<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[0]);</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[1]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[1]);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[2]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[2]);</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[3]);</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>base<sp/>=<sp/>stbvox_vert_lerp_for_simple[val&amp;3];</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>p1[1]<sp/>=<sp/>p1[2]<sp/>=<sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,base);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.texlerp)<sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>facelerp<sp/>=<sp/>(mm-&gt;input.texlerp[v_off]<sp/>&gt;&gt;<sp/>stbvox_face_lerp[face])<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(facelerp<sp/>==<sp/>STBVOX_TEXLERP_FACE_use_vert)<sp/>{</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.texlerp_vert3<sp/>&amp;&amp;<sp/>face<sp/>!=<sp/>STBVOX_FACE_down)<sp/>{</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>stbvox_vert3_lerp[face];</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>(mm-&gt;input.texlerp_vert3[mm-&gt;cube_vertex_offset[face][0]]<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[1]<sp/>=<sp/>(mm-&gt;input.texlerp_vert3[mm-&gt;cube_vertex_offset[face][1]]<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[2]<sp/>=<sp/>(mm-&gt;input.texlerp_vert3[mm-&gt;cube_vertex_offset[face][2]]<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[3]<sp/>=<sp/>(mm-&gt;input.texlerp_vert3[mm-&gt;cube_vertex_offset[face][3]]<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>stbvox_vert_lerp_for_simple[mm-&gt;input.texlerp[mm-&gt;cube_vertex_offset[face][0]]&gt;&gt;6];</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[1]<sp/>=<sp/>stbvox_vert_lerp_for_simple[mm-&gt;input.texlerp[mm-&gt;cube_vertex_offset[face][1]]&gt;&gt;6];</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[2]<sp/>=<sp/>stbvox_vert_lerp_for_simple[mm-&gt;input.texlerp[mm-&gt;cube_vertex_offset[face][2]]&gt;&gt;6];</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[3]<sp/>=<sp/>stbvox_vert_lerp_for_simple[mm-&gt;input.texlerp[mm-&gt;cube_vertex_offset[face][3]]&gt;&gt;6];</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[0]);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[1]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[1]);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[2]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[2]);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,p1[3]);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>p1[1]<sp/>=<sp/>p1[2]<sp/>=<sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,stbvox_vert_lerp_for_face_lerp[facelerp]);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(STBVOX_CONFIG_UP_TEXLERP_PACKED)<sp/>||<sp/>defined(STBVOX_CONFIG_DOWN_TEXLERP_PACKED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_default:</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1[0]<sp/>=<sp/>p1[1]<sp/>=<sp/>p1[2]<sp/>=<sp/>p1[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,7);<sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>make<sp/>this<sp/>configurable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined(STBVOX_CONFIG_UP_TEXLERP_PACKED)<sp/>||<sp/>defined(STBVOX_CONFIG_DOWN_TEXLERP_PACKED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/>skip:</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>compute<sp/>lighting<sp/>and<sp/>store<sp/>to<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>*mv[4];</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_get_quad_vertex_pointer(mm,<sp/>mesh,<sp/>mv,<sp/>face_data);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.lighting)<sp/>{</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>lighting<sp/>at<sp/>block<sp/>centers,<sp/>but<sp/>not<sp/>gathered,<sp/>instead<sp/>constant-per-face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.lighting_at_vertices)<sp/>{</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mv[i]<sp/>=<sp/>vertbase<sp/>+<sp/>face_coord[i]</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>stbvox_vertex_encode(0,0,0,mm-&gt;input.lighting[v_off<sp/>+<sp/>mm-&gt;cube_vertex_offset[face][i]]<sp/>&amp;<sp/>63,0)</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>p1[i];</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*amb<sp/>=<sp/>&amp;mm-&gt;input.lighting[v_off];</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(STBVOX_CONFIG_ROTATION_IN_LIGHTING)<sp/>||<sp/>defined(STBVOX_CONFIG_VHEIGHT_IN_LIGHTING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBVOX_GET_LIGHTING(light)<sp/>((light)<sp/>&amp;<sp/>~3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBVOX_LIGHTING_ROUNDOFF<sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBVOX_GET_LIGHTING(light)<sp/>(light)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBVOX_LIGHTING_ROUNDOFF<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>vertex,<sp/>gather<sp/>from<sp/>the<sp/>four<sp/>neighbor<sp/>blocks<sp/>it&apos;s<sp/>facing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vamb<sp/>=<sp/>&amp;amb[mm-&gt;cube_vertex_offset[face][i]];</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total=0;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>STBVOX_GET_LIGHTING(vamb[mm-&gt;vertex_gather_offset[face][j]]);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mv[i]<sp/>=<sp/>vertbase<sp/>+<sp/>face_coord[i]</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>stbvox_vertex_encode(0,0,0,(total+STBVOX_LIGHTING_ROUNDOFF)&gt;&gt;4,0)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>p1[i];</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;&gt;<sp/>4<sp/>is<sp/>because:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&gt;&gt;<sp/>2<sp/>to<sp/>divide<sp/>by<sp/>4<sp/>to<sp/>get<sp/>average<sp/>over<sp/>4<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&gt;&gt;<sp/>2<sp/>because<sp/>input<sp/>is<sp/>8<sp/>bits,<sp/>output<sp/>is<sp/>6<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>note<sp/>that<sp/>gathering<sp/>baked<sp/>*lighting*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>different<sp/>from<sp/>gathering<sp/>baked<sp/>ao;<sp/>baked<sp/>ao<sp/>can<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solid<sp/>blocks<sp/>as<sp/>0<sp/>ao,<sp/>but<sp/>baked<sp/>lighting<sp/>wants<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>non-blocked--not<sp/>take<sp/>average<sp/>&amp;<sp/>treat<sp/>blocked<sp/>as<sp/>0.<sp/>And</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>bake<sp/>the<sp/>right<sp/>value<sp/>into<sp/>the<sp/>solid<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>they<sp/>can<sp/>have<sp/>different<sp/>lighting<sp/>values<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>sides.<sp/>So<sp/>we<sp/>need<sp/>to<sp/>actually<sp/>gather<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>divide<sp/>by<sp/>0..4<sp/>(which<sp/>we<sp/>can<sp/>do<sp/>with<sp/>a<sp/>table-driven</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply,<sp/>or<sp/>have<sp/>an<sp/>&apos;if&apos;<sp/>for<sp/>the<sp/>3<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertbase<sp/>+=<sp/>stbvox_vertex_encode(0,0,0,63,0);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mv[0]<sp/>=<sp/>vertbase<sp/>+<sp/>face_coord[0]<sp/>+<sp/>p1[0];</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mv[1]<sp/>=<sp/>vertbase<sp/>+<sp/>face_coord[1]<sp/>+<sp/>p1[1];</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mv[2]<sp/>=<sp/>vertbase<sp/>+<sp/>face_coord[2]<sp/>+<sp/>p1[2];</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mv[3]<sp/>=<sp/>vertbase<sp/>+<sp/>face_coord[3]<sp/>+<sp/>p1[3];</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>opposite-facing<sp/>normal<sp/>&amp;<sp/>texgen<sp/>for<sp/>opposite<sp/>face,<sp/>used<sp/>to<sp/>map<sp/>up-facing<sp/>vheight<sp/>data<sp/>to<sp/>down-facing<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbvox_reverse_face[STBVF_count]<sp/>=</highlight></codeline>
<codeline lineno="2834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/>STBVF_w,<sp/>STBVF_s,<sp/>STBVF_e,<sp/>STBVF_n,<sp/>STBVF_d<sp/><sp/><sp/>,<sp/>STBVF_u<sp/><sp/><sp/>,<sp/>STBVF_wd,<sp/>STBVF_wu,</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>STBVF_sw_d,<sp/>STBVF_sw_u,<sp/>STBVF_sd,<sp/>STBVF_su,</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>STBVF_se_d,<sp/>STBVF_se_u,<sp/>STBVF_ed,<sp/>STBVF_eu,</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>STBVF_ne_d,<sp/>STBVF_ne_d,<sp/>STBVF_nd,<sp/>STBVF_nu</highlight></codeline>
<codeline lineno="2839"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBVOX_CONFIG_OPTIMIZED_VHEIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight><highlight class="comment">//<sp/>render<sp/>non-planar<sp/>quads<sp/>by<sp/>splitting<sp/>into<sp/>two<sp/>triangles,<sp/>rendering<sp/>each<sp/>as<sp/>a<sp/>degenerate<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_make_12_split_mesh_for_face(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/>stbvox_rotate<sp/>rot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_off,<sp/>stbvox_pos<sp/>pos,<sp/>stbvox_mesh_vertex<sp/>vertbase,<sp/>stbvox_mesh_vertex<sp/>*face_coord,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mesh,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ht)</highlight></codeline>
<codeline lineno="2844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>v[4];</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>normal1<sp/>=<sp/>stbvox_face_up_normal_012[ht[2]][ht[1]][ht[0]];</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>normal2<sp/>=<sp/>stbvox_face_up_normal_123[ht[3]][ht[2]][ht[1]];</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face<sp/>==<sp/>STBVOX_FACE_down)<sp/>{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normal1<sp/>=<sp/>stbvox_reverse_face[normal1];</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normal2<sp/>=<sp/>stbvox_reverse_face[normal2];</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>floor<sp/>side<sp/>face_coord<sp/>is<sp/>stored<sp/>in<sp/>order<sp/>NW,NE,SE,SW,<sp/>but<sp/>ht[]<sp/>is<sp/>stored<sp/>SW,SE,NW,NE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/>v[0]<sp/>=<sp/>face_coord[2];</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/>v[1]<sp/>=<sp/>face_coord[3];</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/>v[2]<sp/>=<sp/>face_coord[0];</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/>v[3]<sp/>=<sp/>face_coord[2];</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>face,<sp/>v_off,<sp/>pos,<sp/>vertbase,<sp/>v,<sp/>mesh,<sp/>normal1);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/>v[1]<sp/>=<sp/>face_coord[0];</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/>v[2]<sp/>=<sp/>face_coord[1];</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>face,<sp/>v_off,<sp/>pos,<sp/>vertbase,<sp/>v,<sp/>mesh,<sp/>normal2);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_make_03_split_mesh_for_face(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/>stbvox_rotate<sp/>rot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_off,<sp/>stbvox_pos<sp/>pos,<sp/>stbvox_mesh_vertex<sp/>vertbase,<sp/>stbvox_mesh_vertex<sp/>*face_coord,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mesh,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ht)</highlight></codeline>
<codeline lineno="2867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>v[4];</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>normal1<sp/>=<sp/>stbvox_face_up_normal_013[ht[3]][ht[1]][ht[0]];</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>normal2<sp/>=<sp/>stbvox_face_up_normal_023[ht[3]][ht[2]][ht[0]];</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face<sp/>==<sp/>STBVOX_FACE_down)<sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normal1<sp/>=<sp/>stbvox_reverse_face[normal1];</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normal2<sp/>=<sp/>stbvox_reverse_face[normal2];</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/>v[0]<sp/>=<sp/>face_coord[1];</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/>v[1]<sp/>=<sp/>face_coord[2];</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/>v[2]<sp/>=<sp/>face_coord[3];</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/>v[3]<sp/>=<sp/>face_coord[1];</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>face,<sp/>v_off,<sp/>pos,<sp/>vertbase,<sp/>v,<sp/>mesh,<sp/>normal1);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/>v[1]<sp/>=<sp/>face_coord[3];</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/>v[2]<sp/>=<sp/>face_coord[0];</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>face,<sp/>v_off,<sp/>pos,<sp/>vertbase,<sp/>v,<sp/>mesh,<sp/>normal2);<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>one<sp/>is<sp/>correct!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBVOX_CONFIG_PRECISION_Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBVOX_CONFIG_PRECISION_Z<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight><highlight class="comment">//<sp/>simple<sp/>case<sp/>for<sp/>mesh<sp/>generation:<sp/>we<sp/>have<sp/>only<sp/>solid<sp/>and<sp/>empty<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_make_mesh_for_block(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/>stbvox_pos<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_off,<sp/>stbvox_mesh_vertex<sp/>*vmesh)</highlight></codeline>
<codeline lineno="2895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ns_off<sp/>=<sp/>mm-&gt;y_stride_in_bytes;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ew_off<sp/>=<sp/>mm-&gt;x_stride_in_bytes;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*blockptr<sp/>=<sp/>&amp;mm-&gt;input.blocktype[v_off];</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>basevert<sp/>=<sp/>stbvox_vertex_encode(pos.x,<sp/>pos.y,<sp/>pos.z<sp/>&lt;&lt;<sp/>STBVOX_CONFIG_PRECISION_Z<sp/>,<sp/>0,0);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/>stbvox_rotate<sp/>rot<sp/>=<sp/>{<sp/>0,0,0,0<sp/>};</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>simple_rot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mesh<sp/>=<sp/>mm-&gt;default_mesh;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.selector)</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.selector[v_off];</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_selector)</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.block_selector[mm-&gt;input.blocktype[v_off]];</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we&apos;re<sp/>going<sp/>off<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;output_cur[mesh][0]<sp/>+<sp/>mm-&gt;output_size[mesh][0]*6<sp/>&gt;<sp/>mm-&gt;output_end[mesh][0])<sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;full<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/>simple_rot<sp/>=<sp/>mm-&gt;input.lighting[v_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.packed_compact)</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>simple_rot<sp/>=<sp/>mm-&gt;input.packed_compact[v_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockptr[<sp/>1]==0)<sp/>{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.facerot<sp/>=<sp/>simple_rot;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_up<sp/><sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh+4*STBVOX_FACE_up,<sp/>mesh,<sp/>STBVOX_FACE_up);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockptr[-1]==0)<sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.facerot<sp/>=<sp/>(-simple_rot)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh+4*STBVOX_FACE_down,<sp/>mesh,<sp/>STBVOX_FACE_down);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.rotate)<sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>mm-&gt;input.rotate[v_off];</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.block<sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.overlay<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rot.tex2<sp/><sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.ecolor<sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.block<sp/>=<sp/>rot.overlay<sp/>=<sp/>rot.ecolor<sp/>=<sp/>simple_rot;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/>rot.facerot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockptr[<sp/>ns_off]==0)</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_north,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh+4*STBVOX_FACE_north,<sp/>mesh,<sp/>STBVOX_FACE_north);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockptr[-ns_off]==0)</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_south,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh+4*STBVOX_FACE_south,<sp/>mesh,<sp/>STBVOX_FACE_south);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockptr[<sp/>ew_off]==0)</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_east<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh+4*STBVOX_FACE_east,<sp/>mesh,<sp/>STBVOX_FACE_east);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockptr[-ew_off]==0)</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_west<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh+4*STBVOX_FACE_west,<sp/>mesh,<sp/>STBVOX_FACE_west);</highlight></codeline>
<codeline lineno="2953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight><highlight class="comment">//<sp/>complex<sp/>case<sp/>for<sp/>mesh<sp/>generation:<sp/>we<sp/>have<sp/>lots<sp/>of<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight><highlight class="comment">//<sp/>block<sp/>types,<sp/>and<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>generate<sp/>faces<sp/>of<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>they&apos;re<sp/>hidden<sp/>by<sp/>neighbors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>lots<sp/>of<sp/>tables<sp/>to<sp/>determine<sp/>this:<sp/>we<sp/>have<sp/>a<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>tells<sp/>us<sp/>what<sp/>face<sp/>type<sp/>is<sp/>generated<sp/>for<sp/>each<sp/>type<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight><highlight class="comment">//<sp/>geometry,<sp/>and<sp/>then<sp/>a<sp/>table<sp/>that<sp/>tells<sp/>us<sp/>whether<sp/>that<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>hidden<sp/>by<sp/>a<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_make_mesh_for_block_with_geo(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/>stbvox_pos<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_off)</highlight></codeline>
<codeline lineno="2964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ns_off<sp/>=<sp/>mm-&gt;y_stride_in_bytes;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ew_off<sp/>=<sp/>mm-&gt;x_stride_in_bytes;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>visible_faces,<sp/>visible_base;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mesh;</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>gather<sp/>the<sp/>geometry<sp/>info<sp/>for<sp/>this<sp/>block<sp/>and<sp/>all<sp/>neighbors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bt,<sp/><ref refid="structnbt" kindref="compound">nbt</ref>[6];</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>geo,<sp/>ngeo[6];</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rot,<sp/>nrot[6];</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/>bt<sp/>=<sp/>mm-&gt;input.blocktype[v_off];</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><ref refid="structnbt" kindref="compound">nbt</ref>[0]<sp/>=<sp/>mm-&gt;input.blocktype[v_off<sp/>+<sp/>ew_off];</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><ref refid="structnbt" kindref="compound">nbt</ref>[1]<sp/>=<sp/>mm-&gt;input.blocktype[v_off<sp/>+<sp/>ns_off];</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><ref refid="structnbt" kindref="compound">nbt</ref>[2]<sp/>=<sp/>mm-&gt;input.blocktype[v_off<sp/>-<sp/>ew_off];</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><ref refid="structnbt" kindref="compound">nbt</ref>[3]<sp/>=<sp/>mm-&gt;input.blocktype[v_off<sp/>-<sp/>ns_off];</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><ref refid="structnbt" kindref="compound">nbt</ref>[4]<sp/>=<sp/>mm-&gt;input.blocktype[v_off<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>1];</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><ref refid="structnbt" kindref="compound">nbt</ref>[5]<sp/>=<sp/>mm-&gt;input.blocktype[v_off<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/>1];</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.geometry)<sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geo<sp/>=<sp/>mm-&gt;input.geometry[v_off];</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[0]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/>+<sp/>ew_off];</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[1]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/>+<sp/>ns_off];</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[2]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/>-<sp/>ew_off];</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[3]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/>-<sp/>ns_off];</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[4]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>1];</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[5]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/>1];</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot<sp/>=<sp/>(geo<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geo<sp/>&amp;=<sp/>15;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[i]<sp/>=<sp/>(ngeo[i]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[i]<sp/>&amp;=<sp/>15;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(mm-&gt;input.block_geometry);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geo<sp/>=<sp/>mm-&gt;input.block_geometry[bt];</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[i]<sp/>=<sp/>mm-&gt;input.block_geometry[<ref refid="structnbt" kindref="compound">nbt</ref>[i]];</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(mm-&gt;input.selector)<sp/>{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.packed_compact<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot<sp/><sp/><sp/><sp/><sp/>=<sp/>(mm-&gt;input.selector[v_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[0]<sp/>=<sp/>(mm-&gt;input.selector[v_off<sp/>+<sp/>ew_off]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[1]<sp/>=<sp/>(mm-&gt;input.selector[v_off<sp/>+<sp/>ns_off]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[2]<sp/>=<sp/>(mm-&gt;input.selector[v_off<sp/>-<sp/>ew_off]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[3]<sp/>=<sp/>(mm-&gt;input.selector[v_off<sp/>-<sp/>ns_off]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[4]<sp/>=<sp/>(mm-&gt;input.selector[v_off<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>1]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[5]<sp/>=<sp/>(mm-&gt;input.selector[v_off<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/>1]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.packed_compact<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot<sp/>=<sp/>(geo&gt;&gt;4)&amp;3;</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo<sp/>&amp;=<sp/>15;</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrot[i]<sp/>=<sp/>(ngeo[i]&gt;&gt;4)&amp;3;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[i]<sp/>&amp;=<sp/>15;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_ROTATION_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.packed_compact)<sp/>{</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot<sp/>=<sp/>mm-&gt;input.packed_compact[rot]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nrot[0]<sp/>=<sp/>mm-&gt;input.packed_compact[v_off<sp/>+<sp/>ew_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nrot[1]<sp/>=<sp/>mm-&gt;input.packed_compact[v_off<sp/>+<sp/>ns_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nrot[2]<sp/>=<sp/>mm-&gt;input.packed_compact[v_off<sp/>-<sp/>ew_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nrot[3]<sp/>=<sp/>mm-&gt;input.packed_compact[v_off<sp/>-<sp/>ns_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nrot[4]<sp/>=<sp/>mm-&gt;input.packed_compact[v_off<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>1]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nrot[5]<sp/>=<sp/>mm-&gt;input.packed_compact[v_off<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/>1]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/>rot<sp/>=<sp/>mm-&gt;input.lighting[v_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/>nrot[0]<sp/>=<sp/>(mm-&gt;input.lighting[v_off<sp/>+<sp/>ew_off])<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/>nrot[1]<sp/>=<sp/>(mm-&gt;input.lighting[v_off<sp/>+<sp/>ns_off])<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/>nrot[2]<sp/>=<sp/>(mm-&gt;input.lighting[v_off<sp/>-<sp/>ew_off])<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/>nrot[3]<sp/>=<sp/>(mm-&gt;input.lighting[v_off<sp/>-<sp/>ns_off])<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/>nrot[4]<sp/>=<sp/>(mm-&gt;input.lighting[v_off<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>1])<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/>nrot[5]<sp/>=<sp/>(mm-&gt;input.lighting[v_off<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/>1])<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>==<sp/>STBVOX_GEOM_transp)<sp/>{</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transparency<sp/>has<sp/>a<sp/>special<sp/>rule:<sp/>if<sp/>the<sp/>blocktype<sp/>is<sp/>the<sp/>same,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>faces<sp/>are<sp/>compatible,<sp/>then<sp/>can<sp/>hide<sp/>them;<sp/>otherwise,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>them<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>means<sp/>we<sp/>don&apos;t<sp/>support<sp/>any<sp/>transparentshapes<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>solid<sp/>blocks,<sp/>since<sp/>detecting<sp/>them<sp/>is<sp/>too<sp/>complicated.<sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>wanted<sp/>to<sp/>do<sp/>something<sp/>like<sp/>minecraft<sp/>water,<sp/>you<sp/>probably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>just<sp/>do<sp/>that<sp/>with<sp/>a<sp/>separate<sp/>renderer<sp/>anyway.<sp/>(We<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>transparency<sp/>sorting<sp/>so<sp/>you<sp/>need<sp/>to<sp/>use<sp/>alpha<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anyway)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structnbt" kindref="compound">nbt</ref>[i]<sp/>!=<sp/>bt)<sp/>{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnbt" kindref="compound">nbt</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[i]<sp/>=<sp/>STBVOX_GEOM_empty;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngeo[i]<sp/>=<sp/>STBVOX_GEOM_solid;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geo<sp/>=<sp/>STBVOX_GEOM_solid;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>compute<sp/>the<sp/>face<sp/>visibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/>visible_base<sp/>=<sp/>stbvox_hasface[geo][rot];</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>assert(visible_base<sp/>!=<sp/>0);<sp/>//<sp/>we<sp/>should<sp/>have<sp/>early-outted<sp/>earlier<sp/>in<sp/>this<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/>visible_faces<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>for<sp/>every<sp/>face<sp/>that<sp/>might<sp/>be<sp/>visible,<sp/>check<sp/>if<sp/>neighbor<sp/>hides<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_base<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_east))<sp/>{</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>stbvox_facetype[<sp/>geo<sp/><sp/><sp/>][(STBVOX_FACE_east+<sp/>rot<sp/><sp/><sp/>)&amp;3];</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntype<sp/>=<sp/>stbvox_facetype[ngeo[0]][(STBVOX_FACE_west+nrot[0])&amp;3];</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visible_faces<sp/>|=<sp/>((stbvox_face_visible[type])<sp/>&gt;&gt;<sp/>(ntype<sp/>+<sp/>5<sp/>-<sp/>STBVOX_FACE_east))<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_east);</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_base<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_north))<sp/>{</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>stbvox_facetype[<sp/>geo<sp/><sp/><sp/>][(STBVOX_FACE_north+<sp/>rot<sp/><sp/><sp/>)&amp;3];</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntype<sp/>=<sp/>stbvox_facetype[ngeo[1]][(STBVOX_FACE_south+nrot[1])&amp;3];</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visible_faces<sp/>|=<sp/>((stbvox_face_visible[type])<sp/>&gt;&gt;<sp/>(ntype<sp/>+<sp/>5<sp/>-<sp/>STBVOX_FACE_north))<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_north);</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_base<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_west))<sp/>{</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>stbvox_facetype[<sp/>geo<sp/><sp/><sp/>][(STBVOX_FACE_west+<sp/>rot<sp/><sp/><sp/>)&amp;3];</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntype<sp/>=<sp/>stbvox_facetype[ngeo[2]][(STBVOX_FACE_east+nrot[2])&amp;3];</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visible_faces<sp/>|=<sp/>((stbvox_face_visible[type])<sp/>&gt;&gt;<sp/>(ntype<sp/>+<sp/>5<sp/>-<sp/>STBVOX_FACE_west))<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_west);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_base<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_south))<sp/>{</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>stbvox_facetype[<sp/>geo<sp/><sp/><sp/>][(STBVOX_FACE_south+<sp/>rot<sp/><sp/><sp/>)&amp;3];</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntype<sp/>=<sp/>stbvox_facetype[ngeo[3]][(STBVOX_FACE_north+nrot[3])&amp;3];</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visible_faces<sp/>|=<sp/>((stbvox_face_visible[type])<sp/>&gt;&gt;<sp/>(ntype<sp/>+<sp/>5<sp/>-<sp/>STBVOX_FACE_south))<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_south);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_base<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_up))<sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>stbvox_facetype[<sp/>geo<sp/><sp/><sp/>][STBVOX_FACE_up];</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntype<sp/>=<sp/>stbvox_facetype[ngeo[4]][STBVOX_FACE_down];</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visible_faces<sp/>|=<sp/>((stbvox_face_visible[type])<sp/>&gt;&gt;<sp/>(ntype<sp/>+<sp/>5<sp/>-<sp/>STBVOX_FACE_up))<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_up);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_base<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_down))<sp/>{</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>stbvox_facetype[<sp/>geo<sp/><sp/><sp/>][STBVOX_FACE_down];</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntype<sp/>=<sp/>stbvox_facetype[ngeo[5]][STBVOX_FACE_up];</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visible_faces<sp/>|=<sp/>((stbvox_face_visible[type])<sp/>&gt;&gt;<sp/>(ntype<sp/>+<sp/>5<sp/>-<sp/>STBVOX_FACE_down))<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_down);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>==<sp/>STBVOX_GEOM_force)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geo<sp/>=<sp/>STBVOX_GEOM_solid;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/>assert((geo<sp/>==<sp/>STBVOX_GEOM_crossed_pair)<sp/>?<sp/>(visible_faces<sp/>==<sp/>15)<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>finally<sp/>know<sp/>for<sp/>sure<sp/>which<sp/>faces<sp/>are<sp/>getting<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;default_mesh;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.selector)</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.selector[v_off];</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_selector)</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.block_selector[bt];</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>&lt;=<sp/>STBVOX_GEOM_ceil_slope_north_is_bottom)<sp/>{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>simple<sp/>case,<sp/>we<sp/>can<sp/>just<sp/>use<sp/>regular<sp/>block<sp/>gen<sp/>with<sp/>special<sp/>vmesh<sp/>calculated<sp/>with<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>basevert;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>vmesh[6][4];</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_rotate<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref><sp/>=<sp/>{<sp/>0,0,0,0<sp/>};</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>simple_rot<sp/>=<sp/>rot;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>need<sp/>to<sp/>do<sp/>this<sp/>for<sp/>the<sp/>displayed<sp/>faces,<sp/>but<sp/>it&apos;s<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>just<sp/>do<sp/>it<sp/>up<sp/>front;<sp/>@OPTIMIZE<sp/>check<sp/>if<sp/>it&apos;s<sp/>faster<sp/>to<sp/>do<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>visible<sp/>faces<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6*4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert<sp/>=<sp/>stbvox_vertex_selector[0][i];</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert<sp/>=<sp/>stbvox_rotate_vertex[vert][rot];</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmesh[0][i]<sp/>=<sp/>stbvox_vmesh_pre_vheight[0][i]</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>stbvox_geometry_vheight[geo][vert];</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>basevert<sp/>=<sp/>stbvox_vertex_encode(pos.x,<sp/>pos.y,<sp/>pos.z<sp/>&lt;&lt;<sp/>STBVOX_CONFIG_PRECISION_Z,<sp/>0,0);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.selector)<sp/>{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.selector[v_off];</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_selector)</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.block_selector[bt];</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we&apos;re<sp/>going<sp/>off<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;output_cur[mesh][0]<sp/>+<sp/>mm-&gt;output_size[mesh][0]*6<sp/>&gt;<sp/>mm-&gt;output_end[mesh][0])<sp/>{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;full<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>&gt;=<sp/>STBVOX_GEOM_floor_slope_north_is_top)<sp/>{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_up))<sp/>{</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normal<sp/>=<sp/>geo<sp/>==<sp/>STBVOX_GEOM_floor_slope_north_is_top<sp/>?<sp/>stbvox_floor_slope_for_rot[simple_rot]<sp/>:<sp/>STBVOX_FACE_up;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.facerot<sp/>=<sp/>simple_rot;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_up<sp/><sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_up],<sp/>mesh,<sp/>normal);</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_down))<sp/>{</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normal<sp/>=<sp/>geo<sp/>==<sp/>STBVOX_GEOM_ceil_slope_north_is_bottom<sp/>?<sp/>stbvox_ceil_slope_for_rot[simple_rot]<sp/>:<sp/>STBVOX_FACE_down;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.facerot<sp/>=<sp/>(-<ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.facerot)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_down],<sp/>mesh,<sp/>normal);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_up))<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.facerot<sp/>=<sp/>simple_rot;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_up<sp/><sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_up],<sp/>mesh,<sp/>STBVOX_FACE_up);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_down))<sp/>{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.facerot<sp/>=<sp/>(-<ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.facerot)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_down],<sp/>mesh,<sp/>STBVOX_FACE_down);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.rotate)<sp/>{</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>mm-&gt;input.rotate[v_off];</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.block<sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.overlay<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotate.tex2<sp/><sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.ecolor<sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.block<sp/>=<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.overlay<sp/>=<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.ecolor<sp/>=<sp/>simple_rot;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.facerot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_north))</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_north,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_north],<sp/>mesh,<sp/>STBVOX_FACE_north);</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_south))</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_south,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_south],<sp/>mesh,<sp/>STBVOX_FACE_south);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_east))</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_east<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_east<sp/>],<sp/>mesh,<sp/>STBVOX_FACE_east);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_west))</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_west<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_west<sp/>],<sp/>mesh,<sp/>STBVOX_FACE_west);</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>&gt;=<sp/>STBVOX_GEOM_floor_vheight_03)<sp/>{</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>case<sp/>can<sp/>also<sp/>be<sp/>generated<sp/>with<sp/>regular<sp/>block<sp/>gen<sp/>with<sp/>special<sp/>vmesh,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>except:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>we<sp/>want<sp/>to<sp/>generate<sp/>middle<sp/>diagonal<sp/>for<sp/>&apos;weird&apos;<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>it&apos;s<sp/>more<sp/>complicated<sp/>to<sp/>detect<sp/>neighbor<sp/>matchups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>vmesh[6][4];</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>cube[8];</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>basevert;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_rotate<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref><sp/>=<sp/>{<sp/>0,0,0,0<sp/>};</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>simple_rot<sp/>=<sp/>rot;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ht[4];</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extreme;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>the<sp/>heights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_CONFIG_VHEIGHT_IN_LIGHTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ht[0]<sp/>=<sp/>mm-&gt;input.lighting[v_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ht[1]<sp/>=<sp/>mm-&gt;input.lighting[v_off+ew_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ht[2]<sp/>=<sp/>mm-&gt;input.lighting[v_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+ns_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ht[3]<sp/>=<sp/>mm-&gt;input.lighting[v_off+ew_off+ns_off]<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.vheight)<sp/>{</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><sp/>mm-&gt;input.vheight[v_off];</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[0]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[1]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[2]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[3]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_vheight)<sp/>{</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>mm-&gt;input.block_vheight[bt];</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>raw[4];</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[0]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[1]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[2]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[3]<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[i]<sp/>=<sp/>raw[stbvox_rotate_vertex[i][rot]];</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.packed_compact)<sp/>{</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[0]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[1]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off+ew_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[2]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+ns_off]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[3]<sp/>=<sp/>(mm-&gt;input.packed_compact[v_off+ew_off+ns_off]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.geometry)<sp/>{</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[0]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[1]<sp/>=<sp/>mm-&gt;input.geometry[v_off+ew_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[2]<sp/>=<sp/>mm-&gt;input.geometry[v_off<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+ns_off]<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht[3]<sp/>=<sp/>mm-&gt;input.geometry[v_off+ew_off+ns_off]<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>whether<sp/>any<sp/>sides<sp/>go<sp/>off<sp/>the<sp/>top<sp/>of<sp/>the<sp/>block,<sp/>which<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>visible_faces<sp/>test<sp/>was<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extreme<sp/>=<sp/>(ht[0]<sp/>==<sp/>3<sp/>||<sp/>ht[1]<sp/>==<sp/>3<sp/>||<sp/>ht[2]<sp/>==<sp/>3<sp/>||<sp/>ht[3]<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>&gt;=<sp/>STBVOX_GEOM_ceil_vheight_03)<sp/>{</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[0]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[0],0,0);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[1]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[1],0,0);</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[2]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[2],0,0);</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[3],0,0);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[4]<sp/>=<sp/>stbvox_vertex_encode(0,0,2,0,0);</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[5]<sp/>=<sp/>stbvox_vertex_encode(0,0,2,0,0);</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[6]<sp/>=<sp/>stbvox_vertex_encode(0,0,2,0,0);</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[7]<sp/>=<sp/>stbvox_vertex_encode(0,0,2,0,0);</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[0]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,0);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[1]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,0);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[2]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,0);</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[3]<sp/>=<sp/>stbvox_vertex_encode(0,0,0,0,0);</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[4]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[0],0,0);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[5]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[1],0,0);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[6]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[2],0,0);</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube[7]<sp/>=<sp/>stbvox_vertex_encode(0,0,ht[3],0,0);</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mm-&gt;input.vheight<sp/>&amp;&amp;<sp/>mm-&gt;input.block_vheight)<sp/>{</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>support<sp/>block<sp/>vheight<sp/>here,<sp/>I&apos;ve<sp/>forgotten<sp/>what<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>specially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>vertex<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6*4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert<sp/>=<sp/>stbvox_vertex_selector[0][i];</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmesh[0][i]<sp/>=<sp/>stbvox_vmesh_pre_vheight[0][i]</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>cube[vert];</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>basevert<sp/>=<sp/>stbvox_vertex_encode(pos.x,<sp/>pos.y,<sp/>pos.z<sp/>&lt;&lt;<sp/>STBVOX_CONFIG_PRECISION_Z,<sp/>0,0);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we&apos;re<sp/>going<sp/>off<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;output_cur[mesh][0]<sp/>+<sp/>mm-&gt;output_size[mesh][0]*6<sp/>&gt;<sp/>mm-&gt;output_end[mesh][0])<sp/>{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;full<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>generate<sp/>split<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_up))<sp/>{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>&gt;=<sp/>STBVOX_GEOM_ceil_vheight_03)</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_up<sp/><sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_up],<sp/>mesh,<sp/>STBVOX_FACE_up);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_OPTIMIZED_VHEIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>it&apos;s<sp/>non-planar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cube[5]<sp/>+<sp/>cube[6]<sp/>!=<sp/>cube[4]<sp/>+<sp/>cube[7])<sp/>{</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>planar,<sp/>split<sp/>along<sp/>diagonal<sp/>and<sp/>make<sp/>degenerate<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>==<sp/>STBVOX_GEOM_floor_vheight_03)</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_03_split_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_up,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_up],<sp/>mesh,<sp/>ht);</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_12_split_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_up,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_up],<sp/>mesh,<sp/>ht);</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_up<sp/><sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_up],<sp/>mesh,<sp/>stbvox_planar_face_up_normal[ht[2]][ht[1]][ht[0]]);</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_up<sp/><sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_up],<sp/>mesh,<sp/>stbvox_optimized_face_up_normal[ht[3]][ht[2]][ht[1]][ht[0]]);</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_down))<sp/>{</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>&lt;<sp/>STBVOX_GEOM_ceil_vheight_03)</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_down],<sp/>mesh,<sp/>STBVOX_FACE_down);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBVOX_CONFIG_OPTIMIZED_VHEIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>it&apos;s<sp/>non-planar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cube[1]<sp/>+<sp/>cube[2]<sp/>!=<sp/>cube[0]<sp/>+<sp/>cube[3])<sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>planar,<sp/>split<sp/>along<sp/>diagonal<sp/>and<sp/>make<sp/>degenerate<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>==<sp/>STBVOX_GEOM_ceil_vheight_03)</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_03_split_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_down],<sp/>mesh,<sp/>ht);</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_12_split_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_down],<sp/>mesh,<sp/>ht);</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_down],<sp/>mesh,<sp/>stbvox_reverse_face[stbvox_planar_face_up_normal[ht[2]][ht[1]][ht[0]]]);</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_down,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_down],<sp/>mesh,<sp/>stbvox_reverse_face[stbvox_optimized_face_up_normal[ht[3]][ht[2]][ht[1]][ht[0]]]);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.rotate)<sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>mm-&gt;input.rotate[v_off];</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.block<sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.overlay<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotate.tex2<sp/><sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.ecolor<sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.selector)<sp/>{</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.block<sp/>=<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.overlay<sp/>=<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>.ecolor<sp/>=<sp/>simple_rot;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_north))<sp/>||<sp/>(extreme<sp/>&amp;&amp;<sp/>(ht[2]<sp/>==<sp/>3<sp/>||<sp/>ht[3]<sp/>==<sp/>3)))</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_north,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_north],<sp/>mesh,<sp/>STBVOX_FACE_north);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_south))<sp/>||<sp/>(extreme<sp/>&amp;&amp;<sp/>(ht[0]<sp/>==<sp/>3<sp/>||<sp/>ht[1]<sp/>==<sp/>3)))</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_south,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_south],<sp/>mesh,<sp/>STBVOX_FACE_south);</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_east))<sp/>||<sp/>(extreme<sp/>&amp;&amp;<sp/>(ht[1]<sp/>==<sp/>3<sp/>||<sp/>ht[3]<sp/>==<sp/>3)))</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_east<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_east<sp/>],<sp/>mesh,<sp/>STBVOX_FACE_east);</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((visible_faces<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>STBVOX_FACE_west))<sp/>||<sp/>(extreme<sp/>&amp;&amp;<sp/>(ht[0]<sp/>==<sp/>3<sp/>||<sp/>ht[2]<sp/>==<sp/>3)))</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/><ref refid="group__gtc__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950" kindref="member">rotate</ref>,<sp/>STBVOX_FACE_west<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>vmesh[STBVOX_FACE_west<sp/>],<sp/>mesh,<sp/>STBVOX_FACE_west);</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geo<sp/>==<sp/>STBVOX_GEOM_crossed_pair)<sp/>{</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>generated<sp/>with<sp/>a<sp/>special<sp/>vmesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>basevert<sp/>=<sp/>stbvox_vertex_encode(pos.x,<sp/>pos.y,<sp/>pos.z<sp/>&lt;&lt;<sp/>STBVOX_CONFIG_PRECISION_Z<sp/>,<sp/>0,0);</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>simple_rot=0;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_rotate<sp/>rot<sp/>=<sp/>{<sp/>0,0,0,0<sp/>};</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mesh<sp/>=<sp/>mm-&gt;default_mesh;</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.selector)<sp/>{</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.selector[v_off];</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_rot<sp/>=<sp/>mesh<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>&amp;=<sp/>15;</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_selector)<sp/>{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>mm-&gt;input.block_selector[bt];</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we&apos;re<sp/>going<sp/>off<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;output_cur[mesh][0]<sp/>+<sp/>mm-&gt;output_size[mesh][0]*4<sp/>&gt;<sp/>mm-&gt;output_end[mesh][0])<sp/>{</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;full<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.rotate)<sp/>{</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>mm-&gt;input.rotate[v_off];</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot.block<sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot.overlay<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rot.tex2<sp/><sp/><sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot.ecolor<sp/><sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.selector)<sp/>{</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot.block<sp/>=<sp/>rot.overlay<sp/>=<sp/>rot.ecolor<sp/>=<sp/>simple_rot;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rot.facerot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_north,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>stbvox_vmesh_crossed_pair[STBVOX_FACE_north],<sp/>mesh,<sp/>STBVF_ne_u_cross);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_south,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>stbvox_vmesh_crossed_pair[STBVOX_FACE_south],<sp/>mesh,<sp/>STBVF_sw_u_cross);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_east<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>stbvox_vmesh_crossed_pair[STBVOX_FACE_east<sp/>],<sp/>mesh,<sp/>STBVF_se_u_cross);</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_face(mm,<sp/>rot,<sp/>STBVOX_FACE_west<sp/>,<sp/>v_off,<sp/>pos,<sp/>basevert,<sp/>stbvox_vmesh_crossed_pair[STBVOX_FACE_west<sp/>],<sp/>mesh,<sp/>STBVF_nw_u_cross);</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STBVOX_GEOM_floor_slope_north_is_top_as_wall,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STBVOX_GEOM_ceil_slope_north_is_bottom_as_wall,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_make_mesh_for_column(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z0)</highlight></codeline>
<codeline lineno="3400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/>stbvox_pos<sp/>pos;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_off<sp/>=<sp/>x<sp/>*<sp/>mm-&gt;x_stride_in_bytes<sp/>+<sp/>y<sp/>*<sp/>mm-&gt;y_stride_in_bytes;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ns_off<sp/>=<sp/>mm-&gt;y_stride_in_bytes;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ew_off<sp/>=<sp/>mm-&gt;x_stride_in_bytes;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/>pos.x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/>pos.y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/>pos.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.geometry)<sp/>{</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bt<sp/><sp/>=<sp/>mm-&gt;input.blocktype<sp/>+<sp/>v_off;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*geo<sp/>=<sp/>mm-&gt;input.geometry<sp/>+<sp/>v_off;</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=z0;<sp/>z<sp/>&lt;<sp/>mm-&gt;z1;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bt[z]<sp/>&amp;&amp;<sp/>(<sp/>!bt[z+ns_off]<sp/>||<sp/>!STBVOX_GET_GEO(geo[z+ns_off])<sp/>||<sp/>!bt[z-ns_off]<sp/>||<sp/>!STBVOX_GET_GEO(geo[z-ns_off])</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!bt[z+ew_off]<sp/>||<sp/>!STBVOX_GET_GEO(geo[z+ew_off])<sp/>||<sp/>!bt[z-ew_off]<sp/>||<sp/>!STBVOX_GET_GEO(geo[z-ew_off])</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!bt[z-1]<sp/>||<sp/>!STBVOX_GET_GEO(geo[z-1])<sp/>||<sp/>!bt[z+1]<sp/>||<sp/>!STBVOX_GET_GEO(geo[z+1])))</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>check<sp/>up<sp/>and<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_block_with_geo(mm,<sp/>pos,<sp/>v_off+z);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;full)<sp/>{</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;cur_z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;input.block_geometry)<sp/>{</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bt<sp/><sp/>=<sp/>mm-&gt;input.blocktype<sp/>+<sp/>v_off;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*geo<sp/>=<sp/>mm-&gt;input.block_geometry;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=z0;<sp/>z<sp/>&lt;<sp/>mm-&gt;z1;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bt[z]<sp/>&amp;&amp;<sp/>(<sp/><sp/><sp/><sp/>geo[bt[z+ns_off]]<sp/>!=<sp/>STBVOX_GEOM_solid</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>geo[bt[z-ns_off]]<sp/>!=<sp/>STBVOX_GEOM_solid</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>geo[bt[z+ew_off]]<sp/>!=<sp/>STBVOX_GEOM_solid</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>geo[bt[z-ew_off]]<sp/>!=<sp/>STBVOX_GEOM_solid</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>geo[bt[z-1]]<sp/>!=<sp/>STBVOX_GEOM_solid</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>geo[bt[z+1]]<sp/>!=<sp/>STBVOX_GEOM_solid))</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_block_with_geo(mm,<sp/>pos,<sp/>v_off+z);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;full)<sp/>{</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;cur_z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bt<sp/>=<sp/>mm-&gt;input.blocktype<sp/>+<sp/>v_off;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>STBVOX_CONFIG_PRECISION_Z<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>*vmesh<sp/>=<sp/>stbvox_vmesh_delta_half_z[0];</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_mesh_vertex<sp/>*vmesh<sp/>=<sp/>stbvox_vmesh_delta_normal[0];</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=z0;<sp/>z<sp/>&lt;<sp/>mm-&gt;z1;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>solid<sp/>and<sp/>at<sp/>least<sp/>one<sp/>neighbor<sp/>isn&apos;t<sp/>solid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bt[z]<sp/>&amp;&amp;<sp/>(!bt[z+ns_off]<sp/>||<sp/>!bt[z-ns_off]<sp/>||<sp/>!bt[z+ew_off]<sp/>||<sp/>!bt[z-ew_off]<sp/>||<sp/>!bt[z-1]<sp/>||<sp/>!bt[z+1]))<sp/>{</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_block(mm,<sp/>pos,<sp/>v_off+z,<sp/>vmesh);</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;full)<sp/>{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;cur_z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_bring_up_to_date(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm)</highlight></codeline>
<codeline lineno="3468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;config_dirty)<sp/>{</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>STBVOX_ICONFIG_FACE_ATTRIBUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;num_mesh_slots<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>STBVOX_MAX_MESHES;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_size[i][0]<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_step[i][0]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;num_mesh_slots<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>STBVOX_MAX_MESHES;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_size[i][0]<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_step[i][0]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_size[i][1]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_step[i][1]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;config_dirty<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_make_mesh(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm)</highlight></codeline>
<codeline lineno="3492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/>stbvox_bring_up_to_date(mm);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;full<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;cur_x<sp/>&gt;<sp/>mm-&gt;x0<sp/>||<sp/>mm-&gt;cur_y<sp/>&gt;<sp/>mm-&gt;y0<sp/>||<sp/>mm-&gt;cur_z<sp/>&gt;<sp/>mm-&gt;z0)<sp/>{</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_column(mm,<sp/>mm-&gt;cur_x,<sp/>mm-&gt;cur_y,<sp/>mm-&gt;cur_z);</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;full)</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++mm-&gt;cur_y;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mm-&gt;cur_y<sp/>&lt;<sp/>mm-&gt;y1<sp/>&amp;&amp;<sp/>!mm-&gt;full)<sp/>{</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_column(mm,<sp/>mm-&gt;cur_x,<sp/>mm-&gt;cur_y,<sp/>mm-&gt;z0);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;full)</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++mm-&gt;cur_y;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++mm-&gt;cur_x;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=mm-&gt;cur_x;<sp/>x<sp/>&lt;<sp/>mm-&gt;x1;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=mm-&gt;y0;<sp/>y<sp/>&lt;<sp/>mm-&gt;y1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbvox_make_mesh_for_column(mm,<sp/>x,<sp/>y,<sp/>mm-&gt;z0);</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;full)<sp/>{</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;cur_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;cur_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_init_mesh_maker(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm)</highlight></codeline>
<codeline lineno="3523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/>memset(mm,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mm));</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/>stbvox_build_default_palette();</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;config_dirty<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;default_mesh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_buffer_count(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm)</highlight></codeline>
<codeline lineno="3532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/>stbvox_bring_up_to_date(mm);</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mm-&gt;num_mesh_slots;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_buffer_size_per_quad(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mm-&gt;output_size[0][n];</highlight></codeline>
<codeline lineno="3540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_reset_buffers(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm)</highlight></codeline>
<codeline lineno="3543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>STBVOX_MAX_MESHES*STBVOX_MAX_MESH_SLOTS;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_cur[0][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;output_buffer[0][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_buffer(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="3552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/>stbvox_bring_up_to_date(mm);</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;output_buffer[mesh][slot]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;output_cur<sp/><sp/><sp/>[mesh][slot]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="classbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;output_len<sp/><sp/><sp/>[mesh][slot]<sp/>=<sp/>(int)<sp/>len;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;output_end<sp/><sp/><sp/>[mesh][slot]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="classbuffer" kindref="compound">buffer</ref><sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>STBVOX_MAX_MESH_SLOTS;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm-&gt;output_buffer[mesh][i])<sp/>{</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mm-&gt;output_len[mesh][i]<sp/>/<sp/>mm-&gt;output_size[mesh][i]<sp/>==<sp/>mm-&gt;output_len[mesh][slot]<sp/>/<sp/>mm-&gt;output_size[mesh][slot]);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_default_mesh(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh)</highlight></codeline>
<codeline lineno="3567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;default_mesh<sp/>=<sp/>mesh;</highlight></codeline>
<codeline lineno="3569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbvox_get_quad_count(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mesh)</highlight></codeline>
<codeline lineno="3572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>((mm-&gt;output_cur[mesh][0]<sp/>-<sp/>mm-&gt;output_buffer[mesh][0])<sp/>/<sp/>mm-&gt;output_size[mesh][0]);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><ref refid="structstbvox__input__description" kindref="compound">stbvox_input_description</ref><sp/>*stbvox_get_input_description(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm)</highlight></codeline>
<codeline lineno="3577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;mm-&gt;input;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_input_range(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z1)</highlight></codeline>
<codeline lineno="3582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;x0<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;y0<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;z0<sp/>=<sp/>z0;</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;x1<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;y1<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;z1<sp/>=<sp/>z1;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;cur_x<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;cur_y<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;cur_z<sp/>=<sp/>z0;</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>validate<sp/>that<sp/>this<sp/>range<sp/>is<sp/>representable<sp/>in<sp/>this<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_get_transform(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>transform[3][3])</highlight></codeline>
<codeline lineno="3599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/>transform[0][0]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/>transform[0][1]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>STBVOX_CONFIG_PRECISION_Z==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/>transform[0][2]<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/>transform[0][2]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/>transform[1][0]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_x);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/>transform[1][1]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_y);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/>transform[1][2]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_z);</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>coordinate<sp/>projection<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/>transform[2][0]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_x<sp/>&amp;<sp/>255);<sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>depends<sp/>on<sp/>max<sp/>texture<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/>transform[2][1]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_y<sp/>&amp;<sp/>255);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/>transform[2][2]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_z<sp/>&amp;<sp/>255);</highlight></codeline>
<codeline lineno="3616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_get_bounds(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bounds[2][3])</highlight></codeline>
<codeline lineno="3619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/>bounds[0][0]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_x<sp/>+<sp/>mm-&gt;x0);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/>bounds[0][1]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_y<sp/>+<sp/>mm-&gt;y0);</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/>bounds[0][2]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_z<sp/>+<sp/>mm-&gt;z0);</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/>bounds[1][0]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_x<sp/>+<sp/>mm-&gt;x1);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/>bounds[1][1]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_y<sp/>+<sp/>mm-&gt;y1);</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/>bounds[1][2]<sp/>=<sp/>(float)<sp/>(mm-&gt;pos_z<sp/>+<sp/>mm-&gt;z1);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_mesh_coordinates(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="3629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;pos_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;pos_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;pos_z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbvox_set_input_stride(<ref refid="structstbvox__mesh__maker" kindref="compound">stbvox_mesh_maker</ref><sp/>*mm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_stride_in_bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_stride_in_bytes)</highlight></codeline>
<codeline lineno="3636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f,v;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;x_stride_in_bytes<sp/>=<sp/>x_stride_in_bytes;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/>mm-&gt;y_stride_in_bytes<sp/>=<sp/>y_stride_in_bytes;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(f=0;<sp/>f<sp/>&lt;<sp/>6;<sp/>++f)<sp/>{</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v=0;<sp/>v<sp/>&lt;<sp/>4;<sp/>++v)<sp/>{</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;cube_vertex_offset[f][v]<sp/><sp/><sp/>=<sp/><sp/><sp/>stbvox_vertex_vector[f][v][0]<sp/><sp/><sp/><sp/>*<sp/>mm-&gt;x_stride_in_bytes</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>stbvox_vertex_vector[f][v][1]<sp/><sp/><sp/><sp/>*<sp/>mm-&gt;y_stride_in_bytes</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>stbvox_vertex_vector[f][v][2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm-&gt;vertex_gather_offset[f][v]<sp/>=<sp/><sp/>(stbvox_vertex_vector[f][v][0]-1)<sp/>*<sp/>mm-&gt;x_stride_in_bytes</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(stbvox_vertex_vector[f][v][1]-1)<sp/>*<sp/>mm-&gt;y_stride_in_bytes</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(stbvox_vertex_vector[f][v][2]-1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>offline<sp/>computation<sp/>of<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compute<sp/>optimized<sp/>vheight<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*normal_names[32]<sp/>=</highlight></codeline>
<codeline lineno="3660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/>0,0,0,0,</highlight><highlight class="stringliteral">&quot;u<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,0,<sp/></highlight><highlight class="stringliteral">&quot;eu<sp/><sp/>&quot;</highlight><highlight class="normal">,0,</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/>0,0,0,0,</highlight><highlight class="stringliteral">&quot;ne_u&quot;</highlight><highlight class="normal">,0,<sp/></highlight><highlight class="stringliteral">&quot;nu<sp/><sp/>&quot;</highlight><highlight class="normal">,0,</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/>0,0,0,0,</highlight><highlight class="stringliteral">&quot;nw_u&quot;</highlight><highlight class="normal">,0,<sp/></highlight><highlight class="stringliteral">&quot;wu<sp/><sp/>&quot;</highlight><highlight class="normal">,0,</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/>0,0,0,0,</highlight><highlight class="stringliteral">&quot;sw_u&quot;</highlight><highlight class="normal">,0,<sp/></highlight><highlight class="stringliteral">&quot;su<sp/><sp/>&quot;</highlight><highlight class="normal">,0,</highlight></codeline>
<codeline lineno="3665"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*find_best_normal(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="3668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_slot<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>best_dot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>32;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normal_names[i])<sp/>{</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/>x<sp/>*<sp/>stbvox_default_normals[i][0]<sp/>+<sp/>y<sp/>*<sp/>stbvox_default_normals[i][1]<sp/>+<sp/>z<sp/>*<sp/>stbvox_default_normals[i][2];</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot<sp/>&gt;<sp/>best_dot)<sp/>{</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_dot<sp/>=<sp/>dot;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_slot<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normal_names[best_slot];</highlight></codeline>
<codeline lineno="3682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="3685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sw,se,nw,ne;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ne=0;<sp/>ne<sp/>&lt;<sp/>4;<sp/>++ne)<sp/>{</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nw=0;<sp/>nw<sp/>&lt;<sp/>4;<sp/>++nw)<sp/>{</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(se=0;<sp/>se<sp/>&lt;<sp/>4;<sp/>++se)<sp/>{</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sw=0;<sp/>sw<sp/>&lt;<sp/>4;<sp/>++sw)<sp/>{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(float)<sp/>(nw<sp/>+<sp/>sw<sp/>-<sp/>ne<sp/>-<sp/>se);</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(float)<sp/>(sw<sp/>+<sp/>se<sp/>-<sp/>nw<sp/>-<sp/>ne);</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;STBVF_%s,<sp/>&quot;</highlight><highlight class="normal">,<sp/>find_best_normal(x,y,z));</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;},\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>test<sp/>API<sp/>for<sp/>texture<sp/>rotation<sp/>on<sp/>side<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>API<sp/>for<sp/>texture<sp/>rotation<sp/>on<sp/>top<sp/>&amp;<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>better<sp/>culling<sp/>of<sp/>vheight<sp/>faces<sp/>with<sp/>vheight<sp/>neighbors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>better<sp/>culling<sp/>of<sp/>non-vheight<sp/>faces<sp/>with<sp/>vheight<sp/>neighbors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>gather<sp/>vertex<sp/>lighting<sp/>from<sp/>slopes<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>better<sp/>support<sp/>texture<sp/>edge_clamp:<sp/>currently<sp/>if<sp/>you<sp/>fall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>exactly<sp/>on<sp/>1.0<sp/>you<sp/>get<sp/>wrapped<sp/>incorrectly;<sp/>this<sp/>is<sp/>rare,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>can<sp/>avoid:<sp/>compute<sp/>texcoords<sp/>in<sp/>vertex<sp/>shader,<sp/>offset<sp/>towards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>center<sp/>before<sp/>modding,<sp/>need<sp/>2<sp/>bits<sp/>per<sp/>vertex<sp/>to<sp/>know<sp/>offset<sp/>direction)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>other<sp/>mesh<sp/>modes<sp/>(10,6,4-byte<sp/>quads)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>With<sp/>TexBuffer<sp/>for<sp/>the<sp/>fixed<sp/>vertex<sp/>data,<sp/>we<sp/>can<sp/>actually<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>minecrafty<sp/>non-blocks<sp/>like<sp/>stairs<sp/>--<sp/>we<sp/>still<sp/>probably<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"></highlight><highlight class="comment">//<sp/>want<sp/>256<sp/>or<sp/>so,<sp/>so<sp/>we<sp/>can&apos;t<sp/>do<sp/>the<sp/>equivalent<sp/>of<sp/>all<sp/>the<sp/>vheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight><highlight class="comment">//<sp/>combos,<sp/>but<sp/>that&apos;s<sp/>ok.<sp/>The<sp/>256<sp/>includes<sp/>baked<sp/>rotations,<sp/>but<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>of<sp/>them<sp/>need<sp/>it,<sp/>and<sp/>lots<sp/>of<sp/>block<sp/>types<sp/>share<sp/>some<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mode<sp/>5<sp/>(6<sp/>bytes):<sp/><sp/><sp/>mode<sp/>6<sp/>(6<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>x:7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x:6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>y:7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y:6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>z:6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z:6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>tex1:8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex1:8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>tex2:8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex2:7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>color:8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color:8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>face:4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face:7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>side<sp/>faces<sp/>(all<sp/>x4)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top&amp;bottom<sp/>faces<sp/>(2x)<sp/><sp/><sp/><sp/>internal<sp/>faces<sp/>(1x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>regular<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>regular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/>slabs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/>stairs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>stairs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/>diag<sp/>side<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/>upper<sp/>diag<sp/>side<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/>lower<sp/>diag<sp/>side<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>crossed<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>23*4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/>5*4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>46</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>==<sp/>92<sp/>+<sp/>20<sp/>+<sp/>46<sp/>=<sp/>158</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Must<sp/>drop<sp/>30<sp/>of<sp/>them<sp/>to<sp/>fit<sp/>in<sp/>7<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ceiling<sp/>half<sp/>diagonals:<sp/>16+8<sp/>=<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Need<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>6<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ceiling<sp/>diagonals:<sp/>8+4<sp/>=<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>brings<sp/>it<sp/>to<sp/>122,<sp/>so<sp/>can<sp/>add<sp/>a<sp/>crossed-pair<sp/>variant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(diagonal<sp/>and<sp/>non-diagonal,<sp/>or<sp/>randomly<sp/>offset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Or<sp/>carpet,<sp/>which<sp/>would<sp/>be<sp/>5<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mode<sp/>4<sp/>(10<sp/>bytes):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>v:<sp/><sp/>z:2,light:6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>f:<sp/><sp/>x:6,y:6,z:7,<sp/>t1:8,t2:8,c:8,f:5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mode<sp/>?<sp/>(10<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>v:<sp/><sp/>xyz:5<sp/>(27<sp/>values),<sp/>light:3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>f:<sp/><sp/>x:7,y:7,z:6,<sp/>t1:8,t2:8,c:8,f:4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(v:<sp/><sp/>x:2,y:2,z:2,light:2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STB_VOXEL_RENDER_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3768"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3769"><highlight class="comment">This<sp/>software<sp/>is<sp/>available<sp/>under<sp/>2<sp/>licenses<sp/>--<sp/>choose<sp/>whichever<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="3770"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3771"><highlight class="comment">ALTERNATIVE<sp/>A<sp/>-<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3772"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>Sean<sp/>Barrett</highlight></codeline>
<codeline lineno="3773"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="3774"><highlight class="comment">this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="3775"><highlight class="comment">the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="3776"><highlight class="comment">use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="3777"><highlight class="comment">of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="3778"><highlight class="comment">so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="3779"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="3780"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="3781"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="3782"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="3783"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="3784"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="3785"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="3786"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="3787"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="3788"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3789"><highlight class="comment">ALTERNATIVE<sp/>B<sp/>-<sp/>Public<sp/>Domain<sp/>(www.unlicense.org)</highlight></codeline>
<codeline lineno="3790"><highlight class="comment">This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="3791"><highlight class="comment">Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or<sp/>distribute<sp/>this</highlight></codeline>
<codeline lineno="3792"><highlight class="comment">software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled<sp/>binary,<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="3793"><highlight class="comment">commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any<sp/>means.</highlight></codeline>
<codeline lineno="3794"><highlight class="comment">In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="3795"><highlight class="comment">software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the<sp/>software<sp/>to<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="3796"><highlight class="comment">domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="3797"><highlight class="comment">the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="3798"><highlight class="comment">overt<sp/>act<sp/>of<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="3799"><highlight class="comment">this<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight></codeline>
<codeline lineno="3800"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="3801"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="3802"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="3803"><highlight class="comment">AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="3804"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="3805"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="3806"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3807"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_voxel_render.h"/>
  </compounddef>
</doxygen>
