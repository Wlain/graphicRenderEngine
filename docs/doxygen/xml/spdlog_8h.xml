<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="spdlog_8h" kind="file" language="C++">
    <compoundname>spdlog.h</compoundname>
    <includes refid="spdlog_2include_2spdlog_2common_8h" local="no">spdlog/common.h</includes>
    <includes refid="registry_8h" local="no">spdlog/details/registry.h</includes>
    <includes refid="3rdparty_2spdlog_2include_2spdlog_2logger_8h" local="no">spdlog/logger.h</includes>
    <includes refid="version_8h" local="no">spdlog/version.h</includes>
    <includes refid="synchronous__factory_8h" local="no">spdlog/details/synchronous_factory.h</includes>
    <includes local="no">chrono</includes>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includedby refid="async__bench_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/async_bench.cpp</includedby>
    <includedby refid="bench_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/bench.cpp</includedby>
    <includedby refid="formatter-bench_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/formatter-bench.cpp</includedby>
    <includedby refid="latency_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/latency.cpp</includedby>
    <includedby refid="example_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/example/example.cpp</includedby>
    <includedby refid="helpers-inl_8h" local="no">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/cfg/helpers-inl.h</includedby>
    <includedby refid="spdlog-inl_8h" local="no">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog-inl.h</includedby>
    <includedby refid="includes_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/includes.h</includedby>
    <includedby refid="utils_2logger_8h" local="no">/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/logger.h</includedby>
    <incdepgraph>
      <node id="26">
        <label>common-inl.h</label>
        <link refid="common-inl_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>spdlog/common.h</label>
        <link refid="spdlog_2include_2spdlog_2common_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>spdlog/details/backtracer.h</label>
        <link refid="backtracer_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>spdlog/details/circular_q.h</label>
        <link refid="circular__q_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>spdlog/details/log_msg.h</label>
        <link refid="log__msg_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>spdlog/details/log_msg_buffer.h</label>
        <link refid="log__msg__buffer_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>spdlog/details/null_mutex.h</label>
        <link refid="null__mutex_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>spdlog/details/registry.h</label>
        <link refid="registry_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>spdlog/details/synchronous_factory.h</label>
        <link refid="synchronous__factory_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>spdlog/fmt/bundled/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>spdlog/fmt/bundled/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>spdlog/fmt/fmt.h</label>
        <link refid="fmt_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>spdlog/logger.h</label>
        <link refid="3rdparty_2spdlog_2include_2spdlog_2logger_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>spdlog/tweakme.h</label>
        <link refid="tweakme_8h_source"/>
      </node>
      <node id="38">
        <label>spdlog/version.h</label>
        <link refid="version_8h_source"/>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>atomic</label>
      </node>
      <node id="37">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>chrono</label>
      </node>
      <node id="22">
        <label>cmath</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="23">
        <label>cstdint</label>
      </node>
      <node id="14">
        <label>cstdio</label>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="10">
        <label>exception</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="8">
        <label>initializer_list</label>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="20">
        <label>limits</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="30">
        <label>mutex</label>
      </node>
      <node id="24">
        <label>stdexcept</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="25">
        <label>system_error</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
      <node id="29">
        <label>unordered_map</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="36">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/async_bench.cpp</label>
        <link refid="async__bench_8cpp_source"/>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/bench.cpp</label>
        <link refid="bench_8cpp_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/formatter-bench.cpp</label>
        <link refid="formatter-bench_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/bench/latency.cpp</label>
        <link refid="latency_8cpp_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/example/example.cpp</label>
        <link refid="example_8cpp_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/cfg/helpers-inl.h</label>
        <link refid="helpers-inl_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog-inl.h</label>
        <link refid="spdlog-inl_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/cfg.cpp</label>
        <link refid="cfg_8cpp_source"/>
      </node>
      <node id="10">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/src/spdlog.cpp</label>
        <link refid="spdlog_8cpp_source"/>
      </node>
      <node id="11">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/includes.h</label>
        <link refid="includes_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_async.cpp</label>
        <link refid="test__async_8cpp_source"/>
      </node>
      <node id="13">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_backtrace.cpp</label>
        <link refid="test__backtrace_8cpp_source"/>
      </node>
      <node id="14">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_cfg.cpp</label>
        <link refid="test__cfg_8cpp_source"/>
      </node>
      <node id="15">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_create_dir.cpp</label>
        <link refid="test__create__dir_8cpp_source"/>
      </node>
      <node id="16">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_daily_logger.cpp</label>
        <link refid="test__daily__logger_8cpp_source"/>
      </node>
      <node id="17">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_dup_filter.cpp</label>
        <link refid="test__dup__filter_8cpp_source"/>
      </node>
      <node id="18">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_errors.cpp</label>
        <link refid="test__errors_8cpp_source"/>
      </node>
      <node id="19">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp</label>
        <link refid="test__file__helper_8cpp_source"/>
      </node>
      <node id="20">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_logging.cpp</label>
        <link refid="test__file__logging_8cpp_source"/>
      </node>
      <node id="21">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_fmt_helper.cpp</label>
        <link refid="test__fmt__helper_8cpp_source"/>
      </node>
      <node id="22">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_macros.cpp</label>
        <link refid="test__macros_8cpp_source"/>
      </node>
      <node id="23">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_misc.cpp</label>
        <link refid="test__misc_8cpp_source"/>
      </node>
      <node id="24">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_mpmc_q.cpp</label>
        <link refid="test__mpmc__q_8cpp_source"/>
      </node>
      <node id="25">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_pattern_formatter.cpp</label>
        <link refid="test__pattern__formatter_8cpp_source"/>
      </node>
      <node id="26">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_registry.cpp</label>
        <link refid="test__registry_8cpp_source"/>
      </node>
      <node id="27">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_stdout_api.cpp</label>
        <link refid="test__stdout__api_8cpp_source"/>
      </node>
      <node id="28">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_stopwatch.cpp</label>
        <link refid="test__stopwatch_8cpp_source"/>
      </node>
      <node id="29">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_systemd.cpp</label>
        <link refid="test__systemd_8cpp_source"/>
      </node>
      <node id="30">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_time_point.cpp</label>
        <link refid="test__time__point_8cpp_source"/>
      </node>
      <node id="31">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/utils.cpp</label>
        <link refid="utils_8cpp_source"/>
      </node>
      <node id="55">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/camera.cpp</label>
        <link refid="camera_8cpp_source"/>
      </node>
      <node id="56">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/framebuffer.cpp</label>
        <link refid="framebuffer_8cpp_source"/>
      </node>
      <node id="57">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.cpp</label>
        <link refid="glfw_renderer_8cpp_source"/>
      </node>
      <node id="63">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.h</label>
        <link refid="glfw_renderer_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/inspector.cpp</label>
        <link refid="inspector_8cpp_source"/>
      </node>
      <node id="60">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/inspector.h</label>
        <link refid="inspector_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/material.cpp</label>
        <link refid="material_8cpp_source"/>
      </node>
      <node id="39">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/material.h</label>
        <link refid="material_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.cpp</label>
        <link refid="mesh_8cpp_source"/>
      </node>
      <node id="64">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.h</label>
        <link refid="mesh_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/modelImporter.cpp</label>
        <link refid="model_importer_8cpp_source"/>
      </node>
      <node id="41">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/modelImporter.h</label>
        <link refid="model_importer_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/particleEmitter.cpp</label>
        <link refid="particle_emitter_8cpp_source"/>
      </node>
      <node id="53">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/particleEmitter.h</label>
        <link refid="particle_emitter_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderPass.cpp</label>
        <link refid="render_pass_8cpp_source"/>
      </node>
      <node id="52">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderer.cpp</label>
        <link refid="renderer_8cpp_source"/>
      </node>
      <node id="54">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderer.h</label>
        <link refid="renderer_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.cpp</label>
        <link refid="shader_8cpp_source"/>
      </node>
      <node id="37">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.h</label>
        <link refid="shader_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/skybox.cpp</label>
        <link refid="skybox_8cpp_source"/>
      </node>
      <node id="47">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/sprite.cpp</label>
        <link refid="sprite_8cpp_source"/>
      </node>
      <node id="48">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/sprite.h</label>
        <link refid="sprite_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteAtlas.cpp</label>
        <link refid="sprite_atlas_8cpp_source"/>
      </node>
      <node id="49">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteAtlas.h</label>
        <link refid="sprite_atlas_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteBatch.cpp</label>
        <link refid="sprite_batch_8cpp_source"/>
      </node>
      <node id="51">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteBatch.h</label>
        <link refid="sprite_batch_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/texture.cpp</label>
        <link refid="texture_8cpp_source"/>
      </node>
      <node id="65">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/uniformSet.cpp</label>
        <link refid="uniform_set_8cpp_source"/>
      </node>
      <node id="61">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/worldLights.cpp</label>
        <link refid="world_lights_8cpp_source"/>
      </node>
      <node id="59">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/worldLights.h</label>
        <link refid="world_lights_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/commonMacro.h</label>
        <link refid="common_macro_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h</label>
        <link refid="gl_common_define_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/logger.cpp</label>
        <link refid="logger_8cpp_source"/>
      </node>
      <node id="32">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/logger.h</label>
        <link refid="utils_2logger_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/utils.h</label>
        <link refid="utils_2utils_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacespdlog">spdlog</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="spdlog_8h_1af73a1f32ac61071d1e792ca26ec83e4b" prot="public" static="no">
        <name>SPDLOG_LOGGER_CALL</name>
        <param><defname>logger</defname></param>
        <param><defname>level</defname></param>
        <param><defname>...</defname></param>
        <initializer>(logger)-&gt;log(<ref refid="structspdlog_1_1source__loc" kindref="compound">spdlog::source_loc</ref>{__FILE__, __LINE__, SPDLOG_FUNCTION}, level, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="291" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1aadd8d6a6bdd11a1c989346d4777d6c03" prot="public" static="no">
        <name>SPDLOG_LOGGER_TRACE</name>
        <param><defname>logger</defname></param>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_CALL(logger, spdlog::level::trace, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="294" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1aac4c18fd6ad8f9a6d9b9793220ab9e92" prot="public" static="no">
        <name>SPDLOG_TRACE</name>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_TRACE(spdlog::default_logger_raw(), __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="295" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1ab508bba15a80b3e7a909ed867d3b9320" prot="public" static="no">
        <name>SPDLOG_LOGGER_DEBUG</name>
        <param><defname>logger</defname></param>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_CALL(logger, spdlog::level::debug, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="302" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1a10a205c2dfdb91688e85c3f49bc671cd" prot="public" static="no">
        <name>SPDLOG_DEBUG</name>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_DEBUG(spdlog::default_logger_raw(), __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="303" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1a34ab135d5bc3040c9b60e068c4f33726" prot="public" static="no">
        <name>SPDLOG_LOGGER_INFO</name>
        <param><defname>logger</defname></param>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_CALL(logger, spdlog::level::info, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="310" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1ac123bf94c2532584c1f53a4cde7a27e2" prot="public" static="no">
        <name>SPDLOG_INFO</name>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_INFO(spdlog::default_logger_raw(), __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="311" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1a438c8e890e90f85ad3d832496b8a9493" prot="public" static="no">
        <name>SPDLOG_LOGGER_WARN</name>
        <param><defname>logger</defname></param>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_CALL(logger, spdlog::level::warn, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="318" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1a4bf5ff0686233c37d6bf2233d766d3c8" prot="public" static="no">
        <name>SPDLOG_WARN</name>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_WARN(spdlog::default_logger_raw(), __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="319" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1a006a17817b05bda3778be8b78348b079" prot="public" static="no">
        <name>SPDLOG_LOGGER_ERROR</name>
        <param><defname>logger</defname></param>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_CALL(logger, spdlog::level::err, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="326" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1a80b7c8b92e366f68d13143165b6ce271" prot="public" static="no">
        <name>SPDLOG_ERROR</name>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_ERROR(spdlog::default_logger_raw(), __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="327" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1a752190d33981bd64c8a7706d3ba1bc29" prot="public" static="no">
        <name>SPDLOG_LOGGER_CRITICAL</name>
        <param><defname>logger</defname></param>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_CALL(logger, spdlog::level::critical, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="334" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spdlog_8h_1ae91dad63ce8e0f912ff58cdd62f60981" prot="public" static="no">
        <name>SPDLOG_CRITICAL</name>
        <param><defname>...</defname></param>
        <initializer>SPDLOG_LOGGER_CRITICAL(spdlog::default_logger_raw(), __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" line="335" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright(c)<sp/>2015-present,<sp/>Gabi<sp/>Melman<sp/>&amp;<sp/>spdlog<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(http://opensource.org/licenses/MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spdlog<sp/>main<sp/>header<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>example.cpp<sp/>for<sp/>usage<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPDLOG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPDLOG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/details/registry.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/logger.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/version.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/details/synchronous_factory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">spdlog<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>default_factory<sp/>=<sp/>synchronous_factory;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>and<sp/>register<sp/>a<sp/>logger<sp/>with<sp/>a<sp/>templated<sp/>sink<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>logger&apos;s<sp/>level,<sp/>formatter<sp/>and<sp/>flush<sp/>level<sp/>will<sp/>be<sp/>set<sp/>according<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>global<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>spdlog::create&lt;daily_file_sink_st&gt;(&quot;logger_name&quot;,<sp/>&quot;dailylog_filename&quot;,<sp/>11,<sp/>59);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sink,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>SinkArgs&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>create(std::string<sp/>logger_name,<sp/>SinkArgs<sp/>&amp;&amp;...<sp/>sink_args)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_factory::create&lt;Sink&gt;(std::move(logger_name),<sp/>std::forward&lt;SinkArgs&gt;(sink_args)...);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>and<sp/>register<sp/>a<sp/>logger,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>formatter<sp/>and<sp/>flush<sp/>level<sp/>will<sp/>be<sp/>set<sp/>according<sp/>the<sp/>global<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Useful<sp/>for<sp/>initializing<sp/>manually<sp/>created<sp/>loggers<sp/>with<sp/>the<sp/>global<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>auto<sp/>mylogger<sp/>=<sp/>std::make_shared&lt;spdlog::logger&gt;(&quot;mylogger&quot;,<sp/>...);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>spdlog::initialize_logger(mylogger);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize_logger(std::shared_ptr&lt;logger&gt;<sp/>logger);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>existing<sp/>logger<sp/>or<sp/>nullptr<sp/>if<sp/>a<sp/>logger<sp/>with<sp/>such<sp/>name<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>example:<sp/>spdlog::get(&quot;my_logger&quot;)-&gt;info(&quot;hello<sp/>{}&quot;,<sp/>&quot;world&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">SPDLOG_API<sp/>std::shared_ptr&lt;logger&gt;<sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>global<sp/>formatter.<sp/>Each<sp/>sink<sp/>in<sp/>each<sp/>logger<sp/>will<sp/>get<sp/>a<sp/>clone<sp/>of<sp/>this<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_formatter(std::unique_ptr&lt;spdlog::formatter&gt;<sp/><ref refid="structformatter" kindref="compound">formatter</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>global<sp/>format<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>example:<sp/>spdlog::set_pattern(&quot;%Y-%m-%d<sp/>%H:%M:%S.%e<sp/>%l<sp/>:<sp/>%v&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_pattern(std::string<sp/>pattern,<sp/>pattern_time_type<sp/>time_type<sp/>=<sp/>pattern_time_type::local);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enable<sp/>global<sp/>backtrace<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_backtrace(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_messages);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>disable<sp/>global<sp/>backtrace<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disable_backtrace();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>call<sp/>dump<sp/>backtrace<sp/>on<sp/>default<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump_backtrace();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>global<sp/>logging<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">SPDLOG_API<sp/>level::level_enum<sp/>get_level();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>global<sp/>logging<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_level(level::level_enum<sp/>log_level);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determine<sp/>whether<sp/>the<sp/>default<sp/>logger<sp/>should<sp/>log<sp/>messages<sp/>with<sp/>a<sp/>certain<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>should_log(level::level_enum<sp/>lvl);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>global<sp/>flush<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flush_on(level::level_enum<sp/>log_level);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start/Restart<sp/>a<sp/>periodic<sp/>flusher<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Warning:<sp/>Use<sp/>only<sp/>if<sp/>all<sp/>your<sp/>loggers<sp/>are<sp/>thread<sp/>safe!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flush_every(std::chrono::seconds<sp/>interval);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>global<sp/>error<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_error_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*handler)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>given<sp/>logger<sp/>with<sp/>the<sp/>given<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>register_logger(std::shared_ptr&lt;logger&gt;<sp/>logger);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apply<sp/>a<sp/>user<sp/>defined<sp/>function<sp/>on<sp/>all<sp/>registered<sp/>loggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spdlog::apply_all([&amp;](std::shared_ptr&lt;spdlog::logger&gt;<sp/>l)<sp/>{l-&gt;flush();});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_all(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(std::shared_ptr&lt;logger&gt;)&gt;<sp/>&amp;fun);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Drop<sp/>the<sp/>reference<sp/>to<sp/>the<sp/>given<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Drop<sp/>all<sp/>references<sp/>from<sp/>the<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drop_all();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stop<sp/>any<sp/>running<sp/>threads<sp/>started<sp/>by<sp/>spdlog<sp/>and<sp/>clean<sp/>registry<sp/>loggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shutdown();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Automatic<sp/>registration<sp/>of<sp/>loggers<sp/>when<sp/>using<sp/>spdlog::create()<sp/>or<sp/>spdlog::create_async</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_automatic_registration(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>automatic_registration);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>API<sp/>for<sp/>using<sp/>default<sp/>logger<sp/>(stdout_color_mt),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>e.g:<sp/>spdlog::info(&quot;Message<sp/>{}&quot;,<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>logger<sp/>object<sp/>can<sp/>be<sp/>accessed<sp/>using<sp/>the<sp/>spdlog::default_logger():</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>to<sp/>add<sp/>another<sp/>sink<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spdlog::default_logger()-&gt;sinks().push_back(some_sink);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>logger<sp/>can<sp/>replaced<sp/>using<sp/>spdlog::set_default_logger(new_logger).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>to<sp/>replace<sp/>it<sp/>with<sp/>a<sp/>file<sp/>logger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPORTANT:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>API<sp/>is<sp/>thread<sp/>safe<sp/>(for<sp/>_mt<sp/>loggers),<sp/>but:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set_default_logger()<sp/>*should<sp/>not*<sp/>be<sp/>used<sp/>concurrently<sp/>with<sp/>the<sp/>default<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>e.g<sp/>do<sp/>not<sp/>call<sp/>set_default_logger()<sp/>from<sp/>one<sp/>thread<sp/>while<sp/>calling<sp/>spdlog::info()<sp/>from<sp/>another.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">SPDLOG_API<sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>default_logger();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">SPDLOG_API<sp/><ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref><sp/>*default_logger_raw();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">SPDLOG_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_default_logger(std::shared_ptr&lt;spdlog::logger&gt;<sp/>default_logger);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" kindref="member">log</ref>(source_loc<sp/>source,<sp/>level::level_enum<sp/>lvl,<sp/>format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;log(source,<sp/>lvl,<sp/>fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" kindref="member">log</ref>(level::level_enum<sp/>lvl,<sp/>format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;log(source_loc{},<sp/>lvl,<sp/>fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trace(format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;trace(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debug(format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;debug(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structinfo" kindref="compound">info</ref>(format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;info(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn(format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;warn(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;error(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>critical(format_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;critical(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" kindref="member">log</ref>(source_loc<sp/>source,<sp/>level::level_enum<sp/>lvl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;log(source,<sp/>lvl,<sp/>msg);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" kindref="member">log</ref>(level::level_enum<sp/>lvl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;log(lvl,<sp/>msg);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPDLOG_WCHAR_TO_UTF8_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" kindref="member">log</ref>(source_loc<sp/>source,<sp/>level::level_enum<sp/>lvl,<sp/>wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;log(source,<sp/>lvl,<sp/>fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__core__func__exponential_1gad26901b9f2fdd30612867a8dcfa73fbc" kindref="member">log</ref>(level::level_enum<sp/>lvl,<sp/>wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;log(source_loc{},<sp/>lvl,<sp/>fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trace(wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;trace(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debug(wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;debug(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structinfo" kindref="compound">info</ref>(wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;info(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn(wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;warn(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;error(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>critical(wformat_string_t&lt;Args...&gt;<sp/>fmt,<sp/>Args<sp/>&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;critical(fmt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;trace(msg);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debug(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;debug(msg);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structinfo" kindref="compound">info</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;info(msg);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;warn(msg);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;error(msg);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>critical(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>default_logger_raw()-&gt;critical(msg);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>spdlog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enable/disable<sp/>log<sp/>calls<sp/>at<sp/>compile<sp/>time<sp/>according<sp/>to<sp/>global<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>SPDLOG_ACTIVE_LEVEL<sp/>to<sp/>one<sp/>of<sp/>those<sp/>(before<sp/>including<sp/>spdlog.h):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDLOG_LEVEL_TRACE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDLOG_LEVEL_DEBUG,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDLOG_LEVEL_INFO,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDLOG_LEVEL_WARN,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDLOG_LEVEL_ERROR,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDLOG_LEVEL_CRITICAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDLOG_LEVEL_OFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPDLOG_LOGGER_CALL(logger,<sp/>level,<sp/>...)<sp/>(logger)-&gt;log(spdlog::source_loc{__FILE__,<sp/>__LINE__,<sp/>SPDLOG_FUNCTION},<sp/>level,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPDLOG_ACTIVE_LEVEL<sp/>&lt;=<sp/>SPDLOG_LEVEL_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_TRACE(logger,<sp/>...)<sp/>SPDLOG_LOGGER_CALL(logger,<sp/>spdlog::level::trace,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_TRACE(...)<sp/>SPDLOG_LOGGER_TRACE(spdlog::default_logger_raw(),<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_TRACE(logger,<sp/>...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_TRACE(...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPDLOG_ACTIVE_LEVEL<sp/>&lt;=<sp/>SPDLOG_LEVEL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_DEBUG(logger,<sp/>...)<sp/>SPDLOG_LOGGER_CALL(logger,<sp/>spdlog::level::debug,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_DEBUG(...)<sp/>SPDLOG_LOGGER_DEBUG(spdlog::default_logger_raw(),<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_DEBUG(logger,<sp/>...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_DEBUG(...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPDLOG_ACTIVE_LEVEL<sp/>&lt;=<sp/>SPDLOG_LEVEL_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_INFO(logger,<sp/>...)<sp/>SPDLOG_LOGGER_CALL(logger,<sp/>spdlog::level::info,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_INFO(...)<sp/>SPDLOG_LOGGER_INFO(spdlog::default_logger_raw(),<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_INFO(logger,<sp/>...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_INFO(...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPDLOG_ACTIVE_LEVEL<sp/>&lt;=<sp/>SPDLOG_LEVEL_WARN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_WARN(logger,<sp/>...)<sp/>SPDLOG_LOGGER_CALL(logger,<sp/>spdlog::level::warn,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_WARN(...)<sp/>SPDLOG_LOGGER_WARN(spdlog::default_logger_raw(),<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_WARN(logger,<sp/>...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_WARN(...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPDLOG_ACTIVE_LEVEL<sp/>&lt;=<sp/>SPDLOG_LEVEL_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_ERROR(logger,<sp/>...)<sp/>SPDLOG_LOGGER_CALL(logger,<sp/>spdlog::level::err,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_ERROR(...)<sp/>SPDLOG_LOGGER_ERROR(spdlog::default_logger_raw(),<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_ERROR(logger,<sp/>...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_ERROR(...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPDLOG_ACTIVE_LEVEL<sp/>&lt;=<sp/>SPDLOG_LEVEL_CRITICAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_CRITICAL(logger,<sp/>...)<sp/>SPDLOG_LOGGER_CALL(logger,<sp/>spdlog::level::critical,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_CRITICAL(...)<sp/>SPDLOG_LOGGER_CRITICAL(spdlog::default_logger_raw(),<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_LOGGER_CRITICAL(logger,<sp/>...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SPDLOG_CRITICAL(...)<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPDLOG_HEADER_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&quot;spdlog-inl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SPDLOG_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/spdlog.h"/>
  </compounddef>
</doxygen>
