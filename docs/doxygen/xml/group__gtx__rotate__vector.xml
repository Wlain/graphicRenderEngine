<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__rotate__vector" kind="group">
    <compoundname>gtx_rotate_vector</compoundname>
    <title>GLM_GTX_rotate_vector</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga13360ebcb219dc64f9c58964ad99337c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::slerp</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;x, vec&lt; 3, T, Q &gt; const &amp;y, T const &amp;a)</argsstring>
        <name>slerp</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns Spherical interpolation between two vectors</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>A first vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>A second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Interpolation factor. The interpolation is defined beyond the range [0, 1].</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtx__rotate__vector" kindref="compound">GLM_GTX_rotate_vector</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="41" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="8" bodyend="26" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="41" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga425a0ad3cfa89f8cfee1bab79021a755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 2, T, Q &gt; glm::rotate</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v, T const &amp;angle)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a two dimensional vector. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="49" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="30" bodyend="42" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="49" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1gaa9033100ff2f16c01fefb01a88769f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::rotate</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v, T const &amp;angle, vec&lt; 3, T, Q &gt; const &amp;normal)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a three dimensional vector around an axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="56" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="46" bodyend="53" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="56" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga49e6da0fe1423e934b338a62863f5fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::rotate</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v, T const &amp;angle, vec&lt; 3, T, Q &gt; const &amp;normal)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a four dimensional vector around an axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="64" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="68" bodyend="75" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="64" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1gac6eaef961618708cb36c1af282ffe31a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::rotateX</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v, T const &amp;angle)</argsstring>
        <name>rotateX</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a three dimensional vector around the X axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="72" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="79" bodyend="91" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="72" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga919122e3280a912f4bece1d7d3db7d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::rotateY</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v, T const &amp;angle)</argsstring>
        <name>rotateY</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a three dimensional vector around the Y axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="79" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="95" bodyend="107" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="79" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga94df0a5dbacf290055b52fa8f57bc3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::rotateZ</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v, T const &amp;angle)</argsstring>
        <name>rotateZ</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a three dimensional vector around the Z axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="86" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="111" bodyend="123" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="86" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga673011e54271028cbf095ab39f870d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::rotateX</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v, T const &amp;angle)</argsstring>
        <name>rotateX</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a four dimensional vector around the X axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="93" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="127" bodyend="139" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="93" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga60a21500f2564a7ed52cab7fb207ca1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::rotateY</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v, T const &amp;angle)</argsstring>
        <name>rotateY</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a four dimensional vector around the Y axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="100" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="143" bodyend="155" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="100" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga7baf259d6570d93e260ed3b5584239ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::rotateZ</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v, T const &amp;angle)</argsstring>
        <name>rotateZ</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate a four dimensional vector around the Z axis. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="107" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="159" bodyend="171" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="107" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__vector_1ga83099d005b4af6a7a0d882ff6eb1a536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::orientation</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;Normal, vec&lt; 3, T, Q &gt; const &amp;Up)</argsstring>
        <name>orientation</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>Normal</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>Up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a rotation matrix from a normal and a up vector. From GLM_GTX_rotate_vector extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" line="114" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.inl" bodystart="175" bodyend="187" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_vector.hpp" declline="114" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="rotate__vector_8hpp" kindref="compound">glm/gtx/rotate_vector.hpp</ref>&gt; to use the features of this extension.</para>
<para>Function to directly rotate a vector </para>
    </detaileddescription>
  </compounddef>
</doxygen>
