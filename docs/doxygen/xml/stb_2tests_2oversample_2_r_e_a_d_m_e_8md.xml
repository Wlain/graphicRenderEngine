<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stb_2tests_2oversample_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Font<sp/>character<sp/>oversampling<sp/>for<sp/>rendering<sp/>from<sp/>atlas<sp/>textures</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TL,DR:<sp/>Run<sp/>oversample.exe<sp/>on<sp/>a<sp/>windows<sp/>machine<sp/>to<sp/>see<sp/>the</highlight></codeline>
<codeline><highlight class="normal">benefits<sp/>of<sp/>oversampling.<sp/>It<sp/>will<sp/>try<sp/>to<sp/>use<sp/>arial.ttf<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal">Windows<sp/>font<sp/>directory<sp/>unless<sp/>you<sp/>type<sp/>the<sp/>name<sp/>of<sp/>a<sp/>.ttf<sp/>file<sp/>as</highlight></codeline>
<codeline><highlight class="normal">a<sp/>command-line<sp/>argument.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Benefits<sp/>of<sp/>oversampling</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Oversampling<sp/>is<sp/>a<sp/>mechanism<sp/>for<sp/>improving<sp/>subpixel<sp/>rendering<sp/>of<sp/>characters.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Improving<sp/>subpixel<sp/>has<sp/>a<sp/>few<sp/>benefits:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>With<sp/>horizontal-oversampling,<sp/>text<sp/>can<sp/>remain<sp/>sharper<sp/>while<sp/>still<sp/>being<sp/>sub-pixel<sp/>positioned<sp/>for<sp/>better<sp/>kerning</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Horizontally-oversampled<sp/>text<sp/>significantly<sp/>reduces<sp/>aliasing<sp/>when<sp/>text<sp/>animates<sp/>horizontally</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Vertically-oversampled<sp/>text<sp/>significantly<sp/>reduces<sp/>aliasing<sp/>when<sp/>text<sp/>animates<sp/>vertically</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Text<sp/>oversampled<sp/>in<sp/>both<sp/>directions<sp/>significantly<sp/>reduces<sp/>aliasing<sp/>when<sp/>text<sp/>rotates</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>What<sp/>text<sp/>oversampling<sp/>is</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>common<sp/>strategy<sp/>for<sp/>rendering<sp/>text<sp/>is<sp/>to<sp/>cache<sp/>character<sp/>bitmaps</highlight></codeline>
<codeline><highlight class="normal">and<sp/>reuse<sp/>them.<sp/>For<sp/>hinted<sp/>characters,<sp/>every<sp/>instance<sp/>of<sp/>a<sp/>given</highlight></codeline>
<codeline><highlight class="normal">character<sp/>is<sp/>always<sp/>identical,<sp/>so<sp/>this<sp/>works<sp/>fine.<sp/>However,<sp/>stb_truetype</highlight></codeline>
<codeline><highlight class="normal">doesn&apos;t<sp/>do<sp/>hinting.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>anti-aliased<sp/>characters,<sp/>you<sp/>can<sp/>actually<sp/>position<sp/>the<sp/>characters</highlight></codeline>
<codeline><highlight class="normal">with<sp/>subpixel<sp/>precision,<sp/>and<sp/>get<sp/>different<sp/>bitmaps<sp/>based<sp/>on<sp/>that<sp/>positioning</highlight></codeline>
<codeline><highlight class="normal">if<sp/>you<sp/>re-render<sp/>the<sp/>vector<sp/>data.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">However,<sp/>if<sp/>you<sp/>simply<sp/>cache<sp/>a<sp/>single<sp/>version<sp/>of<sp/>the<sp/>bitmap<sp/>and</highlight></codeline>
<codeline><highlight class="normal">draw<sp/>it<sp/>at<sp/>different<sp/>subpixel<sp/>positions<sp/>with<sp/>a<sp/>GPU,<sp/>you<sp/>will<sp/>get</highlight></codeline>
<codeline><highlight class="normal">either<sp/>the<sp/>exact<sp/>same<sp/>result<sp/>(if<sp/>you<sp/>use<sp/>point-sampling<sp/>on<sp/>the</highlight></codeline>
<codeline><highlight class="normal">texture)<sp/>or<sp/>linear<sp/>filtering.<sp/>Linear<sp/>filtering<sp/>will<sp/>cause<sp/>a<sp/>sub-pixel</highlight></codeline>
<codeline><highlight class="normal">positioned<sp/>bitmap<sp/>to<sp/>blur<sp/>further,<sp/>causing<sp/>a<sp/>visible<sp/>de-sharpening</highlight></codeline>
<codeline><highlight class="normal">of<sp/>the<sp/>character.<sp/>(And,<sp/>since<sp/>the<sp/>character<sp/>wasn&apos;t<sp/>hinted,<sp/>it<sp/>was</highlight></codeline>
<codeline><highlight class="normal">already<sp/>blurrier<sp/>than<sp/>a<sp/>hinted<sp/>one<sp/>would<sp/>be,<sp/>and<sp/>now<sp/>it<sp/>gets<sp/>even</highlight></codeline>
<codeline><highlight class="normal">more<sp/>blurry.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>avoid<sp/>this<sp/>by<sp/>caching<sp/>multiple<sp/>variants<sp/>of<sp/>a<sp/>character<sp/>which</highlight></codeline>
<codeline><highlight class="normal">were<sp/>rendered<sp/>independently<sp/>from<sp/>the<sp/>vector<sp/>data.<sp/>For<sp/>example,<sp/>you</highlight></codeline>
<codeline><highlight class="normal">might<sp/>cache<sp/>3<sp/>versions<sp/>of<sp/>a<sp/>char,<sp/>at<sp/>0,<sp/>1/3,<sp/>and<sp/>2/3rds<sp/>of<sp/>a<sp/>pixel</highlight></codeline>
<codeline><highlight class="normal">horizontal<sp/>offset,<sp/>and<sp/>always<sp/>require<sp/>characters<sp/>to<sp/>fall<sp/>on<sp/>integer</highlight></codeline>
<codeline><highlight class="normal">positions<sp/>vertically.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>creating<sp/>a<sp/>texture<sp/>atlas<sp/>for<sp/>use<sp/>on<sp/>GPUs,<sp/>which<sp/>support<sp/>bilinear</highlight></codeline>
<codeline><highlight class="normal">filtering,<sp/>there<sp/>is<sp/>a<sp/>better<sp/>approach<sp/>than<sp/>caching<sp/>several<sp/>independent</highlight></codeline>
<codeline><highlight class="normal">positions,<sp/>which<sp/>is<sp/>to<sp/>allow<sp/>lerping<sp/>between<sp/>the<sp/>versions<sp/>to<sp/>allow</highlight></codeline>
<codeline><highlight class="normal">finer<sp/>subpixel<sp/>positioning.<sp/>You<sp/>can<sp/>achieve<sp/>these<sp/>by<sp/>interleaving</highlight></codeline>
<codeline><highlight class="normal">each<sp/>of<sp/>the<sp/>cached<sp/>bitmaps,<sp/>but<sp/>this<sp/>turns<sp/>out<sp/>to<sp/>be<sp/>mathematically</highlight></codeline>
<codeline><highlight class="normal">equivalent<sp/>to<sp/>a<sp/>simpler<sp/>operation:<sp/>oversampling<sp/>and<sp/>prefiltering<sp/>the</highlight></codeline>
<codeline><highlight class="normal">characters.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">So,<sp/>setting<sp/>oversampling<sp/>of<sp/>2x2<sp/>in<sp/>stb_truetype<sp/>is<sp/>equivalent<sp/>to<sp/>caching</highlight></codeline>
<codeline><highlight class="normal">each<sp/>character<sp/>in<sp/>4<sp/>different<sp/>variations,<sp/>1<sp/>for<sp/>each<sp/>subpixel<sp/>position</highlight></codeline>
<codeline><highlight class="normal">in<sp/>a<sp/>2x2<sp/>set.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">An<sp/>advantage<sp/>of<sp/>this<sp/>formulation<sp/>is<sp/>that<sp/>no<sp/>changes<sp/>are<sp/>required<sp/>to</highlight></codeline>
<codeline><highlight class="normal">the<sp/>rendering<sp/>code;<sp/>the<sp/>exact<sp/>same<sp/>quad-rendering<sp/>code<sp/>works,<sp/>it<sp/>just</highlight></codeline>
<codeline><highlight class="normal">uses<sp/>different<sp/>texture<sp/>coordinates.<sp/>(Note<sp/>this<sp/>does<sp/>potentially<sp/>increase</highlight></codeline>
<codeline><highlight class="normal">texture<sp/>bandwidth<sp/>for<sp/>text<sp/>rendering<sp/>since<sp/>we<sp/>end<sp/>up<sp/>minifying<sp/>the<sp/>texture</highlight></codeline>
<codeline><highlight class="normal">without<sp/>using<sp/>mipmapping,<sp/>but<sp/>you<sp/>probably<sp/>are<sp/>not<sp/>going<sp/>to<sp/>be<sp/>fill-bound</highlight></codeline>
<codeline><highlight class="normal">by<sp/>your<sp/>text<sp/>rendering.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>What<sp/>about<sp/>gamma?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Gamma-correction<sp/>for<sp/>fonts<sp/>just<sp/>doesn&apos;t<sp/>work.<sp/>This<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>make</highlight></codeline>
<codeline><highlight class="normal">much<sp/>sense<sp/>--<sp/>it&apos;s<sp/>physically<sp/>correct,<sp/>it<sp/>simulates<sp/>what<sp/>we&apos;d<sp/>see<sp/>if<sp/>you</highlight></codeline>
<codeline><highlight class="normal">shrunk<sp/>a<sp/>font<sp/>down<sp/>really<sp/>far,<sp/>right?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">But<sp/>you<sp/>can<sp/>play<sp/>with<sp/>it<sp/>in<sp/>the<sp/>oversample.exe<sp/>app.<sp/>If<sp/>you<sp/>turn<sp/>it<sp/>on,</highlight></codeline>
<codeline><highlight class="normal">white-on-black<sp/>fonts<sp/>become<sp/>too<sp/>thick<sp/>(i.e.<sp/>they<sp/>become<sp/>too<sp/>bright),<sp/>and</highlight></codeline>
<codeline><highlight class="normal">black-on-white<sp/>fonts<sp/>become<sp/>too<sp/>thin<sp/>(i.e.<sp/>they<sp/>are<sp/>insufficiently<sp/>dark).<sp/>There<sp/>is</highlight></codeline>
<codeline><highlight class="normal">no<sp/>way<sp/>to<sp/>adjust<sp/>the<sp/>font&apos;s<sp/>inherent<sp/>thickness<sp/>(i.e.<sp/>by<sp/>switching<sp/>to</highlight></codeline>
<codeline><highlight class="normal">bold)<sp/>to<sp/>fix<sp/>this<sp/>for<sp/>both;<sp/>making<sp/>the<sp/>font<sp/>thicker<sp/>will<sp/>make<sp/>white</highlight></codeline>
<codeline><highlight class="normal">text<sp/>worse,<sp/>and<sp/>making<sp/>the<sp/>font<sp/>thinner<sp/>will<sp/>make<sp/>black<sp/>text<sp/>worse.</highlight></codeline>
<codeline><highlight class="normal">Obviously<sp/>you<sp/>could<sp/>use<sp/>different<sp/>fonts<sp/>for<sp/>light<sp/>and<sp/>dark<sp/>cases,<sp/>but</highlight></codeline>
<codeline><highlight class="normal">this<sp/>doesn&apos;t<sp/>seem<sp/>like<sp/>a<sp/>very<sp/>good<sp/>way<sp/>for<sp/>fonts<sp/>to<sp/>work.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Multiple<sp/>people<sp/>who<sp/>have<sp/>experimented<sp/>with<sp/>this<sp/>independently<sp/>(me,</highlight></codeline>
<codeline><highlight class="normal">Fabian<sp/>Giesen,and<sp/>Maxim<sp/>Shemanarev<sp/>of<sp/>Anti-Grain<sp/>Geometry)<sp/>have<sp/>all</highlight></codeline>
<codeline><highlight class="normal">concluded<sp/>that<sp/>correct<sp/>gamma-correction<sp/>does<sp/>not<sp/>produce<sp/>the<sp/>best</highlight></codeline>
<codeline><highlight class="normal">results<sp/>for<sp/>fonts.<sp/>Font<sp/>rendering<sp/>just<sp/>generally<sp/>looks<sp/>better<sp/>without</highlight></codeline>
<codeline><highlight class="normal">gamma<sp/>correction<sp/>(or<sp/>possibly<sp/>with<sp/>some<sp/>arbitrary<sp/>power<sp/>stuck<sp/>in</highlight></codeline>
<codeline><highlight class="normal">there,<sp/>but<sp/>it&apos;s<sp/>not<sp/>really<sp/>correcting<sp/>for<sp/>gamma<sp/>at<sp/>that<sp/>point).<sp/>Maybe</highlight></codeline>
<codeline><highlight class="normal">this<sp/>is<sp/>in<sp/>part<sp/>a<sp/>product<sp/>of<sp/>how<sp/>we&apos;re<sp/>used<sp/>to<sp/>fonts<sp/>being<sp/>on<sp/>screens</highlight></codeline>
<codeline><highlight class="normal">which<sp/>has<sp/>changed<sp/>how<sp/>we<sp/>expect<sp/>them<sp/>to<sp/>look<sp/>(e.g.<sp/>perhaps<sp/>hinting</highlight></codeline>
<codeline><highlight class="normal">oversharpens<sp/>them<sp/>and<sp/>prevents<sp/>the<sp/>real-world<sp/>thinning<sp/>you&apos;d<sp/>see<sp/>in</highlight></codeline>
<codeline><highlight class="normal">a<sp/>black-on-white<sp/>text).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(AGG<sp/>link<sp/>on<sp/>text<sp/>rendering,<sp/>including<sp/>mention<sp/>of<sp/>gamma:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>http://www.antigrain.com/research/font_rasterization/<sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Nevertheless,<sp/>even<sp/>if<sp/>you<sp/>turn<sp/>on<sp/>gamma-correction,<sp/>you<sp/>will<sp/>find<sp/>that</highlight></codeline>
<codeline><highlight class="normal">oversampling<sp/>still<sp/>helps<sp/>in<sp/>many<sp/>cases<sp/>for<sp/>small<sp/>fonts.</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/oversample/README.md"/>
  </compounddef>
</doxygen>
