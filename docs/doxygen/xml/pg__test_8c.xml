<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="pg__test_8c" kind="file" language="C++">
    <compoundname>pg_test.c</compoundname>
    <includes refid="stb_8h" local="yes">stb.h</includes>
    <includes local="yes">stb_pg.h</includes>
    <includes refid="stb__image_8h" local="yes">stb_image.h</includes>
    <includes local="yes">stb_image_write.h</includes>
    <incdepgraph>
      <node id="2">
        <label>stb.h</label>
        <link refid="stb_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stb_image.h</label>
        <link refid="stb__image_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c</label>
        <link refid="pg__test_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stb_image_write.h</label>
      </node>
      <node id="8">
        <label>stb_pg.h</label>
      </node>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pg__test_8c_1a5640e9acc84db268e2628d4c5dad308c" prot="public" static="no">
        <name>STB_DEFINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="1" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pg__test_8c_1a51bf668b4df8d783fefa0a4a07b30b5a" prot="public" static="no">
        <name>STB_PG_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="3" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pg__test_8c_1a18372412ad2fc3ce1e3240b3cf0efe78" prot="public" static="no">
        <name>STB_IMAGE_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="5" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pg__test_8c_1aefe397a94e8feddc652f92ef40ce9597" prot="public" static="no">
        <name>STB_IMAGE_WRITE_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="7" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pg__test_8c_1af48e77fa8f01c196b6378162cd47757c" prot="public" static="yes" mutable="no">
        <type>float *</type>
        <definition>float* hf</definition>
        <argsstring></argsstring>
        <name>hf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="10" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pg__test_8c_1a21fdffab06c9bbc10c02a7b40fda5573" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int hf_width</definition>
        <argsstring></argsstring>
        <name>hf_width</name>
        <initializer>= 10001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="11" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pg__test_8c_1aa4953a32a515f592912f9979a74a41ec" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int hf_height</definition>
        <argsstring></argsstring>
        <name>hf_height</name>
        <initializer>= 10001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="12" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pg__test_8c_1a98376079d931e64fff39e32b844937b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float get_height</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>get_height</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="14" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="14" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="pg__test_8c_1a175af37e621feb1662e5203d77317c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbpg_tick</definition>
        <argsstring>(float dt)</argsstring>
        <name>stbpg_tick</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="33" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="33" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="pg__test_8c_1a35374f657c47f96c3987878282033a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbpg_main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>stbpg_main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" line="101" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c" bodystart="101" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>STB_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_PG_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_pg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_IMAGE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_IMAGE_WRITE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_image_write.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*hf;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hf_width<sp/>=<sp/>10001;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hf_height<sp/>=<sp/>10001;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>get_height(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h00,h01,h10,h11,h0,h1;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,iy;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>hf_width-1)<sp/>x<sp/>=<sp/>(float)<sp/>hf_width-1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>0)<sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>hf_height-1)<sp/>y<sp/>=<sp/>(float)<sp/>hf_height-1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/>ix<sp/>=<sp/>(int)<sp/>x;<sp/>x<sp/>-=<sp/>ix;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>iy<sp/>=<sp/>(int)<sp/>y;<sp/>y<sp/>-=<sp/>iy;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/>h00<sp/>=<sp/>hf[(iy+0)*hf_height+(ix+0)];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>h10<sp/>=<sp/>hf[(iy+0)*hf_height+(ix+1)];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>h01<sp/>=<sp/>hf[(iy+1)*hf_height+(ix+0)];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/>h11<sp/>=<sp/>hf[(iy+1)*hf_height+(ix+1)];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>h0<sp/>=<sp/>stb_lerp(y,<sp/>h00,<sp/>h01);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>h1<sp/>=<sp/>stb_lerp(y,<sp/>h10,<sp/>h11);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stb_lerp(x,<sp/>h0,<sp/>h1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbpg_tick(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,j=0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>glClearColor(0.6f,0.7f,1.0f,1.0f);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>glClearDepth(1.0f);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>glDepthFunc(GL_LESS);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>glEnable(GL_DEPTH_TEST);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>glEnable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>glMatrixMode(GL_PROJECTION);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>gluPerspective(60.0,<sp/>1920/1080.0f,<sp/>0.02f,<sp/>8000.0f);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//glOrtho(-8,8,-6,6,<sp/>-100,<sp/>100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>glMatrixMode(GL_MODELVIEW);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>glRotatef(-90,<sp/>1,0,0);<sp/></highlight><highlight class="comment">//<sp/>z-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbpg_get_mouselook(&amp;x,&amp;y);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glRotatef(-y,<sp/>1,0,0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glRotatef(-x,<sp/>0,0,1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cam_x<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cam_y<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cam_z<sp/>=<sp/>700;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x=0,y=0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbpg_get_keymove(&amp;x,&amp;y);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cam_x<sp/>+=<sp/>x*dt*5.0f;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cam_y<sp/>+=<sp/>y*dt*5.0f;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTranslatef(-cam_x,<sp/>-cam_y,<sp/>-cam_z);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cam_x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>cam_x<sp/>&lt;<sp/>hf_width<sp/>&amp;&amp;<sp/>cam_y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>cam_y<sp/>&lt;<sp/>hf_height)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam_z<sp/>=<sp/>get_height(cam_x,<sp/>cam_y)<sp/>+<sp/>1.65f;<sp/></highlight><highlight class="comment">//<sp/>average<sp/>eye<sp/>height<sp/>in<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=501;<sp/>j+1<sp/>&lt;<sp/>1500+0*hf_height;<sp/>j<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(GL_QUAD_STRIP);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=501;<sp/>i<sp/>&lt;<sp/>1500+0*hf_width;<sp/>i<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flip=0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flip)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(0.5,0.5,0.5);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(0.4f,0.4f,0.4f);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flip<sp/>=<sp/>!flip;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>i,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>j+<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>,hf[(j+<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>)*hf_width+i]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>i,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>j<sp/><sp/><sp/>,hf[<sp/><sp/>j<sp/><sp/><sp/><sp/>*hf_width+i]);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>glBegin(GL_LINES);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(1,0,0);<sp/>glVertex3f(10,0,0);<sp/>glVertex3f(0,0,0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(0,1,0);<sp/>glVertex3f(0,10,0);<sp/>glVertex3f(0,0,0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(0,0,1);<sp/>glVertex3f(0,0,10);<sp/>glVertex3f(0,0,0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbpg_main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,h,c;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>stbi_load_16(</highlight><highlight class="stringliteral">&quot;c:/x/ned_1m/test2.png&quot;</highlight><highlight class="normal">,<sp/>&amp;w,<sp/>&amp;h,<sp/>&amp;c,<sp/>1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>stb_filewrite(</highlight><highlight class="stringliteral">&quot;c:/x/ned_1m/x73_y428_10012_10012.bin&quot;</highlight><highlight class="normal">,<sp/>data,<sp/>w*h*2);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>stb_file(</highlight><highlight class="stringliteral">&quot;c:/x/ned_1m/x73_y428_10012_10012.bin&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w=10012,<sp/>h<sp/>=<sp/>10012;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>hf<sp/>=<sp/>malloc(hf_width<sp/>*<sp/>hf_height<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>hf_height;<sp/>++j)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>hf_width;<sp/>++i)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hf[j*hf_width+i]<sp/>=<sp/>data[j*w+i]<sp/>/<sp/>32.0f;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>stbpg_gl_compat_version(1,1);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>stbpg_windowed(</highlight><highlight class="stringliteral">&quot;terrain_edit&quot;</highlight><highlight class="normal">,<sp/>1920,<sp/>1080);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>stbpg_run();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/pg_test/pg_test.c"/>
  </compounddef>
</doxygen>
