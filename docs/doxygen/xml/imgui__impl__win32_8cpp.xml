<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__impl__win32_8cpp" kind="file" language="C++">
    <compoundname>imgui_impl_win32.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__impl__win32_8h" local="yes">imgui_impl_win32.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">windowsx.h</includes>
    <includes local="no">tchar.h</includes>
    <includes local="no">dwmapi.h</includes>
    <includes refid="xinput_8h" local="no">xinput.h</includes>
    <incdepgraph>
      <node id="14">
        <label>xinput.h</label>
        <link refid="xinput_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp</label>
        <link refid="imgui__impl__win32_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_impl_win32.h</label>
        <link refid="imgui__impl__win32_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="13">
        <label>dwmapi.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>tchar.h</label>
      </node>
      <node id="15">
        <label>windef.h</label>
      </node>
      <node id="10">
        <label>windows.h</label>
      </node>
      <node id="11">
        <label>windowsx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_im_gui___impl_win32___data" prot="public">ImGui_ImplWin32_Data</innerclass>
    <innerclass refid="struct_im_gui___impl_win32___viewport_data" prot="public">ImGui_ImplWin32_ViewportData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ac7bef5d85e3dcd73eef56ad39ffc84a9" prot="public" static="no">
        <name>WIN32_LEAN_AND_MEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="19" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ac0e4756c36e2ab0b0b13061a722d7dd1" prot="public" static="no">
        <name>MAP_BUTTON</name>
        <param><defname>NAV_NO</defname></param>
        <param><defname>BUTTON_ENUM</defname></param>
        <initializer>{ io.NavInputs[NAV_NO] = (gamepad.wButtons &amp; BUTTON_ENUM) ? 1.0f : 0.0f; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="342" column="17"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1adb5084b87f1cecae595f6a70b5da263a" prot="public" static="no">
        <name>MAP_ANALOG</name>
        <param><defname>NAV_NO</defname></param>
        <param><defname>VALUE</defname></param>
        <param><defname>V0</defname></param>
        <param><defname>V1</defname></param>
        <initializer>{ float vn = (float)(VALUE - V0) / (float)(V1 - V0); if (vn &gt; 1.0f) vn = 1.0f; if (vn &gt; 0.0f &amp;&amp; io.NavInputs[NAV_NO] &lt; vn) io.NavInputs[NAV_NO] = vn; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="343" column="17"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1aa2e13f774782031f8b49ae0edca83d69" prot="public" static="no">
        <name>IM_VK_KEYPAD_ENTER</name>
        <initializer>(VK_RETURN + 256)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="432" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a7b2918d422b3a1fe86a641f74818bb55" prot="public" static="no">
        <name>WM_MOUSEHWHEEL</name>
        <initializer>0x020E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="549" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a454522b0cfb3a366cc14230e62be3e94" prot="public" static="no">
        <name>DBT_DEVNODES_CHANGED</name>
        <initializer>0x0007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="552" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a742997db6a6fe03581d2244ea085618e" prot="public" static="no">
        <name>_IsWindowsVistaOrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0600), LOBYTE(0x0600), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="741" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ae8ca9bc7824bd084363ae25af2df8991" prot="public" static="no">
        <name>_IsWindows8OrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0602), LOBYTE(0x0602), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="742" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a7befc644ed0e43855853f48c1045e9d3" prot="public" static="no">
        <name>_IsWindows8Point1OrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0603), LOBYTE(0x0603), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="743" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a2b8cd4078bf40e54b53124033cf274a4" prot="public" static="no">
        <name>_IsWindows10OrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0A00), LOBYTE(0x0A00), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="744" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a9272fbff584df35213a9076e900c24c1" prot="public" static="no">
        <name>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE</name>
        <initializer>(DPI_AWARENESS_CONTEXT)-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="752" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ac007743843b15f477f33dc5c3dd0507a" prot="public" static="no">
        <name>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</name>
        <initializer>(DPI_AWARENESS_CONTEXT)-4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="755" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="755" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0" prot="public" static="no" strong="no">
        <type></type>
        <name>PROCESS_DPI_AWARENESS</name>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019" prot="public">
          <name>PROCESS_DPI_UNAWARE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b" prot="public">
          <name>PROCESS_SYSTEM_DPI_AWARE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097" prot="public">
          <name>PROCESS_PER_MONITOR_DPI_AWARE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019" prot="public">
          <name>PROCESS_DPI_UNAWARE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b" prot="public">
          <name>PROCESS_SYSTEM_DPI_AWARE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097" prot="public">
          <name>PROCESS_PER_MONITOR_DPI_AWARE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="747" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="747" bodyend="747"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcf" prot="public" static="no" strong="no">
        <type></type>
        <name>MONITOR_DPI_TYPE</name>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162" prot="public">
          <name>MDT_EFFECTIVE_DPI</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3" prot="public">
          <name>MDT_ANGULAR_DPI</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851" prot="public">
          <name>MDT_RAW_DPI</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f" prot="public">
          <name>MDT_DEFAULT</name>
          <initializer>= MDT_EFFECTIVE_DPI</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162" prot="public">
          <name>MDT_EFFECTIVE_DPI</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3" prot="public">
          <name>MDT_ANGULAR_DPI</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851" prot="public">
          <name>MDT_RAW_DPI</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f" prot="public">
          <name>MDT_DEFAULT</name>
          <initializer>= MDT_EFFECTIVE_DPI</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="748" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="748" bodyend="748"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1ab894020cfaceec8e0a7e24a2b8cf003a" prot="public" static="no">
        <type>DWORD(WINAPI *</type>
        <definition>typedef DWORD(WINAPI * PFN_XInputGetCapabilities) (DWORD, DWORD, XINPUT_CAPABILITIES *)</definition>
        <argsstring>)(DWORD, DWORD, XINPUT_CAPABILITIES *)</argsstring>
        <name>PFN_XInputGetCapabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="32" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1a0554b333dae0845c369b9d7234c695e9" prot="public" static="no">
        <type>DWORD(WINAPI *</type>
        <definition>typedef DWORD(WINAPI * PFN_XInputGetState) (DWORD, XINPUT_STATE *)</definition>
        <argsstring>)(DWORD, XINPUT_STATE *)</argsstring>
        <name>PFN_XInputGetState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="33" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1a36d30a5f5f7942a50b272fa13058cf96" prot="public" static="no">
        <type>HRESULT(WINAPI *</type>
        <definition>typedef HRESULT(WINAPI * PFN_SetProcessDpiAwareness) (PROCESS_DPI_AWARENESS)</definition>
        <argsstring>)(PROCESS_DPI_AWARENESS)</argsstring>
        <name>PFN_SetProcessDpiAwareness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="757" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1a411247e61a6621babce2d06bb8a434db" prot="public" static="no">
        <type>HRESULT(WINAPI *</type>
        <definition>typedef HRESULT(WINAPI * PFN_GetDpiForMonitor) (HMONITOR, MONITOR_DPI_TYPE, UINT *, UINT *)</definition>
        <argsstring>)(HMONITOR, MONITOR_DPI_TYPE, UINT *, UINT *)</argsstring>
        <name>PFN_GetDpiForMonitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="758" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1ac4fd09e8ec8568aa443549a1286800b1" prot="public" static="no">
        <type>DPI_AWARENESS_CONTEXT(WINAPI *</type>
        <definition>typedef DPI_AWARENESS_CONTEXT(WINAPI * PFN_SetThreadDpiAwarenessContext) (DPI_AWARENESS_CONTEXT)</definition>
        <argsstring>)(DPI_AWARENESS_CONTEXT)</argsstring>
        <name>PFN_SetThreadDpiAwarenessContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="759" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="759" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1adbf341e475abedd05b0f72baa7b4b9aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_InitPlatformInterface</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_InitPlatformInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1093" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1093" bodyend="1139" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" declline="80" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ad8c38ef8572c2bbc3a11f254e0c0abda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_ShutdownPlatformInterface</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_ShutdownPlatformInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1141" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1141" bodyend="1145" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" declline="81" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a89e9a7d37283f923c83cb50573b5e1d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateMonitors</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_UpdateMonitors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="386" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="386" bodyend="392" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" declline="82" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a89061996e57d1d3850ca680093eaa688" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref> *</type>
        <definition>static ImGui_ImplWin32_Data * ImGui_ImplWin32_GetBackendData</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_GetBackendData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="110" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a4221d0dc7d4977eb30970e1f5c2cca98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplWin32_Init</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_Init</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="116" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="116" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a4eddd1969cc460312197f2df3dbc992a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_Shutdown</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="172" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="172" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a1a9fc4403b7509b07ccc74b5f52824e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplWin32_UpdateMouseCursor</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_UpdateMouseCursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="191" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="191" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ab053b258f642136586dd18c8acf7e520" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsVkDown</definition>
        <argsstring>(int vk)</argsstring>
        <name>IsVkDown</name>
        <param>
          <type>int</type>
          <declname>vk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="224" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a7e408b4a90b9d4f8e66de830f6855349" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_AddKeyEvent</definition>
        <argsstring>(ImGuiKey key, bool down, int native_keycode, int native_scancode=-1)</argsstring>
        <name>ImGui_ImplWin32_AddKeyEvent</name>
        <param>
          <type>ImGuiKey</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <param>
          <type>int</type>
          <declname>native_keycode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>native_scancode</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="229" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="229" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ac55fa99fc351002675f1bae466188ed6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_ProcessKeyEventsWorkarounds</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_ProcessKeyEventsWorkarounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="237" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="237" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1aab8de0e15c46e25c480d68dba5a37906" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateKeyModifiers</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_UpdateKeyModifiers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="252" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="252" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ad05354f5b67a3d5cfc83faa2e9049ea1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateMouseData</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_UpdateMouseData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="265" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="265" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1aab830d0ec6d1dd46521c8839fe27d110" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateGamepads</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_UpdateGamepads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="317" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="317" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a406c6a8e48cae7dcb70e768176599416" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL CALLBACK</type>
        <definition>static BOOL CALLBACK ImGui_ImplWin32_UpdateMonitors_EnumFunc</definition>
        <argsstring>(HMONITOR monitor, HDC, LPRECT, LPARAM)</argsstring>
        <name>ImGui_ImplWin32_UpdateMonitors_EnumFunc</name>
        <param>
          <type>HMONITOR</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>HDC</type>
        </param>
        <param>
          <type>LPRECT</type>
        </param>
        <param>
          <type>LPARAM</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="366" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="366" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ade4f55b90fdbd75a562d894d33f1909e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_NewFrame</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_NewFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="394" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="394" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a8566e972d0873b585b377750355a3c23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ImGuiKey</type>
        <definition>static ImGuiKey ImGui_ImplWin32_VirtualKeyToImGuiKey</definition>
        <argsstring>(WPARAM wParam)</argsstring>
        <name>ImGui_ImplWin32_VirtualKeyToImGuiKey</name>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="435" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="435" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a25447e4d5d2cabecf54cb9a5c84e7cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API LRESULT</type>
        <definition>IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler</definition>
        <argsstring>(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>ImGui_ImplWin32_WndProcHandler</name>
        <param>
          <type>HWND</type>
          <declname>hwnd</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="567" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="567" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ae74539483f765cd9089c618bdc5d1015" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>static BOOL _IsWindowsVersionOrGreater</definition>
        <argsstring>(WORD major, WORD minor, WORD)</argsstring>
        <name>_IsWindowsVersionOrGreater</name>
        <param>
          <type>WORD</type>
          <declname>major</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>WORD</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="721" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="721" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a3d68bc19ea52dbb5682b42f9a3316189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_HANDLE</definition>
        <argsstring>(DPI_AWARENESS_CONTEXT)</argsstring>
        <name>DECLARE_HANDLE</name>
        <param>
          <type>DPI_AWARENESS_CONTEXT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="751" column="1" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" declline="751" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1afda525ac1c8a2b4e357f19488f661014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_EnableDpiAwareness</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_EnableDpiAwareness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="762" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="762" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a765356269dc7e4f7f521d5f9c9bc42a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ImGui_ImplWin32_GetDpiScaleForMonitor</definition>
        <argsstring>(void *monitor)</argsstring>
        <name>ImGui_ImplWin32_GetDpiScaleForMonitor</name>
        <param>
          <type>void *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="795" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="795" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a63408fa92e0f85dcf74b27ba6b81f7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ImGui_ImplWin32_GetDpiScaleForHwnd</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_GetDpiScaleForHwnd</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="821" column="7" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="821" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a04cb7906c75b84f6e846fa535362ced4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_GetWin32StyleFromViewportFlags</definition>
        <argsstring>(ImGuiViewportFlags flags, DWORD *out_style, DWORD *out_ex_style)</argsstring>
        <name>ImGui_ImplWin32_GetWin32StyleFromViewportFlags</name>
        <param>
          <type>ImGuiViewportFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>DWORD *</type>
          <declname>out_style</declname>
        </param>
        <param>
          <type>DWORD *</type>
          <declname>out_ex_style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="845" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="845" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ab39d42e1529ae7793a80fa99a0aa7247" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_CreateWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_CreateWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="861" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="861" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a98a47b4efabbba97b149e3cc997f9420" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_DestroyWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_DestroyWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="885" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="885" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1af2a09beeb89c0fc97e459cf1543bea81" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_ShowWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_ShowWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="904" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="904" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a18344e4e0e3c91a55aac893b7cc4296f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateWindow</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_UpdateWindow</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="914" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="914" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a135aea105cbe5fb3e991135dd303365b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImGui_ImplWin32_GetWindowPos</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_GetWindowPos</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="945" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="945" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a00dc1393aaa6bfe49a8e28c7fa3a0116" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_SetWindowPos</definition>
        <argsstring>(ImGuiViewport *viewport, ImVec2 pos)</argsstring>
        <name>ImGui_ImplWin32_SetWindowPos</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="954" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="954" bodyend="961"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1abf9fabfc5fccc273dd0c772caf9afd2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 ImGui_ImplWin32_GetWindowSize</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_GetWindowSize</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="963" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="963" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a25e40453143994bf4b6b730f0095ca61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_SetWindowSize</definition>
        <argsstring>(ImGuiViewport *viewport, ImVec2 size)</argsstring>
        <name>ImGui_ImplWin32_SetWindowSize</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="972" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="972" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a23dbebd2bbb4f5152dcb78cf80a31864" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_SetWindowFocus</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_SetWindowFocus</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="981" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="981" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a779e3d7c2538d85073b74fbda38e6e87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplWin32_GetWindowFocus</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_GetWindowFocus</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="990" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="990" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1aa4db55cffa972a9f20dc26aaae4ce61b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplWin32_GetWindowMinimized</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_GetWindowMinimized</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="997" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="997" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a2f431ee18a1d3211691aa572a58f531b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_SetWindowTitle</definition>
        <argsstring>(ImGuiViewport *viewport, const char *title)</argsstring>
        <name>ImGui_ImplWin32_SetWindowTitle</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1004" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1004" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a20c59a1c91616a24f550f5bc8c970415" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_SetWindowAlpha</definition>
        <argsstring>(ImGuiViewport *viewport, float alpha)</argsstring>
        <name>ImGui_ImplWin32_SetWindowAlpha</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1016" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1016" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ad0c9d8b96ddfa493059d4c41e7db6492" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float ImGui_ImplWin32_GetWindowDpiScale</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_GetWindowDpiScale</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1034" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1034" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a07fb8ef75809375968109182ec3766ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_OnChangedViewport</definition>
        <argsstring>(ImGuiViewport *viewport)</argsstring>
        <name>ImGui_ImplWin32_OnChangedViewport</name>
        <param>
          <type><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref> *</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1042" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1042" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ab4a89c5993eec0726141d49e8b105625" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LRESULT CALLBACK</type>
        <definition>static LRESULT CALLBACK ImGui_ImplWin32_WndProcHandler_PlatformWindow</definition>
        <argsstring>(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>ImGui_ImplWin32_WndProcHandler_PlatformWindow</name>
        <param>
          <type>HWND</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1057" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1057" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a726a328080634cc7b808de6b7e1cec9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_EnableAlphaCompositing</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_EnableAlphaCompositing</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" line="1158" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp" bodystart="1158" bodyend="1185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Platform<sp/>Backend<sp/>for<sp/>Windows<sp/>(standard<sp/>windows<sp/>API<sp/>for<sp/>32<sp/>and<sp/>64<sp/>bits<sp/>applications)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Renderer<sp/>(e.g.<sp/>DirectX11,<sp/>OpenGL3,<sp/>Vulkan..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Clipboard<sp/>support<sp/>(for<sp/>Win32<sp/>this<sp/>is<sp/>actually<sp/>part<sp/>of<sp/>core<sp/>dear<sp/>imgui)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Keyboard<sp/>support.<sp/>Since<sp/>1.87<sp/>we<sp/>are<sp/>using<sp/>the<sp/>io.AddKeyEvent()<sp/>function.<sp/>Pass<sp/>ImGuiKey<sp/>values<sp/>to<sp/>all<sp/>key<sp/>functions<sp/>e.g.<sp/>ImGui::IsKeyPressed(ImGuiKey_Space).<sp/>[Legacy<sp/>VK_*<sp/>values<sp/>will<sp/>also<sp/>be<sp/>supported<sp/>unless<sp/>IMGUI_DISABLE_OBSOLETE_KEYIO<sp/>is<sp/>set]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Gamepad<sp/>support.<sp/>Enabled<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NavEnableGamepad&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Mouse<sp/>cursor<sp/>shape<sp/>and<sp/>visibility.<sp/>Disable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NoMouseCursorChange&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Multi-viewport<sp/>support<sp/>(multiple<sp/>windows).<sp/>Enable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_ViewportsEnable&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>Dear<sp/>ImGui,<sp/>read<sp/>documentation<sp/>from<sp/>the<sp/>docs/<sp/>folder<sp/>+<sp/>read<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>online:<sp/>https://github.com/ocornut/imgui/tree/master/docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_impl_win32.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32_LEAN_AND_MEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windowsx.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>GET_X_LPARAM(),<sp/>GET_Y_LPARAM()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dwmapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuration<sp/>flags<sp/>to<sp/>add<sp/>in<sp/>your<sp/>imconfig.h<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Disable<sp/>gamepad<sp/>support.<sp/>This<sp/>was<sp/>meaningful<sp/>before<sp/>&lt;1.81<sp/>but<sp/>we<sp/>now<sp/>load<sp/>XInput<sp/>dynamically<sp/>so<sp/>the<sp/>option<sp/>is<sp/>now<sp/>less<sp/>relevant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>XInput<sp/>for<sp/>gamepad<sp/>(will<sp/>load<sp/>DLL<sp/>dynamically)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xinput.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DWORD<sp/>(WINAPI<sp/>*PFN_XInputGetCapabilities)(DWORD,<sp/>DWORD,<sp/><ref refid="struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s" kindref="compound">XINPUT_CAPABILITIES</ref>*);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DWORD<sp/>(WINAPI<sp/>*PFN_XInputGetState)(DWORD,<sp/><ref refid="struct___x_i_n_p_u_t___s_t_a_t_e" kindref="compound">XINPUT_STATE</ref>*);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANGELOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(minor<sp/>and<sp/>older<sp/>changes<sp/>stripped<sp/>away,<sp/>please<sp/>see<sp/>git<sp/>history<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-XX-XX:<sp/>Platform:<sp/>Added<sp/>support<sp/>for<sp/>multiple<sp/>windows<sp/>via<sp/>the<sp/>ImGuiPlatformIO<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddMousePosEvent(),<sp/>io.AddMouseButtonEvent(),<sp/>io.AddMouseWheelEvent()<sp/>API<sp/>(1.87+).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>always<sp/>calling<sp/>io.AddKeyModsEvent()<sp/>next<sp/>and<sp/>before<sp/>a<sp/>key<sp/>event<sp/>(not<sp/>in<sp/>NewFrame)<sp/>to<sp/>fix<sp/>input<sp/>queue<sp/>with<sp/>very<sp/>low<sp/>framerates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-12:<sp/>Inputs:<sp/>Update<sp/>mouse<sp/>inputs<sp/>using<sp/>WM_MOUSEMOVE/WM_MOUSELEAVE<sp/>+<sp/>fallback<sp/>to<sp/>provide<sp/>it<sp/>when<sp/>focused<sp/>but<sp/>not<sp/>hovered/captured.<sp/>More<sp/>standard<sp/>and<sp/>will<sp/>allow<sp/>us<sp/>to<sp/>pass<sp/>it<sp/>to<sp/>future<sp/>input<sp/>queue<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-12:<sp/>Inputs:<sp/>Maintain<sp/>our<sp/>own<sp/>copy<sp/>of<sp/>MouseButtonsDown<sp/>mask<sp/>instead<sp/>of<sp/>using<sp/>ImGui::IsAnyMouseDown()<sp/>which<sp/>will<sp/>be<sp/>obsoleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-10:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddKeyEvent(),<sp/>io.AddKeyModsEvent()<sp/>+<sp/>io.SetKeyEventNativeData()<sp/>API<sp/>(1.87+).<sp/>Support<sp/>for<sp/>full<sp/>ImGuiKey<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-12-16:<sp/>Inputs:<sp/>Fill<sp/>VK_LCONTROL/VK_RCONTROL/VK_LSHIFT/VK_RSHIFT/VK_LMENU/VK_RMENU<sp/>for<sp/>completeness.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-08-17:<sp/>Calling<sp/>io.AddFocusEvent()<sp/>on<sp/>WM_SETFOCUS/WM_KILLFOCUS<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-08-02:<sp/>Inputs:<sp/>Fixed<sp/>keyboard<sp/>modifiers<sp/>being<sp/>reported<sp/>when<sp/>host<sp/>window<sp/>doesn&apos;t<sp/>have<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-07-29:<sp/>Inputs:<sp/>MousePos<sp/>is<sp/>correctly<sp/>reported<sp/>when<sp/>the<sp/>host<sp/>platform<sp/>window<sp/>is<sp/>hovered<sp/>but<sp/>not<sp/>focused<sp/>(using<sp/>TrackMouseEvent()<sp/>to<sp/>receive<sp/>WM_MOUSELEAVE<sp/>events).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06-29:<sp/>Reorganized<sp/>backend<sp/>to<sp/>pull<sp/>data<sp/>from<sp/>a<sp/>single<sp/>structure<sp/>to<sp/>facilitate<sp/>usage<sp/>with<sp/>multiple-contexts<sp/>(all<sp/>g_XXXX<sp/>access<sp/>changed<sp/>to<sp/>bd-&gt;XXXX).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06-08:<sp/>Fixed<sp/>ImGui_ImplWin32_EnableDpiAwareness()<sp/>and<sp/>ImGui_ImplWin32_GetDpiScaleForMonitor()<sp/>to<sp/>handle<sp/>Windows<sp/>8.1/10<sp/>features<sp/>without<sp/>a<sp/>manifest<sp/>(per-monitor<sp/>DPI,<sp/>and<sp/>properly<sp/>calls<sp/>SetProcessDpiAwareness()<sp/>on<sp/>8.1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-03-23:<sp/>Inputs:<sp/>Clearing<sp/>keyboard<sp/>down<sp/>array<sp/>when<sp/>losing<sp/>focus<sp/>(WM_KILLFOCUS).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-02-18:<sp/>Added<sp/>ImGui_ImplWin32_EnableAlphaCompositing().<sp/>Non<sp/>Visual<sp/>Studio<sp/>users<sp/>will<sp/>need<sp/>to<sp/>link<sp/>with<sp/>dwmapi.lib<sp/>(MinGW/gcc:<sp/>use<sp/>-ldwmapi).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-02-17:<sp/>Fixed<sp/>ImGui_ImplWin32_EnableDpiAwareness()<sp/>attempting<sp/>to<sp/>get<sp/>SetProcessDpiAwareness<sp/>from<sp/>shcore.dll<sp/>on<sp/>Windows<sp/>8<sp/>whereas<sp/>it<sp/>is<sp/>only<sp/>supported<sp/>on<sp/>Windows<sp/>8.1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-01-25:<sp/>Inputs:<sp/>Dynamically<sp/>loading<sp/>XInput<sp/>DLL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-12-04:<sp/>Misc:<sp/>Fixed<sp/>setting<sp/>of<sp/>io.DisplaySize<sp/>to<sp/>invalid/uninitialized<sp/>data<sp/>when<sp/>after<sp/>hwnd<sp/>has<sp/>been<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-03-03:<sp/>Inputs:<sp/>Calling<sp/>AddInputCharacterUTF16()<sp/>to<sp/>support<sp/>surrogate<sp/>pairs<sp/>leading<sp/>to<sp/>codepoint<sp/>&gt;=<sp/>0x10000<sp/>(for<sp/>more<sp/>complete<sp/>CJK<sp/>inputs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-02-17:<sp/>Added<sp/>ImGui_ImplWin32_EnableDpiAwareness(),<sp/>ImGui_ImplWin32_GetDpiScaleForHwnd(),<sp/>ImGui_ImplWin32_GetDpiScaleForMonitor()<sp/>helper<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-01-14:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>#define<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD/IMGUI_IMPL_WIN32_DISABLE_LINKING_XINPUT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-12-05:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>ImGuiMouseCursor_NotAllowed<sp/>mouse<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-05-11:<sp/>Inputs:<sp/>Don&apos;t<sp/>filter<sp/>value<sp/>from<sp/>WM_CHAR<sp/>before<sp/>calling<sp/>AddInputCharacter().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-01-17:<sp/>Misc:<sp/>Using<sp/>GetForegroundWindow()+IsChild()<sp/>instead<sp/>of<sp/>GetActiveWindow()<sp/>to<sp/>be<sp/>compatible<sp/>with<sp/>windows<sp/>created<sp/>in<sp/>a<sp/>different<sp/>thread<sp/>or<sp/>parent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-01-17:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>mouse<sp/>buttons<sp/>4<sp/>and<sp/>5<sp/>via<sp/>WM_XBUTTON*<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-01-15:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>XInput<sp/>gamepads<sp/>(if<sp/>ImGuiConfigFlags_NavEnableGamepad<sp/>is<sp/>set<sp/>by<sp/>user<sp/>application).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-11-30:<sp/>Misc:<sp/>Setting<sp/>up<sp/>io.BackendPlatformName<sp/>so<sp/>it<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>About<sp/>Window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-29:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>the<sp/>ImGuiMouseCursor_Hand<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-10:<sp/>Inputs:<sp/>Fixed<sp/>handling<sp/>of<sp/>mouse<sp/>wheel<sp/>messages<sp/>to<sp/>support<sp/>fine<sp/>position<sp/>messages<sp/>(typically<sp/>sent<sp/>by<sp/>track-pads).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-08:<sp/>Misc:<sp/>Extracted<sp/>imgui_impl_win32.cpp/.h<sp/>away<sp/>from<sp/>the<sp/>old<sp/>combined<sp/>DX9/DX10/DX11/DX12<sp/>examples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-03-20:<sp/>Misc:<sp/>Setup<sp/>io.BackendFlags<sp/>ImGuiBackendFlags_HasMouseCursors<sp/>and<sp/>ImGuiBackendFlags_HasSetMousePos<sp/>flags<sp/>+<sp/>honor<sp/>ImGuiConfigFlags_NoMouseCursorChange<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-20:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>mouse<sp/>cursors<sp/>(ImGui::GetMouseCursor()<sp/>value<sp/>and<sp/>WM_SETCURSOR<sp/>message<sp/>handling).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Inputs:<sp/>Honoring<sp/>the<sp/>io.WantSetMousePos<sp/>by<sp/>repositioning<sp/>the<sp/>mouse<sp/>(when<sp/>using<sp/>navigation<sp/>and<sp/>ImGuiConfigFlags_NavMoveMouse<sp/>is<sp/>set).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Misc:<sp/>Removed<sp/>call<sp/>to<sp/>ImGui::Shutdown()<sp/>which<sp/>is<sp/>not<sp/>available<sp/>from<sp/>1.60<sp/>WIP,<sp/>user<sp/>needs<sp/>to<sp/>call<sp/>CreateContext/DestroyContext<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-20:<sp/>Inputs:<sp/>Added<sp/>Horizontal<sp/>Mouse<sp/>Wheel<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-08:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Insert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-05:<sp/>Inputs:<sp/>Added<sp/>WM_LBUTTONDBLCLK<sp/>double-click<sp/>handlers<sp/>for<sp/>window<sp/>classes<sp/>with<sp/>the<sp/>CS_DBLCLKS<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2017-10-23:<sp/>Inputs:<sp/>Added<sp/>WM_SYSKEYDOWN<sp/>/<sp/>WM_SYSKEYUP<sp/>handlers<sp/>so<sp/>e.g.<sp/>the<sp/>VK_MENU<sp/>key<sp/>can<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2017-10-23:<sp/>Inputs:<sp/>Using<sp/>Win32<sp/>::SetCapture/::GetCapture()<sp/>to<sp/>retrieve<sp/>mouse<sp/>positions<sp/>outside<sp/>the<sp/>client<sp/>area<sp/>when<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2016-11-12:<sp/>Inputs:<sp/>Only<sp/>call<sp/>Win32<sp/>::SetCursor(NULL)<sp/>when<sp/>io.MouseDrawCursor<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_InitPlatformInterface();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_ShutdownPlatformInterface();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateMonitors();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="struct_im_gui___impl_win32___data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hWnd;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseHwnd;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseTracked;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MouseButtonsDown;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TicksPerSecond;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiMouseCursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastMouseCursor;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasGamepad;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantUpdateHasGamepad;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WantUpdateMonitors;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>HMODULE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XInputDLL;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>PFN_XInputGetCapabilities<sp/><sp/><sp/>XInputGetCapabilities;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>PFN_XInputGetState<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XInputGetState;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backend<sp/>data<sp/>stored<sp/>in<sp/>io.BackendPlatformUserData<sp/>to<sp/>allow<sp/>support<sp/>for<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>STRONGLY<sp/>preferred<sp/>that<sp/>you<sp/>use<sp/>docking<sp/>branch<sp/>with<sp/>multi-viewports<sp/>(==<sp/>single<sp/>Dear<sp/>ImGui<sp/>context<sp/>+<sp/>multiple<sp/>windows)<sp/>instead<sp/>of<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>multi-context<sp/>support<sp/>is<sp/>not<sp/>well<sp/>tested<sp/>and<sp/>probably<sp/>dysfunctional<sp/>in<sp/>this<sp/>backend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>some<sp/>shared<sp/>resources<sp/>(mouse<sp/>cursor<sp/>shape,<sp/>gamepad)<sp/>are<sp/>mishandled<sp/>when<sp/>using<sp/>multi-context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>ImGui_ImplWin32_GetBackendData()</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui::GetCurrentContext()<sp/>?<sp/>(<ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*)ImGui::GetIO().BackendPlatformUserData<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_Init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(io.BackendPlatformUserData<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>initialized<sp/>a<sp/>platform<sp/>backend!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/>perf_frequency,<sp/>perf_counter;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::QueryPerformanceFrequency((LARGE_INTEGER*)&amp;perf_frequency))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::QueryPerformanceCounter((LARGE_INTEGER*)&amp;perf_counter))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>backend<sp/>capabilities<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>)();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformUserData<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;imgui_impl_win32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasMouseCursors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>GetMouseCursor()<sp/>values<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasSetMousePos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>io.WantSetMousePos<sp/>requests<sp/>(optional,<sp/>rarely<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_PlatformHasViewports;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>create<sp/>multi-viewports<sp/>on<sp/>the<sp/>Platform<sp/>side<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasMouseHoveredViewport;<sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>io.MouseHoveredViewport<sp/>correctly<sp/>(optional,<sp/>not<sp/>easy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;hWnd<sp/>=<sp/>(HWND)hwnd;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateHasGamepad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateMonitors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;TicksPerSecond<sp/>=<sp/>perf_frequency;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;Time<sp/>=<sp/>perf_counter;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;LastMouseCursor<sp/>=<sp/>ImGuiMouseCursor_COUNT;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>mouse<sp/>update<sp/>function<sp/>expect<sp/>PlatformHandle<sp/>to<sp/>be<sp/>filled<sp/>for<sp/>the<sp/>main<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>main_viewport<sp/>=<sp/>ImGui::GetMainViewport();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandle<sp/>=<sp/>main_viewport-&gt;PlatformHandleRaw<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd-&gt;hWnd;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_InitPlatformInterface();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dynamically<sp/>load<sp/>XInput<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>xinput_dll_names[]<sp/>=</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_4.dll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>8+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_3.dll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirectX<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput9_1_0.dll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>Vista,<sp/>Windows<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_2.dll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirectX<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_1.dll&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirectX<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>IM_ARRAYSIZE(xinput_dll_names);<sp/>n++)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HMODULE<sp/>dll<sp/>=<sp/>::LoadLibraryA(xinput_dll_names[n]))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;XInputDLL<sp/>=<sp/>dll;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;XInputGetCapabilities<sp/>=<sp/>(PFN_XInputGetCapabilities)::GetProcAddress(dll,<sp/></highlight><highlight class="stringliteral">&quot;XInputGetCapabilities&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;XInputGetState<sp/>=<sp/>(PFN_XInputGetState)::GetProcAddress(dll,<sp/></highlight><highlight class="stringliteral">&quot;XInputGetState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_Shutdown()</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>platform<sp/>backend<sp/>to<sp/>shutdown,<sp/>or<sp/>already<sp/>shutdown?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_ShutdownPlatformInterface();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unload<sp/>XInput<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;XInputDLL)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::FreeLibrary(bd-&gt;XInputDLL);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendPlatformUserData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_DELETE(bd);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateMouseCursor()</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NoMouseCursorChange)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiMouseCursor<sp/>imgui_cursor<sp/>=<sp/>ImGui::GetMouseCursor();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imgui_cursor<sp/>==<sp/>ImGuiMouseCursor_None<sp/>||<sp/>io.MouseDrawCursor)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>OS<sp/>mouse<sp/>cursor<sp/>if<sp/>imgui<sp/>is<sp/>drawing<sp/>it<sp/>or<sp/>if<sp/>it<sp/>wants<sp/>no<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCursor(NULL);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>OS<sp/>mouse<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPTSTR<sp/>win32_cursor<sp/>=<sp/>IDC_ARROW;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(imgui_cursor)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_Arrow:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_ARROW;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_TextInput:<sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_IBEAM;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_ResizeAll:<sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZEALL;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_ResizeEW:<sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZEWE;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_ResizeNS:<sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZENS;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_ResizeNESW:<sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZENESW;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_ResizeNWSE:<sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZENWSE;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_Hand:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_HAND;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiMouseCursor_NotAllowed:<sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_NO;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCursor(::LoadCursor(NULL,<sp/>win32_cursor));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsVkDown(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vk)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(::GetKeyState(vk)<sp/>&amp;<sp/>0x8000)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey<sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>down,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>native_keycode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>native_scancode<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddKeyEvent(key,<sp/>down);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>io.SetKeyEventNativeData(key,<sp/>native_keycode,<sp/>native_scancode);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>support<sp/>legacy<sp/>indexing<sp/>(&lt;1.87<sp/>user<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(native_scancode);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_ProcessKeyEventsWorkarounds()</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>&amp;<sp/>right<sp/>Shift<sp/>keys:<sp/>when<sp/>both<sp/>are<sp/>pressed<sp/>together,<sp/>Windows<sp/>tend<sp/>to<sp/>not<sp/>generate<sp/>the<sp/>WM_KEYUP<sp/>event<sp/>for<sp/>the<sp/>first<sp/>released<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::IsKeyDown(ImGuiKey_LeftShift)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_LSHIFT))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_LeftShift,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_LSHIFT);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::IsKeyDown(ImGuiKey_RightShift)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_RSHIFT))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_RightShift,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_RSHIFT);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sometimes<sp/>WM_KEYUP<sp/>for<sp/>Win<sp/>key<sp/>is<sp/>not<sp/>passed<sp/>down<sp/>to<sp/>the<sp/>app<sp/>(e.g.<sp/>for<sp/>Win+V<sp/>on<sp/>some<sp/>setups,<sp/>according<sp/>to<sp/>GLFW).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::IsKeyDown(ImGuiKey_LeftSuper)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_LWIN))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_LeftSuper,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_LWIN);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::IsKeyDown(ImGuiKey_RightSuper)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_RWIN))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_RightSuper,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_RWIN);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateKeyModifiers()</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiKeyModFlags<sp/>key_mods<sp/>=</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IsVkDown(VK_CONTROL))<sp/>?<sp/>ImGuiKeyModFlags_Ctrl<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IsVkDown(VK_SHIFT)<sp/>)<sp/>?<sp/>ImGuiKeyModFlags_Shift<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IsVkDown(VK_MENU))<sp/>?<sp/>ImGuiKeyModFlags_Alt<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IsVkDown(VK_APPS))<sp/>?<sp/>ImGuiKeyModFlags_Super<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>io.AddKeyModsEvent(key_mods);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>supports<sp/>multi-viewports<sp/>(multiple<sp/>OS<sp/>Windows<sp/>mapped<sp/>into<sp/>different<sp/>Dear<sp/>ImGui<sp/>viewports)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Because<sp/>of<sp/>that,<sp/>it<sp/>is<sp/>a<sp/>little<sp/>more<sp/>complicated<sp/>than<sp/>your<sp/>typical<sp/>single-viewport<sp/>binding<sp/>code!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateMouseData()</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd-&gt;hWnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>POINT<sp/>mouse_screen_pos;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_mouse_screen_pos<sp/>=<sp/>::GetCursorPos(&amp;mouse_screen_pos)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>focused_window<sp/>=<sp/>::GetForegroundWindow();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_app_focused<sp/>=<sp/>(focused_window<sp/>&amp;&amp;<sp/>(focused_window<sp/>==<sp/>bd-&gt;hWnd<sp/>||<sp/>::IsChild(focused_window,<sp/>bd-&gt;hWnd)<sp/>||<sp/>ImGui::FindViewportByPlatformHandle((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)focused_window)));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_app_focused)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Set<sp/>OS<sp/>mouse<sp/>position<sp/>from<sp/>Dear<sp/>ImGui<sp/>if<sp/>requested<sp/>(rarely<sp/>used,<sp/>only<sp/>when<sp/>ImGuiConfigFlags_NavEnableSetMousePos<sp/>is<sp/>enabled<sp/>by<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>multi-viewports<sp/>are<sp/>enabled,<sp/>all<sp/>Dear<sp/>ImGui<sp/>positions<sp/>are<sp/>same<sp/>as<sp/>OS<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.WantSetMousePos)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POINT<sp/>pos<sp/>=<sp/>{<sp/>(int)io.MousePos.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.MousePos.y<sp/>};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ClientToScreen(focused_window,<sp/>&amp;pos);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCursorPos(pos.x,<sp/>pos.y);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Fallback<sp/>to<sp/>provide<sp/>mouse<sp/>position<sp/>when<sp/>focused<sp/>(WM_MOUSEMOVE<sp/>already<sp/>provides<sp/>this<sp/>when<sp/>hovered<sp/>or<sp/>captured)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!io.WantSetMousePos<sp/>&amp;&amp;<sp/>!bd-&gt;MouseTracked<sp/>&amp;&amp;<sp/>has_mouse_screen_pos)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single<sp/>viewport<sp/>mode:<sp/>mouse<sp/>position<sp/>in<sp/>client<sp/>window<sp/>coordinates<sp/>(io.MousePos<sp/>is<sp/>(0,0)<sp/>when<sp/>the<sp/>mouse<sp/>is<sp/>on<sp/>the<sp/>upper-left<sp/>corner<sp/>of<sp/>the<sp/>app<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>is<sp/>the<sp/>position<sp/>you<sp/>can<sp/>get<sp/>with<sp/>::GetCursorPos()<sp/>+<sp/>::ScreenToClient()<sp/>or<sp/>WM_MOUSEMOVE.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multi-viewport<sp/>mode:<sp/>mouse<sp/>position<sp/>in<sp/>OS<sp/>absolute<sp/>coordinates<sp/>(io.MousePos<sp/>is<sp/>(0,0)<sp/>when<sp/>the<sp/>mouse<sp/>is<sp/>on<sp/>the<sp/>upper-left<sp/>of<sp/>the<sp/>primary<sp/>monitor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>is<sp/>the<sp/>position<sp/>you<sp/>can<sp/>get<sp/>with<sp/>::GetCursorPos()<sp/>or<sp/>WM_MOUSEMOVE<sp/>+<sp/>::ClientToScreen().<sp/>In<sp/>theory<sp/>adding<sp/>viewport-&gt;Pos<sp/>to<sp/>a<sp/>client<sp/>position<sp/>would<sp/>also<sp/>be<sp/>the<sp/>same.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POINT<sp/>mouse_pos<sp/>=<sp/>mouse_screen_pos;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable))</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ScreenToClient(bd-&gt;hWnd,<sp/>&amp;mouse_pos);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_pos.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_pos.y);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>When<sp/>using<sp/>multiple<sp/>viewports:<sp/>set<sp/>io.MouseHoveredViewport<sp/>to<sp/>the<sp/>viewport<sp/>the<sp/>OS<sp/>mouse<sp/>cursor<sp/>is<sp/>hovering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>this<sp/>information<sp/>is<sp/>not<sp/>easy<sp/>to<sp/>provide<sp/>and<sp/>many<sp/>high-level<sp/>windowing<sp/>library<sp/>won&apos;t<sp/>be<sp/>able<sp/>to<sp/>provide<sp/>it<sp/>correctly,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>_ignoring_<sp/>viewports<sp/>with<sp/>the<sp/>ImGuiViewportFlags_NoInputs<sp/>flag<sp/>(pass-through<sp/>windows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>_regardless_<sp/>of<sp/>whether<sp/>another<sp/>viewport<sp/>is<sp/>focused<sp/>or<sp/>being<sp/>dragged<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>ImGuiBackendFlags_HasMouseHoveredViewport<sp/>is<sp/>not<sp/>set<sp/>by<sp/>the<sp/>backend,<sp/>imgui<sp/>will<sp/>ignore<sp/>this<sp/>field<sp/>and<sp/>infer<sp/>the<sp/>information<sp/>by<sp/>relying<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rectangles<sp/>and<sp/>last<sp/>focused<sp/>time<sp/>of<sp/>every<sp/>viewports<sp/>it<sp/>knows<sp/>about.<sp/>It<sp/>will<sp/>be<sp/>unaware<sp/>of<sp/>foreign<sp/>windows<sp/>that<sp/>may<sp/>be<sp/>sitting<sp/>between<sp/>or<sp/>over<sp/>your<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>io.MouseHoveredViewport<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_mouse_screen_pos)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HWND<sp/>hovered_hwnd<sp/>=<sp/>::WindowFromPoint(mouse_screen_pos))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>ImGui::FindViewportByPlatformHandle((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)hovered_hwnd))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoInputs)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>still<sp/>get<sp/>our<sp/>NoInputs<sp/>window<sp/>with<sp/>WM_NCHITTEST/HTTRANSPARENT<sp/>code<sp/>when<sp/>decorated?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.MouseHoveredViewport<sp/>=<sp/>viewport-&gt;ID;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gamepad<sp/>navigation<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateGamepads()</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(io.NavInputs,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(io.NavInputs));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NavEnableGamepad)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calling<sp/>XInputGetState()<sp/>every<sp/>frame<sp/>on<sp/>disconnected<sp/>gamepads<sp/>is<sp/>unfortunately<sp/>too<sp/>slow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead<sp/>we<sp/>refresh<sp/>gamepad<sp/>availability<sp/>by<sp/>calling<sp/>XInputGetCapabilities()<sp/>_only_<sp/>after<sp/>receiving<sp/>WM_DEVICECHANGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;WantUpdateHasGamepad)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s" kindref="compound">XINPUT_CAPABILITIES</ref><sp/>caps;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;HasGamepad<sp/>=<sp/>bd-&gt;XInputGetCapabilities<sp/>?<sp/>(bd-&gt;XInputGetCapabilities(0,<sp/>XINPUT_FLAG_GAMEPAD,<sp/>&amp;caps)<sp/>==<sp/>ERROR_SUCCESS)<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateHasGamepad<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>&amp;=<sp/>~ImGuiBackendFlags_HasGamepad;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___x_i_n_p_u_t___s_t_a_t_e" kindref="compound">XINPUT_STATE</ref><sp/>xinput_state;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;HasGamepad<sp/>&amp;&amp;<sp/>bd-&gt;XInputGetState<sp/>&amp;&amp;<sp/>bd-&gt;XInputGetState(0,<sp/>&amp;xinput_state)<sp/>==<sp/>ERROR_SUCCESS)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___x_i_n_p_u_t___g_a_m_e_p_a_d" kindref="compound">XINPUT_GAMEPAD</ref>&amp;<sp/>gamepad<sp/>=<sp/>xinput_state.Gamepad;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_HasGamepad;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>MAP_BUTTON(NAV_NO,<sp/>BUTTON_ENUM)<sp/><sp/><sp/><sp/><sp/>{<sp/>io.NavInputs[NAV_NO]<sp/>=<sp/>(gamepad.wButtons<sp/>&amp;<sp/>BUTTON_ENUM)<sp/>?<sp/>1.0f<sp/>:<sp/>0.0f;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>MAP_ANALOG(NAV_NO,<sp/>VALUE,<sp/>V0,<sp/>V1)<sp/><sp/><sp/>{<sp/>float<sp/>vn<sp/>=<sp/>(float)(VALUE<sp/>-<sp/>V0)<sp/>/<sp/>(float)(V1<sp/>-<sp/>V0);<sp/>if<sp/>(vn<sp/>&gt;<sp/>1.0f)<sp/>vn<sp/>=<sp/>1.0f;<sp/>if<sp/>(vn<sp/>&gt;<sp/>0.0f<sp/>&amp;&amp;<sp/>io.NavInputs[NAV_NO]<sp/>&lt;<sp/>vn)<sp/>io.NavInputs[NAV_NO]<sp/>=<sp/>vn;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Activate,<sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_A);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cross<sp/>/<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Cancel,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Circle<sp/>/<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Menu,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_X);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Square<sp/>/<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_Input,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_Y);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Triangle<sp/>/<sp/>Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadLeft,<sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_LEFT);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadRight,<sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_RIGHT);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadUp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_UP);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_DpadDown,<sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_DOWN);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D-Pad<sp/>Down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_FocusPrev,<sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_LEFT_SHOULDER);<sp/><sp/></highlight><highlight class="comment">//<sp/>L1<sp/>/<sp/>LB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_FocusNext,<sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_RIGHT_SHOULDER);<sp/></highlight><highlight class="comment">//<sp/>R1<sp/>/<sp/>RB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_TweakSlow,<sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_LEFT_SHOULDER);<sp/><sp/></highlight><highlight class="comment">//<sp/>L1<sp/>/<sp/>LB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_BUTTON(ImGuiNavInput_TweakFast,<sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_RIGHT_SHOULDER);<sp/></highlight><highlight class="comment">//<sp/>R1<sp/>/<sp/>RB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickLeft,<sp/><sp/><sp/><sp/>gamepad.sThumbLX,<sp/><sp/>-XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>-32768);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickRight,<sp/><sp/><sp/>gamepad.sThumbLX,<sp/><sp/>+XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>+32767);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickUp,<sp/><sp/><sp/><sp/><sp/><sp/>gamepad.sThumbLY,<sp/><sp/>+XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>+32767);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_ANALOG(ImGuiNavInput_LStickDown,<sp/><sp/><sp/><sp/>gamepad.sThumbLY,<sp/><sp/>-XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>-32767);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>MAP_BUTTON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>MAP_ANALOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>CALLBACK<sp/>ImGui_ImplWin32_UpdateMonitors_EnumFunc(HMONITOR<sp/>monitor,<sp/>HDC,<sp/>LPRECT,<sp/>LPARAM)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>MONITORINFO<sp/><ref refid="structinfo" kindref="compound">info</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinfo" kindref="compound">info</ref>.cbSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MONITORINFO);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::GetMonitorInfo(monitor,<sp/>&amp;<ref refid="structinfo" kindref="compound">info</ref>))</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_monitor" kindref="compound">ImGuiPlatformMonitor</ref><sp/>imgui_monitor;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>imgui_monitor.MainPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="structinfo" kindref="compound">info</ref>.rcMonitor.left,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="structinfo" kindref="compound">info</ref>.rcMonitor.top);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>imgui_monitor.MainSize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(<ref refid="structinfo" kindref="compound">info</ref>.rcMonitor.right<sp/>-<sp/><ref refid="structinfo" kindref="compound">info</ref>.rcMonitor.left),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(<ref refid="structinfo" kindref="compound">info</ref>.rcMonitor.bottom<sp/>-<sp/><ref refid="structinfo" kindref="compound">info</ref>.rcMonitor.top));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>imgui_monitor.WorkPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="structinfo" kindref="compound">info</ref>.rcWork.left,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="structinfo" kindref="compound">info</ref>.rcWork.top);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>imgui_monitor.WorkSize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(<ref refid="structinfo" kindref="compound">info</ref>.rcWork.right<sp/>-<sp/><ref refid="structinfo" kindref="compound">info</ref>.rcWork.left),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(<ref refid="structinfo" kindref="compound">info</ref>.rcWork.bottom<sp/>-<sp/><ref refid="structinfo" kindref="compound">info</ref>.rcWork.top));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>imgui_monitor.DpiScale<sp/>=<sp/>ImGui_ImplWin32_GetDpiScaleForMonitor(monitor);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinfo" kindref="compound">info</ref>.dwFlags<sp/>&amp;<sp/>MONITORINFOF_PRIMARY)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.Monitors.push_front(imgui_monitor);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.Monitors.push_back(imgui_monitor);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateMonitors()</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::GetPlatformIO().Monitors.resize(0);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>::EnumDisplayMonitors(NULL,<sp/>NULL,<sp/>ImGui_ImplWin32_UpdateMonitors_EnumFunc,<sp/>0);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateMonitors<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_NewFrame()</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(bd<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>you<sp/>call<sp/>ImGui_ImplWin32_Init()?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>display<sp/>size<sp/>(every<sp/>frame<sp/>to<sp/>accommodate<sp/>for<sp/>window<sp/>resizing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>::GetClientRect(bd-&gt;hWnd,<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>io.DisplaySize<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(rect.right<sp/>-<sp/>rect.left),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(rect.bottom<sp/>-<sp/>rect.top));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;WantUpdateMonitors)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateMonitors();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/>current_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>::QueryPerformanceCounter((LARGE_INTEGER*)&amp;current_time);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>io.DeltaTime<sp/>=<sp/>(float)(current_time<sp/>-<sp/>bd-&gt;Time)<sp/>/<sp/>bd-&gt;TicksPerSecond;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;Time<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>OS<sp/>mouse<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateMouseData();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>workarounds<sp/>for<sp/>known<sp/>Windows<sp/>key<sp/>handling<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_ProcessKeyEventsWorkarounds();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>OS<sp/>mouse<sp/>cursor<sp/>with<sp/>the<sp/>cursor<sp/>requested<sp/>by<sp/>imgui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiMouseCursor<sp/>mouse_cursor<sp/>=<sp/>io.MouseDrawCursor<sp/>?<sp/>ImGuiMouseCursor_None<sp/>:<sp/>ImGui::GetMouseCursor();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;LastMouseCursor<sp/>!=<sp/>mouse_cursor)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;LastMouseCursor<sp/>=<sp/>mouse_cursor;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateMouseCursor();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>game<sp/>controllers<sp/>(if<sp/>enabled<sp/>and<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateGamepads();</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>no<sp/>distinct<sp/>VK_xxx<sp/>for<sp/>keypad<sp/>enter,<sp/>instead<sp/>it<sp/>is<sp/>VK_RETURN<sp/>+<sp/>KF_EXTENDED,<sp/>we<sp/>assign<sp/>it<sp/>an<sp/>arbitrary<sp/>value<sp/>to<sp/>make<sp/>code<sp/>more<sp/>readable<sp/>(VK_<sp/>codes<sp/>go<sp/>up<sp/>to<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_VK_KEYPAD_ENTER<sp/><sp/><sp/><sp/><sp/><sp/>(VK_RETURN<sp/>+<sp/>256)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Map<sp/>VK_xxx<sp/>to<sp/>ImGuiKey_xxx.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ImGuiKey<sp/>ImGui_ImplWin32_VirtualKeyToImGuiKey(WPARAM<sp/>wParam)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(wParam)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_TAB:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Tab;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LEFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftArrow;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RIGHT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightArrow;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_UP:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_UpArrow;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DOWN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_DownArrow;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_PRIOR:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PageUp;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NEXT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PageDown;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_HOME:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Home;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_END:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_End;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_INSERT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Insert;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DELETE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Delete;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_BACK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Backspace;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SPACE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Space;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RETURN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Enter;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_ESCAPE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Escape;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Apostrophe;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_COMMA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Comma;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_MINUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Minus;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_PERIOD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Period;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Slash;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Semicolon;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_PLUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Equal;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftBracket;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Backslash;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightBracket;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_GraveAccent;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_CAPITAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_CapsLock;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SCROLL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_ScrollLock;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMLOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_NumLock;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SNAPSHOT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_PrintScreen;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_PAUSE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Pause;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad1;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad2;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad3;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad4;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad5;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad6;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad7;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad8;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Keypad9;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DECIMAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadDecimal;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DIVIDE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadDivide;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_MULTIPLY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadMultiply;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SUBTRACT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadSubtract;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_ADD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadAdd;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IM_VK_KEYPAD_ENTER:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_KeypadEnter;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LSHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftShift;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LCONTROL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftCtrl;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LMENU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftAlt;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LWIN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_LeftSuper;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RSHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightShift;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RCONTROL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightCtrl;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RMENU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightAlt;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RWIN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_RightSuper;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_APPS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Menu;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_1;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_2;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_3;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_4;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_5;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_6;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_7;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_8;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_9;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_A;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_B;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_C;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_D;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_E;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_G;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_H;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_I;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_J;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;K&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_K;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_L;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_M;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_N;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_O;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_P;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Q;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_R;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_S;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_T;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_U;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_V;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_W;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_X;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;Y&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Y;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_Z;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F1;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F2;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F3;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F4;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F5;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F6;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F7;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F8;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F9;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F10:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F10;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F11:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F11;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F12:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_F12;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGuiKey_None;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allow<sp/>compilation<sp/>with<sp/>old<sp/>Windows<sp/>SDK.<sp/>MinGW<sp/>doesn&apos;t<sp/>have<sp/>default<sp/>_WIN32_WINNT/WINVER<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WM_MOUSEHWHEEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WM_MOUSEHWHEEL<sp/>0x020E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBT_DEVNODES_CHANGED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBT_DEVNODES_CHANGED<sp/>0x0007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Win32<sp/>message<sp/>handler<sp/>(process<sp/>Win32<sp/>mouse/keyboard<sp/>inputs,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>from<sp/>your<sp/>application&apos;s<sp/>message<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>implementing<sp/>your<sp/>own<sp/>backend,<sp/>you<sp/>can<sp/>read<sp/>the<sp/>io.WantCaptureMouse,<sp/>io.WantCaptureKeyboard<sp/>flags<sp/>to<sp/>tell<sp/>if<sp/>Dear<sp/>ImGui<sp/>wants<sp/>to<sp/>use<sp/>your<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureMouse<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>mouse<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureKeyboard<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>keyboard<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generally<sp/>you<sp/>may<sp/>always<sp/>pass<sp/>all<sp/>inputs<sp/>to<sp/>Dear<sp/>ImGui,<sp/>and<sp/>hide<sp/>them<sp/>from<sp/>your<sp/>application<sp/>based<sp/>on<sp/>those<sp/>two<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PS:<sp/>In<sp/>this<sp/>Win32<sp/>handler,<sp/>we<sp/>use<sp/>the<sp/>capture<sp/>API<sp/>(GetCapture/SetCapture/ReleaseCapture)<sp/>to<sp/>be<sp/>able<sp/>to<sp/>read<sp/>mouse<sp/>coordinates<sp/>when<sp/>dragging<sp/>mouse<sp/>outside<sp/>of<sp/>our<sp/>window<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PS:<sp/>We<sp/>treat<sp/>DBLCLK<sp/>messages<sp/>as<sp/>regular<sp/>mouse<sp/>down<sp/>messages,<sp/>so<sp/>this<sp/>code<sp/>will<sp/>work<sp/>on<sp/>windows<sp/>classes<sp/>that<sp/>have<sp/>the<sp/>CS_DBLCLKS<sp/>flag<sp/>set.<sp/>Our<sp/>own<sp/>example<sp/>app<sp/>code<sp/>doesn&apos;t<sp/>set<sp/>this<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>this<sp/>line<sp/>into<sp/>your<sp/>.cpp<sp/>file<sp/>to<sp/>forward<sp/>declare<sp/>the<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>IMGUI_IMPL_API<sp/>LRESULT<sp/>ImGui_ImplWin32_WndProcHandler(HWND<sp/>hWnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">IMGUI_IMPL_API<sp/>LRESULT<sp/>ImGui_ImplWin32_WndProcHandler(HWND<sp/>hwnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::GetCurrentContext()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSEMOVE:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>call<sp/>TrackMouseEvent<sp/>in<sp/>order<sp/>to<sp/>receive<sp/>WM_MOUSELEAVE<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseHwnd<sp/>=<sp/>hwnd;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bd-&gt;MouseTracked)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACKMOUSEEVENT<sp/>tme<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tme),<sp/>TME_LEAVE,<sp/>hwnd,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TrackMouseEvent(&amp;tme);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseTracked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POINT<sp/>mouse_pos<sp/>=<sp/>{<sp/>(LONG)GET_X_LPARAM(lParam),<sp/>(LONG)GET_Y_LPARAM(lParam)<sp/>};</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ClientToScreen(hwnd,<sp/>&amp;mouse_pos);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_pos.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_pos.y);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSELEAVE:</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;MouseHwnd<sp/>==<sp/>hwnd)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseHwnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseTracked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMousePosEvent(-FLT_MAX,<sp/>-FLT_MAX);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_LBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_LBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_RBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_RBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_XBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_XBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_LBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_LBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_RBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_RBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_MBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_MBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_XBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_XBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>(GET_XBUTTON_WPARAM(wParam)<sp/>==<sp/>XBUTTON1)<sp/>?<sp/>3<sp/>:<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;MouseButtonsDown<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>::GetCapture()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCapture(hwnd);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseButtonsDown<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>button;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMouseButtonEvent(button,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_LBUTTONUP:</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_RBUTTONUP:</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MBUTTONUP:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_XBUTTONUP:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_LBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_RBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_MBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_XBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>(GET_XBUTTON_WPARAM(wParam)<sp/>==<sp/>XBUTTON1)<sp/>?<sp/>3<sp/>:<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;MouseButtonsDown<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>button);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;MouseButtonsDown<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>::GetCapture()<sp/>==<sp/>hwnd)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ReleaseCapture();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMouseButtonEvent(button,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSEWHEEL:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMouseWheelEvent(0.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)GET_WHEEL_DELTA_WPARAM(wParam)<sp/>/<sp/>(float)WHEEL_DELTA);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSEHWHEEL:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddMouseWheelEvent((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)GET_WHEEL_DELTA_WPARAM(wParam)<sp/>/<sp/>(float)WHEEL_DELTA,<sp/>0.0f);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_KEYDOWN:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_KEYUP:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SYSKEYDOWN:</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SYSKEYUP:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_key_down<sp/>=<sp/>(msg<sp/>==<sp/>WM_KEYDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_SYSKEYDOWN);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wParam<sp/>&lt;<sp/>256)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateKeyModifiers();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obtain<sp/>virtual<sp/>key<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(keypad<sp/>enter<sp/>doesn&apos;t<sp/>have<sp/>its<sp/>own...<sp/>VK_RETURN<sp/>with<sp/>KF_EXTENDED<sp/>flag<sp/>means<sp/>keypad<sp/>enter,<sp/>see<sp/>IM_VK_KEYPAD_ENTER<sp/>definition<sp/>for<sp/>details,<sp/>it<sp/>is<sp/>mapped<sp/>to<sp/>ImGuiKey_KeyPadEnter.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vk<sp/>=<sp/>(int)wParam;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wParam<sp/>==<sp/>VK_RETURN)<sp/>&amp;&amp;<sp/>(HIWORD(lParam)<sp/>&amp;<sp/>KF_EXTENDED))</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vk<sp/>=<sp/>IM_VK_KEYPAD_ENTER;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>key<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiKey<sp/>key<sp/>=<sp/>ImGui_ImplWin32_VirtualKeyToImGuiKey(vk);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode<sp/>=<sp/>(int)LOBYTE(HIWORD(lParam));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>!=<sp/>ImGuiKey_None)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(key,<sp/>is_key_down,<sp/>vk,<sp/>scancode);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>individual<sp/>left/right<sp/>modifier<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vk<sp/>==<sp/>VK_SHIFT)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>Shift<sp/>keys<sp/>tend<sp/>to<sp/>get<sp/>stuck<sp/>when<sp/>pressed<sp/>together,<sp/>missing<sp/>key-up<sp/>events<sp/>are<sp/>corrected<sp/>in<sp/>ImGui_ImplWin32_ProcessKeyEventsWorkarounds()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_LSHIFT)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_LeftShift,<sp/>is_key_down,<sp/>VK_LSHIFT,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_RSHIFT)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_RightShift,<sp/>is_key_down,<sp/>VK_RSHIFT,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vk<sp/>==<sp/>VK_CONTROL)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_LCONTROL)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_LeftCtrl,<sp/>is_key_down,<sp/>VK_LCONTROL,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_RCONTROL)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_RightCtrl,<sp/>is_key_down,<sp/>VK_RCONTROL,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vk<sp/>==<sp/>VK_MENU)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_LMENU)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_LeftAlt,<sp/>is_key_down,<sp/>VK_LMENU,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_RMENU)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ImGuiKey_RightAlt,<sp/>is_key_down,<sp/>VK_RMENU,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SETFOCUS:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_KILLFOCUS:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddFocusEvent(msg<sp/>==<sp/>WM_SETFOCUS);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_CHAR:</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>also<sp/>use<sp/>ToAscii()+GetKeyboardState()<sp/>to<sp/>retrieve<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wParam<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>wParam<sp/>&lt;<sp/>0x10000)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.AddInputCharacterUTF16((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)wParam);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SETCURSOR:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LOWORD(lParam)<sp/>==<sp/>HTCLIENT<sp/>&amp;&amp;<sp/>ImGui_ImplWin32_UpdateMouseCursor())</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DEVICECHANGE:</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((UINT)wParam<sp/>==<sp/>DBT_DEVNODES_CHANGED)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateHasGamepad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DISPLAYCHANGE:</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateMonitors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DPI-related<sp/>helpers<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Use<sp/>to<sp/>enable<sp/>DPI<sp/>awareness<sp/>without<sp/>having<sp/>to<sp/>create<sp/>an<sp/>application<sp/>manifest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Your<sp/>own<sp/>app<sp/>may<sp/>already<sp/>do<sp/>this<sp/>via<sp/>a<sp/>manifest<sp/>or<sp/>explicit<sp/>calls.<sp/>This<sp/>is<sp/>mostly<sp/>useful<sp/>for<sp/>our<sp/>examples/<sp/>apps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>In<sp/>theory<sp/>we<sp/>could<sp/>call<sp/>simple<sp/>functions<sp/>from<sp/>Windows<sp/>SDK<sp/>such<sp/>as<sp/>SetProcessDPIAware(),<sp/>SetProcessDpiAwareness(),<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>but<sp/>most<sp/>of<sp/>the<sp/>functions<sp/>provided<sp/>by<sp/>Microsoft<sp/>require<sp/>Windows<sp/>8.1/10+<sp/>SDK<sp/>at<sp/>compile<sp/>time<sp/>and<sp/>Windows<sp/>8/10+<sp/>at<sp/>runtime,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>neither<sp/>we<sp/>want<sp/>to<sp/>require<sp/>the<sp/>user<sp/>to<sp/>have.<sp/>So<sp/>we<sp/>dynamically<sp/>select<sp/>and<sp/>load<sp/>those<sp/>functions<sp/>to<sp/>avoid<sp/>dependencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>scheme<sp/>successfully<sp/>used<sp/>by<sp/>GLFW<sp/>(from<sp/>which<sp/>we<sp/>borrowed<sp/>some<sp/>of<sp/>the<sp/>code)<sp/>and<sp/>other<sp/>apps<sp/>aiming<sp/>to<sp/>be<sp/>highly<sp/>portable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImGui_ImplWin32_EnableDpiAwareness()<sp/>is<sp/>just<sp/>a<sp/>helper<sp/>called<sp/>by<sp/>main.cpp,<sp/>we<sp/>don&apos;t<sp/>call<sp/>it<sp/>automatically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>trying<sp/>to<sp/>implement<sp/>your<sp/>own<sp/>backend<sp/>for<sp/>your<sp/>own<sp/>engine,<sp/>you<sp/>may<sp/>ignore<sp/>that<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Perform<sp/>our<sp/>own<sp/>check<sp/>with<sp/>RtlVerifyVersionInfo()<sp/>instead<sp/>of<sp/>using<sp/>functions<sp/>from<sp/>&lt;VersionHelpers.h&gt;<sp/>as<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>require<sp/>a<sp/>manifest<sp/>to<sp/>be<sp/>functional<sp/>for<sp/>checks<sp/>above<sp/>8.1.<sp/>See<sp/>https://github.com/ocornut/imgui/issues/4200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>_IsWindowsVersionOrGreater(WORD<sp/>major,<sp/>WORD<sp/>minor,<sp/>WORD)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>LONG(WINAPI*<sp/>PFN_RtlVerifyVersionInfo)(OSVERSIONINFOEXW*,<sp/>ULONG,<sp/>ULONGLONG);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_RtlVerifyVersionInfo<sp/>RtlVerifyVersionInfoFn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RtlVerifyVersionInfoFn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HMODULE<sp/>ntdllModule<sp/>=<sp/>::GetModuleHandleA(</highlight><highlight class="stringliteral">&quot;ntdll.dll&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RtlVerifyVersionInfoFn<sp/>=<sp/>(PFN_RtlVerifyVersionInfo)GetProcAddress(ntdllModule,<sp/></highlight><highlight class="stringliteral">&quot;RtlVerifyVersionInfo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RtlVerifyVersionInfoFn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>RTL_OSVERSIONINFOEXW<sp/>versionInfo<sp/>=<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONGLONG<sp/>conditionMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>versionInfo.dwOSVersionInfoSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(RTL_OSVERSIONINFOEXW);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>versionInfo.dwMajorVersion<sp/>=<sp/>major;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>versionInfo.dwMinorVersion<sp/>=<sp/>minor;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>VER_SET_CONDITION(conditionMask,<sp/>VER_MAJORVERSION,<sp/>VER_GREATER_EQUAL);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>VER_SET_CONDITION(conditionMask,<sp/>VER_MINORVERSION,<sp/>VER_GREATER_EQUAL);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(RtlVerifyVersionInfoFn(&amp;versionInfo,<sp/>VER_MAJORVERSION<sp/>|<sp/>VER_MINORVERSION,<sp/>conditionMask)<sp/>==<sp/>0)<sp/>?<sp/>TRUE<sp/>:<sp/>FALSE;</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindowsVistaOrGreater()<sp/><sp/><sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0600),<sp/>LOBYTE(0x0600),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_VISTA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindows8OrGreater()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0602),<sp/>LOBYTE(0x0602),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_WIN8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindows8Point1OrGreater()<sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0603),<sp/>LOBYTE(0x0603),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_WINBLUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindows10OrGreater()<sp/><sp/><sp/><sp/><sp/><sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0A00),<sp/>LOBYTE(0x0A00),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_WINTHRESHOLD<sp/>/<sp/>_WIN32_WINNT_WIN10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DPI_ENUMS_DECLARED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>PROCESS_DPI_UNAWARE<sp/>=<sp/>0,<sp/>PROCESS_SYSTEM_DPI_AWARE<sp/>=<sp/>1,<sp/>PROCESS_PER_MONITOR_DPI_AWARE<sp/>=<sp/>2<sp/>}<sp/>PROCESS_DPI_AWARENESS;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>MDT_EFFECTIVE_DPI<sp/>=<sp/>0,<sp/>MDT_ANGULAR_DPI<sp/>=<sp/>1,<sp/>MDT_RAW_DPI<sp/>=<sp/>2,<sp/>MDT_DEFAULT<sp/>=<sp/>MDT_EFFECTIVE_DPI<sp/>}<sp/>MONITOR_DPI_TYPE;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DPI_AWARENESS_CONTEXTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal">DECLARE_HANDLE(DPI_AWARENESS_CONTEXT);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE<sp/><sp/><sp/><sp/>(DPI_AWARENESS_CONTEXT)-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2<sp/>(DPI_AWARENESS_CONTEXT)-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>HRESULT(WINAPI*<sp/>PFN_SetProcessDpiAwareness)(PROCESS_DPI_AWARENESS);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shcore.lib<sp/>+<sp/>dll,<sp/>Windows<sp/>8.1+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>HRESULT(WINAPI*<sp/>PFN_GetDpiForMonitor)(HMONITOR,<sp/>MONITOR_DPI_TYPE,<sp/>UINT*,<sp/>UINT*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shcore.lib<sp/>+<sp/>dll,<sp/>Windows<sp/>8.1+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DPI_AWARENESS_CONTEXT(WINAPI*<sp/>PFN_SetThreadDpiAwarenessContext)(DPI_AWARENESS_CONTEXT);<sp/></highlight><highlight class="comment">//<sp/>User32.lib<sp/>+<sp/>dll,<sp/>Windows<sp/>10<sp/>v1607+<sp/>(Creators<sp/>Update)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>enable<sp/>DPI<sp/>awareness<sp/>without<sp/>setting<sp/>up<sp/>a<sp/>manifest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_EnableDpiAwareness()</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>monitors<sp/>will<sp/>be<sp/>updated<sp/>with<sp/>latest<sp/>correct<sp/>scaling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData())</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;WantUpdateMonitors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_IsWindows10OrGreater())</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>user32_dll<sp/>=<sp/>::LoadLibraryA(</highlight><highlight class="stringliteral">&quot;user32.dll&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counted<sp/>per-process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PFN_SetThreadDpiAwarenessContext<sp/>SetThreadDpiAwarenessContextFn<sp/>=<sp/>(PFN_SetThreadDpiAwarenessContext)::GetProcAddress(user32_dll,<sp/></highlight><highlight class="stringliteral">&quot;SetThreadDpiAwarenessContext&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetThreadDpiAwarenessContextFn(DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_IsWindows8Point1OrGreater())</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>shcore_dll<sp/>=<sp/>::LoadLibraryA(</highlight><highlight class="stringliteral">&quot;shcore.dll&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counted<sp/>per-process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PFN_SetProcessDpiAwareness<sp/>SetProcessDpiAwarenessFn<sp/>=<sp/>(PFN_SetProcessDpiAwareness)::GetProcAddress(shcore_dll,<sp/></highlight><highlight class="stringliteral">&quot;SetProcessDpiAwareness&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetProcessDpiAwarenessFn(PROCESS_PER_MONITOR_DPI_AWARE);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_WIN32_WINNT<sp/>&gt;=<sp/>0x0600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetProcessDPIAware();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(NOGDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;gdi32&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>with<sp/>gdi32.lib<sp/>for<sp/>GetDeviceCaps().<sp/>MinGW<sp/>will<sp/>require<sp/>linking<sp/>with<sp/>&apos;-lgdi32&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetDpiScaleForMonitor(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>monitor)</highlight></codeline>
<codeline lineno="796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/>xdpi<sp/>=<sp/>96,<sp/>ydpi<sp/>=<sp/>96;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_IsWindows8Point1OrGreater())</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>shcore_dll<sp/>=<sp/>::LoadLibraryA(</highlight><highlight class="stringliteral">&quot;shcore.dll&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counted<sp/>per-process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_GetDpiForMonitor<sp/>GetDpiForMonitorFn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetDpiForMonitorFn<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>shcore_dll<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDpiForMonitorFn<sp/>=<sp/>(PFN_GetDpiForMonitor)::GetProcAddress(shcore_dll,<sp/></highlight><highlight class="stringliteral">&quot;GetDpiForMonitor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetDpiForMonitorFn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDpiForMonitorFn((HMONITOR)monitor,<sp/>MDT_EFFECTIVE_DPI,<sp/>&amp;xdpi,<sp/>&amp;ydpi);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(xdpi<sp/>==<sp/>ydpi);<sp/></highlight><highlight class="comment">//<sp/>Please<sp/>contact<sp/>me<sp/>if<sp/>you<sp/>hit<sp/>this<sp/>assert!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xdpi<sp/>/<sp/>96.0f;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NOGDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HDC<sp/>dc<sp/>=<sp/>::GetDC(NULL);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/>::GetDeviceCaps(dc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/>::GetDeviceCaps(dc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(xdpi<sp/>==<sp/>ydpi);<sp/></highlight><highlight class="comment">//<sp/>Please<sp/>contact<sp/>me<sp/>if<sp/>you<sp/>hit<sp/>this<sp/>assert!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>::ReleaseDC(NULL,<sp/>dc);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xdpi<sp/>/<sp/>96.0f;</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetDpiScaleForHwnd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd)</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>HMONITOR<sp/>monitor<sp/>=<sp/>::MonitorFromWindow((HWND)hwnd,<sp/>MONITOR_DEFAULTTONEAREST);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetDpiScaleForMonitor(monitor);</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MULTI-VIEWPORT<sp/>/<sp/>PLATFORM<sp/>INTERFACE<sp/>SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>_advanced_<sp/>and<sp/>_optional_<sp/>feature,<sp/>allowing<sp/>the<sp/>backend<sp/>to<sp/>create<sp/>and<sp/>handle<sp/>multiple<sp/>viewports<sp/>simultaneously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>dear<sp/>imgui<sp/>or<sp/>creating<sp/>a<sp/>new<sp/>binding<sp/>for<sp/>dear<sp/>imgui,<sp/>it<sp/>is<sp/>recommended<sp/>that<sp/>you<sp/>completely<sp/>ignore<sp/>this<sp/>section<sp/>first..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>structure<sp/>we<sp/>store<sp/>in<sp/>the<sp/>void*<sp/>RenderUserData<sp/>field<sp/>of<sp/>each<sp/>ImGuiViewport<sp/>to<sp/>easily<sp/>retrieve<sp/>our<sp/>backend<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="struct_im_gui___impl_win32___viewport_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref></highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/>Hwnd;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>HwndOwned;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/>DwStyle;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/>DwExStyle;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>()<sp/>{<sp/>Hwnd<sp/>=<sp/>NULL;<sp/>HwndOwned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/>DwStyle<sp/>=<sp/>DwExStyle<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">~ImGui_ImplWin32_ViewportData</ref>()<sp/>{<sp/>IM_ASSERT(Hwnd<sp/>==<sp/>NULL);<sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal">};</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetWin32StyleFromViewportFlags(ImGuiViewportFlags<sp/>flags,<sp/>DWORD*<sp/>out_style,<sp/>DWORD*<sp/>out_ex_style)</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoDecoration)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_style<sp/>=<sp/>WS_POPUP;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_style<sp/>=<sp/>WS_OVERLAPPEDWINDOW;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoTaskBarIcon)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ex_style<sp/>=<sp/>WS_EX_TOOLWINDOW;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ex_style<sp/>=<sp/>WS_EX_APPWINDOW;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiViewportFlags_TopMost)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ex_style<sp/>|=<sp/>WS_EX_TOPMOST;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_CreateWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>)();</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformUserData<sp/>=<sp/>vd;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>style<sp/>and<sp/>parent<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_GetWin32StyleFromViewportFlags(viewport-&gt;Flags,<sp/>&amp;vd-&gt;DwStyle,<sp/>&amp;vd-&gt;DwExStyle);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>parent_window<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewport-&gt;ParentViewportId<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>parent_viewport<sp/>=<sp/>ImGui::FindViewportByID(viewport-&gt;ParentViewportId))</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_window<sp/>=<sp/>(HWND)parent_viewport-&gt;PlatformHandle;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect<sp/>=<sp/>{<sp/>(LONG)viewport-&gt;Pos.x,<sp/>(LONG)viewport-&gt;Pos.y,<sp/>(LONG)(viewport-&gt;Pos.x<sp/>+<sp/>viewport-&gt;Size.x),<sp/>(LONG)(viewport-&gt;Pos.y<sp/>+<sp/>viewport-&gt;Size.y)<sp/>};</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>::AdjustWindowRectEx(&amp;rect,<sp/>vd-&gt;DwStyle,<sp/>FALSE,<sp/>vd-&gt;DwExStyle);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;Hwnd<sp/>=<sp/>::CreateWindowEx(</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;DwExStyle,<sp/>_T(</highlight><highlight class="stringliteral">&quot;ImGui<sp/>Platform&quot;</highlight><highlight class="normal">),<sp/>_T(</highlight><highlight class="stringliteral">&quot;Untitled&quot;</highlight><highlight class="normal">),<sp/>vd-&gt;DwStyle,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Style,<sp/>class<sp/>name,<sp/>window<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.left,<sp/>rect.top,<sp/>rect.right<sp/>-<sp/>rect.left,<sp/>rect.bottom<sp/>-<sp/>rect.top,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_window,<sp/>NULL,<sp/>::GetModuleHandle(NULL),<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parent<sp/>window,<sp/>Menu,<sp/>Instance,<sp/>Param</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;HwndOwned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestResize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformHandle<sp/>=<sp/>viewport-&gt;PlatformHandleRaw<sp/>=<sp/>vd-&gt;Hwnd;</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_DestroyWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::GetCapture()<sp/>==<sp/>vd-&gt;Hwnd)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>capture<sp/>so<sp/>if<sp/>we<sp/>started<sp/>dragging<sp/>from<sp/>a<sp/>window<sp/>that<sp/>later<sp/>disappears,<sp/>we&apos;ll<sp/>still<sp/>receive<sp/>the<sp/>MOUSEUP<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ReleaseCapture();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCapture(bd-&gt;hWnd);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vd-&gt;Hwnd<sp/>&amp;&amp;<sp/>vd-&gt;HwndOwned)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DestroyWindow(vd-&gt;Hwnd);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;Hwnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_DELETE(vd);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport-&gt;PlatformUserData<sp/>=<sp/>viewport-&gt;PlatformHandle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_ShowWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoFocusOnAppearing)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ShowWindow(vd-&gt;Hwnd,<sp/>SW_SHOWNA);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ShowWindow(vd-&gt;Hwnd,<sp/>SW_SHOW);</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateWindow(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Update<sp/>Win32<sp/>style<sp/>if<sp/>it<sp/>changed<sp/>_after_<sp/>creation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generally<sp/>they<sp/>won&apos;t<sp/>change<sp/>unless<sp/>configuration<sp/>flags<sp/>are<sp/>changed,<sp/>but<sp/>advanced<sp/>uses<sp/>(such<sp/>as<sp/>manually<sp/>rewriting<sp/>viewport<sp/>flags)<sp/>make<sp/>this<sp/>useful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>new_style;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>new_ex_style;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_GetWin32StyleFromViewportFlags(viewport-&gt;Flags,<sp/>&amp;new_style,<sp/>&amp;new_ex_style);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>reapply<sp/>the<sp/>flags<sp/>that<sp/>have<sp/>been<sp/>changed<sp/>from<sp/>our<sp/>point<sp/>of<sp/>view<sp/>(as<sp/>other<sp/>flags<sp/>are<sp/>being<sp/>modified<sp/>by<sp/>Windows)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vd-&gt;DwStyle<sp/>!=<sp/>new_style<sp/>||<sp/>vd-&gt;DwExStyle<sp/>!=<sp/>new_ex_style)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Update<sp/>TopMost<sp/>state<sp/>if<sp/>it<sp/>changed<sp/>_after_<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>top_most_changed<sp/>=<sp/>(vd-&gt;DwExStyle<sp/>&amp;<sp/>WS_EX_TOPMOST)<sp/>!=<sp/>(new_ex_style<sp/>&amp;<sp/>WS_EX_TOPMOST);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HWND<sp/>insert_after<sp/>=<sp/>top_most_changed<sp/>?<sp/>((viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_TopMost)<sp/>?<sp/>HWND_TOPMOST<sp/>:<sp/>HWND_NOTOPMOST)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT<sp/>swp_flag<sp/>=<sp/>top_most_changed<sp/>?<sp/>0<sp/>:<sp/>SWP_NOZORDER;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>flags<sp/>and<sp/>position<sp/>(since<sp/>it<sp/>is<sp/>affected<sp/>by<sp/>flags)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;DwStyle<sp/>=<sp/>new_style;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vd-&gt;DwExStyle<sp/>=<sp/>new_ex_style;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetWindowLong(vd-&gt;Hwnd,<sp/>GWL_STYLE,<sp/>vd-&gt;DwStyle);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetWindowLong(vd-&gt;Hwnd,<sp/>GWL_EXSTYLE,<sp/>vd-&gt;DwExStyle);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RECT<sp/>rect<sp/>=<sp/>{<sp/>(LONG)viewport-&gt;Pos.x,<sp/>(LONG)viewport-&gt;Pos.y,<sp/>(LONG)(viewport-&gt;Pos.x<sp/>+<sp/>viewport-&gt;Size.x),<sp/>(LONG)(viewport-&gt;Pos.y<sp/>+<sp/>viewport-&gt;Size.y)<sp/>};</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::AdjustWindowRectEx(&amp;rect,<sp/>vd-&gt;DwStyle,<sp/>FALSE,<sp/>vd-&gt;DwExStyle);<sp/></highlight><highlight class="comment">//<sp/>Client<sp/>to<sp/>Screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetWindowPos(vd-&gt;Hwnd,<sp/>insert_after,<sp/>rect.left,<sp/>rect.top,<sp/>rect.right<sp/>-<sp/>rect.left,<sp/>rect.bottom<sp/>-<sp/>rect.top,<sp/>swp_flag<sp/>|<sp/>SWP_NOACTIVATE<sp/>|<sp/>SWP_FRAMECHANGED);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ShowWindow(vd-&gt;Hwnd,<sp/>SW_SHOWNA);<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>necessary<sp/>when<sp/>we<sp/>alter<sp/>the<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestMove<sp/>=<sp/>viewport-&gt;PlatformRequestResize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImGui_ImplWin32_GetWindowPos(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>POINT<sp/>pos<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>::ClientToScreen(vd-&gt;Hwnd,<sp/>&amp;pos);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)pos.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)pos.y);</highlight></codeline>
<codeline lineno="952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_SetWindowPos(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos)</highlight></codeline>
<codeline lineno="955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect<sp/>=<sp/>{<sp/>(LONG)pos.x,<sp/>(LONG)pos.y,<sp/>(LONG)pos.x,<sp/>(LONG)pos.y<sp/>};</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>::AdjustWindowRectEx(&amp;rect,<sp/>vd-&gt;DwStyle,<sp/>FALSE,<sp/>vd-&gt;DwExStyle);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetWindowPos(vd-&gt;Hwnd,<sp/>NULL,<sp/>rect.left,<sp/>rect.top,<sp/>0,<sp/>0,<sp/>SWP_NOZORDER<sp/>|<sp/>SWP_NOSIZE<sp/>|<sp/>SWP_NOACTIVATE);</highlight></codeline>
<codeline lineno="961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImGui_ImplWin32_GetWindowSize(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>::GetClientRect(vd-&gt;Hwnd,<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(rect.right<sp/>-<sp/>rect.left),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(rect.bottom<sp/>-<sp/>rect.top));</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_SetWindowSize(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size)</highlight></codeline>
<codeline lineno="973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>(LONG)size.x,<sp/>(LONG)size.y<sp/>};</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>::AdjustWindowRectEx(&amp;rect,<sp/>vd-&gt;DwStyle,<sp/>FALSE,<sp/>vd-&gt;DwExStyle);<sp/></highlight><highlight class="comment">//<sp/>Client<sp/>to<sp/>Screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetWindowPos(vd-&gt;Hwnd,<sp/>NULL,<sp/>0,<sp/>0,<sp/>rect.right<sp/>-<sp/>rect.left,<sp/>rect.bottom<sp/>-<sp/>rect.top,<sp/>SWP_NOZORDER<sp/>|<sp/>SWP_NOMOVE<sp/>|<sp/>SWP_NOACTIVATE);</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_SetWindowFocus(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>::BringWindowToTop(vd-&gt;Hwnd);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetForegroundWindow(vd-&gt;Hwnd);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetFocus(vd-&gt;Hwnd);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetWindowFocus(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::GetForegroundWindow()<sp/>==<sp/>vd-&gt;Hwnd;</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetWindowMinimized(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::IsIconic(vd-&gt;Hwnd)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_SetWindowTitle(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>::SetWindowTextA()<sp/>doesn&apos;t<sp/>properly<sp/>handle<sp/>UTF-8<sp/>so<sp/>we<sp/>explicitely<sp/>convert<sp/>our<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>::MultiByteToWideChar(CP_UTF8,<sp/>0,<sp/>title,<sp/>-1,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;wchar_t&gt;</ref><sp/>title_w;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>title_w.resize(n);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>::MultiByteToWideChar(CP_UTF8,<sp/>0,<sp/>title,<sp/>-1,<sp/>title_w.Data,<sp/>n);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetWindowTextW(vd-&gt;Hwnd,<sp/>title_w.Data);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_SetWindowAlpha(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(alpha<sp/>&gt;=<sp/>0.0f<sp/>&amp;&amp;<sp/>alpha<sp/>&lt;=<sp/>1.0f);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>style<sp/>=<sp/>::GetWindowLongW(vd-&gt;Hwnd,<sp/>GWL_EXSTYLE)<sp/>|<sp/>WS_EX_LAYERED;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetWindowLongW(vd-&gt;Hwnd,<sp/>GWL_EXSTYLE,<sp/>style);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetLayeredWindowAttributes(vd-&gt;Hwnd,<sp/>0,<sp/>(BYTE)(255<sp/>*<sp/>alpha),<sp/>LWA_ALPHA);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>style<sp/>=<sp/>::GetWindowLongW(vd-&gt;Hwnd,<sp/>GWL_EXSTYLE)<sp/>&amp;<sp/>~WS_EX_LAYERED;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetWindowLongW(vd-&gt;Hwnd,<sp/>GWL_EXSTYLE,<sp/>style);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetWindowDpiScale(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*)viewport-&gt;PlatformUserData;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(vd-&gt;Hwnd<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_GetDpiScaleForHwnd(vd-&gt;Hwnd);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME-DPI:<sp/>Testing<sp/>DPI<sp/>related<sp/>ideas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_OnChangedViewport(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)viewport;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref><sp/>default_style;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//default_style.WindowPadding<sp/>=<sp/>ImVec2(0,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//default_style.WindowBorderSize<sp/>=<sp/>0.0f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//default_style.ItemSpacing.y<sp/>=<sp/>3.0f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//default_style.FramePadding<sp/>=<sp/>ImVec2(0,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>default_style.ScaleAllSizes(viewport-&gt;DpiScale);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>ImGui::GetStyle();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>style<sp/>=<sp/>default_style;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LRESULT<sp/>CALLBACK<sp/>ImGui_ImplWin32_WndProcHandler_PlatformWindow(HWND<sp/>hWnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui_ImplWin32_WndProcHandler(hWnd,<sp/>msg,<sp/>wParam,<sp/>lParam))</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport<sp/>=<sp/>ImGui::FindViewportByPlatformHandle((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)hWnd))</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_CLOSE:</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOVE:</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestMove<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SIZE:</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;PlatformRequestResize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSEACTIVATE:</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoFocusOnClick)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MA_NOACTIVATE;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_NCHITTEST:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>mouse<sp/>pass-through<sp/>the<sp/>window.<sp/>This<sp/>will<sp/>allow<sp/>the<sp/>backend<sp/>to<sp/>set<sp/>io.MouseHoveredViewport<sp/>properly<sp/>(which<sp/>is<sp/>OPTIONAL).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ImGuiViewportFlags_NoInputs<sp/>flag<sp/>is<sp/>set<sp/>while<sp/>dragging<sp/>a<sp/>viewport,<sp/>as<sp/>want<sp/>to<sp/>detect<sp/>the<sp/>window<sp/>behind<sp/>the<sp/>one<sp/>we<sp/>are<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>cannot<sp/>easily<sp/>access<sp/>those<sp/>viewport<sp/>flags<sp/>from<sp/>your<sp/>windowing/event<sp/>code:<sp/>you<sp/>may<sp/>manually<sp/>synchronize<sp/>its<sp/>state<sp/>e.g.<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>your<sp/>main<sp/>loop<sp/>after<sp/>calling<sp/>UpdatePlatformWindows().<sp/>Iterate<sp/>all<sp/>viewports/platform<sp/>windows<sp/>and<sp/>pass<sp/>the<sp/>flag<sp/>to<sp/>your<sp/>windowing<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewport-&gt;Flags<sp/>&amp;<sp/>ImGuiViewportFlags_NoInputs)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HTTRANSPARENT;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DefWindowProc(hWnd,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_InitPlatformInterface()</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>WNDCLASSEX<sp/>wcex;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.cbSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(WNDCLASSEX);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.style<sp/>=<sp/>CS_HREDRAW<sp/>|<sp/>CS_VREDRAW;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.lpfnWndProc<sp/>=<sp/>ImGui_ImplWin32_WndProcHandler_PlatformWindow;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.cbClsExtra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.cbWndExtra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.hInstance<sp/>=<sp/>::GetModuleHandle(NULL);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.hIcon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.hCursor<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.hbrBackground<sp/>=<sp/>(HBRUSH)(COLOR_BACKGROUND<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.lpszMenuName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.lpszClassName<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;ImGui<sp/>Platform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>wcex.hIconSm<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>::RegisterClassEx(&amp;wcex);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateMonitors();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>platform<sp/>interface<sp/>(will<sp/>be<sp/>coupled<sp/>with<sp/>a<sp/>renderer<sp/>interface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_platform_i_o" kindref="compound">ImGuiPlatformIO</ref>&amp;<sp/>platform_io<sp/>=<sp/>ImGui::GetPlatformIO();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_CreateWindow<sp/>=<sp/>ImGui_ImplWin32_CreateWindow;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_DestroyWindow<sp/>=<sp/>ImGui_ImplWin32_DestroyWindow;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_ShowWindow<sp/>=<sp/>ImGui_ImplWin32_ShowWindow;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowPos<sp/>=<sp/>ImGui_ImplWin32_SetWindowPos;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowPos<sp/>=<sp/>ImGui_ImplWin32_GetWindowPos;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowSize<sp/>=<sp/>ImGui_ImplWin32_SetWindowSize;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowSize<sp/>=<sp/>ImGui_ImplWin32_GetWindowSize;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowFocus<sp/>=<sp/>ImGui_ImplWin32_SetWindowFocus;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowFocus<sp/>=<sp/>ImGui_ImplWin32_GetWindowFocus;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowMinimized<sp/>=<sp/>ImGui_ImplWin32_GetWindowMinimized;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowTitle<sp/>=<sp/>ImGui_ImplWin32_SetWindowTitle;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_SetWindowAlpha<sp/>=<sp/>ImGui_ImplWin32_SetWindowAlpha;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_UpdateWindow<sp/>=<sp/>ImGui_ImplWin32_UpdateWindow;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_GetWindowDpiScale<sp/>=<sp/>ImGui_ImplWin32_GetWindowDpiScale;<sp/></highlight><highlight class="comment">//<sp/>FIXME-DPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_io.Platform_OnChangedViewport<sp/>=<sp/>ImGui_ImplWin32_OnChangedViewport;<sp/></highlight><highlight class="comment">//<sp/>FIXME-DPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>main<sp/>window<sp/>handle<sp/>(which<sp/>is<sp/>owned<sp/>by<sp/>the<sp/>main<sp/>application,<sp/>not<sp/>by<sp/>us)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>mostly<sp/>for<sp/>simplicity<sp/>and<sp/>consistency,<sp/>so<sp/>that<sp/>our<sp/>code<sp/>(e.g.<sp/>mouse<sp/>handling<sp/>etc.)<sp/>can<sp/>use<sp/>same<sp/>logic<sp/>for<sp/>main<sp/>and<sp/>secondary<sp/>viewports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>main_viewport<sp/>=<sp/>ImGui::GetMainViewport();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>*<sp/>vd<sp/>=<sp/>IM_NEW(<ref refid="struct_im_gui___impl_win32___viewport_data" kindref="compound">ImGui_ImplWin32_ViewportData</ref>)();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;Hwnd<sp/>=<sp/>bd-&gt;hWnd;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>vd-&gt;HwndOwned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformUserData<sp/>=<sp/>vd;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>main_viewport-&gt;PlatformHandle<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd-&gt;hWnd;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_ShutdownPlatformInterface()</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>::UnregisterClass(_T(</highlight><highlight class="stringliteral">&quot;ImGui<sp/>Platform&quot;</highlight><highlight class="normal">),<sp/>::GetModuleHandle(NULL));</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::DestroyPlatformWindows();</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transparency<sp/>related<sp/>helpers<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;dwmapi&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>with<sp/>dwmapi.lib.<sp/>MinGW<sp/>will<sp/>require<sp/>linking<sp/>with<sp/>&apos;-ldwmapi&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[experimental]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Borrowed<sp/>from<sp/>GLFW&apos;s<sp/>function<sp/>updateFramebufferTransparency()<sp/>in<sp/>src/win32_window.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(the<sp/>Dwm*<sp/>functions<sp/>are<sp/>Vista<sp/>era<sp/>functions<sp/>but<sp/>we<sp/>are<sp/>borrowing<sp/>logic<sp/>from<sp/>GLFW)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_EnableAlphaCompositing(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_IsWindowsVistaOrGreater())</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>composition;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(::DwmIsCompositionEnabled(&amp;composition))<sp/>||<sp/>!composition)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>opaque;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>color;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_IsWindows8OrGreater()<sp/>||<sp/>(SUCCEEDED(::DwmGetColorizationColor(&amp;color,<sp/>&amp;opaque))<sp/>&amp;&amp;<sp/>!opaque))</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HRGN<sp/><ref refid="structregion" kindref="compound">region</ref><sp/>=<sp/>::CreateRectRgn(0,<sp/>0,<sp/>-1,<sp/>-1);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_w_m___b_l_u_r_b_e_h_i_n_d" kindref="compound">DWM_BLURBEHIND</ref><sp/>bb<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.dwFlags<sp/>=<sp/>DWM_BB_ENABLE<sp/>|<sp/>DWM_BB_BLURREGION;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.hRgnBlur<sp/>=<sp/><ref refid="structregion" kindref="compound">region</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.fEnable<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DwmEnableBlurBehindWindow((HWND)hwnd,<sp/>&amp;bb);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DeleteObject(<ref refid="structregion" kindref="compound">region</ref>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_w_m___b_l_u_r_b_e_h_i_n_d" kindref="compound">DWM_BLURBEHIND</ref><sp/>bb<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.dwFlags<sp/>=<sp/>DWM_BB_ENABLE;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DwmEnableBlurBehindWindow((HWND)hwnd,<sp/>&amp;bb);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_win32.cpp"/>
  </compounddef>
</doxygen>
