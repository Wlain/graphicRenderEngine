<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="__swizzle_8hpp" kind="file" language="C++">
    <compoundname>_swizzle.hpp</compoundname>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base0" prot="public">glm::detail::_swizzle_base0</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base1" prot="public">glm::detail::_swizzle_base1</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base1_3_012_00_01_t_00_01_q_00_01_e0_00_01_e1_00-1_00-2_00_01_aligned_01_4" prot="public">glm::detail::_swizzle_base1&lt; 2, T, Q, E0, E1,-1,-2, Aligned &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base1_3_013_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00-1_00_01_aligned_01_4" prot="public">glm::detail::_swizzle_base1&lt; 3, T, Q, E0, E1, E2,-1, Aligned &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base1_3_014_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_01_aligned_01_4" prot="public">glm::detail::_swizzle_base1&lt; 4, T, Q, E0, E1, E2, E3, Aligned &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base2" prot="public">glm::detail::_swizzle_base2</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base2_3_01_n_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_011_01_4" prot="public">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, 1 &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle__base2_3_01_n_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_011_01_4_1_1_stub" prot="public">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, 1 &gt;::Stub</innerclass>
    <innerclass refid="structglm_1_1detail_1_1__swizzle" prot="public">glm::detail::_swizzle</innerclass>
    <innernamespace refid="namespaceglm">glm</innernamespace>
    <innernamespace refid="namespaceglm_1_1detail">glm::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="__swizzle_8hpp_1ac6a69d4062d0dbe24572a4f8d7caa305" prot="public" static="no">
        <name>GLM_SWIZZLE_TEMPLATE1</name>
        <initializer>template&lt;int N, typename T, qualifier Q, int E0, int E1, int E2, int E3&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="162" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a7ebe931a98748506bfe37a7a4ae3fcde" prot="public" static="no">
        <name>GLM_SWIZZLE_TEMPLATE2</name>
        <initializer>template&lt;int N, typename T, qualifier Q, int E0, int E1, int E2, int E3, int F0, int F1, int F2, int F3&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="163" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a4452124489742946e173a811ddb31af0" prot="public" static="no">
        <name>GLM_SWIZZLE_TYPE1</name>
        <initializer>_swizzle&lt;N, T, Q, E0, E1, E2, E3&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="164" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1ac0b15c8ca29714c64830a55a751a63b9" prot="public" static="no">
        <name>GLM_SWIZZLE_TYPE2</name>
        <initializer>_swizzle&lt;N, T, Q, F0, F1, F2, F3&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="165" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a2568c9faafacb664242208d3b3af6a67" prot="public" static="no">
        <name>GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION</name>
        <param><defname>OPERAND</defname></param>
        <initializer>	GLM_SWIZZLE_TEMPLATE2                                                          \
	GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt;N, T, Q&gt; operator OPERAND ( const GLM_SWIZZLE_TYPE1&amp; a, const GLM_SWIZZLE_TYPE2&amp; b)  \
	{                                                                               \
		return a() OPERAND b();                                                     \
	}                                                                               \
	GLM_SWIZZLE_TEMPLATE1                                                          \
	GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt;N, T, Q&gt; operator OPERAND ( const GLM_SWIZZLE_TYPE1&amp; a, const <ref refid="structvec" kindref="compound">vec</ref>&lt;N, T, Q&gt;&amp; b)                   \
	{                                                                               \
		return a() OPERAND b;                                                       \
	}                                                                               \
	GLM_SWIZZLE_TEMPLATE1                                                          \
	GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt;N, T, Q&gt; operator OPERAND ( const <ref refid="structvec" kindref="compound">vec</ref>&lt;N, T, Q&gt;&amp; a, const GLM_SWIZZLE_TYPE1&amp; b)                   \
	{                                                                               \
		return a OPERAND b();                                                       \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="170" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a34c5a18ce016bc3bd402d241ff4510a2" prot="public" static="no">
        <name>GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION</name>
        <param><defname>OPERAND</defname></param>
        <initializer>	GLM_SWIZZLE_TEMPLATE1                                                          \
	GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt;N, T, Q&gt; operator OPERAND ( const GLM_SWIZZLE_TYPE1&amp; a, const T&amp; b)                   \
	{                                                                               \
		return a() OPERAND b;                                                       \
	}                                                                               \
	GLM_SWIZZLE_TEMPLATE1                                                          \
	GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt;N, T, Q&gt; operator OPERAND ( const T&amp; a, const GLM_SWIZZLE_TYPE1&amp; b)                   \
	{                                                                               \
		return a OPERAND b();                                                       \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="190" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a6e403807a483a6145605012c3856ba7c" prot="public" static="no">
        <name>GLM_SWIZZLE_FUNCTION_1_ARGS</name>
        <param><defname>RETURN_TYPE</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>	GLM_SWIZZLE_TEMPLATE1                                                          \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const GLM_SWIZZLE_TYPE1&amp; a)  \
	{                                                                               \
		return FUNCTION(a());                                                       \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="205" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1ab83a99c6045b31ba1e0b641543a879a2" prot="public" static="no">
        <name>GLM_SWIZZLE_FUNCTION_2_ARGS</name>
        <param><defname>RETURN_TYPE</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>	GLM_SWIZZLE_TEMPLATE2                                                                                      \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const GLM_SWIZZLE_TYPE1&amp; a, const GLM_SWIZZLE_TYPE2&amp; b) \
	{                                                                                                           \
		return FUNCTION(a(), b());                                                                              \
	}                                                                                                           \
	GLM_SWIZZLE_TEMPLATE1                                                                                      \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const GLM_SWIZZLE_TYPE1&amp; a, const GLM_SWIZZLE_TYPE1&amp; b) \
	{                                                                                                           \
		return FUNCTION(a(), b());                                                                              \
	}                                                                                                           \
	GLM_SWIZZLE_TEMPLATE1                                                                                      \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const GLM_SWIZZLE_TYPE1&amp; a, const typename V&amp; b)         \
	{                                                                                                           \
		return FUNCTION(a(), b);                                                                                \
	}                                                                                                           \
	GLM_SWIZZLE_TEMPLATE1                                                                                      \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const V&amp; a, const GLM_SWIZZLE_TYPE1&amp; b)                  \
	{                                                                                                           \
		return FUNCTION(a, b());                                                                                \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="215" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a6f8c280e3eabd52401be11ece66281b4" prot="public" static="no">
        <name>GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR</name>
        <param><defname>RETURN_TYPE</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>	GLM_SWIZZLE_TEMPLATE2                                                                                                    \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const GLM_SWIZZLE_TYPE1&amp; a, const GLM_SWIZZLE_TYPE2&amp; b, const T&amp; c)   \
	{                                                                                                                         \
		return FUNCTION(a(), b(), c);                                                                                         \
	}                                                                                                                         \
	GLM_SWIZZLE_TEMPLATE1                                                                                                    \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const GLM_SWIZZLE_TYPE1&amp; a, const GLM_SWIZZLE_TYPE1&amp; b, const T&amp; c)   \
	{                                                                                                                         \
		return FUNCTION(a(), b(), c);                                                                                         \
	}                                                                                                                         \
	GLM_SWIZZLE_TEMPLATE1                                                                                                    \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const GLM_SWIZZLE_TYPE1&amp; a, const typename S0::vec_type&amp; b, const T&amp; c)\
	{                                                                                                                         \
		return FUNCTION(a(), b, c);                                                                                           \
	}                                                                                                                         \
	GLM_SWIZZLE_TEMPLATE1                                                                                                    \
	GLM_FUNC_QUALIFIER typename GLM_SWIZZLE_TYPE1::RETURN_TYPE FUNCTION(const typename V&amp; a, const GLM_SWIZZLE_TYPE1&amp; b, const T&amp; c)           \
	{                                                                                                                         \
		return FUNCTION(a, b(), c);                                                                                           \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="240" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1ad1d093655e32cd51c380321347a0df9c" prot="public" static="no">
        <name>GLM_SWIZZLE2_2_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <initializer>	struct { detail::_swizzle&lt;2, T, Q, 0,0,-1,-2&gt; E0 ## E0; }; \
	struct { detail::_swizzle&lt;2, T, Q, 0,1,-1,-2&gt; E0 ## E1; }; \
	struct { detail::_swizzle&lt;2, T, Q, 1,0,-1,-2&gt; E1 ## E0; }; \
	struct { detail::_swizzle&lt;2, T, Q, 1,1,-1,-2&gt; E1 ## E1; };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="299" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a2f15e8c6a9ace395e0c078e818a257ba" prot="public" static="no">
        <name>GLM_SWIZZLE2_3_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <initializer>	struct { detail::_swizzle&lt;3,T, Q, 0,0,0,-1&gt; E0 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;3,T, Q, 0,0,1,-1&gt; E0 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;3,T, Q, 0,1,0,-1&gt; E0 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;3,T, Q, 0,1,1,-1&gt; E0 ## E1 ## E1; }; \
	struct { detail::_swizzle&lt;3,T, Q, 1,0,0,-1&gt; E1 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;3,T, Q, 1,0,1,-1&gt; E1 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;3,T, Q, 1,1,0,-1&gt; E1 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;3,T, Q, 1,1,1,-1&gt; E1 ## E1 ## E1; };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="305" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a63fe7c3e3fd4585b4e9f0e3e358a206c" prot="public" static="no">
        <name>GLM_SWIZZLE2_4_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <initializer>	struct { detail::_swizzle&lt;4,T, Q, 0,0,0,0&gt; E0 ## E0 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 0,0,0,1&gt; E0 ## E0 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;4,T, Q, 0,0,1,0&gt; E0 ## E0 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 0,0,1,1&gt; E0 ## E0 ## E1 ## E1; }; \
	struct { detail::_swizzle&lt;4,T, Q, 0,1,0,0&gt; E0 ## E1 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 0,1,0,1&gt; E0 ## E1 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;4,T, Q, 0,1,1,0&gt; E0 ## E1 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 0,1,1,1&gt; E0 ## E1 ## E1 ## E1; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,0,0,0&gt; E1 ## E0 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,0,0,1&gt; E1 ## E0 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,0,1,0&gt; E1 ## E0 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,0,1,1&gt; E1 ## E0 ## E1 ## E1; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,1,0,0&gt; E1 ## E1 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,1,0,1&gt; E1 ## E1 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,1,1,0&gt; E1 ## E1 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;4,T, Q, 1,1,1,1&gt; E1 ## E1 ## E1 ## E1; };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="315" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1ab8d97929fced10d91df33d07190e1581" prot="public" static="no">
        <name>GLM_SWIZZLE3_2_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <param><defname>E2</defname></param>
        <initializer>	struct { detail::_swizzle&lt;2,T, Q, 0,0,-1,-2&gt; E0 ## E0; }; \
	struct { detail::_swizzle&lt;2,T, Q, 0,1,-1,-2&gt; E0 ## E1; }; \
	struct { detail::_swizzle&lt;2,T, Q, 0,2,-1,-2&gt; E0 ## E2; }; \
	struct { detail::_swizzle&lt;2,T, Q, 1,0,-1,-2&gt; E1 ## E0; }; \
	struct { detail::_swizzle&lt;2,T, Q, 1,1,-1,-2&gt; E1 ## E1; }; \
	struct { detail::_swizzle&lt;2,T, Q, 1,2,-1,-2&gt; E1 ## E2; }; \
	struct { detail::_swizzle&lt;2,T, Q, 2,0,-1,-2&gt; E2 ## E0; }; \
	struct { detail::_swizzle&lt;2,T, Q, 2,1,-1,-2&gt; E2 ## E1; }; \
	struct { detail::_swizzle&lt;2,T, Q, 2,2,-1,-2&gt; E2 ## E2; };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="333" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1ad32a77254c90c2d8e80922198d4fb116" prot="public" static="no">
        <name>GLM_SWIZZLE3_3_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <param><defname>E2</defname></param>
        <initializer>	struct { detail::_swizzle&lt;3, T, Q, 0,0,0,-1&gt; E0 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,0,1,-1&gt; E0 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,0,2,-1&gt; E0 ## E0 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,1,0,-1&gt; E0 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,1,1,-1&gt; E0 ## E1 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,1,2,-1&gt; E0 ## E1 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,2,0,-1&gt; E0 ## E2 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,2,1,-1&gt; E0 ## E2 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 0,2,2,-1&gt; E0 ## E2 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,0,0,-1&gt; E1 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,0,1,-1&gt; E1 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,0,2,-1&gt; E1 ## E0 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,1,0,-1&gt; E1 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,1,1,-1&gt; E1 ## E1 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,1,2,-1&gt; E1 ## E1 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,2,0,-1&gt; E1 ## E2 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,2,1,-1&gt; E1 ## E2 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 1,2,2,-1&gt; E1 ## E2 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,0,0,-1&gt; E2 ## E0 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,0,1,-1&gt; E2 ## E0 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,0,2,-1&gt; E2 ## E0 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,1,0,-1&gt; E2 ## E1 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,1,1,-1&gt; E2 ## E1 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,1,2,-1&gt; E2 ## E1 ## E2; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,2,0,-1&gt; E2 ## E2 ## E0; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,2,1,-1&gt; E2 ## E2 ## E1; }; \
	struct { detail::_swizzle&lt;3, T, Q, 2,2,2,-1&gt; E2 ## E2 ## E2; };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="344" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a5fecf9d1c2c9f20d4dda47516373bcec" prot="public" static="no">
        <name>GLM_SWIZZLE3_4_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <param><defname>E2</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="373" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1ad877ef36ba826ee946dffcedcd653a2f" prot="public" static="no">
        <name>GLM_SWIZZLE4_2_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <param><defname>E2</defname></param>
        <param><defname>E3</defname></param>
        <initializer>	struct { detail::_swizzle&lt;2,T, Q, 0,0,-1,-2&gt; E0 ## E0; }; \
	struct { detail::_swizzle&lt;2,T, Q, 0,1,-1,-2&gt; E0 ## E1; }; \
	struct { detail::_swizzle&lt;2,T, Q, 0,2,-1,-2&gt; E0 ## E2; }; \
	struct { detail::_swizzle&lt;2,T, Q, 0,3,-1,-2&gt; E0 ## E3; }; \
	struct { detail::_swizzle&lt;2,T, Q, 1,0,-1,-2&gt; E1 ## E0; }; \
	struct { detail::_swizzle&lt;2,T, Q, 1,1,-1,-2&gt; E1 ## E1; }; \
	struct { detail::_swizzle&lt;2,T, Q, 1,2,-1,-2&gt; E1 ## E2; }; \
	struct { detail::_swizzle&lt;2,T, Q, 1,3,-1,-2&gt; E1 ## E3; }; \
	struct { detail::_swizzle&lt;2,T, Q, 2,0,-1,-2&gt; E2 ## E0; }; \
	struct { detail::_swizzle&lt;2,T, Q, 2,1,-1,-2&gt; E2 ## E1; }; \
	struct { detail::_swizzle&lt;2,T, Q, 2,2,-1,-2&gt; E2 ## E2; }; \
	struct { detail::_swizzle&lt;2,T, Q, 2,3,-1,-2&gt; E2 ## E3; }; \
	struct { detail::_swizzle&lt;2,T, Q, 3,0,-1,-2&gt; E3 ## E0; }; \
	struct { detail::_swizzle&lt;2,T, Q, 3,1,-1,-2&gt; E3 ## E1; }; \
	struct { detail::_swizzle&lt;2,T, Q, 3,2,-1,-2&gt; E3 ## E2; }; \
	struct { detail::_swizzle&lt;2,T, Q, 3,3,-1,-2&gt; E3 ## E3; };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="456" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1afc3173a7316057c9735c2129b4de2660" prot="public" static="no">
        <name>GLM_SWIZZLE4_3_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <param><defname>E2</defname></param>
        <param><defname>E3</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="474" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="__swizzle_8hpp_1a387e1f0853e4b16bc1c0077c9e8c4f24" prot="public" static="no">
        <name>GLM_SWIZZLE4_4_MEMBERS</name>
        <param><defname>T</defname></param>
        <param><defname>Q</defname></param>
        <param><defname>E0</defname></param>
        <param><defname>E1</defname></param>
        <param><defname>E2</defname></param>
        <param><defname>E3</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" line="540" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp" bodystart="540" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="group__core" kindref="compound">Core features</ref> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">glm{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>class<sp/>for<sp/>implementing<sp/>swizzle<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="11" refid="structglm_1_1detail_1_1__swizzle__base0" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle__base0" kindref="compound">_swizzle_base0</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>T&amp;<sp/>elem(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_buffer))[i];<sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>elem(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_buffer))[i];<sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>an<sp/>opaque<sp/>buffer<sp/>to<sp/>*ensure*<sp/>the<sp/>compiler<sp/>doesn&apos;t<sp/>call<sp/>a<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>1<sp/>buffer<sp/>is<sp/>assumed<sp/>to<sp/>aligned<sp/>to<sp/>the<sp/>actual<sp/>members<sp/>so<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>_buffer[1];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E3,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned&gt;</highlight></codeline>
<codeline lineno="24" refid="structglm_1_1detail_1_1__swizzle__base1" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle__base1" kindref="compound">_swizzle_base1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base0" kindref="compound">_swizzle_base0</ref>&lt;T,<sp/>N&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned&gt;</highlight></codeline>
<codeline lineno="29" refid="structglm_1_1detail_1_1__swizzle__base1_3_012_00_01_t_00_01_q_00_01_e0_00_01_e1_00-1_00-2_00_01_aligned_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle__base1" kindref="compound">_swizzle_base1</ref>&lt;2,<sp/>T,<sp/>Q,<sp/>E0,E1,-1,-2,<sp/>Aligned&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base0" kindref="compound">_swizzle_base0</ref>&lt;T,<sp/>2&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec_3_012_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;2, T, Q&gt;</ref><sp/>operator<sp/>()()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec_3_012_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;2, T, Q&gt;</ref>(this-&gt;elem(E0),<sp/>this-&gt;elem(E1));<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned&gt;</highlight></codeline>
<codeline lineno="35" refid="structglm_1_1detail_1_1__swizzle__base1_3_013_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00-1_00_01_aligned_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle__base1" kindref="compound">_swizzle_base1</ref>&lt;3,<sp/>T,<sp/>Q,<sp/>E0,E1,E2,-1,<sp/>Aligned&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base0" kindref="compound">_swizzle_base0</ref>&lt;T,<sp/>3&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref><sp/>operator<sp/>()()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref>(this-&gt;elem(E0),<sp/>this-&gt;elem(E1),<sp/>this-&gt;elem(E2));<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E3,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Aligned&gt;</highlight></codeline>
<codeline lineno="41" refid="structglm_1_1detail_1_1__swizzle__base1_3_014_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_01_aligned_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle__base1" kindref="compound">_swizzle_base1</ref>&lt;4,<sp/>T,<sp/>Q,<sp/>E0,E1,E2,E3,<sp/>Aligned&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base0" kindref="compound">_swizzle_base0</ref>&lt;T,<sp/>4&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec_3_014_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;4, T, Q&gt;</ref><sp/>operator<sp/>()()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec_3_014_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;4, T, Q&gt;</ref>(this-&gt;elem(E0),<sp/>this-&gt;elem(E1),<sp/>this-&gt;elem(E2),<sp/>this-&gt;elem(E3));<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>class<sp/>for<sp/>implementing<sp/>swizzle<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Template<sp/>parameters:</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>type<sp/>of<sp/>scalar<sp/>values<sp/>(e.g.<sp/>float,<sp/>double)</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>number<sp/>of<sp/>components<sp/>in<sp/>the<sp/>vector<sp/>(e.g.<sp/>3)</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E0...3<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>what<sp/>index<sp/>the<sp/>n-th<sp/>element<sp/>of<sp/>this<sp/>swizzle<sp/>refers<sp/>to<sp/>in<sp/>the<sp/>unswizzled<sp/>vec</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DUPLICATE_ELEMENTS<sp/>=<sp/>1<sp/>if<sp/>there<sp/>is<sp/>a<sp/>repeated<sp/>element,<sp/>0<sp/>otherwise<sp/>(used<sp/>to<sp/>specialize<sp/>swizzles</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>containing<sp/>duplicate<sp/>elements<sp/>so<sp/>that<sp/>they<sp/>cannot<sp/>be<sp/>used<sp/>as<sp/>r-values).</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DUPLICATE_ELEMENTS&gt;</highlight></codeline>
<codeline lineno="58" refid="structglm_1_1detail_1_1__swizzle__base2" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">_swizzle_base2</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base1" kindref="compound">_swizzle_base1</ref>&lt;N,<sp/>T,<sp/>Q,<sp/>E0,E1,E2,E3,<sp/>detail::is_aligned&lt;Q&gt;::value&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">_swizzle_base2</ref>&amp;<sp/>operator=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">_swizzle_base2</ref>&amp;<sp/>operator=<sp/>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;N, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>that)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">op<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()<sp/>(T&amp;<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>,<sp/>T&amp;<sp/>t)<sp/>{<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref><sp/>=<sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_apply_op(that,<sp/>op());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>-=<sp/>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;N, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>that)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">op<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()<sp/>(T&amp;<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>,<sp/>T&amp;<sp/>t)<sp/>{<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref><sp/>-=<sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_apply_op(that,<sp/>op());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>+=<sp/>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;N, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>that)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">op<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()<sp/>(T&amp;<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>,<sp/>T&amp;<sp/>t)<sp/>{<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref><sp/>+=<sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_apply_op(that,<sp/>op());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>*=<sp/>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;N, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>that)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">op<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()<sp/>(T&amp;<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>,<sp/>T&amp;<sp/>t)<sp/>{<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref><sp/>*=<sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_apply_op(that,<sp/>op());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>/=<sp/>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;N, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>that)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">op<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()<sp/>(T&amp;<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>,<sp/>T&amp;<sp/>t)<sp/>{<sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref><sp/>/=<sp/>t;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_apply_op(that,<sp/>op());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>T&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_dst[4]<sp/>=<sp/>{<sp/>E0,<sp/>E1,<sp/>E2,<sp/>E3<sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;elem(offset_dst[i]);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>T<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="114"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_dst[4]<sp/>=<sp/>{<sp/>E0,<sp/>E1,<sp/>E2,<sp/>E3<sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;elem(offset_dst[i]);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_apply_op(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;N, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>that,<sp/>U<sp/>op)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>data<sp/>in<sp/>this<sp/>==<sp/>&amp;that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>copier<sp/>should<sp/>optimize<sp/>out<sp/>the<sp/>copy<sp/>in<sp/>cases<sp/>where<sp/>the<sp/>function<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>properly<sp/>inlined<sp/>and<sp/>the<sp/>copy<sp/>is<sp/>not<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t[N];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i]<sp/>=<sp/>that[i];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op(<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i],<sp/>t[i]<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Specialization<sp/>for<sp/>swizzles<sp/>containing<sp/>duplicate<sp/>elements.<sp/><sp/>These<sp/>cannot<sp/>be<sp/>modified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E3&gt;</highlight></codeline>
<codeline lineno="136" refid="structglm_1_1detail_1_1__swizzle__base2_3_01_n_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_011_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">_swizzle_base2</ref>&lt;N,<sp/>T,<sp/>Q,<sp/>E0,E1,E2,E3,<sp/>1&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base1" kindref="compound">_swizzle_base1</ref>&lt;N,<sp/>T,<sp/>Q,<sp/>E0,E1,E2,E3,<sp/>detail::is_aligned&lt;Q&gt;::value&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138" refid="structglm_1_1detail_1_1__swizzle__base2_3_01_n_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_011_01_4_1_1_stub" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Stub<sp/>{};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">_swizzle_base2</ref>&amp;<sp/>operator=<sp/>(Stub<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>T<sp/>operator[]<sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="143"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_dst[4]<sp/>=<sp/>{<sp/>E0,<sp/>E1,<sp/>E2,<sp/>E3<sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;elem(offset_dst[i]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E3&gt;</highlight></codeline>
<codeline lineno="150" refid="structglm_1_1detail_1_1__swizzle" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1__swizzle" kindref="compound">_swizzle</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">_swizzle_base2</ref>&lt;N,<sp/>T,<sp/>Q,<sp/>E0,<sp/>E1,<sp/>E2,<sp/>E3,<sp/>(E0<sp/>==<sp/>E1<sp/>||<sp/>E0<sp/>==<sp/>E2<sp/>||<sp/>E0<sp/>==<sp/>E3<sp/>||<sp/>E1<sp/>==<sp/>E2<sp/>||<sp/>E1<sp/>==<sp/>E3<sp/>||<sp/>E2<sp/>==<sp/>E3)&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">_swizzle_base2</ref>&lt;N,<sp/>T,<sp/>Q,<sp/>E0,<sp/>E1,<sp/>E2,<sp/>E3,<sp/>(E0<sp/>==<sp/>E1<sp/>||<sp/>E0<sp/>==<sp/>E2<sp/>||<sp/>E0<sp/>==<sp/>E3<sp/>||<sp/>E1<sp/>==<sp/>E2<sp/>||<sp/>E1<sp/>==<sp/>E3<sp/>||<sp/>E2<sp/>==<sp/>E3)&gt;<sp/><ref refid="structglm_1_1detail_1_1__swizzle__base2" kindref="compound">base_type</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::operator=;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;N, T, Q&gt;</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)();<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>prevent<sp/>the<sp/>C++<sp/>syntax<sp/>from<sp/>getting<sp/>entirely<sp/>overwhelming,<sp/>define<sp/>some<sp/>alias<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/>template&lt;int<sp/>N,<sp/>typename<sp/>T,<sp/>qualifier<sp/>Q,<sp/>int<sp/>E0,<sp/>int<sp/>E1,<sp/>int<sp/>E2,<sp/>int<sp/>E3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_TEMPLATE2<sp/><sp/><sp/>template&lt;int<sp/>N,<sp/>typename<sp/>T,<sp/>qualifier<sp/>Q,<sp/>int<sp/>E0,<sp/>int<sp/>E1,<sp/>int<sp/>E2,<sp/>int<sp/>E3,<sp/>int<sp/>F0,<sp/>int<sp/>F1,<sp/>int<sp/>F2,<sp/>int<sp/>F3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_TYPE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_swizzle&lt;N,<sp/>T,<sp/>Q,<sp/>E0,<sp/>E1,<sp/>E2,<sp/>E3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_TYPE2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_swizzle&lt;N,<sp/>T,<sp/>Q,<sp/>F0,<sp/>F1,<sp/>F2,<sp/>F3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>for<sp/>a<sp/>binary<sp/>operator<sp/>(e.g.<sp/>u.yy<sp/>+<sp/>v.zy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(OPERAND)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>vec&lt;N,<sp/>T,<sp/>Q&gt;<sp/>operator<sp/>OPERAND<sp/>(<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE2&amp;<sp/>b)<sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a()<sp/>OPERAND<sp/>b();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>vec&lt;N,<sp/>T,<sp/>Q&gt;<sp/>operator<sp/>OPERAND<sp/>(<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>vec&lt;N,<sp/>T,<sp/>Q&gt;&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a()<sp/>OPERAND<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>vec&lt;N,<sp/>T,<sp/>Q&gt;<sp/>operator<sp/>OPERAND<sp/>(<sp/>const<sp/>vec&lt;N,<sp/>T,<sp/>Q&gt;&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a<sp/>OPERAND<sp/>b();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>for<sp/>a<sp/>operand<sp/>between<sp/>a<sp/>swizzle<sp/>and<sp/>a<sp/>binary<sp/>(e.g.<sp/>1.0f<sp/>-<sp/>u.xyz)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION(OPERAND)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>vec&lt;N,<sp/>T,<sp/>Q&gt;<sp/>operator<sp/>OPERAND<sp/>(<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>T&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a()<sp/>OPERAND<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>vec&lt;N,<sp/>T,<sp/>Q&gt;<sp/>operator<sp/>OPERAND<sp/>(<sp/>const<sp/>T&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a<sp/>OPERAND<sp/>b();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macro<sp/>for<sp/>wrapping<sp/>a<sp/>function<sp/>taking<sp/>one<sp/>argument<sp/>(e.g.<sp/>abs())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_FUNCTION_1_ARGS(RETURN_TYPE,FUNCTION)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a)<sp/><sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macro<sp/>for<sp/>wrapping<sp/>a<sp/>function<sp/>taking<sp/>two<sp/>vector<sp/>arguments<sp/>(e.g.<sp/>dot()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_FUNCTION_2_ARGS(RETURN_TYPE,FUNCTION)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE2&amp;<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a(),<sp/>b());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a(),<sp/>b());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>typename<sp/>V&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a(),<sp/>b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>V&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a,<sp/>b());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macro<sp/>for<sp/>wrapping<sp/>a<sp/>function<sp/>take<sp/>2<sp/>vec<sp/>arguments<sp/>followed<sp/>by<sp/>a<sp/>scalar<sp/>(e.g.<sp/>mix()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR(RETURN_TYPE,FUNCTION)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE2&amp;<sp/>b,<sp/>const<sp/>T&amp;<sp/>c)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a(),<sp/>b(),<sp/>c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>b,<sp/>const<sp/>T&amp;<sp/>c)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a(),<sp/>b(),<sp/>c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>a,<sp/>const<sp/>typename<sp/>S0::vec_type&amp;<sp/>b,<sp/>const<sp/>T&amp;<sp/>c)\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a(),<sp/>b,<sp/>c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_SWIZZLE_TEMPLATE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>typename<sp/>GLM_SWIZZLE_TYPE1::RETURN_TYPE<sp/>FUNCTION(const<sp/>typename<sp/>V&amp;<sp/>a,<sp/>const<sp/>GLM_SWIZZLE_TYPE1&amp;<sp/>b,<sp/>const<sp/>T&amp;<sp/>c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FUNCTION(a,<sp/>b(),<sp/>c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>glm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">glm</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION(-)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION(*)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(+)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(-)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(*)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(/)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swizzles<sp/>are<sp/>distinct<sp/>types<sp/>from<sp/>the<sp/>unswizzled<sp/>type.<sp/><sp/>The<sp/>below<sp/>macros<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>provide<sp/>template<sp/>specializations<sp/>for<sp/>the<sp/>swizzle<sp/>types<sp/>for<sp/>the<sp/>given<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>the<sp/>compiler<sp/>does<sp/>not<sp/>have<sp/>any<sp/>ambiguity<sp/>to<sp/>choosing<sp/>how<sp/>to<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>alternative<sp/>is<sp/>to<sp/>use<sp/>the<sp/>operator()()<sp/>when<sp/>calling<sp/>the<sp/>function<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>explicitly<sp/>convert<sp/>the<sp/>swizzled<sp/>type<sp/>to<sp/>the<sp/>unswizzled<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_1_ARGS(vec_type,<sp/><sp/><sp/><sp/>abs);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_1_ARGS(vec_type,<sp/><sp/><sp/><sp/>acos);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_1_ARGS(vec_type,<sp/><sp/><sp/><sp/>acosh);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_1_ARGS(vec_type,<sp/><sp/><sp/><sp/>all);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_1_ARGS(vec_type,<sp/><sp/><sp/><sp/>any);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_2_ARGS(value_type,<sp/><sp/>dot);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_2_ARGS(vec_type,<sp/><sp/><sp/><sp/>cross);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_2_ARGS(vec_type,<sp/><sp/><sp/><sp/>step);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR(vec_type,<sp/>mix);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE2_2_MEMBERS(T,<sp/>Q,<sp/>E0,E1)<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,<sp/>T,<sp/>Q,<sp/>0,0,-1,-2&gt;<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,<sp/>T,<sp/>Q,<sp/>0,1,-1,-2&gt;<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,<sp/>T,<sp/>Q,<sp/>1,0,-1,-2&gt;<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,<sp/>T,<sp/>Q,<sp/>1,1,-1,-2&gt;<sp/>E1<sp/>##<sp/>E1;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE2_3_MEMBERS(T,<sp/>Q,<sp/>E0,E1)<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>0,0,0,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>0,0,1,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>0,1,0,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>0,1,1,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>1,0,0,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>1,0,1,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>1,1,0,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,T,<sp/>Q,<sp/>1,1,1,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE2_4_MEMBERS(T,<sp/>Q,<sp/>E0,E1)<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,0,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,0,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,1,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,1,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,0,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,0,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,1,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,1,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,0,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,0,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,1,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,1,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,0,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,0,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,1,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,1,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE3_2_MEMBERS(T,<sp/>Q,<sp/>E0,E1,E2)<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>0,0,-1,-2&gt;<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>0,1,-1,-2&gt;<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>0,2,-1,-2&gt;<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>1,0,-1,-2&gt;<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>1,1,-1,-2&gt;<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>1,2,-1,-2&gt;<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>2,0,-1,-2&gt;<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>2,1,-1,-2&gt;<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>2,2,-1,-2&gt;<sp/>E2<sp/>##<sp/>E2;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE3_3_MEMBERS(T,<sp/>Q<sp/>,E0,E1,E2)<sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,0,0,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,0,1,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,0,2,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,1,0,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,1,1,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,1,2,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,2,0,-1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,2,1,-1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,2,2,-1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,0,0,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,0,1,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,0,2,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,1,0,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,1,1,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,1,2,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,2,0,-1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,2,1,-1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,2,2,-1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,0,0,-1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,0,1,-1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,0,2,-1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,1,0,-1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,1,1,-1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,1,2,-1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,2,0,-1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,2,1,-1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,2,2,-1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE3_4_MEMBERS(T,<sp/>Q,<sp/>E0,E1,E2)<sp/>\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,0,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,0,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,0,2&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,1,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,1,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,1,2&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,2,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,2,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,0,2,2&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,0,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,0,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,0,2&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,1,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,1,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,1,2&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,2,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,2,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,1,2,2&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,0,0&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,0,1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,0,2&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,1,0&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,1,1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,1,2&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,2,0&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,2,1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>0,2,2,2&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,0,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,0,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,0,2&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,1,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,1,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,1,2&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,2,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,2,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,0,2,2&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,0,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,0,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,0,2&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,1,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,1,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,1,2&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,2,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,2,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,1,2,2&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,0,0&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,0,1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,0,2&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,1,0&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,1,1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,1,2&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,2,0&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,2,1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>1,2,2,2&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,0,0&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,0,1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,0,2&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,1,0&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,1,1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,1,2&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,2,0&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,2,1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,0,2,2&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,0,0&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,0,1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,0,2&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,1,0&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,1,1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,1,2&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,2,0&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,2,1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,1,2,2&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,0,0&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,0,1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,0,2&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,1,0&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,1,1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,1,2&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,2,0&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,2,1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,T,<sp/>Q,<sp/>2,2,2,2&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE4_2_MEMBERS(T,<sp/>Q,<sp/>E0,E1,E2,E3)<sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>0,0,-1,-2&gt;<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>0,1,-1,-2&gt;<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>0,2,-1,-2&gt;<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>0,3,-1,-2&gt;<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>1,0,-1,-2&gt;<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>1,1,-1,-2&gt;<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>1,2,-1,-2&gt;<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>1,3,-1,-2&gt;<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>2,0,-1,-2&gt;<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>2,1,-1,-2&gt;<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>2,2,-1,-2&gt;<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>2,3,-1,-2&gt;<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>3,0,-1,-2&gt;<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>3,1,-1,-2&gt;<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>3,2,-1,-2&gt;<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;2,T,<sp/>Q,<sp/>3,3,-1,-2&gt;<sp/>E3<sp/>##<sp/>E3;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE4_3_MEMBERS(T,<sp/>Q,<sp/>E0,E1,E2,E3)<sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,0,0,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,0,1,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,0,2,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,0,3,-1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,1,0,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,1,1,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,1,2,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,1,3,-1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,2,0,-1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,2,1,-1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,2,2,-1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,2,3,-1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,3,0,-1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,3,1,-1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,3,2,-1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>0,3,3,-1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,0,0,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,0,1,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,0,2,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,0,3,-1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,1,0,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,1,1,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,1,2,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,1,3,-1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,2,0,-1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,2,1,-1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,2,2,-1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,2,3,-1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,3,0,-1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,3,1,-1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,3,2,-1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>1,3,3,-1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,0,0,-1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,0,1,-1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,0,2,-1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,0,3,-1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,1,0,-1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,1,1,-1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,1,2,-1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,1,3,-1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,2,0,-1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,2,1,-1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,2,2,-1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,2,3,-1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,3,0,-1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,3,1,-1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,3,2,-1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>2,3,3,-1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,0,0,-1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,0,1,-1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,0,2,-1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="526"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,0,3,-1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,1,0,-1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,1,1,-1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,1,2,-1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,1,3,-1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,2,0,-1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,2,1,-1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,2,2,-1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,2,3,-1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,3,0,-1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="536"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,3,1,-1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="537"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,3,2,-1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;3,<sp/>T,<sp/>Q,<sp/>3,3,3,-1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLM_SWIZZLE4_4_MEMBERS(T,<sp/>Q,<sp/>E0,E1,E2,E3)<sp/>\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,0,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,0,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,0,2&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,0,3&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,1,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,1,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,1,2&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,1,3&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,2,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,2,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,2,2&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,2,3&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,3,0&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,3,1&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,3,2&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,0,3,3&gt;<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,0,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,0,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,0,2&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="560"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,0,3&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,1,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,1,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="563"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,1,2&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,1,3&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,2,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,2,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,2,2&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,2,3&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,3,0&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,3,1&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,3,2&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,1,3,3&gt;<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,0,0&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,0,1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,0,2&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,0,3&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,1,0&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,1,1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="579"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,1,2&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,1,3&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,2,0&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,2,1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="583"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,2,2&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="584"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,2,3&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="585"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,3,0&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="586"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,3,1&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="587"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,3,2&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="588"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,2,3,3&gt;<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="589"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,0,0&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,0,1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,0,2&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,0,3&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,1,0&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,1,1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,1,2&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,1,3&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,2,0&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,2,1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,2,2&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,2,3&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,3,0&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,3,1&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,3,2&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="604"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>0,3,3,3&gt;<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,0,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,0,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,0,2&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="608"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,0,3&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="609"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,1,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,1,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="611"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,1,2&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,1,3&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="613"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,2,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,2,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,2,2&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,2,3&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="617"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,3,0&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,3,1&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="619"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,3,2&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,0,3,3&gt;<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="621"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,0,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,0,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,0,2&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="624"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,0,3&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="625"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,1,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,1,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,1,2&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,1,3&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,2,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,2,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,2,2&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="632"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,2,3&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="633"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,3,0&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="634"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,3,1&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,3,2&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="636"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,1,3,3&gt;<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,0,0&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="638"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,0,1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="639"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,0,2&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="640"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,0,3&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,1,0&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,1,1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,1,2&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,1,3&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="645"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,2,0&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="646"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,2,1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,2,2&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,2,3&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,3,0&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,3,1&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,3,2&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,2,3,3&gt;<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="653"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,0,0&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="654"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,0,1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="655"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,0,2&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="656"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,0,3&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="657"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,1,0&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,1,1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,1,2&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,1,3&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,2,0&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,2,1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,2,2&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,2,3&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,3,0&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,3,1&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,3,2&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>1,3,3,3&gt;<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,0,0&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,0,1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,0,2&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,0,3&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="673"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,1,0&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="674"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,1,1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="675"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,1,2&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,1,3&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="677"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,2,0&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="678"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,2,1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="679"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,2,2&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="680"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,2,3&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,3,0&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,3,1&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,3,2&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,0,3,3&gt;<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,0,0&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,0,1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,0,2&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,0,3&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,1,0&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="690"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,1,1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,1,2&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,1,3&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="693"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,2,0&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="694"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,2,1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="695"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,2,2&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="696"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,2,3&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,3,0&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="698"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,3,1&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="699"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,3,2&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="700"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,1,3,3&gt;<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="701"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,0,0&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="702"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,0,1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,0,2&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="704"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,0,3&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="705"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,1,0&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,1,1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="707"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,1,2&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="708"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,1,3&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="709"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,2,0&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,2,1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="711"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,2,2&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,2,3&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="713"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,3,0&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="714"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,3,1&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="715"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,3,2&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="716"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,2,3,3&gt;<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="717"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,0,0&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,0,1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="719"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,0,2&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="720"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,0,3&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="721"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,1,0&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="722"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,1,1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="723"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,1,2&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="724"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,1,3&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="725"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,2,0&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="726"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,2,1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="727"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,2,2&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,2,3&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="729"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,3,0&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="730"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,3,1&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="731"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,3,2&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="732"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>2,3,3,3&gt;<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="733"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,0,0&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="734"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,0,1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="735"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,0,2&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="736"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,0,3&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="737"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,1,0&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="738"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,1,1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="739"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,1,2&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="740"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,1,3&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="741"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,2,0&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="742"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,2,1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="743"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,2,2&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="744"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,2,3&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="745"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,3,0&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="746"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,3,1&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="747"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,3,2&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="748"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,0,3,3&gt;<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="749"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,0,0&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="750"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,0,1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,0,2&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="752"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,0,3&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="753"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,1,0&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,1,1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,1,2&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="756"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,1,3&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="757"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,2,0&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="758"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,2,1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="759"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,2,2&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="760"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,2,3&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="761"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,3,0&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,3,1&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,3,2&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,1,3,3&gt;<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,0,0&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="766"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,0,1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="767"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,0,2&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,0,3&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="769"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,1,0&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,1,1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="771"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,1,2&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="772"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,1,3&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="773"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,2,0&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="774"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,2,1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,2,2&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,2,3&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,3,0&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,3,1&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,3,2&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="780"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,2,3,3&gt;<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="781"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,0,0&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="782"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,0,1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,0,2&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,0,3&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,1,0&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,1,1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,1,2&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="788"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,1,3&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,2,0&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,2,1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,2,2&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,2,3&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2<sp/>##<sp/>E3;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,3,0&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E0;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="794"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,3,1&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E1;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,3,2&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E2;<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="796"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>{<sp/>detail::_swizzle&lt;4,<sp/>T,<sp/>Q,<sp/>3,3,3,3&gt;<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3<sp/>##<sp/>E3;<sp/>};</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/_swizzle.hpp"/>
  </compounddef>
</doxygen>
