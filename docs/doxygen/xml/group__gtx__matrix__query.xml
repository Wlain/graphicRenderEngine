<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__matrix__query" kind="group">
    <compoundname>gtx_matrix_query</compoundname>
    <title>GLM_GTX_matrix_query</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__matrix__query_1ga9790ec222ce948c0ff0d8ce927340dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isNull</definition>
        <argsstring>(mat&lt; 2, 2, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isNull</name>
        <param>
          <type>mat&lt; 2, 2, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix a null matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="37" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.inl" bodystart="7" bodyend="13" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="37" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__query_1gae14501c6b14ccda6014cc5350080103d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isNull</definition>
        <argsstring>(mat&lt; 3, 3, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isNull</name>
        <param>
          <type>mat&lt; 3, 3, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix a null matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="42" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.inl" bodystart="16" bodyend="22" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="42" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__query_1ga2b98bb30a9fefa7cdea5f1dcddba677b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isNull</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isNull</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix is a null matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="47" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.inl" bodystart="25" bodyend="31" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="47" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__query_1gaee935d145581c82e82b154ccfd78ad91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>C</declname>
            <defname>C</defname>
          </param>
          <param>
            <type>length_t</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
          <param>
            <type>template&lt; length_t, length_t, typename, qualifier &gt; class</type>
            <declname>matType</declname>
            <defname>matType</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isIdentity</definition>
        <argsstring>(matType&lt; C, R, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isIdentity</name>
        <param>
          <type>matType&lt; C, R, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix is an identity matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="52" column="20" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="52" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__query_1gae785af56f47ce220a1609f7f84aa077a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isNormalized</definition>
        <argsstring>(mat&lt; 2, 2, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isNormalized</name>
        <param>
          <type>mat&lt; 2, 2, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix is a normalized matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="57" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.inl" bodystart="50" bodyend="63" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="57" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__query_1gaa068311695f28f5f555f5f746a6a66fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isNormalized</definition>
        <argsstring>(mat&lt; 3, 3, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isNormalized</name>
        <param>
          <type>mat&lt; 3, 3, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix is a normalized matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="62" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.inl" bodystart="66" bodyend="79" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="62" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__query_1ga4d9bb4d0465df49fedfad79adc6ce4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isNormalized</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isNormalized</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix is a normalized matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="67" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.inl" bodystart="82" bodyend="95" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="67" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__query_1ga58f3289f74dcab653387dd78ad93ca40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>C</declname>
            <defname>C</defname>
          </param>
          <param>
            <type>length_t</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
          <param>
            <type>template&lt; length_t, length_t, typename, qualifier &gt; class</type>
            <declname>matType</declname>
            <defname>matType</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isOrthogonal</definition>
        <argsstring>(matType&lt; C, R, T, Q &gt; const &amp;m, T const &amp;epsilon)</argsstring>
        <name>isOrthogonal</name>
        <param>
          <type>matType&lt; C, R, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a matrix is an orthonormalized matrix. From GLM_GTX_matrix_query extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" line="72" column="20" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp" declline="72" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="matrix__query_8hpp" kindref="compound">glm/gtx/matrix_query.hpp</ref>&gt; to use the features of this extension.</para>
<para>Query to evaluate matrix properties </para>
    </detaileddescription>
  </compounddef>
</doxygen>
