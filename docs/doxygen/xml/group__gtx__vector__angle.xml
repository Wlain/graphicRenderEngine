<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__vector__angle" kind="group">
    <compoundname>gtx_vector_angle</compoundname>
    <title>GLM_GTX_vector_angle</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__vector__angle_1ga2e2917b4cb75ca3d043ac15ff88f14e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::angle</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y)</argsstring>
        <name>angle</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the absolute angle between two vectors. Parameters need to be normalized. <simplesect kind="see"><para><ref refid="group__gtx__vector__angle" kindref="compound">GLM_GTX_vector_angle</ref> extension. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.hpp" line="40" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.inl" bodystart="18" bodyend="22" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.hpp" declline="40" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__vector__angle_1ga9556a803dce87fe0f42fdabe4ebba1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::orientedAngle</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;x, vec&lt; 2, T, Q &gt; const &amp;y)</argsstring>
        <name>orientedAngle</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the oriented angle between two 2d vectors. Parameters need to be normalized. <simplesect kind="see"><para><ref refid="group__gtx__vector__angle" kindref="compound">GLM_GTX_vector_angle</ref> extension.</para>
</simplesect>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>epsilon is hard coded to 0.01 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.hpp" line="46" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.inl" bodystart="26" bodyend="35" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.hpp" declline="46" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__vector__angle_1ga706fce3d111f485839756a64f5a48553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::orientedAngle</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;x, vec&lt; 3, T, Q &gt; const &amp;y, vec&lt; 3, T, Q &gt; const &amp;ref)</argsstring>
        <name>orientedAngle</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the oriented angle between two 3d vectors based from a reference axis. Parameters need to be normalized. <simplesect kind="see"><para><ref refid="group__gtx__vector__angle" kindref="compound">GLM_GTX_vector_angle</ref> extension. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.hpp" line="52" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.inl" bodystart="38" bodyend="44" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_angle.hpp" declline="52" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="vector__angle_8hpp" kindref="compound">glm/gtx/vector_angle.hpp</ref>&gt; to use the features of this extension.</para>
<para>Compute angle between vectors </para>
    </detaileddescription>
  </compounddef>
</doxygen>
