<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="framebuffer_8h" kind="file" language="C++">
    <compoundname>framebuffer.h</compoundname>
    <includes local="no">glm/glm.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">string_view</includes>
    <includes local="no">vector</includes>
    <includedby refid="_inspector_8cpp" local="yes">/Users/cwb/developer/learning/simpleRenderEngine/re/core/Inspector.cpp</includedby>
    <includedby refid="_inspector_8h" local="yes">/Users/cwb/developer/learning/simpleRenderEngine/re/core/Inspector.h</includedby>
    <includedby refid="framebuffer_8cpp" local="yes">/Users/cwb/developer/learning/simpleRenderEngine/re/core/framebuffer.cpp</includedby>
    <includedby refid="render_pass_8h" local="yes">/Users/cwb/developer/learning/simpleRenderEngine/re/core/renderPass.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/framebuffer.h</label>
        <link refid="framebuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>glm/glm.hpp</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>string_view</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/Inspector.cpp</label>
        <link refid="_inspector_8cpp_source"/>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/Inspector.h</label>
        <link refid="_inspector_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/camera.cpp</label>
        <link refid="camera_8cpp_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/framebuffer.cpp</label>
        <link refid="framebuffer_8cpp_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/framebuffer.h</label>
        <link refid="framebuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/glfwRenderer.cpp</label>
        <link refid="glfw_renderer_8cpp_source"/>
      </node>
      <node id="10">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.cpp</label>
        <link refid="material_8cpp_source"/>
      </node>
      <node id="15">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/material.h</label>
        <link refid="material_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/mesh.cpp</label>
        <link refid="mesh_8cpp_source"/>
      </node>
      <node id="17">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/modelImporter.cpp</label>
        <link refid="model_importer_8cpp_source"/>
      </node>
      <node id="16">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/modelImporter.h</label>
        <link refid="model_importer_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/renderPass.cpp</label>
        <link refid="render_pass_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/renderer.cpp</label>
        <link refid="renderer_8cpp_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/renderer.h</label>
        <link refid="renderer_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/shader.cpp</label>
        <link refid="shader_8cpp_source"/>
      </node>
      <node id="14">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/shader.h</label>
        <link refid="shader_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/skybox.cpp</label>
        <link refid="skybox_8cpp_source"/>
      </node>
      <node id="20">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/spriteAtlas.cpp</label>
        <link refid="sprite_atlas_8cpp_source"/>
      </node>
      <node id="19">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/spriteBatch.cpp</label>
        <link refid="sprite_batch_8cpp_source"/>
      </node>
      <node id="21">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/texture.cpp</label>
        <link refid="texture_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classre_1_1_frame_buffer" prot="public">re::FrameBuffer</innerclass>
    <innerclass refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" prot="public">re::FrameBuffer::FrameBufferBuilder</innerclass>
    <innernamespace refid="namespacere">re</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>william<sp/>on<sp/>2022/5/31.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIMPLERENDERENGINE_FRAMEBUFFER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLERENDERENGINE_FRAMEBUFFER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/glm.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacere" kindref="compound">re</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RenderPass;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Texture;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classre_1_1_frame_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classre_1_1_frame_buffer" kindref="compound">FrameBuffer</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20" refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" kindref="compound">FrameBufferBuilder</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" kindref="compound">FrameBufferBuilder</ref>&amp;<sp/>withColorTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Texture&gt;&amp;<sp/>texture);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" kindref="compound">FrameBufferBuilder</ref>&amp;<sp/>withDepthTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Texture&gt;&amp;<sp/>texture);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" kindref="compound">FrameBufferBuilder</ref>&amp;<sp/>withName(std::string_view<sp/>name);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;FrameBuffer&gt;<sp/>build();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Texture&gt;&gt;<sp/>m_textures;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Texture&gt;<sp/>m_depthTexture;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>m_name;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::uvec2<sp/>m_size{};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" kindref="compound">FrameBufferBuilder</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" kindref="compound">FrameBufferBuilder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classre_1_1_frame_buffer_1_1_frame_buffer_builder" kindref="compound">FrameBufferBuilder</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classre_1_1_frame_buffer" kindref="compound">FrameBuffer</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classre_1_1_frame_buffer" kindref="compound">FrameBuffer</ref>(std::string_view<sp/>name);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classre_1_1_frame_buffer" kindref="compound">~FrameBuffer</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_name;<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColorTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Texture&gt;&amp;<sp/>tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDepthTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Texture&gt;&amp;<sp/>tex);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FrameBufferBuilder<sp/>create();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getMaximumColorAttachments();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getMaximumDepthAttachments();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bind();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Texture&gt;&gt;<sp/>m_textures;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Texture&gt;<sp/>m_depthTexture;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_name;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_renderBufferDepth{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_fbo{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_rbo{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec2<sp/>m_size;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_dirty{<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RenderPass;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Inspector;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SIMPLERENDERENGINE_FRAMEBUFFER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/framebuffer.h"/>
  </compounddef>
</doxygen>
