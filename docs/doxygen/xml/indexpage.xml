<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>TinyCThread API Reference</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="index_1intro_sec">
<title>Introduction</title>
<para>TinyCThread is a minimal, portable implementation of basic threading classes for C.</para>
<para>They closely mimic the functionality and naming of the C11 standard, and should be easily replaceable with the corresponding standard variants.</para>
</sect1>
<sect1 id="index_1port_sec">
<title>Portability</title>
<para>The Win32 variant uses the native Win32 API for implementing the thread classes, while for other systems, the POSIX threads API (pthread) is used.</para>
</sect1>
<sect1 id="index_1misc_sec">
<title>Miscellaneous</title>
<para>The following special keywords are available: <ref refid="tinycthread_8h_1a6ee13d5bcebab292dbc98e06c6cf9fe7" kindref="member">_Thread_local</ref>.</para>
<para>For more detailed information, browse the different sections of this documentation. A good place to start is: <ref refid="tinycthread_8h" kindref="compound">tinycthread.h</ref>. </para>
</sect1>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/tinycthread.h"/>
  </compounddef>
</doxygen>
