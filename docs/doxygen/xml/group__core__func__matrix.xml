<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__core__func__matrix" kind="group">
    <compoundname>core_func_matrix</compoundname>
    <title>Matrix functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__core__func__matrix_1ga24628d844879cc9d0a77ede181e5925e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>C</declname>
            <defname>C</defname>
          </param>
          <param>
            <type>length_t</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; C, R, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; C, R, T, Q &gt; glm::matrixCompMult</definition>
        <argsstring>(mat&lt; C, R, T, Q &gt; const &amp;x, mat&lt; C, R, T, Q &gt; const &amp;y)</argsstring>
        <name>matrixCompMult</name>
        <param>
          <type>mat&lt; C, R, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>mat&lt; C, R, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply matrix x by matrix y component-wise, i.e., result[i][j] is the scalar product of x[i][j] and y[i][j].</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a row </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or signed integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/matrixCompMult.xml">GLSL matrixCompMult man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.6 Matrix Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" line="109" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_matrix.inl" bodystart="359" bodyend="363" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" declline="109" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__matrix_1gaddf880b35ca2e067854c87f180f14aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>C</declname>
            <defname>C</defname>
          </param>
          <param>
            <type>length_t</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL detail::outerProduct_trait&lt; C, R, T, Q &gt;::type</type>
        <definition>GLM_FUNC_DECL detail::outerProduct_trait&lt; C, R, T, Q &gt;::type glm::outerProduct</definition>
        <argsstring>(vec&lt; C, T, Q &gt; const &amp;c, vec&lt; R, T, Q &gt; const &amp;r)</argsstring>
        <name>outerProduct</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; C, T, Q &gt; const &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; R, T, Q &gt; const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Treats the first parameter c as a column vector and the second parameter r as a row vector and does a linear algebraic matrix multiply c * r.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a row </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or signed integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/outerProduct.xml">GLSL outerProduct man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.6 Matrix Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" line="123" column="58" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" declline="123" declcolumn="58"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>C</declname>
            <defname>C</defname>
          </param>
          <param>
            <type>length_t</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; C, R, T, Q &gt;::transpose_type</type>
        <definition>GLM_FUNC_DECL mat&lt; C, R, T, Q &gt;::transpose_type glm::transpose</definition>
        <argsstring>(mat&lt; C, R, T, Q &gt; const &amp;x)</argsstring>
        <name>transpose</name>
        <param>
          <type>mat&lt; C, R, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the transposed matrix of x</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a row </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or signed integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/transpose.xml">GLSL transpose man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.6 Matrix Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" line="135" column="45" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_matrix.inl" bodystart="377" bodyend="381" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" declline="135" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__matrix_1gad7928795124768e058f99dce270f5c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>C</declname>
            <defname>C</defname>
          </param>
          <param>
            <type>length_t</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL T</type>
        <definition>GLM_FUNC_DECL T glm::determinant</definition>
        <argsstring>(mat&lt; C, R, T, Q &gt; const &amp;m)</argsstring>
        <name>determinant</name>
        <param>
          <type>mat&lt; C, R, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the determinant of a squared matrix.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a row </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or signed integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/determinant.xml">GLSL determinant man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.6 Matrix Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" line="147" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_matrix.inl" bodystart="384" bodyend="388" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/matrix.hpp" declline="147" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>C</declname>
            <defname>C</defname>
          </param>
          <param>
            <type>length_t</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; C, R, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; C, R, T, Q &gt; glm::inverse</definition>
        <argsstring>(mat&lt; C, R, T, Q &gt; const &amp;m)</argsstring>
        <name>inverse</name>
        <param>
          <type>mat&lt; C, R, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the inverse of a squared matrix.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the number a row </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or signed integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/inverse.xml">GLSL inverse man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.6 Matrix Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/type_mat.hpp" line="28" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_matrix.inl" bodystart="391" bodyend="395" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/type_mat.hpp" declline="28" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="matrix_8hpp" kindref="compound">glm/matrix.hpp</ref>&gt; to use these core features.</para>
<para>For each of the following built-in matrix functions, there is both a single-qualifier floating point version, where all arguments and return values are single qualifier, and a double-qualifier floating version, where all arguments and return values are double qualifier. Only the single-qualifier floating point version is shown. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
