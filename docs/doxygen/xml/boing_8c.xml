<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="boing_8c" kind="file" language="C++">
    <compoundname>boing.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="gl_8h" local="no">glad/gl.h</includes>
    <includes local="no">GLFW/glfw3.h</includes>
    <includes refid="linmath_8h" local="no">linmath.h</includes>
    <incdepgraph>
      <node id="5">
        <label>glad/gl.h</label>
        <link refid="gl_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>glfw/deps/glad/khrplatform.h</label>
        <link refid="khrplatform_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linmath.h</label>
        <link refid="linmath_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c</label>
        <link refid="boing_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="8">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvertex__t" prot="public">vertex_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="boing_8c_1a088324ad8995e3eb76024e3e79083d48" prot="public" static="no">
        <name>GLFW_INCLUDE_NONE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="40" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1aa4f8ea40228c3c3a9a7143b1d1ad8956" prot="public" static="no">
        <name>RADIUS</name>
        <initializer>70.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="62" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a89edea273a0da4bec03abfdd5d46a1df" prot="public" static="no">
        <name>STEP_LONGITUDE</name>
        <initializer>22.5f                   /* 22.5 makes 8 bands like original Boing */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="63" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1ac875967450c7a0306cf05f8e3e455e6c" prot="public" static="no">
        <name>STEP_LATITUDE</name>
        <initializer>22.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="64" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1abc4d2bb2a15f35c55d9b456b452eaa7c" prot="public" static="no">
        <name>DIST_BALL</name>
        <initializer>(RADIUS * 2.f + RADIUS * 0.1f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="66" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a7a2f17659bb77c24edb2bea7a08a19a3" prot="public" static="no">
        <name>VIEW_SCENE_DIST</name>
        <initializer>(DIST_BALL * 3.f + 200.f)/* distance from viewer to middle of boing area */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="68" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a08246606c233e7785a497c09672f366f" prot="public" static="no">
        <name>GRID_SIZE</name>
        <initializer>(RADIUS * 4.5f)          /* length (width) of grid */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="69" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a9088188b19f0545a1d84e381da09fef0" prot="public" static="no">
        <name>BOUNCE_HEIGHT</name>
        <initializer>(RADIUS * 2.1f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="70" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1adefcd41ddcb236a9bcf6189b5009e59e" prot="public" static="no">
        <name>BOUNCE_WIDTH</name>
        <initializer>(RADIUS * 2.1f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="71" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1adfabb671d0b80adb599e07a018f049d4" prot="public" static="no">
        <name>SHADOW_OFFSET_X</name>
        <initializer>-20.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="73" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1aee80e1c2e5aa7831fbe28b95948f5dc0" prot="public" static="no">
        <name>SHADOW_OFFSET_Y</name>
        <initializer>10.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="74" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a79814e92ed56516db4e8564c2928f86e" prot="public" static="no">
        <name>SHADOW_OFFSET_Z</name>
        <initializer>0.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="75" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a2ec75166930a7702729980492d09d431" prot="public" static="no">
        <name>WALL_L_OFFSET</name>
        <initializer>0.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="77" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1ae377291d60b194d9d3195822af2cfeff" prot="public" static="no">
        <name>WALL_R_OFFSET</name>
        <initializer>5.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="78" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1aaa69f89df4c8e47abeb574bfdd11d9f4" prot="public" static="no">
        <name>ANIMATION_SPEED</name>
        <initializer>50.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="81" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a82c13b07387b0fa3ab346ad38894e2a7" prot="public" static="no">
        <name>MAX_DELTA_T</name>
        <initializer>0.02f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="84" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a690f251553b39fd4f31894826141b61a" prot="public" static="no">
        <name>RAND_MAX</name>
        <initializer>4095</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="111" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boing_8c_1a35261c4af778a5d29263db16687a816b" prot="public" static="no">
        <name>BOING_DEBUG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="175" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="boing_8c_1aaff0749849eeb426c1fff01f93f8aa38" prot="public" static="no" strong="no">
        <type></type>
        <name>DRAW_BALL_ENUM</name>
        <enumvalue id="boing_8c_1aaff0749849eeb426c1fff01f93f8aa38a6dd224315fa345b43c69670bdd98bde6" prot="public">
          <name>DRAW_BALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="boing_8c_1aaff0749849eeb426c1fff01f93f8aa38a3248eb4cd526dece69034b8913503983" prot="public">
          <name>DRAW_BALL_SHADOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="87" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="87" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="boing_8c_1a6511876508d2f65ea8ace8f25d0e4c78" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int windowed_xpos</definition>
        <argsstring></argsstring>
        <name>windowed_xpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="93" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1adfcf830546ec1f6a64866d3b652a22fd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int windowed_ypos</definition>
        <argsstring></argsstring>
        <name>windowed_ypos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="93" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a5371aa3f8486fe48d4878950ee8bd9a3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int windowed_width</definition>
        <argsstring></argsstring>
        <name>windowed_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="93" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1aa3257f2fd88b76fd6585ba6e679253e0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int windowed_height</definition>
        <argsstring></argsstring>
        <name>windowed_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="93" column="48" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a2474a5474cbff19523a51eb1de01cda4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="94" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1ad12fc34ce789bce6c8a05d8a17138534" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="94" column="11" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1ae721211dff5c00a883879373efad1187" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat deg_rot_y</definition>
        <argsstring></argsstring>
        <name>deg_rot_y</name>
        <initializer>= 0.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="95" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1abd3eb9bcb0582eaed1be1c789fa9664a" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat deg_rot_y_inc</definition>
        <argsstring></argsstring>
        <name>deg_rot_y_inc</name>
        <initializer>= 2.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="96" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a5457032292643cc186a49f3163020555" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int override_pos</definition>
        <argsstring></argsstring>
        <name>override_pos</name>
        <initializer>= <ref refid="imgui_2examples_2libs_2glfw_2include_2_g_l_f_w_2glfw3_8h_1ac877fe3b627d21ef3a0a23e0a73ba8c5" kindref="member">GLFW_FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="97" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1ad4356335fdb6fdaa6d4b759ac447a41d" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat cursor_x</definition>
        <argsstring></argsstring>
        <name>cursor_x</name>
        <initializer>= 0.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="98" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a4f59f7e6e37a64caf5bb5b228bce9afd" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat cursor_y</definition>
        <argsstring></argsstring>
        <name>cursor_y</name>
        <initializer>= 0.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="99" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a66dbc10af7d1d045794549a09999d468" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat ball_x</definition>
        <argsstring></argsstring>
        <name>ball_x</name>
        <initializer>= -RADIUS</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="100" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a13df79b6b7f26cc1fc5279a1f12a9d98" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat ball_y</definition>
        <argsstring></argsstring>
        <name>ball_y</name>
        <initializer>= -RADIUS</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="101" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a00cc50b4eae810b91ef59463d55cb097" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat ball_x_inc</definition>
        <argsstring></argsstring>
        <name>ball_x_inc</name>
        <initializer>= 1.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="102" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1adf5ece0dd3b5effeac97071b87e106bd" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat ball_y_inc</definition>
        <argsstring></argsstring>
        <name>ball_y_inc</name>
        <initializer>= 2.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="103" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1ac1b93fa15ef429f4d5e3a0a9990304cf" prot="public" static="no" mutable="no">
        <type>DRAW_BALL_ENUM</type>
        <definition>DRAW_BALL_ENUM drawBallHow</definition>
        <argsstring></argsstring>
        <name>drawBallHow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="104" column="16" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a87accd1af8e0aff4b818d891374f7cec" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="105" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a720c9aaf75c956f8d87132112332da97" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double t_old</definition>
        <argsstring></argsstring>
        <name>t_old</name>
        <initializer>= 0.f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="106" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boing_8c_1a03e28be41881b703c836edbfe9b51b17" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double dt</definition>
        <argsstring></argsstring>
        <name>dt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="107" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="boing_8c_1a2858154e2009b0e6e616f313177762bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init</definition>
        <argsstring>(void)</argsstring>
        <name>init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="181" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="181" bodyend="189" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display</definition>
        <argsstring>(void)</argsstring>
        <name>display</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="195" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="195" bodyend="210" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a5272e39ef9d8944cb3f99d656f9f555a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reshape</definition>
        <argsstring>(GLFWwindow *window, int w, int h)</argsstring>
        <name>reshape</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="216" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="216" bodyend="237" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a286930f4e8ede059b83ff6eafa2ff718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void key_callback</definition>
        <argsstring>(GLFWwindow *window, int key, int scancode, int action, int mods)</argsstring>
        <name>key_callback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="239" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="239" bodyend="267" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a5515d805e76ce6728de3c0dc5e187c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mouse_button_callback</definition>
        <argsstring>(GLFWwindow *window, int button, int action, int mods)</argsstring>
        <name>mouse_button_callback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="275" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="275" bodyend="289" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1ab5fb5502317b46f9cecd6379f2ecd210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cursor_position_callback</definition>
        <argsstring>(GLFWwindow *window, double x, double y)</argsstring>
        <name>cursor_position_callback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="291" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="291" bodyend="298" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1aaf4ab2b37a65ad090f79313713f18731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawBoingBall</definition>
        <argsstring>(void)</argsstring>
        <name>DrawBoingBall</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="308" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="308" bodyend="379" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a5a5cbb3e7786a248a2dcf02777a98df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BounceBall</definition>
        <argsstring>(double dt)</argsstring>
        <name>BounceBall</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="385" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="385" bodyend="429" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1ad80d1d92135216bb8c1242fcce45545c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawBoingBallBand</definition>
        <argsstring>(GLfloat long_lo, GLfloat long_hi)</argsstring>
        <name>DrawBoingBallBand</name>
        <param>
          <type>GLfloat</type>
          <declname>long_lo</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>long_hi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="438" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="438" bodyend="535" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a8e38342e6a8bfcbc67503d2c6383d8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawGrid</definition>
        <argsstring>(void)</argsstring>
        <name>DrawGrid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="542" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="542" bodyend="616" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a080dc55aae439523561bda8b86575b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLfloat</type>
        <definition>GLfloat TruncateDeg</definition>
        <argsstring>(GLfloat deg)</argsstring>
        <name>TruncateDeg</name>
        <param>
          <type>GLfloat</type>
          <declname>deg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="118" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="118" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a8012f8bd66798ffbdd27462c9f593a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double deg2rad</definition>
        <argsstring>(double deg)</argsstring>
        <name>deg2rad</name>
        <param>
          <type>double</type>
          <declname>deg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="130" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a5b090656aa7eb0a7d1bd2d0f0e7712e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double sin_deg</definition>
        <argsstring>(double deg)</argsstring>
        <name>sin_deg</name>
        <param>
          <type>double</type>
          <declname>deg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="138" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1ae4cbb93841df91680846fe983a6f1835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double cos_deg</definition>
        <argsstring>(double deg)</argsstring>
        <name>cos_deg</name>
        <param>
          <type>double</type>
          <declname>deg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="146" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1ab3fa148322b2d4aaa2ffe1e0008d5e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CrossProduct</definition>
        <argsstring>(vertex_t a, vertex_t b, vertex_t c, vertex_t *n)</argsstring>
        <name>CrossProduct</name>
        <param>
          <type><ref refid="structvertex__t" kindref="compound">vertex_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structvertex__t" kindref="compound">vertex_t</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="structvertex__t" kindref="compound">vertex_t</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structvertex__t" kindref="compound">vertex_t</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="156" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="156" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a6f309a461624865bd1bb295abe41ea02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_ball_pos</definition>
        <argsstring>(GLfloat x, GLfloat y)</argsstring>
        <name>set_ball_pos</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="269" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="boing_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" line="623" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c" bodystart="623" bodyend="678"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Title:<sp/><sp/><sp/>GLBoing</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Desc:<sp/><sp/><sp/><sp/>Tribute<sp/>to<sp/>Amiga<sp/>Boing.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/>Jim<sp/>Brooks<sp/><sp/>&lt;gfx@jimbrooks.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Original<sp/>Amiga<sp/>authors<sp/>were<sp/>R.J.<sp/>Mical<sp/>and<sp/>Dale<sp/>Luck.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW<sp/>conversion<sp/>by<sp/>Marcus<sp/>Geelnard</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Notes:<sp/><sp/><sp/>-<sp/>360&apos;<sp/>=<sp/>2*PI<sp/>[radian]</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Distances<sp/>between<sp/>objects<sp/>are<sp/>created<sp/>by<sp/>doing<sp/>a<sp/>relative</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z<sp/>translations.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Although<sp/>OpenGL<sp/>enticingly<sp/>supports<sp/>alpha-blending,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>shadow<sp/>of<sp/>the<sp/>original<sp/>Boing<sp/>didn&apos;t<sp/>affect<sp/>the<sp/>color</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>grid.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>[Marcus]<sp/>Changed<sp/>timing<sp/>scheme<sp/>from<sp/>interval<sp/>driven<sp/>to<sp/>frame-</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>based<sp/>animation<sp/>steps<sp/>(which<sp/>results<sp/>in<sp/>much<sp/>smoother</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement)</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>History<sp/>of<sp/>Amiga<sp/>Boing:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>Boing<sp/>was<sp/>demonstrated<sp/>on<sp/>the<sp/>prototype<sp/>Amiga<sp/>(codenamed<sp/>&quot;Lorraine&quot;)<sp/>in</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>1985.<sp/>According<sp/>to<sp/>legend,<sp/>it<sp/>was<sp/>written<sp/>ad-hoc<sp/>in<sp/>one<sp/>night<sp/>by</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>R.<sp/>J.<sp/>Mical<sp/>and<sp/>Dale<sp/>Luck.<sp/>Because<sp/>the<sp/>bouncing<sp/>ball<sp/>animation<sp/>was<sp/>so<sp/>fast</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>and<sp/>smooth,<sp/>attendees<sp/>did<sp/>not<sp/>believe<sp/>the<sp/>Amiga<sp/>prototype<sp/>was<sp/>really<sp/>doing</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>the<sp/>rendering.<sp/>Suspecting<sp/>a<sp/>trick,<sp/>they<sp/>began<sp/>looking<sp/>around<sp/>the<sp/>booth<sp/>for</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>a<sp/>hidden<sp/>computer<sp/>or<sp/>VCR.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>MS<sp/>math.h<sp/>define<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glad/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_INCLUDE_NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW/glfw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linmath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Various<sp/>declarations<sp/>and<sp/>macros</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>display(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reshape(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>key_callback(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouse_button_callback(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cursor_position_callback(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawBoingBall(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BounceBall(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawBoingBallBand(<sp/>GLfloat<sp/>long_lo,<sp/>GLfloat<sp/>long_hi<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawGrid(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RADIUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>70.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STEP_LONGITUDE<sp/><sp/><sp/>22.5f<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>22.5<sp/>makes<sp/>8<sp/>bands<sp/>like<sp/>original<sp/>Boing<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STEP_LATITUDE<sp/><sp/><sp/><sp/>22.5f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIST_BALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RADIUS<sp/>*<sp/>2.f<sp/>+<sp/>RADIUS<sp/>*<sp/>0.1f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIEW_SCENE_DIST<sp/>(DIST_BALL<sp/>*<sp/>3.f<sp/>+<sp/>200.f)</highlight><highlight class="comment">/*<sp/>distance<sp/>from<sp/>viewer<sp/>to<sp/>middle<sp/>of<sp/>boing<sp/>area<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRID_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RADIUS<sp/>*<sp/>4.5f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>(width)<sp/>of<sp/>grid<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOUNCE_HEIGHT<sp/><sp/><sp/>(RADIUS<sp/>*<sp/>2.1f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOUNCE_WIDTH<sp/><sp/><sp/><sp/>(RADIUS<sp/>*<sp/>2.1f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHADOW_OFFSET_X<sp/>-20.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHADOW_OFFSET_Y<sp/><sp/>10.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHADOW_OFFSET_Z<sp/><sp/><sp/>0.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WALL_L_OFFSET<sp/><sp/><sp/>0.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WALL_R_OFFSET<sp/><sp/><sp/>5.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Animation<sp/>speed<sp/>(50.0<sp/>mimics<sp/>the<sp/>original<sp/>GLUT<sp/>demo<sp/>speed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ANIMATION_SPEED<sp/>50.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>allowed<sp/>delta<sp/>time<sp/>per<sp/>physics<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_DELTA_T<sp/>0.02f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Draw<sp/>ball,<sp/>or<sp/>its<sp/>shadow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>DRAW_BALL,<sp/>DRAW_BALL_SHADOW<sp/>}<sp/>DRAW_BALL_ENUM;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Vertex<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structvertex__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z;}<sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Global<sp/>vars<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowed_xpos,<sp/>windowed_ypos,<sp/>windowed_width,<sp/>windowed_height;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">GLfloat<sp/>deg_rot_y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">GLfloat<sp/>deg_rot_y_inc<sp/><sp/><sp/>=<sp/>2.f;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>override_pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5" kindref="member">GLFW_FALSE</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">GLfloat<sp/>cursor_x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">GLfloat<sp/>cursor_y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">GLfloat<sp/>ball_x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-RADIUS;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">GLfloat<sp/>ball_y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-RADIUS;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">GLfloat<sp/>ball_x_inc<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">GLfloat<sp/>ball_y_inc<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2.f;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">DRAW_BALL_ENUM<sp/>drawBallHow;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>t;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>t_old<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>dt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Random<sp/>number<sp/>generator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAND_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>RAND_MAX<sp/>4095</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>Truncate<sp/>a<sp/>degree.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">GLfloat<sp/>TruncateDeg(<sp/>GLfloat<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deg<sp/>&gt;=<sp/>360.f<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(deg<sp/>-<sp/>360.f);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deg;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>Convert<sp/>a<sp/>degree<sp/>(360-based)<sp/>into<sp/>a<sp/>radian.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>360&apos;<sp/>=<sp/>2<sp/>*<sp/>PI</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deg2rad(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deg<sp/>/<sp/>360<sp/>*<sp/>(2<sp/>*<sp/>M_PI);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>360&apos;<sp/>sin().</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin_deg(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414" kindref="member">sin</ref>(<sp/>deg2rad(<sp/>deg<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>360&apos;<sp/>cos().</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cos_deg(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__trigonometric_1ga54745147add8b4fa05642f5c71f6833e" kindref="member">cos</ref>(<sp/>deg2rad(<sp/>deg<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Compute<sp/>a<sp/>cross<sp/>product<sp/>(for<sp/>a<sp/>normal<sp/>vector).</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>c<sp/>=<sp/>a<sp/>x<sp/>b</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CrossProduct(<sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>a,<sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>b,<sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>c,<sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>*n<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/>u1,<sp/>u2,<sp/>u3;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/>v1,<sp/>v2,<sp/>v3;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>u1<sp/>=<sp/>b.x<sp/>-<sp/>a.x;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>u2<sp/>=<sp/>b.y<sp/>-<sp/>a.y;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>u3<sp/>=<sp/>b.y<sp/>-<sp/>a.z;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>v1<sp/>=<sp/>c.x<sp/>-<sp/>a.x;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>v2<sp/>=<sp/>c.y<sp/>-<sp/>a.y;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>v3<sp/>=<sp/>c.z<sp/>-<sp/>a.z;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>n-&gt;x<sp/>=<sp/>u2<sp/>*<sp/>v3<sp/>-<sp/>v2<sp/>*<sp/>u3;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>n-&gt;y<sp/>=<sp/>u3<sp/>*<sp/>v1<sp/>-<sp/>v3<sp/>*<sp/>u1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>n-&gt;z<sp/>=<sp/>u1<sp/>*<sp/>v2<sp/>-<sp/>v1<sp/>*<sp/>u2;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOING_DEBUG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>init()</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Clear<sp/>background.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>glClearColor(<sp/>0.55f,<sp/>0.55f,<sp/>0.55f,<sp/>0.f<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>glShadeModel(<sp/>GL_FLAT<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>display()</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>display(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>glClear(<sp/>GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>glPushMatrix();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>drawBallHow<sp/>=<sp/>DRAW_BALL_SHADOW;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>DrawBoingBall();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>DrawGrid();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>drawBallHow<sp/>=<sp/>DRAW_BALL;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>DrawBoingBall();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>glPopMatrix();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>glFlush();</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>reshape()</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reshape(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>projection,<sp/><ref refid="structview" kindref="compound">view</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>glViewport(<sp/>0,<sp/>0,<sp/>(GLsizei)w,<sp/>(GLsizei)h<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>glMatrixMode(<sp/>GL_PROJECTION<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>mat4x4_perspective(<sp/>projection,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.f<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/><ref refid="group__gtx__compatibility_1gac63011205bf6d0be82589dc56dd26708" kindref="member">atan2</ref>(<sp/>RADIUS,<sp/>200.f<sp/>),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)w<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)h,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.f,<sp/>VIEW_SCENE_DIST<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>glLoadMatrixf((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat*)<sp/>projection);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>glMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>eye<sp/>=<sp/>{<sp/>0.f,<sp/>0.f,<sp/>VIEW_SCENE_DIST<sp/>};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>center<sp/>=<sp/>{<sp/>0.f,<sp/>0.f,<sp/>0.f<sp/>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>up<sp/>=<sp/>{<sp/>0.f,<sp/>-1.f,<sp/>0.f<sp/>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_look_at(<sp/><ref refid="structview" kindref="compound">view</ref>,<sp/>eye,<sp/>center,<sp/>up<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>glLoadMatrixf((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat*)<sp/><ref refid="structview" kindref="compound">view</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>key_callback(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods<sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>!=<sp/><ref refid="group__input_1ga2485743d0b59df3791c45951c4195265" kindref="member">GLFW_PRESS</ref>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>GLFW_KEY_ESCAPE<sp/>&amp;&amp;<sp/>mods<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" kindref="member">glfwSetWindowShouldClose</ref>(window,<sp/><ref refid="group__init_1ga2744fbb29b5631bb28802dbe0cf36eba" kindref="member">GLFW_TRUE</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((key<sp/>==<sp/>GLFW_KEY_ENTER<sp/>&amp;&amp;<sp/>mods<sp/>==<sp/><ref refid="group__mods_1gad2acd5633463c29e07008687ea73c0f4" kindref="member">GLFW_MOD_ALT</ref>)<sp/>||</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(key<sp/>==<sp/>GLFW_KEY_F11<sp/>&amp;&amp;<sp/>mods<sp/>==<sp/><ref refid="group__mods_1gad2acd5633463c29e07008687ea73c0f4" kindref="member">GLFW_MOD_ALT</ref>))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__window_1gad441645a53bc9274a0ee163d40f0c637" kindref="member">glfwGetWindowMonitor</ref>(window))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref>(window,<sp/>NULL,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowed_xpos,<sp/>windowed_ypos,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowed_width,<sp/>windowed_height,<sp/>0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>monitor<sp/>=<sp/><ref refid="group__monitor_1ga34befff4f9f0fae09dd8de6fb0eb4f3e" kindref="member">glfwGetPrimaryMonitor</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitor)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/>mode<sp/>=<sp/><ref refid="group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e" kindref="member">glfwGetVideoMode</ref>(monitor);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref>(window,<sp/>&amp;windowed_xpos,<sp/>&amp;windowed_ypos);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>(window,<sp/>&amp;windowed_width,<sp/>&amp;windowed_height);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga12fabf78575e59c00f822f323ae0b6ae" kindref="member">glfwSetWindowMonitor</ref>(window,<sp/>monitor,<sp/>0,<sp/>0,<sp/>mode-&gt;width,<sp/>mode-&gt;height,<sp/>mode-&gt;refreshRate);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_ball_pos<sp/>(<sp/>GLfloat<sp/>x,<sp/>GLfloat<sp/>y<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>ball_x<sp/>=<sp/>(width<sp/>/<sp/>2)<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>ball_y<sp/>=<sp/>y<sp/>-<sp/>(height<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouse_button_callback(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(button<sp/>!=<sp/>GLFW_MOUSE_BUTTON_LEFT)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/><ref refid="group__input_1ga2485743d0b59df3791c45951c4195265" kindref="member">GLFW_PRESS</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>override_pos<sp/>=<sp/><ref refid="group__init_1ga2744fbb29b5631bb28802dbe0cf36eba" kindref="member">GLFW_TRUE</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_ball_pos(cursor_x,<sp/>cursor_y);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>override_pos<sp/>=<sp/><ref refid="group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5" kindref="member">GLFW_FALSE</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cursor_position_callback(<sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>cursor_x<sp/>=<sp/>(float)<sp/>x;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>cursor_y<sp/>=<sp/>(float)<sp/>y;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>override_pos<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_ball_pos(cursor_x,<sp/>cursor_y);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>Draw<sp/>the<sp/>Boing<sp/>ball.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>The<sp/>Boing<sp/>ball<sp/>is<sp/>sphere<sp/>in<sp/>which<sp/>each<sp/>facet<sp/>is<sp/>a<sp/>rectangle.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>Facet<sp/>colors<sp/>alternate<sp/>between<sp/>red<sp/>and<sp/>white.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>The<sp/>ball<sp/>is<sp/>built<sp/>by<sp/>stacking<sp/>latitudinal<sp/>circles.<sp/><sp/>Each<sp/>circle<sp/>is<sp/>composed</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>of<sp/>a<sp/>widely-separated<sp/>set<sp/>of<sp/>points,<sp/>so<sp/>that<sp/>each<sp/>facet<sp/>is<sp/>noticeably<sp/>large.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawBoingBall(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/>lon_deg;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>degree<sp/>of<sp/>longitude<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt_total,<sp/>dt2;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>glPushMatrix();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>glMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Another<sp/>relative<sp/>Z<sp/>translation<sp/>to<sp/>separate<sp/>objects.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>glTranslatef(<sp/>0.0,<sp/>0.0,<sp/>DIST_BALL<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>ball<sp/>position<sp/>and<sp/>rotation<sp/>(iterate<sp/>if<sp/>necessary)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>dt_total<sp/>=<sp/>dt;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>dt_total<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt2<sp/>=<sp/>dt_total<sp/>&gt;<sp/>MAX_DELTA_T<sp/>?<sp/>MAX_DELTA_T<sp/>:<sp/>dt_total;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt_total<sp/>-=<sp/>dt2;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BounceBall(<sp/>dt2<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deg_rot_y<sp/>=<sp/>TruncateDeg(<sp/>deg_rot_y<sp/>+<sp/>deg_rot_y_inc*((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dt2*ANIMATION_SPEED)<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>ball<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>glTranslatef(<sp/>ball_x,<sp/>ball_y,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Offset<sp/>the<sp/>shadow.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>drawBallHow<sp/>==<sp/>DRAW_BALL_SHADOW<sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glTranslatef(<sp/>SHADOW_OFFSET_X,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHADOW_OFFSET_Y,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHADOW_OFFSET_Z<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Tilt<sp/>the<sp/>ball.</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>glRotatef(<sp/>-20.0,<sp/>0.0,<sp/>0.0,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Continually<sp/>rotate<sp/>ball<sp/>around<sp/>Y<sp/>axis.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>glRotatef(<sp/>deg_rot_y,<sp/>0.0,<sp/>1.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Set<sp/>OpenGL<sp/>state<sp/>for<sp/>Boing<sp/>ball.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>glCullFace(<sp/>GL_FRONT<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>glEnable(<sp/>GL_CULL_FACE<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>glEnable(<sp/>GL_NORMALIZE<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Build<sp/>a<sp/>faceted<sp/>latitude<sp/>slice<sp/>of<sp/>the<sp/>Boing<sp/>ball,</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/>*<sp/>stepping<sp/>same-sized<sp/>vertical<sp/>bands<sp/>of<sp/>the<sp/>sphere.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>lon_deg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lon_deg<sp/>&lt;<sp/>180;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lon_deg<sp/>+=<sp/>STEP_LONGITUDE<sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Draw<sp/>a<sp/>latitude<sp/>circle<sp/>at<sp/>this<sp/>longitude.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawBoingBallBand(<sp/>lon_deg,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lon_deg<sp/>+<sp/>STEP_LONGITUDE<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>glPopMatrix();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>Bounce<sp/>the<sp/>ball.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BounceBall(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_t<sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">sign</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/>deg;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>override_pos<sp/>)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bounce<sp/>on<sp/>walls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ball_x<sp/>&gt;<sp/><sp/>(BOUNCE_WIDTH/2<sp/>+<sp/>WALL_R_OFFSET<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ball_x_inc<sp/>=<sp/>-0.5f<sp/>-<sp/>0.75f<sp/>*<sp/>(GLfloat)rand()<sp/>/<sp/>(GLfloat)RAND_MAX;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deg_rot_y_inc<sp/>=<sp/>-deg_rot_y_inc;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ball_x<sp/>&lt;<sp/>-(BOUNCE_HEIGHT/2<sp/>+<sp/>WALL_L_OFFSET)<sp/>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ball_x_inc<sp/>=<sp/><sp/>0.5f<sp/>+<sp/>0.75f<sp/>*<sp/>(GLfloat)rand()<sp/>/<sp/>(GLfloat)RAND_MAX;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deg_rot_y_inc<sp/>=<sp/>-deg_rot_y_inc;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bounce<sp/>on<sp/>floor<sp/>/<sp/>roof<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ball_y<sp/>&gt;<sp/><sp/>BOUNCE_HEIGHT/2<sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ball_y_inc<sp/>=<sp/>-0.75f<sp/>-<sp/>1.f<sp/>*<sp/>(GLfloat)rand()<sp/>/<sp/>(GLfloat)RAND_MAX;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ball_y<sp/>&lt;<sp/>-BOUNCE_HEIGHT/2*0.85<sp/>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ball_y_inc<sp/>=<sp/><sp/>0.75f<sp/>+<sp/>1.f<sp/>*<sp/>(GLfloat)rand()<sp/>/<sp/>(GLfloat)RAND_MAX;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>ball<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>ball_x<sp/>+=<sp/>ball_x_inc<sp/>*<sp/>((float)delta_t*ANIMATION_SPEED);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>ball_y<sp/>+=<sp/>ball_y_inc<sp/>*<sp/>((float)delta_t*ANIMATION_SPEED);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Simulate<sp/>the<sp/>effects<sp/>of<sp/>gravity<sp/>on<sp/>Y<sp/>movement.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ball_y_inc<sp/>&lt;<sp/>0<sp/>)<sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">sign</ref><sp/>=<sp/>-1.0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">sign</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>deg<sp/>=<sp/>(ball_y<sp/>+<sp/>BOUNCE_HEIGHT/2)<sp/>*<sp/>90<sp/>/<sp/>BOUNCE_HEIGHT;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deg<sp/>&gt;<sp/>80<sp/>)<sp/>deg<sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deg<sp/>&lt;<sp/>10<sp/>)<sp/>deg<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>ball_y_inc<sp/>=<sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">sign</ref><sp/>*<sp/>4.f<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>deg<sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>Draw<sp/>a<sp/>faceted<sp/>latitude<sp/>band<sp/>of<sp/>the<sp/>Boing<sp/>ball.</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>Parms:<sp/><sp/><sp/>long_lo,<sp/>long_hi</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Low<sp/>and<sp/>high<sp/>longitudes<sp/>of<sp/>slice,<sp/>resp.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawBoingBallBand(<sp/>GLfloat<sp/>long_lo,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLfloat<sp/>long_hi<sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>vert_ne;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;ne&quot;<sp/>means<sp/>south-east,<sp/>so<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>vert_nw;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>vert_sw;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>vert_se;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><ref refid="structvertex__t" kindref="compound">vertex_t</ref><sp/>vert_norm;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/><sp/>lat_deg;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorToggle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Iterate<sp/>through<sp/>the<sp/>points<sp/>of<sp/>a<sp/>latitude<sp/>circle.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>latitude<sp/>circle<sp/>is<sp/>a<sp/>2D<sp/>set<sp/>of<sp/>X,Z<sp/>points.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>lat_deg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_deg<sp/>&lt;=<sp/>(360<sp/>-<sp/>STEP_LATITUDE);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_deg<sp/>+=<sp/>STEP_LATITUDE<sp/>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Color<sp/>this<sp/>polygon<sp/>with<sp/>red<sp/>or<sp/>white.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>colorToggle<sp/>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(<sp/>0.8f,<sp/>0.1f,<sp/>0.1f<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(<sp/>0.95f,<sp/>0.95f,<sp/>0.95f<sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lat_deg<sp/>&gt;=<sp/>180<sp/>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>colorToggle<sp/>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(<sp/>0.1f,<sp/>0.8f,<sp/>0.1f<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(<sp/>0.5f,<sp/>0.5f,<sp/>0.95f<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorToggle<sp/>=<sp/>!<sp/>colorToggle;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Change<sp/>color<sp/>if<sp/>drawing<sp/>shadow.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>drawBallHow<sp/>==<sp/>DRAW_BALL_SHADOW<sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(<sp/>0.35f,<sp/>0.35f,<sp/>0.35f<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Assign<sp/>each<sp/>Y.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_ne.y<sp/>=<sp/>vert_nw.y<sp/>=<sp/>(float)<sp/>cos_deg(long_hi)<sp/>*<sp/>RADIUS;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_sw.y<sp/>=<sp/>vert_se.y<sp/>=<sp/>(float)<sp/>cos_deg(long_lo)<sp/>*<sp/>RADIUS;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Assign<sp/>each<sp/>X,Z<sp/>with<sp/>sin,cos<sp/>values<sp/>scaled<sp/>by<sp/>latitude<sp/>radius<sp/>indexed<sp/>by<sp/>longitude.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Eg,<sp/>long=0<sp/>and<sp/>long=180<sp/>are<sp/>at<sp/>the<sp/>poles,<sp/>so<sp/>zero<sp/>scale<sp/>is<sp/>sin(longitude),</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>while<sp/>long=90<sp/>(sin(90)=1)<sp/>is<sp/>at<sp/>equator.</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_ne.x<sp/>=<sp/>(float)<sp/>cos_deg(<sp/>lat_deg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/>+<sp/>STEP_LONGITUDE<sp/>));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_se.x<sp/>=<sp/>(float)<sp/>cos_deg(<sp/>lat_deg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_nw.x<sp/>=<sp/>(float)<sp/>cos_deg(<sp/>lat_deg<sp/>+<sp/>STEP_LATITUDE<sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/>+<sp/>STEP_LONGITUDE<sp/>));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_sw.x<sp/>=<sp/>(float)<sp/>cos_deg(<sp/>lat_deg<sp/>+<sp/>STEP_LATITUDE<sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_ne.z<sp/>=<sp/>(float)<sp/>sin_deg(<sp/>lat_deg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/>+<sp/>STEP_LONGITUDE<sp/>));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_se.z<sp/>=<sp/>(float)<sp/>sin_deg(<sp/>lat_deg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_nw.z<sp/>=<sp/>(float)<sp/>sin_deg(<sp/>lat_deg<sp/>+<sp/>STEP_LATITUDE<sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/>+<sp/>STEP_LONGITUDE<sp/>));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_sw.z<sp/>=<sp/>(float)<sp/>sin_deg(<sp/>lat_deg<sp/>+<sp/>STEP_LATITUDE<sp/>)<sp/>*<sp/>(RADIUS<sp/>*<sp/>(float)<sp/>sin_deg(<sp/>long_lo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Draw<sp/>the<sp/>facet.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(<sp/>GL_POLYGON<sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CrossProduct(<sp/>vert_ne,<sp/>vert_nw,<sp/>vert_sw,<sp/>&amp;vert_norm<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glNormal3f(<sp/>vert_norm.x,<sp/>vert_norm.y,<sp/>vert_norm.z<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>vert_ne.x,<sp/>vert_ne.y,<sp/>vert_ne.z<sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>vert_nw.x,<sp/>vert_nw.y,<sp/>vert_nw.z<sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>vert_sw.x,<sp/>vert_sw.y,<sp/>vert_sw.z<sp/>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>vert_se.x,<sp/>vert_se.y,<sp/>vert_se.z<sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOING_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------------------------<sp/>\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;lat<sp/>=<sp/>%f<sp/><sp/>long_lo<sp/>=<sp/>%f<sp/><sp/>long_hi<sp/>=<sp/>%f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>lat_deg,<sp/>long_lo,<sp/>long_hi<sp/>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;vert_ne<sp/><sp/>x<sp/>=<sp/>%.8f<sp/><sp/>y<sp/>=<sp/>%.8f<sp/><sp/>z<sp/>=<sp/>%.8f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>vert_ne.x,<sp/>vert_ne.y,<sp/>vert_ne.z<sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;vert_nw<sp/><sp/>x<sp/>=<sp/>%.8f<sp/><sp/>y<sp/>=<sp/>%.8f<sp/><sp/>z<sp/>=<sp/>%.8f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>vert_nw.x,<sp/>vert_nw.y,<sp/>vert_nw.z<sp/>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;vert_se<sp/><sp/>x<sp/>=<sp/>%.8f<sp/><sp/>y<sp/>=<sp/>%.8f<sp/><sp/>z<sp/>=<sp/>%.8f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>vert_se.x,<sp/>vert_se.y,<sp/>vert_se.z<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;vert_sw<sp/><sp/>x<sp/>=<sp/>%.8f<sp/><sp/>y<sp/>=<sp/>%.8f<sp/><sp/>z<sp/>=<sp/>%.8f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>vert_sw.x,<sp/>vert_sw.y,<sp/>vert_sw.z<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Toggle<sp/>color<sp/>so<sp/>that<sp/>next<sp/>band<sp/>will<sp/>opposite<sp/>red/white<sp/>colors<sp/>than<sp/>this<sp/>one.</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/>colorToggle<sp/>=<sp/>!<sp/>colorToggle;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>circular<sp/>band<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>Draw<sp/>the<sp/>purple<sp/>grid<sp/>of<sp/>lines,<sp/>behind<sp/>the<sp/>Boing<sp/>ball.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>When<sp/>the<sp/>Workbench<sp/>is<sp/>dropped<sp/>to<sp/>the<sp/>bottom,<sp/>Boing<sp/>shows<sp/>12<sp/>rows.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawGrid(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba" kindref="member">row</ref>,<sp/>col;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowTotal<sp/><sp/><sp/><sp/>=<sp/>12;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>divisible<sp/>by<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colTotal<sp/><sp/><sp/><sp/>=<sp/>rowTotal;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>same<sp/>as<sp/>rowTotal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/><sp/><sp/><sp/>widthLine<sp/><sp/><sp/>=<sp/>2.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>be<sp/>divisible<sp/>by<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/><sp/><sp/><sp/>sizeCell<sp/><sp/><sp/><sp/>=<sp/>GRID_SIZE<sp/>/<sp/>rowTotal;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/><sp/><sp/><sp/>z_offset<sp/><sp/><sp/><sp/>=<sp/>-40.0;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xl,<sp/>xr;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/>GLfloat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yt,<sp/>yb;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>glPushMatrix();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/>glDisable(<sp/>GL_CULL_FACE<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Another<sp/>relative<sp/>Z<sp/>translation<sp/>to<sp/>separate<sp/>objects.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>glTranslatef(<sp/>0.0,<sp/>0.0,<sp/>DIST_BALL<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Draw<sp/>vertical<sp/>lines<sp/>(as<sp/>skinny<sp/>3D<sp/>rectangles).</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;=<sp/>colTotal;<sp/>col++<sp/>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Compute<sp/>co-ords<sp/>of<sp/>line.</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xl<sp/>=<sp/>-GRID_SIZE<sp/>/<sp/>2<sp/>+<sp/>col<sp/>*<sp/>sizeCell;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr<sp/>=<sp/>xl<sp/>+<sp/>widthLine;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>=<sp/><sp/>GRID_SIZE<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yb<sp/>=<sp/>-GRID_SIZE<sp/>/<sp/>2<sp/>-<sp/>widthLine;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(<sp/>GL_POLYGON<sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(<sp/>0.6f,<sp/>0.1f,<sp/>0.6f<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>purple<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xr,<sp/>yt,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xl,<sp/>yt,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xl,<sp/>yb,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xr,<sp/>yb,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Draw<sp/>horizontal<sp/>lines<sp/>(as<sp/>skinny<sp/>3D<sp/>rectangles).</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;=<sp/>rowTotal;<sp/>row++<sp/>)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Compute<sp/>co-ords<sp/>of<sp/>line.</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>=<sp/>GRID_SIZE<sp/>/<sp/>2<sp/>-<sp/>row<sp/>*<sp/>sizeCell;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yb<sp/>=<sp/>yt<sp/>-<sp/>widthLine;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xl<sp/>=<sp/>-GRID_SIZE<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr<sp/>=<sp/><sp/>GRID_SIZE<sp/>/<sp/>2<sp/>+<sp/>widthLine;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(<sp/>GL_POLYGON<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glColor3f(<sp/>0.6f,<sp/>0.1f,<sp/>0.6f<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>purple<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xr,<sp/>yt,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xl,<sp/>yt,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xl,<sp/>yb,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3f(<sp/>xr,<sp/>yb,<sp/>z_offset<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/>glPopMatrix();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">/*======================================================================*</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/>main()</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*======================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*<sp/>window;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>GLFW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>()<sp/>)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(<sp/>EXIT_FAILURE<sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>window<sp/>=<sp/><ref refid="group__window_1gaaccd00fafe81e2db94e8cdf55721e055" kindref="member">glfwCreateWindow</ref>(<sp/>400,<sp/>400,<sp/></highlight><highlight class="stringliteral">&quot;Boing<sp/>(classic<sp/>Amiga<sp/>demo)&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<sp/>EXIT_FAILURE<sp/>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac" kindref="member">glfwSetWindowAspectRatio</ref>(window,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0" kindref="member">glfwSetFramebufferSizeCallback</ref>(window,<sp/>reshape);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__input_1gaa4cbcb81b939b8800e44cea971ddae47" kindref="member">glfwSetKeyCallback</ref>(window,<sp/>key_callback);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__input_1gab8f17646f43cdca14e5095512618fdf6" kindref="member">glfwSetMouseButtonCallback</ref>(window,<sp/>mouse_button_callback);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__input_1ga74124d0eff27040fd10e4df9e17d129c" kindref="member">glfwSetCursorPosCallback</ref>(window,<sp/>cursor_position_callback);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref>(window);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/>gladLoadGL(<ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>(window,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/>reshape(window,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref>(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Main<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" kindref="member">glfwGetTime</ref>();</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>t<sp/>-<sp/>t_old;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_old<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Draw<sp/>one<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Swap<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>(window);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>we<sp/>are<sp/>still<sp/>running<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__window_1gaa6162f67dfa38b8beda2fea623649332" kindref="member">glfwWindowShouldClose</ref>(window))</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/>exit(<sp/>EXIT_SUCCESS<sp/>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c"/>
  </compounddef>
</doxygen>
