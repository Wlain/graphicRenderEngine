<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__impl__vulkan_8h" kind="file" language="C++">
    <compoundname>imgui_impl_vulkan.h</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes local="no">vulkan/vulkan.h</includes>
    <includedby refid="imgui__impl__vulkan_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp</includedby>
    <includedby refid="imgui_2examples_2example__glfw__vulkan_2main_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_glfw_vulkan/main.cpp</includedby>
    <includedby refid="imgui_2examples_2example__sdl__vulkan_2main_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_sdl_vulkan/main.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h</label>
        <link refid="imgui__impl__vulkan_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp</label>
        <link refid="imgui__impl__vulkan_8cpp_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h</label>
        <link refid="imgui__impl__vulkan_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_glfw_vulkan/main.cpp</label>
        <link refid="imgui_2examples_2example__glfw__vulkan_2main_8cpp_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_sdl_vulkan/main.cpp</label>
        <link refid="imgui_2examples_2example__sdl__vulkan_2main_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_im_gui___impl_vulkan___init_info" prot="public">ImGui_ImplVulkan_InitInfo</innerclass>
    <innerclass refid="struct_im_gui___impl_vulkan_h___frame" prot="public">ImGui_ImplVulkanH_Frame</innerclass>
    <innerclass refid="struct_im_gui___impl_vulkan_h___frame_semaphores" prot="public">ImGui_ImplVulkanH_FrameSemaphores</innerclass>
    <innerclass refid="struct_im_gui___impl_vulkan_h___window" prot="public">ImGui_ImplVulkanH_Window</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1ad4daa307d203af914786f8631a307ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API bool</type>
        <definition>IMGUI_IMPL_API bool ImGui_ImplVulkan_Init</definition>
        <argsstring>(ImGui_ImplVulkan_InitInfo *info, VkRenderPass render_pass)</argsstring>
        <name>ImGui_ImplVulkan_Init</name>
        <param>
          <type><ref refid="struct_im_gui___impl_vulkan___init_info" kindref="compound">ImGui_ImplVulkan_InitInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>VkRenderPass</type>
          <declname>render_pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="66" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1061" bodyend="1098" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="66" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1ac5f93959197622a7afc8ac9d9e7c378c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplVulkan_Shutdown</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplVulkan_Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="67" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1100" bodyend="1121" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="67" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1a1140b281b5df05d3a20b07d979ee0250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplVulkan_NewFrame</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplVulkan_NewFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="68" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1123" bodyend="1128" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="68" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1ab20cc208b1400091be27ed1e57c8ce41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplVulkan_RenderDrawData</definition>
        <argsstring>(ImDrawData *draw_data, VkCommandBuffer command_buffer, VkPipeline pipeline=VK_NULL_HANDLE)</argsstring>
        <name>ImGui_ImplVulkan_RenderDrawData</name>
        <param>
          <type><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref> *</type>
          <declname>draw_data</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>command_buffer</declname>
        </param>
        <param>
          <type>VkPipeline</type>
          <declname>pipeline</declname>
          <defval>VK_NULL_HANDLE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="69" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="452" bodyend="583" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="69" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1a88bee060d9d78f1f581edcf319cd9868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API bool</type>
        <definition>IMGUI_IMPL_API bool ImGui_ImplVulkan_CreateFontsTexture</definition>
        <argsstring>(VkCommandBuffer command_buffer)</argsstring>
        <name>ImGui_ImplVulkan_CreateFontsTexture</name>
        <param>
          <type>VkCommandBuffer</type>
          <declname>command_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="70" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="585" bodyend="736" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="70" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1a9d953844162b3e7632455f2eb3dfff43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplVulkan_DestroyFontUploadObjects</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplVulkan_DestroyFontUploadObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="71" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1006" bodyend="1020" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="71" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1ab6c61e9c9d8e8c314866e5d9b48b58b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplVulkan_SetMinImageCount</definition>
        <argsstring>(uint32_t min_image_count)</argsstring>
        <name>ImGui_ImplVulkan_SetMinImageCount</name>
        <param>
          <type>uint32_t</type>
          <declname>min_image_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="72" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1130" bodyend="1144" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="72" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1afe34f15076bad8d292ffec52c55df201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API bool</type>
        <definition>IMGUI_IMPL_API bool ImGui_ImplVulkan_LoadFunctions</definition>
        <argsstring>(PFN_vkVoidFunction(*loader_func)(const char *function_name, void *user_data), void *user_data=NULL)</argsstring>
        <name>ImGui_ImplVulkan_LoadFunctions</name>
        <param>
          <type>PFN_vkVoidFunction(*)(const char *function_name, void *user_data)</type>
          <declname>loader_func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="76" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1040" bodyend="1059" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="76" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1af8a69ee55486054683a7a0729445ad76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplVulkanH_CreateOrResizeWindow</definition>
        <argsstring>(VkInstance instance, VkPhysicalDevice physical_device, VkDevice device, ImGui_ImplVulkanH_Window *wnd, uint32_t queue_family, const VkAllocationCallbacks *allocator, int w, int h, uint32_t min_image_count)</argsstring>
        <name>ImGui_ImplVulkanH_CreateOrResizeWindow</name>
        <param>
          <type>VkInstance</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>physical_device</declname>
        </param>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="struct_im_gui___impl_vulkan_h___window" kindref="compound">ImGui_ImplVulkanH_Window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>queue_family</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref> *</type>
          <declname>allocator</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min_image_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="98" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1459" bodyend="1466" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="98" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1a85f0bc7caedd9313be70e55179885081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API void</type>
        <definition>IMGUI_IMPL_API void ImGui_ImplVulkanH_DestroyWindow</definition>
        <argsstring>(VkInstance instance, VkDevice device, ImGui_ImplVulkanH_Window *wnd, const VkAllocationCallbacks *allocator)</argsstring>
        <name>ImGui_ImplVulkanH_DestroyWindow</name>
        <param>
          <type>VkInstance</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="struct_im_gui___impl_vulkan_h___window" kindref="compound">ImGui_ImplVulkanH_Window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref> *</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="99" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1468" bodyend="1488" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="99" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1a372dec07c30709ba8557673a0f28864f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API <ref refid="struct_vk_surface_format_k_h_r" kindref="compound">VkSurfaceFormatKHR</ref></type>
        <definition>IMGUI_IMPL_API VkSurfaceFormatKHR ImGui_ImplVulkanH_SelectSurfaceFormat</definition>
        <argsstring>(VkPhysicalDevice physical_device, VkSurfaceKHR surface, const VkFormat *request_formats, int request_formats_count, VkColorSpaceKHR request_color_space)</argsstring>
        <name>ImGui_ImplVulkanH_SelectSurfaceFormat</name>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>physical_device</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>const VkFormat *</type>
          <declname>request_formats</declname>
        </param>
        <param>
          <type>int</type>
          <declname>request_formats_count</declname>
        </param>
        <param>
          <type>VkColorSpaceKHR</type>
          <declname>request_color_space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="100" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1163" bodyend="1206" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="100" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1a2db0beb55053b0878cd8ae72f14f56ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API VkPresentModeKHR</type>
        <definition>IMGUI_IMPL_API VkPresentModeKHR ImGui_ImplVulkanH_SelectPresentMode</definition>
        <argsstring>(VkPhysicalDevice physical_device, VkSurfaceKHR surface, const VkPresentModeKHR *request_modes, int request_modes_count)</argsstring>
        <name>ImGui_ImplVulkanH_SelectPresentMode</name>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>physical_device</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>const VkPresentModeKHR *</type>
          <declname>request_modes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>request_modes_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="101" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1208" bodyend="1229" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="101" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__vulkan_8h_1a8236d44a7a09080d3fd617ba0a1ea153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMGUI_IMPL_API int</type>
        <definition>IMGUI_IMPL_API int ImGui_ImplVulkanH_GetMinImageCountFromPresentMode</definition>
        <argsstring>(VkPresentModeKHR present_mode)</argsstring>
        <name>ImGui_ImplVulkanH_GetMinImageCountFromPresentMode</name>
        <param>
          <type>VkPresentModeKHR</type>
          <declname>present_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" line="102" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.cpp" bodystart="1278" bodyend="1288" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h" declline="102" declcolumn="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Renderer<sp/>Backend<sp/>for<sp/>Vulkan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Platform<sp/>Backend<sp/>(e.g.<sp/>GLFW,<sp/>SDL,<sp/>Win32,<sp/>custom..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Renderer:<sp/>Support<sp/>for<sp/>large<sp/>meshes<sp/>(64k+<sp/>vertices)<sp/>with<sp/>16-bit<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Missing<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[<sp/>]<sp/>Platform:<sp/>Multi-viewport<sp/>/<sp/>platform<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[<sp/>]<sp/>Renderer:<sp/>User<sp/>texture<sp/>binding.<sp/>Changes<sp/>of<sp/>ImTextureID<sp/>aren&apos;t<sp/>supported<sp/>by<sp/>this<sp/>backend!<sp/>See<sp/>https://github.com/ocornut/imgui/pull/914</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>Dear<sp/>ImGui,<sp/>read<sp/>documentation<sp/>from<sp/>the<sp/>docs/<sp/>folder<sp/>+<sp/>read<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>online:<sp/>https://github.com/ocornut/imgui/tree/master/docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>aim<sp/>of<sp/>imgui_impl_vulkan.h/.cpp<sp/>is<sp/>to<sp/>be<sp/>usable<sp/>in<sp/>your<sp/>engine<sp/>without<sp/>any<sp/>modification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IF<sp/>YOU<sp/>FEEL<sp/>YOU<sp/>NEED<sp/>TO<sp/>MAKE<sp/>ANY<sp/>CHANGE<sp/>TO<sp/>THIS<sp/>CODE,<sp/>please<sp/>share<sp/>them<sp/>and<sp/>your<sp/>feedback<sp/>at<sp/>https://github.com/ocornut/imgui/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Important<sp/>note<sp/>to<sp/>the<sp/>reader<sp/>who<sp/>wish<sp/>to<sp/>integrate<sp/>imgui_impl_vulkan.cpp/.h<sp/>in<sp/>their<sp/>own<sp/>engine/app.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Common<sp/>ImGui_ImplVulkan_XXX<sp/>functions<sp/>and<sp/>structures<sp/>are<sp/>used<sp/>to<sp/>interface<sp/>with<sp/>imgui_impl_vulkan.cpp/.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>You<sp/>will<sp/>use<sp/>those<sp/>if<sp/>you<sp/>want<sp/>to<sp/>use<sp/>this<sp/>rendering<sp/>backend<sp/>in<sp/>your<sp/>engine/app.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Helper<sp/>ImGui_ImplVulkanH_XXX<sp/>functions<sp/>and<sp/>structures<sp/>are<sp/>only<sp/>used<sp/>by<sp/>this<sp/>example<sp/>(main.cpp)<sp/>and<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>backend<sp/>itself<sp/>(imgui_impl_vulkan.cpp),<sp/>but<sp/>should<sp/>PROBABLY<sp/>NOT<sp/>be<sp/>used<sp/>by<sp/>your<sp/>own<sp/>engine/app<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>comments<sp/>in<sp/>imgui_impl_vulkan.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IMGUI_IMPL_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Configuration]<sp/>in<sp/>order<sp/>to<sp/>use<sp/>a<sp/>custom<sp/>Vulkan<sp/>function<sp/>loader:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(1)<sp/>You&apos;ll<sp/>need<sp/>to<sp/>disable<sp/>default<sp/>Vulkan<sp/>function<sp/>prototypes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>We<sp/>provide<sp/>a<sp/>&apos;#define<sp/>IMGUI_IMPL_VULKAN_NO_PROTOTYPES&apos;<sp/>convenience<sp/>configuration<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>In<sp/>order<sp/>to<sp/>make<sp/>sure<sp/>this<sp/>is<sp/>visible<sp/>from<sp/>the<sp/>imgui_impl_vulkan.cpp<sp/>compilation<sp/>unit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>Add<sp/>&apos;#define<sp/>IMGUI_IMPL_VULKAN_NO_PROTOTYPES&apos;<sp/>in<sp/>your<sp/>imconfig.h<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>Or<sp/>as<sp/>a<sp/>compilation<sp/>flag<sp/>in<sp/>your<sp/>build<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>Or<sp/>uncomment<sp/>here<sp/>(not<sp/>recommended<sp/>because<sp/>you&apos;d<sp/>be<sp/>modifying<sp/>imgui<sp/>sources!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>Do<sp/>not<sp/>simply<sp/>add<sp/>it<sp/>in<sp/>a<sp/>.cpp<sp/>file!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(2)<sp/>Call<sp/>ImGui_ImplVulkan_LoadFunctions()<sp/>before<sp/>ImGui_ImplVulkan_Init()<sp/>with<sp/>your<sp/>custom<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>have<sp/>no<sp/>idea<sp/>what<sp/>this<sp/>is,<sp/>leave<sp/>it<sp/>alone!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_IMPL_VULKAN_NO_PROTOTYPES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vulkan<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(IMGUI_IMPL_VULKAN_NO_PROTOTYPES)<sp/>&amp;&amp;<sp/>!defined(VK_NO_PROTOTYPES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VK_NO_PROTOTYPES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialization<sp/>data,<sp/>for<sp/>ImGui_ImplVulkan_Init()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Please<sp/>zero-clear<sp/>before<sp/>use!]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="struct_im_gui___impl_vulkan___init_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_vulkan___init_info" kindref="compound">ImGui_ImplVulkan_InitInfo</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>VkInstance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Instance;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPhysicalDevice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PhysicalDevice;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDevice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QueueFamily;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>VkQueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Queue;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineCache<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PipelineCache;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DescriptorPool;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Subpass;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinImageCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;=<sp/>MinImageCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSampleCountFlagBits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MSAASamples;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;=<sp/>VK_SAMPLE_COUNT_1_BIT<sp/>(0<sp/>-&gt;<sp/>default<sp/>to<sp/>VK_SAMPLE_COUNT_1_BIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref>*<sp/><sp/><sp/><sp/>Allocator;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*CheckVkResultFn)(VkResult<sp/>err);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Called<sp/>by<sp/>user<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_Init(<ref refid="struct_im_gui___impl_vulkan___init_info" kindref="compound">ImGui_ImplVulkan_InitInfo</ref>*<sp/><ref refid="structinfo" kindref="compound">info</ref>,<sp/>VkRenderPass<sp/>render_pass);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_Shutdown();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_NewFrame();</highlight></codeline>
<codeline lineno="69"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_RenderDrawData(<ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref>*<sp/>draw_data,<sp/>VkCommandBuffer<sp/>command_buffer,<sp/>VkPipeline<sp/>pipeline<sp/>=<sp/>VK_NULL_HANDLE);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_CreateFontsTexture(VkCommandBuffer<sp/>command_buffer);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_DestroyFontUploadObjects();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_SetMinImageCount(uint32_t<sp/>min_image_count);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>override<sp/>MinImageCount<sp/>after<sp/>initialization<sp/>(e.g.<sp/>if<sp/>swap<sp/>chain<sp/>is<sp/>recreated)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Optional:<sp/>load<sp/>Vulkan<sp/>functions<sp/>with<sp/>a<sp/>custom<sp/>function<sp/>loader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>useful<sp/>with<sp/>IMGUI_IMPL_VULKAN_NO_PROTOTYPES<sp/>/<sp/>VK_NO_PROTOTYPES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_LoadFunctions(PFN_vkVoidFunction(*loader_func)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>/<sp/>Miscellaneous<sp/>Vulkan<sp/>Helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Used<sp/>by<sp/>example&apos;s<sp/>main.cpp.<sp/>Used<sp/>by<sp/>multi-viewport<sp/>features.<sp/>PROBABLY<sp/>NOT<sp/>used<sp/>by<sp/>your<sp/>own<sp/>engine/app.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>probably<sp/>do<sp/>NOT<sp/>need<sp/>to<sp/>use<sp/>or<sp/>care<sp/>about<sp/>those<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Those<sp/>functions<sp/>only<sp/>exist<sp/>because:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1)<sp/>they<sp/>facilitate<sp/>the<sp/>readability<sp/>and<sp/>maintenance<sp/>of<sp/>the<sp/>multiple<sp/>main.cpp<sp/>examples<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>2)<sp/>the<sp/>multi-viewport<sp/>/<sp/>platform<sp/>window<sp/>implementation<sp/>needs<sp/>them<sp/>internally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generally<sp/>we<sp/>avoid<sp/>exposing<sp/>any<sp/>kind<sp/>of<sp/>superfluous<sp/>high-level<sp/>helpers<sp/>in<sp/>the<sp/>bindings,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>is<sp/>too<sp/>much<sp/>code<sp/>to<sp/>duplicate<sp/>everywhere<sp/>so<sp/>we<sp/>exceptionally<sp/>expose<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Your<sp/>engine/app<sp/>will<sp/>likely<sp/>_already_<sp/>have<sp/>code<sp/>to<sp/>setup<sp/>all<sp/>that<sp/>stuff<sp/>(swap<sp/>chain,<sp/>render<sp/>pass,<sp/>frame<sp/>buffers,<sp/>etc.).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>read<sp/>this<sp/>code<sp/>to<sp/>learn<sp/>about<sp/>Vulkan,<sp/>but<sp/>it<sp/>is<sp/>recommended<sp/>you<sp/>use<sp/>you<sp/>own<sp/>custom<sp/>tailored<sp/>code<sp/>to<sp/>do<sp/>equivalent<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(The<sp/>ImGui_ImplVulkanH_XXX<sp/>functions<sp/>do<sp/>not<sp/>interact<sp/>with<sp/>any<sp/>of<sp/>the<sp/>state<sp/>used<sp/>by<sp/>the<sp/>regular<sp/>ImGui_ImplVulkan_XXX<sp/>functions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_vulkan_h___frame" kindref="compound">ImGui_ImplVulkanH_Frame</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_vulkan_h___window" kindref="compound">ImGui_ImplVulkanH_Window</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkanH_CreateOrResizeWindow(VkInstance<sp/>instance,<sp/>VkPhysicalDevice<sp/>physical_device,<sp/>VkDevice<sp/>device,<sp/><ref refid="struct_im_gui___impl_vulkan_h___window" kindref="compound">ImGui_ImplVulkanH_Window</ref>*<sp/>wnd,<sp/>uint32_t<sp/>queue_family,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref>*<sp/>allocator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/>uint32_t<sp/>min_image_count);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkanH_DestroyWindow(VkInstance<sp/>instance,<sp/>VkDevice<sp/>device,<sp/><ref refid="struct_im_gui___impl_vulkan_h___window" kindref="compound">ImGui_ImplVulkanH_Window</ref>*<sp/>wnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vk_allocation_callbacks" kindref="compound">VkAllocationCallbacks</ref>*<sp/>allocator);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">IMGUI_IMPL_API<sp/><ref refid="struct_vk_surface_format_k_h_r" kindref="compound">VkSurfaceFormatKHR</ref><sp/><sp/><sp/>ImGui_ImplVulkanH_SelectSurfaceFormat(VkPhysicalDevice<sp/>physical_device,<sp/>VkSurfaceKHR<sp/>surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkFormat*<sp/>request_formats,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_formats_count,<sp/>VkColorSpaceKHR<sp/>request_color_space);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">IMGUI_IMPL_API<sp/>VkPresentModeKHR<sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkanH_SelectPresentMode(VkPhysicalDevice<sp/>physical_device,<sp/>VkSurfaceKHR<sp/>surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkPresentModeKHR*<sp/>request_modes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_modes_count);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">IMGUI_IMPL_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkanH_GetMinImageCountFromPresentMode(VkPresentModeKHR<sp/>present_mode);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>structure<sp/>to<sp/>hold<sp/>the<sp/>data<sp/>needed<sp/>by<sp/>one<sp/>rendering<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Used<sp/>by<sp/>example&apos;s<sp/>main.cpp.<sp/>Used<sp/>by<sp/>multi-viewport<sp/>features.<sp/>Probably<sp/>NOT<sp/>used<sp/>by<sp/>your<sp/>own<sp/>engine/app.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Please<sp/>zero-clear<sp/>before<sp/>use!]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="struct_im_gui___impl_vulkan_h___frame" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_vulkan_h___frame" kindref="compound">ImGui_ImplVulkanH_Frame</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandPool<sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommandPool;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/><sp/><sp/><sp/><sp/>CommandBuffer;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>VkFence<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fence;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Backbuffer;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageView<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackbufferView;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>VkFramebuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Framebuffer;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="struct_im_gui___impl_vulkan_h___frame_semaphores" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_vulkan_h___frame_semaphores" kindref="compound">ImGui_ImplVulkanH_FrameSemaphores</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphore<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageAcquiredSemaphore;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphore<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderCompleteSemaphore;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>structure<sp/>to<sp/>hold<sp/>the<sp/>data<sp/>needed<sp/>by<sp/>one<sp/>rendering<sp/>context<sp/>into<sp/>one<sp/>OS<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Used<sp/>by<sp/>example&apos;s<sp/>main.cpp.<sp/>Used<sp/>by<sp/>multi-viewport<sp/>features.<sp/>Probably<sp/>NOT<sp/>used<sp/>by<sp/>your<sp/>own<sp/>engine/app.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="struct_im_gui___impl_vulkan_h___window" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_vulkan_h___window" kindref="compound">ImGui_ImplVulkanH_Window</ref></highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Width;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Height;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSwapchainKHR<sp/><sp/><sp/><sp/><sp/><sp/>Swapchain;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Surface;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vk_surface_format_k_h_r" kindref="compound">VkSurfaceFormatKHR</ref><sp/><sp/>SurfaceFormat;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPresentModeKHR<sp/><sp/><sp/><sp/>PresentMode;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderPass<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderPass;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipeline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pipeline;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>pipeline<sp/>may<sp/>uses<sp/>a<sp/>different<sp/>VkRenderPass<sp/>than<sp/>the<sp/>one<sp/>passed<sp/>in<sp/>ImGui_ImplVulkan_InitInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearEnable;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_vk_clear_value" kindref="compound">VkClearValue</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearValue;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>frame<sp/>being<sp/>rendered<sp/>to<sp/>(0<sp/>&lt;=<sp/>FrameIndex<sp/>&lt;<sp/>FrameInFlightCount)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>simultaneous<sp/>in-flight<sp/>frames<sp/>(returned<sp/>by<sp/>vkGetSwapchainImagesKHR,<sp/>usually<sp/>derived<sp/>from<sp/>min_image_count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SemaphoreIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>set<sp/>of<sp/>swapchain<sp/>wait<sp/>semaphores<sp/>we&apos;re<sp/>using<sp/>(needs<sp/>to<sp/>be<sp/>distinct<sp/>from<sp/>per<sp/>frame<sp/>data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_vulkan_h___frame" kindref="compound">ImGui_ImplVulkanH_Frame</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frames;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_vulkan_h___frame_semaphores" kindref="compound">ImGui_ImplVulkanH_FrameSemaphores</ref>*<sp/><sp/>FrameSemaphores;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_vulkan_h___window" kindref="compound">ImGui_ImplVulkanH_Window</ref>()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PresentMode<sp/>=<sp/>VK_PRESENT_MODE_MAX_ENUM_KHR;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearEnable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_vulkan.h"/>
  </compounddef>
</doxygen>
