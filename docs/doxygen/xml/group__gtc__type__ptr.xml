<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtc__type__ptr" kind="group">
    <compoundname>gtc_type_ptr</compoundname>
    <title>GLM_GTC_type_ptr</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtc__type__ptr_1gaada83809aefafd7c3264772e6b24b685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType::value_type const *</type>
        <definition>GLM_FUNC_DECL genType::value_type const  * glm::value_ptr</definition>
        <argsstring>(genType const &amp;v)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>genType const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the constant address to the data of the input parameter. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="66" column="51" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="66" declcolumn="51"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga1830a9c79f2104389b66b3203e80cb00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 1, T, Q &gt; glm::make_vec1</definition>
        <argsstring>(vec&lt; 1, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec1</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="71" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="168" bodyend="171" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="71" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gae8782fbc75da3b09e04b0bc5645ed29c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 1, T, Q &gt; glm::make_vec1</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec1</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="76" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="174" bodyend="177" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="76" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gab41e5f8ae9d74b6cf5079298c24406c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 1, T, Q &gt; glm::make_vec1</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec1</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="81" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="180" bodyend="183" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="81" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga579067a55670a46fa4206c970fea58ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 1, T, Q &gt; glm::make_vec1</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec1</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="86" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="186" bodyend="189" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="86" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga6ce3455602bb6d539de0a43d21b47831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 2, T, Q &gt; glm::make_vec2</definition>
        <argsstring>(vec&lt; 1, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="91" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="192" bodyend="195" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="91" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga9bd6c7d30f5a2eaa08a9440e02e675e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 2, T, Q &gt; glm::make_vec2</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="96" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="198" bodyend="201" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="96" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gac48c96d8670bbccb647fe7475d8da699" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 2, T, Q &gt; glm::make_vec2</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="101" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="204" bodyend="207" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="101" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga73b62a04a2e892f9c9f3bf45a9618bd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 2, T, Q &gt; glm::make_vec2</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="106" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="210" bodyend="213" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="106" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga57b4f2870b2263ef67cdf4104ae1b724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::make_vec3</definition>
        <argsstring>(vec&lt; 1, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="111" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="216" bodyend="219" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="111" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga6ddfee8fcd66a65df4ba999eeecd6f6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::make_vec3</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="116" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="222" bodyend="225" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="116" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga6cac33da0c9827e97f50d77691c3de35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::make_vec3</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="121" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="228" bodyend="231" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="121" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gac4a35f86767fa7c5a03cec0a56b56f3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, Q &gt; glm::make_vec3</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="126" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="234" bodyend="237" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="126" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga36067317a402666b63961bad445b39d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::make_vec4</definition>
        <argsstring>(vec&lt; 1, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="131" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="240" bodyend="243" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="131" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga39fb0a897f01887b4de61618cec6618c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::make_vec4</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="136" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="246" bodyend="249" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="136" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga4800597f48c27bdf672e42af3a55e194" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::make_vec4</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="141" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="252" bodyend="255" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="141" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gae7a8f71b472c39ea9252efc008b6d720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, Q &gt; glm::make_vec4</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v)</argsstring>
        <name>make_vec4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="146" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="258" bodyend="261" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="146" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gae0e9a59717a9f78cdce50812a00c266e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 2, T, defaultp &gt; glm::make_vec2</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_vec2</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="151" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="264" bodyend="269" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="151" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga6886f6e5a9cb24475c7be328bd69ce3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, T, defaultp &gt; glm::make_vec3</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_vec3</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="156" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="272" bodyend="277" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="156" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga7ede7d80acd92c0e77004270c55b7470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, T, defaultp &gt; glm::make_vec4</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_vec4</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="161" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="280" bodyend="285" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="161" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga659bc96ace75ace278a170db0cee3bd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 2, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 2, T, defaultp &gt; glm::make_mat2x2</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat2x2</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="166" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="288" bodyend="293" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="166" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga84d4092ab032079fef637d2617c9f779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 3, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 3, T, defaultp &gt; glm::make_mat2x3</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat2x3</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="171" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="296" bodyend="301" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="171" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gaa0576558aa039db76325429210896eb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 4, T, defaultp &gt; glm::make_mat2x4</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat2x4</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="176" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="304" bodyend="309" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="176" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga4d559bdbf47469aaa43cfb81ba0d2a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 2, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 2, T, defaultp &gt; glm::make_mat3x2</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat3x2</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="181" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="312" bodyend="317" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="181" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga2fd92e1875651462eff2439a7304d691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 3, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 3, T, defaultp &gt; glm::make_mat3x3</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat3x3</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="186" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="320" bodyend="325" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="186" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga642496b8298a6be1066affd388a72f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 4, T, defaultp &gt; glm::make_mat3x4</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat3x4</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="191" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="328" bodyend="333" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="191" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga4f94cfb0a2ae89460284a9cc2aa90664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 2, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 2, T, defaultp &gt; glm::make_mat4x2</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat4x2</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="196" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="336" bodyend="341" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="196" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gacbb460f144b62f4c3ebfc64516714ef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 3, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 3, T, defaultp &gt; glm::make_mat4x3</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat4x3</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="201" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="344" bodyend="349" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="201" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gaafa655903f1212495065475dd8ae0506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::make_mat4x4</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat4x4</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="206" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="352" bodyend="357" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="206" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gac642b04d8cd9bcd53ceddd316a0ffbd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 2, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 2, T, defaultp &gt; glm::make_mat2</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat2</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="211" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="360" bodyend="363" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="211" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gab172a916cbb95dcef6dbe510856e382c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 3, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 3, T, defaultp &gt; glm::make_mat3</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat3</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="216" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="366" bodyend="369" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="216" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gace3cf52dd0e092d5a78f09b24e82f97b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::make_mat4</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_mat4</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a matrix from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="221" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="372" bodyend="375" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="221" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga0b4bf5fa645f1d11b1f215ca8da1712c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL tquat&lt; T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL tquat&lt; T, defaultp &gt; glm::make_quat</definition>
        <argsstring>(T const *const ptr)</argsstring>
        <name>make_quat</name>
        <param>
          <type>T const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a quaternion from a pointer. <simplesect kind="see"><para><ref refid="group__gtc__type__ptr" kindref="compound">GLM_GTC_type_ptr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" line="226" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="378" bodyend="383" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.hpp" declline="226" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga84bdf6d32cef82da442e5ac48eb261bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>value_ptr</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="12" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga52164f932d9a65a280c28628d256828d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; &amp;v)</argsstring>
        <name>value_ptr</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="18" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga19c0616bc6fa42d887c83265b215760b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>value_ptr</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="24" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga2df78a680c79243f41c761e57b68c941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; &amp;v)</argsstring>
        <name>value_ptr</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="30" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga95826219898d204251ef719741110478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v)</argsstring>
        <name>value_ptr</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="36" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gaa66690d59a6994122ba29739992c72ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; &amp;v)</argsstring>
        <name>value_ptr</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="42" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gaf7500ed492c90f5681e3a20bbba4753a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 2, 2, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 2, 2, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="48" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gaa6b30a955ef02bc5480e4dd88448af4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 2, 2, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 2, 2, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="54" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga47a67715c3647e725128e2fb0e491617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 3, 3, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 3, 3, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="60" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga95abedc3d63b7e67e8b9323d7a28c06f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 3, 3, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 3, 3, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="66" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga770e45a7328f918030ef628d46d15848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="72" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gac873a78ef7c24119615b61276e8d18cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="78" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga3251511bd99d4a6edf032192f0d277a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 2, 3, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 2, 3, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="84" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga94bbffe686a246da42d30dc162b8b8d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 2, 3, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 2, 3, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="90" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga245b48aee644d86f9138b37a9140a24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 3, 2, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 3, 2, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="96" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga17e141b26b4b6227bdec91514f34b787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 3, 2, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 3, 2, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="102" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga5e5c730655c42a4efe0efaa78093f619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 2, 4, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 2, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="108" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga58895c402f28a524934a3847491f52b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 2, 4, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 2, 4, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="114" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gaa8612a65fca0aa8befeff3053c8a17fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 4, 2, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 4, 2, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="120" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga84e92e3316a463e38353ee767a521730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 4, 2, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 4, 2, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="126" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gaf236e319f4e2d55fbbb71985cc1a3e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 3, 4, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 3, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="132" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga3008720cd3a8d2eaba91cd4407533cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 3, 4, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 3, 4, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="138" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1gae97bf1dacbd1b2711d40fb1fd94d8130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(mat&lt; 4, 3, T, Q &gt; const &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 4, 3, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="144" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga8e77cb3aab6cb96c238980bc537e8fab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(mat&lt; 4, 3, T, Q &gt; &amp;m)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>mat&lt; 4, 3, T, Q &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="150" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga8aa03543007dfba46945e1610ea67ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T const *</type>
        <definition>GLM_FUNC_QUALIFIER T const  * glm::value_ptr</definition>
        <argsstring>(tquat&lt; T, Q &gt; const &amp;q)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>tquat&lt; T, Q &gt; const &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="156" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group__gtc__type__ptr_1ga7652a9a27cd3d46451bea351d08896fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T *</type>
        <definition>GLM_FUNC_QUALIFIER T * glm::value_ptr</definition>
        <argsstring>(tquat&lt; T, Q &gt; &amp;q)</argsstring>
        <name>value_ptr</name>
        <param>
          <type>tquat&lt; T, Q &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" line="162" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtc/type_ptr.inl" bodystart="162" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="type__ptr_8hpp" kindref="compound">glm/gtc/type_ptr.hpp</ref>&gt; to use the features of this extension.</para>
<para>Handles the interaction between pointers and vector, matrix types.</para>
<para>This extension defines an overloaded function, glm::value_ptr, which takes any of the <ref refid="group__core__template" kindref="compound">core template types</ref>. It returns a pointer to the memory layout of the object. Matrix types store their values in column-major order.</para>
<para>This is useful for uploading data to matrices or copying data to buffer objects.</para>
<para>Example: <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="glm_8hpp" kindref="compound">glm/glm.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="type__ptr_8hpp" kindref="compound">glm/gtc/type_ptr.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>aVector(3);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1mat" kindref="compound">glm::mat4</ref><sp/>someMatrix(1.0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">glUniform3fv(uniformLoc,<sp/>1,<sp/><ref refid="group__gtc__type__ptr_1gaada83809aefafd7c3264772e6b24b685" kindref="member">glm::value_ptr</ref>(aVector));</highlight></codeline>
<codeline><highlight class="normal">glUniformMatrix4fv(uniformMatrixLoc,<sp/>1,<sp/>GL_FALSE,<sp/><ref refid="group__gtc__type__ptr_1gaada83809aefafd7c3264772e6b24b685" kindref="member">glm::value_ptr</ref>(someMatrix));</highlight></codeline>
</programlisting></para>
<para>&lt;<ref refid="type__ptr_8hpp" kindref="compound">glm/gtc/type_ptr.hpp</ref>&gt; need to be included to use the features of this extension. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
