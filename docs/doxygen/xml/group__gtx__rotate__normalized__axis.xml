<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__rotate__normalized__axis" kind="group">
    <compoundname>gtx_rotate_normalized_axis</compoundname>
    <title>GLM_GTX_rotate_normalized_axis</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__rotate__normalized__axis_1gafbbff0c6bcc5deb8036cfef4c6fcdd8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::rotateNormalizedAxis</definition>
        <argsstring>(mat&lt; 4, 4, T, Q &gt; const &amp;m, T const &amp;angle, vec&lt; 3, T, Q &gt; const &amp;axis)</argsstring>
        <name>rotateNormalizedAxis</name>
        <param>
          <type>mat&lt; 4, 4, T, Q &gt; const &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a rotation 4 * 4 matrix created from a normalized axis and an angle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix multiplied by this rotation matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation angle expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation axis, must be normalized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type used to build the matrix. Currently supported: half (not recommended), float or double.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtx__rotate__normalized__axis" kindref="compound">GLM_GTX_rotate_normalized_axis</ref> </para>
</simplesect>
<simplesect kind="see"><para>- rotate(T angle, T x, T y, T z) </para>
</simplesect>
<simplesect kind="see"><para>- rotate(mat&lt;4, 4, T, Q&gt; const&amp; m, T angle, T x, T y, T z) </para>
</simplesect>
<simplesect kind="see"><para>- rotate(T angle, vec&lt;3, T, Q&gt; const&amp; v) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_normalized_axis.hpp" line="47" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_normalized_axis.inl" bodystart="8" bodyend="41" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_normalized_axis.hpp" declline="47" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__rotate__normalized__axis_1gafe4975b0d52136e1dd8c8f05f6558a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL tquat&lt; T, Q &gt;</type>
        <definition>GLM_FUNC_DECL tquat&lt; T, Q &gt; glm::rotateNormalizedAxis</definition>
        <argsstring>(tquat&lt; T, Q &gt; const &amp;q, T const &amp;angle, vec&lt; 3, T, Q &gt; const &amp;axis)</argsstring>
        <name>rotateNormalizedAxis</name>
        <param>
          <type>tquat&lt; T, Q &gt; const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotates a quaternion from a vector of 3 components normalized axis and an angle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>Source orientation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle expressed in radians. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>Normalized axis of the rotation, must be normalized.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__gtx__rotate__normalized__axis" kindref="compound">GLM_GTX_rotate_normalized_axis</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_normalized_axis.hpp" line="60" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_normalized_axis.inl" bodystart="45" bodyend="58" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/rotate_normalized_axis.hpp" declline="60" declcolumn="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="rotate__normalized__axis_8hpp" kindref="compound">glm/gtx/rotate_normalized_axis.hpp</ref>&gt; to use the features of this extension.</para>
<para>Quaternions and matrices rotations around normalized axis. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
