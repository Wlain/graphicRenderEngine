<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__impl__wgpu_8cpp" kind="file" language="C++">
    <compoundname>imgui_impl_wgpu.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__impl__wgpu_8h" local="yes">imgui_impl_wgpu.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">webgpu/webgpu.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp</label>
        <link refid="imgui__impl__wgpu_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_impl_wgpu.h</label>
        <link refid="imgui__impl__wgpu_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="11">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>webgpu/webgpu.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_render_resources" prot="public">RenderResources</innerclass>
    <innerclass refid="struct_frame_resources" prot="public">FrameResources</innerclass>
    <innerclass refid="struct_uniforms" prot="public">Uniforms</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="imgui__impl__wgpu_8cpp_1a0580636577080717e034624589f24504" prot="public" static="no">
        <name>HAS_EMSCRIPTEN_VERSION</name>
        <param><defname>major</defname></param>
        <param><defname>minor</defname></param>
        <param><defname>tiny</defname></param>
        <initializer>(__EMSCRIPTEN_major__ &gt; (major) || (__EMSCRIPTEN_major__ == (major) &amp;&amp; __EMSCRIPTEN_minor__ &gt; (minor)) || (__EMSCRIPTEN_major__ == (major) &amp;&amp; __EMSCRIPTEN_minor__ == (minor) &amp;&amp; __EMSCRIPTEN_tiny__ &gt;= (tiny)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="29" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1a60a6e00c3ca2ad396462243bcb75917b" prot="public" static="yes" mutable="no">
        <type>WGPUDevice</type>
        <definition>WGPUDevice g_wgpuDevice</definition>
        <argsstring></argsstring>
        <name>g_wgpuDevice</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="39" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1ae7b653868622b6f1c1aaffd6e9457fae" prot="public" static="yes" mutable="no">
        <type>WGPUQueue</type>
        <definition>WGPUQueue g_defaultQueue</definition>
        <argsstring></argsstring>
        <name>g_defaultQueue</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="40" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1a5123d76365df14a6685c53e6dfb8b5ef" prot="public" static="yes" mutable="no">
        <type>WGPUTextureFormat</type>
        <definition>WGPUTextureFormat g_renderTargetFormat</definition>
        <argsstring></argsstring>
        <name>g_renderTargetFormat</name>
        <initializer>= WGPUTextureFormat_Undefined</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="41" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1aca8ae9ea621e049f7f9a004069291aa9" prot="public" static="yes" mutable="no">
        <type>WGPURenderPipeline</type>
        <definition>WGPURenderPipeline g_pipelineState</definition>
        <argsstring></argsstring>
        <name>g_pipelineState</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="42" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1ac45ffac716c4cd48ad1dc4387d92b419" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_render_resources" kindref="compound">RenderResources</ref></type>
        <definition>RenderResources g_resources</definition>
        <argsstring></argsstring>
        <name>g_resources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="55" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1adee55bccd02a794c676f2d87c6501062" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref> *</type>
        <definition>FrameResources* g_pFrameResources</definition>
        <argsstring></argsstring>
        <name>g_pFrameResources</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="66" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1a1f52b46eccf792cd89fbebbe027b3de4" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int g_numFramesInFlight</definition>
        <argsstring></argsstring>
        <name>g_numFramesInFlight</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="67" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1a67d3f5ac1b3fb4c75e317e70e27073b4" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int g_frameIndex</definition>
        <argsstring></argsstring>
        <name>g_frameIndex</name>
        <initializer>= UINT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="68" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1aa622bb812adadd89c8bcdd47890df7c5" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t __glsl_shader_vert_spv[]</definition>
        <argsstring>[]</argsstring>
        <name>__glsl_shader_vert_spv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="98" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__impl__wgpu_8cpp_1a010131e3dd005be259d3f39fae403a23" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t __glsl_shader_frag_spv[]</definition>
        <argsstring>[]</argsstring>
        <name>__glsl_shader_frag_spv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="155" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1aff56d55683731699598e086086475661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ImGuiID</type>
        <definition>ImGuiID ImHashData</definition>
        <argsstring>(const void *data_p, size_t data_size, ImU32 seed=0)</argsstring>
        <name>ImHashData</name>
        <param>
          <type>const void *</type>
          <declname>data_p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_size</declname>
        </param>
        <param>
          <type>ImU32</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="36" column="16" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui.cpp" bodystart="1724" bodyend="1732" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" declline="36" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a58e6b66450d73c0953b43f493f4aa179" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(ImDrawIdx *&amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>ImDrawIdx *&amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="187" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a5ddb28d9af1279800b4dabbdd016a39c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(ImDrawVert *&amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref> *&amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="193" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a372a28965d1b6564a64c24ea9ecd85cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPUBindGroupLayout &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPUBindGroupLayout &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="199" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="199" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1ae1c610accf37d8943a600737db8fdb08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPUBindGroup &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPUBindGroup &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="205" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a348cbac22b97856593f88b891a1994d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPUBuffer &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPUBuffer &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="211" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="211" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1abfc56bd6378d7e810dc81cbd89af93e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPURenderPipeline &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPURenderPipeline &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="217" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="217" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a9e52acce9448b0f6a1b6b74fa051f47e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPUSampler &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPUSampler &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="223" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="223" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1aca2411ed280634836ff3a1afe7b12fc9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPUShaderModule &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPUShaderModule &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="229" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a77701e439b01dbcfdd4157f2de850236" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPUTextureView &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPUTextureView &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="235" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="235" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a925566a510854f74235827b85885312f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(WGPUTexture &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>WGPUTexture &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="241" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="241" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a6dcbccb67eee2728d555d7277eb8907e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(RenderResources &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type><ref refid="struct_render_resources" kindref="compound">RenderResources</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="248" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="248" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1aa3fdfe427ae8802244a590b5b019266f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(FrameResources &amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="259" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="259" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1ac96c10a778c1442403ec167bd4b5dd40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>WGPUProgrammableStageDescriptor</type>
        <definition>static WGPUProgrammableStageDescriptor ImGui_ImplWGPU_CreateShaderModule</definition>
        <argsstring>(uint32_t *binary_data, uint32_t binary_data_size)</argsstring>
        <name>ImGui_ImplWGPU_CreateShaderModule</name>
        <param>
          <type>uint32_t *</type>
          <declname>binary_data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>binary_data_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="267" column="40" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="267" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1afd5a943072e49be9d6a4742c4534591b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>WGPUBindGroup</type>
        <definition>static WGPUBindGroup ImGui_ImplWGPU_CreateImageBindGroup</definition>
        <argsstring>(WGPUBindGroupLayout layout, WGPUTextureView texture)</argsstring>
        <name>ImGui_ImplWGPU_CreateImageBindGroup</name>
        <param>
          <type>WGPUBindGroupLayout</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>WGPUTextureView</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="283" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="283" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a974582daf1e92f16a8c31749df7c7f6a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWGPU_SetupRenderState</definition>
        <argsstring>(ImDrawData *draw_data, WGPURenderPassEncoder ctx, FrameResources *fr)</argsstring>
        <name>ImGui_ImplWGPU_SetupRenderState</name>
        <param>
          <type><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref> *</type>
          <declname>draw_data</declname>
        </param>
        <param>
          <type>WGPURenderPassEncoder</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref> *</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="294" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="294" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a4c47827376ddf8dca046f1655817483a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWGPU_RenderDrawData</definition>
        <argsstring>(ImDrawData *draw_data, WGPURenderPassEncoder pass_encoder)</argsstring>
        <name>ImGui_ImplWGPU_RenderDrawData</name>
        <param>
          <type><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref> *</type>
          <declname>draw_data</declname>
        </param>
        <param>
          <type>WGPURenderPassEncoder</type>
          <declname>pass_encoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="329" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="329" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1adf54cdc5c0c6af718f0efb46b8b312d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWGPU_CreateFontsTexture</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWGPU_CreateFontsTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="463" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="463" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1ac425abe1e87be63f7a7c6d791fa2c9b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWGPU_CreateUniformBuffer</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWGPU_CreateUniformBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="529" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="529" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a4941bcea97e47a925b9ebdc19aa73958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplWGPU_CreateDeviceObjects</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWGPU_CreateDeviceObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="542" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="542" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1a44a6cbee61d0ab0de2dce020cb12437a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWGPU_InvalidateDeviceObjects</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWGPU_InvalidateDeviceObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="650" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="650" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1ab6bf7820d59d827612f70df546c78685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplWGPU_Init</definition>
        <argsstring>(WGPUDevice device, int num_frames_in_flight, WGPUTextureFormat rt_format)</argsstring>
        <name>ImGui_ImplWGPU_Init</name>
        <param>
          <type>WGPUDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_frames_in_flight</declname>
        </param>
        <param>
          <type>WGPUTextureFormat</type>
          <declname>rt_format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="665" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="665" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1af7f4e72487b3d8b5f98ca6c7adf31e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWGPU_Shutdown</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWGPU_Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="703" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="703" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__wgpu_8cpp_1aff570d3e2469305ca0a0b87cfd819bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWGPU_NewFrame</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWGPU_NewFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" line="714" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp" bodystart="714" bodyend="718"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Renderer<sp/>for<sp/>WebGPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Platform<sp/>Binding<sp/>(e.g.<sp/>GLFW)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Please<sp/>note<sp/>that<sp/>WebGPU<sp/>is<sp/>currently<sp/>experimental,<sp/>will<sp/>not<sp/>run<sp/>on<sp/>non-beta<sp/>browsers,<sp/>and<sp/>may<sp/>break.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Renderer:<sp/>User<sp/>texture<sp/>binding.<sp/>Use<sp/>&apos;WGPUTextureView&apos;<sp/>as<sp/>ImTextureID.<sp/>Read<sp/>the<sp/>FAQ<sp/>about<sp/>ImTextureID!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Renderer:<sp/>Support<sp/>for<sp/>large<sp/>meshes<sp/>(64k+<sp/>vertices)<sp/>with<sp/>16-bit<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>Dear<sp/>ImGui,<sp/>read<sp/>documentation<sp/>from<sp/>the<sp/>docs/<sp/>folder<sp/>+<sp/>read<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>online:<sp/>https://github.com/ocornut/imgui/tree/master/docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANGELOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(minor<sp/>and<sp/>older<sp/>changes<sp/>stripped<sp/>away,<sp/>please<sp/>see<sp/>git<sp/>history<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-11-29:<sp/>Passing<sp/>explicit<sp/>buffer<sp/>sizes<sp/>to<sp/>wgpuRenderPassEncoderSetVertexBuffer()/wgpuRenderPassEncoderSetIndexBuffer().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-08-24:<sp/>Fix<sp/>for<sp/>latest<sp/>specs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-05-24:<sp/>Add<sp/>support<sp/>for<sp/>draw_data-&gt;FramebufferScale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-05-19:<sp/>Replaced<sp/>direct<sp/>access<sp/>to<sp/>ImDrawCmd::TextureId<sp/>with<sp/>a<sp/>call<sp/>to<sp/>ImDrawCmd::GetTexID().<sp/>(will<sp/>become<sp/>a<sp/>requirement)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-05-16:<sp/>Update<sp/>to<sp/>latest<sp/>WebGPU<sp/>specs<sp/>(compatible<sp/>with<sp/>Emscripten<sp/>2.0.20<sp/>and<sp/>Chrome<sp/>Canary<sp/>92).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-02-18:<sp/>Change<sp/>blending<sp/>equation<sp/>to<sp/>preserve<sp/>alpha<sp/>in<sp/>output<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-01-28:<sp/>Initial<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_impl_wgpu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;webgpu/webgpu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAS_EMSCRIPTEN_VERSION(major,<sp/>minor,<sp/>tiny)<sp/>(__EMSCRIPTEN_major__<sp/>&gt;<sp/>(major)<sp/>||<sp/>(__EMSCRIPTEN_major__<sp/>==<sp/>(major)<sp/>&amp;&amp;<sp/>__EMSCRIPTEN_minor__<sp/>&gt;<sp/>(minor))<sp/>||<sp/>(__EMSCRIPTEN_major__<sp/>==<sp/>(major)<sp/>&amp;&amp;<sp/>__EMSCRIPTEN_minor__<sp/>==<sp/>(minor)<sp/>&amp;&amp;<sp/>__EMSCRIPTEN_tiny__<sp/>&gt;=<sp/>(tiny)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__EMSCRIPTEN__)<sp/>&amp;&amp;<sp/>!HAS_EMSCRIPTEN_VERSION(2,<sp/>0,<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Requires<sp/>at<sp/>least<sp/>emscripten<sp/>2.0.20&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dear<sp/>ImGui<sp/>prototypes<sp/>from<sp/>imgui_internal.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>ImGuiID<sp/>ImHashData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data_p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_size,<sp/>ImU32<sp/>seed<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WebGPU<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WGPUDevice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_wgpuDevice<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WGPUQueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_defaultQueue<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WGPUTextureFormat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_renderTargetFormat<sp/>=<sp/>WGPUTextureFormat_Undefined;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WGPURenderPipeline<sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_pipelineState<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_render_resources" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_render_resources" kindref="compound">RenderResources</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUTexture<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontTexture;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Font<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUTextureView<sp/><sp/><sp/><sp/><sp/>FontTextureView;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Texture<sp/>view<sp/>for<sp/>font<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUSampler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sampler;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sampler<sp/>for<sp/>the<sp/>font<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_uniforms" kindref="compound">Uniforms</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shader<sp/>uniforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroup<sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonBindGroup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resources<sp/>bind-group<sp/>to<sp/>bind<sp/>the<sp/>common<sp/>resources<sp/>to<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageBindGroups;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resources<sp/>bind-group<sp/>to<sp/>bind<sp/>the<sp/>font/image<sp/>resources<sp/>to<sp/>pipeline<sp/>(this<sp/>is<sp/>a<sp/>key-&gt;value<sp/>map)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroup<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageBindGroup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>font-resource<sp/>of<sp/>Dear<sp/>ImGui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroupLayout<sp/>ImageBindGroupLayout;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>layout<sp/>used<sp/>for<sp/>the<sp/>image<sp/>bind<sp/>group.<sp/>Avoids<sp/>allocating<sp/>unnecessary<sp/>JS<sp/>objects<sp/>when<sp/>working<sp/>with<sp/>WebASM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_render_resources" kindref="compound">RenderResources</ref><sp/><sp/>g_resources;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="struct_frame_resources" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBuffer<sp/><sp/>IndexBuffer;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBuffer<sp/><sp/>VertexBuffer;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawIdx*<sp/><sp/>IndexBufferHost;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>VertexBufferHost;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndexBufferSize;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VertexBufferSize;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref>*<sp/><sp/>g_pFrameResources<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>g_numFramesInFlight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>g_frameIndex<sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="struct_uniforms" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_uniforms" kindref="compound">Uniforms</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MVP[4][4];</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SHADERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>glsl_shader.vert,<sp/>compiled<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#<sp/>glslangValidator<sp/>-V<sp/>-x<sp/>-o<sp/>glsl_shader.vert.u32<sp/>glsl_shader.vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment">#version<sp/>450<sp/>core</highlight></codeline>
<codeline lineno="83"><highlight class="comment">layout(location<sp/>=<sp/>0)<sp/>in<sp/>vec2<sp/>aPos;</highlight></codeline>
<codeline lineno="84"><highlight class="comment">layout(location<sp/>=<sp/>1)<sp/>in<sp/>vec2<sp/>aUV;</highlight></codeline>
<codeline lineno="85"><highlight class="comment">layout(location<sp/>=<sp/>2)<sp/>in<sp/>vec4<sp/>aColor;</highlight></codeline>
<codeline lineno="86"><highlight class="comment">layout(set=0,<sp/>binding<sp/>=<sp/>0)<sp/>uniform<sp/>transform<sp/>{<sp/>mat4<sp/>mvp;<sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">out<sp/>gl_PerVertex<sp/>{<sp/>vec4<sp/>gl_Position;<sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="comment">layout(location<sp/>=<sp/>0)<sp/>out<sp/>struct<sp/>{<sp/>vec4<sp/>Color;<sp/>vec2<sp/>UV;<sp/>}<sp/>Out;</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">void<sp/>main()</highlight></codeline>
<codeline lineno="92"><highlight class="comment">{</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>Out.Color<sp/>=<sp/>aColor;</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>Out.UV<sp/>=<sp/>aUV;</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>gl_Position<sp/>=<sp/>mvp<sp/>*<sp/>vec4(aPos,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="96"><highlight class="comment">}</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>__glsl_shader_vert_spv[]<sp/>=</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>0x07230203,0x00010000,0x00080007,0x0000002c,0x00000000,0x00020011,0x00000001,0x0006000b,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x00000000,0x00000001,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>0x000a000f,0x00000000,0x00000004,0x6e69616d,0x00000000,0x0000000b,0x0000000f,0x00000015,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001b,0x00000023,0x00030003,0x00000002,0x000001c2,0x00040005,0x00000004,0x6e69616d,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,0x00030005,0x00000009,0x00000000,0x00050006,0x00000009,0x00000000,0x6f6c6f43,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000072,0x00040006,0x00000009,0x00000001,0x00005655,0x00030005,0x0000000b,0x0074754f,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00040005,0x0000000f,0x6c6f4361,0x0000726f,0x00030005,0x00000015,0x00565561,0x00060005,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000019,0x505f6c67,0x65567265,0x78657472,0x00000000,0x00060006,0x00000019,0x00000000,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>0x505f6c67,0x7469736f,0x006e6f69,0x00030005,0x0000001b,0x00000000,0x00050005,0x0000001d,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>0x6e617274,0x726f6673,0x0000006d,0x00040006,0x0000001d,0x00000000,0x0070766d,0x00030005,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001f,0x00000000,0x00040005,0x00000023,0x736f5061,0x00000000,0x00040047,0x0000000b,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001e,0x00000000,0x00040047,0x0000000f,0x0000001e,0x00000002,0x00040047,0x00000015,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001e,0x00000001,0x00050048,0x00000019,0x00000000,0x0000000b,0x00000000,0x00030047,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000019,0x00000002,0x00040048,0x0000001d,0x00000000,0x00000005,0x00050048,0x0000001d,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,0x00000023,0x00000000,0x00050048,0x0000001d,0x00000000,0x00000007,0x00000010,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00030047,0x0000001d,0x00000002,0x00040047,0x0000001f,0x00000022,0x00000000,0x00040047,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001f,0x00000021,0x00000000,0x00040047,0x00000023,0x0000001e,0x00000000,0x00020013,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000002,0x00030021,0x00000003,0x00000002,0x00030016,0x00000006,0x00000020,0x00040017,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000007,0x00000006,0x00000004,0x00040017,0x00000008,0x00000006,0x00000002,0x0004001e,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000009,0x00000007,0x00000008,0x00040020,0x0000000a,0x00000003,0x00000009,0x0004003b,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000000a,0x0000000b,0x00000003,0x00040015,0x0000000c,0x00000020,0x00000001,0x0004002b,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000000c,0x0000000d,0x00000000,0x00040020,0x0000000e,0x00000001,0x00000007,0x0004003b,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000000e,0x0000000f,0x00000001,0x00040020,0x00000011,0x00000003,0x00000007,0x0004002b,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000000c,0x00000013,0x00000001,0x00040020,0x00000014,0x00000001,0x00000008,0x0004003b,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000014,0x00000015,0x00000001,0x00040020,0x00000017,0x00000003,0x00000008,0x0003001e,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000019,0x00000007,0x00040020,0x0000001a,0x00000003,0x00000019,0x0004003b,0x0000001a,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001b,0x00000003,0x00040018,0x0000001c,0x00000007,0x00000004,0x0003001e,0x0000001d,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001c,0x00040020,0x0000001e,0x00000002,0x0000001d,0x0004003b,0x0000001e,0x0000001f,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000002,0x00040020,0x00000020,0x00000002,0x0000001c,0x0004003b,0x00000014,0x00000023,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000001,0x0004002b,0x00000006,0x00000025,0x00000000,0x0004002b,0x00000006,0x00000026,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>0x3f800000,0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,0x000200f8,0x00000005,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0004003d,0x00000007,0x00000010,0x0000000f,0x00050041,0x00000011,0x00000012,0x0000000b,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000000d,0x0003003e,0x00000012,0x00000010,0x0004003d,0x00000008,0x00000016,0x00000015,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00050041,0x00000017,0x00000018,0x0000000b,0x00000013,0x0003003e,0x00000018,0x00000016,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00050041,0x00000020,0x00000021,0x0000001f,0x0000000d,0x0004003d,0x0000001c,0x00000022,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000021,0x0004003d,0x00000008,0x00000024,0x00000023,0x00050051,0x00000006,0x00000027,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000024,0x00000000,0x00050051,0x00000006,0x00000028,0x00000024,0x00000001,0x00070050,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000007,0x00000029,0x00000027,0x00000028,0x00000025,0x00000026,0x00050091,0x00000007,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000002a,0x00000022,0x00000029,0x00050041,0x00000011,0x0000002b,0x0000001b,0x0000000d,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0003003e,0x0000002b,0x0000002a,0x000100fd,0x00010038</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>glsl_shader.frag,<sp/>compiled<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#<sp/>glslangValidator<sp/>-V<sp/>-x<sp/>-o<sp/>glsl_shader.frag.u32<sp/>glsl_shader.frag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="145"><highlight class="comment">#version<sp/>450<sp/>core</highlight></codeline>
<codeline lineno="146"><highlight class="comment">layout(location<sp/>=<sp/>0)<sp/>out<sp/>vec4<sp/>fColor;</highlight></codeline>
<codeline lineno="147"><highlight class="comment">layout(set=0,<sp/>binding=1)<sp/>uniform<sp/>sampler<sp/>s;</highlight></codeline>
<codeline lineno="148"><highlight class="comment">layout(set=1,<sp/>binding=0)<sp/>uniform<sp/>texture2D<sp/>t;</highlight></codeline>
<codeline lineno="149"><highlight class="comment">layout(location<sp/>=<sp/>0)<sp/>in<sp/>struct<sp/>{<sp/>vec4<sp/>Color;<sp/>vec2<sp/>UV;<sp/>}<sp/>In;</highlight></codeline>
<codeline lineno="150"><highlight class="comment">void<sp/>main()</highlight></codeline>
<codeline lineno="151"><highlight class="comment">{</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/>fColor<sp/>=<sp/>In.Color<sp/>*<sp/>texture(sampler2D(t,<sp/>s),<sp/>In.UV.st);</highlight></codeline>
<codeline lineno="153"><highlight class="comment">}</highlight></codeline>
<codeline lineno="154"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>__glsl_shader_frag_spv[]<sp/>=</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>0x07230203,0x00010000,0x00080007,0x00000023,0x00000000,0x00020011,0x00000001,0x0006000b,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x00000000,0x00000001,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0007000f,0x00000004,0x00000004,0x6e69616d,0x00000000,0x00000009,0x0000000d,0x00030010,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000004,0x00000007,0x00030003,0x00000002,0x000001c2,0x00040005,0x00000004,0x6e69616d,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,0x00040005,0x00000009,0x6c6f4366,0x0000726f,0x00030005,0x0000000b,0x00000000,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00050006,0x0000000b,0x00000000,0x6f6c6f43,0x00000072,0x00040006,0x0000000b,0x00000001,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00005655,0x00030005,0x0000000d,0x00006e49,0x00030005,0x00000015,0x00000074,0x00030005,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000019,0x00000073,0x00040047,0x00000009,0x0000001e,0x00000000,0x00040047,0x0000000d,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000001e,0x00000000,0x00040047,0x00000015,0x00000022,0x00000001,0x00040047,0x00000015,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000021,0x00000000,0x00040047,0x00000019,0x00000022,0x00000000,0x00040047,0x00000019,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000021,0x00000001,0x00020013,0x00000002,0x00030021,0x00000003,0x00000002,0x00030016,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000006,0x00000020,0x00040017,0x00000007,0x00000006,0x00000004,0x00040020,0x00000008,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000003,0x00000007,0x0004003b,0x00000008,0x00000009,0x00000003,0x00040017,0x0000000a,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000006,0x00000002,0x0004001e,0x0000000b,0x00000007,0x0000000a,0x00040020,0x0000000c,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000001,0x0000000b,0x0004003b,0x0000000c,0x0000000d,0x00000001,0x00040015,0x0000000e,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000020,0x00000001,0x0004002b,0x0000000e,0x0000000f,0x00000000,0x00040020,0x00000010,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000001,0x00000007,0x00090019,0x00000013,0x00000006,0x00000001,0x00000000,0x00000000,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,0x00000001,0x00000000,0x00040020,0x00000014,0x00000000,0x00000013,0x0004003b,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000014,0x00000015,0x00000000,0x0002001a,0x00000017,0x00040020,0x00000018,0x00000000,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000017,0x0004003b,0x00000018,0x00000019,0x00000000,0x0003001b,0x0000001b,0x00000013,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0004002b,0x0000000e,0x0000001d,0x00000001,0x00040020,0x0000001e,0x00000001,0x0000000a,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,0x000200f8,0x00000005,0x00050041,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000010,0x00000011,0x0000000d,0x0000000f,0x0004003d,0x00000007,0x00000012,0x00000011,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0004003d,0x00000013,0x00000016,0x00000015,0x0004003d,0x00000017,0x0000001a,0x00000019,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00050056,0x0000001b,0x0000001c,0x00000016,0x0000001a,0x00050041,0x0000001e,0x0000001f,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000000d,0x0000001d,0x0004003d,0x0000000a,0x00000020,0x0000001f,0x00050057,0x00000007,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000021,0x0000001c,0x00000020,0x00050085,0x00000007,0x00000022,0x00000012,0x00000021,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>0x0003003e,0x00000009,0x00000022,0x000100fd,0x00010038</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(ImDrawIdx*&amp;<sp/>res)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>res;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*&amp;<sp/>res)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>res;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPUBindGroupLayout&amp;<sp/>res)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuBindGroupLayoutRelease(res);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPUBindGroup&amp;<sp/>res)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuBindGroupRelease(res);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPUBuffer&amp;<sp/>res)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuBufferRelease(res);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPURenderPipeline&amp;<sp/>res)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuRenderPipelineRelease(res);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPUSampler&amp;<sp/>res)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuSamplerRelease(res);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPUShaderModule&amp;<sp/>res)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuShaderModuleRelease(res);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPUTextureView&amp;<sp/>res)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuTextureViewRelease(res);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(WGPUTexture&amp;<sp/>res)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuTextureRelease(res);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(<ref refid="struct_render_resources" kindref="compound">RenderResources</ref>&amp;<sp/>res)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.FontTexture);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.FontTextureView);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.Sampler);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.Uniforms);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.CommonBindGroup);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.ImageBindGroup);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.ImageBindGroupLayout);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(<ref refid="struct_frame_resources" kindref="compound">FrameResources</ref>&amp;<sp/>res)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.IndexBuffer);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.VertexBuffer);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.IndexBufferHost);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(res.VertexBufferHost);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WGPUProgrammableStageDescriptor<sp/>ImGui_ImplWGPU_CreateShaderModule(uint32_t*<sp/>binary_data,<sp/>uint32_t<sp/>binary_data_size)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUShaderModuleSPIRVDescriptor<sp/>spirv_desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>spirv_desc.chain.sType<sp/>=<sp/>WGPUSType_ShaderModuleSPIRVDescriptor;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>spirv_desc.codeSize<sp/>=<sp/>binary_data_size;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>spirv_desc.code<sp/>=<sp/>binary_data;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUShaderModuleDescriptor<sp/>desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>desc.nextInChain<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">WGPUChainedStruct*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;spirv_desc);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUProgrammableStageDescriptor<sp/>stage_desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>stage_desc.module<sp/>=<sp/>wgpuDeviceCreateShaderModule(g_wgpuDevice,<sp/>&amp;desc);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>stage_desc.entryPoint<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stage_desc;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WGPUBindGroup<sp/>ImGui_ImplWGPU_CreateImageBindGroup(WGPUBindGroupLayout<sp/>layout,<sp/>WGPUTextureView<sp/>texture)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroupEntry<sp/>image_bg_entries[]<sp/>=<sp/>{<sp/>{<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>texture<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroupDescriptor<sp/>image_bg_descriptor<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>image_bg_descriptor.layout<sp/>=<sp/>layout;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>image_bg_descriptor.entryCount<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(image_bg_entries)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(WGPUBindGroupEntry);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>image_bg_descriptor.entries<sp/>=<sp/>image_bg_entries;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wgpuDeviceCreateBindGroup(g_wgpuDevice,<sp/>&amp;image_bg_descriptor);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_SetupRenderState(<ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref>*<sp/>draw_data,<sp/>WGPURenderPassEncoder<sp/>ctx,<sp/><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref>*<sp/>fr)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>orthographic<sp/>projection<sp/>matrix<sp/>into<sp/>our<sp/>constant<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>visible<sp/>imgui<sp/>space<sp/>lies<sp/>from<sp/>draw_data-&gt;DisplayPos<sp/>(top<sp/>left)<sp/>to<sp/>draw_data-&gt;DisplayPos+data_data-&gt;DisplaySize<sp/>(bottom<sp/>right).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>L<sp/>=<sp/>draw_data-&gt;DisplayPos.x;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>R<sp/>=<sp/>draw_data-&gt;DisplayPos.x<sp/>+<sp/>draw_data-&gt;DisplaySize.x;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>draw_data-&gt;DisplayPos.y;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/>draw_data-&gt;DisplayPos.y<sp/>+<sp/>draw_data-&gt;DisplaySize.y;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mvp[4][4]<sp/>=</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>2.0f/(R-L),<sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0f/(T-B),<sp/><sp/><sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>(R+L)/(L-R),<sp/><sp/>(T+B)/(B-T),<sp/><sp/><sp/><sp/>0.5f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuQueueWriteBuffer(g_defaultQueue,<sp/>g_resources.Uniforms,<sp/>0,<sp/>mvp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mvp));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetViewport(ctx,<sp/>0,<sp/>0,<sp/>draw_data-&gt;FramebufferScale.x<sp/>*<sp/>draw_data-&gt;DisplaySize.x,<sp/>draw_data-&gt;FramebufferScale.y<sp/>*<sp/>draw_data-&gt;DisplaySize.y,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>shader<sp/>and<sp/>vertex<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetVertexBuffer(ctx,<sp/>0,<sp/>fr-&gt;VertexBuffer,<sp/>0,<sp/>fr-&gt;VertexBufferSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetIndexBuffer(ctx,<sp/>fr-&gt;IndexBuffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImDrawIdx)<sp/>==<sp/>2<sp/>?<sp/>WGPUIndexFormat_Uint16<sp/>:<sp/>WGPUIndexFormat_Uint32,<sp/>0,<sp/>fr-&gt;IndexBufferSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImDrawIdx));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetPipeline(ctx,<sp/>g_pipelineState);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetBindGroup(ctx,<sp/>0,<sp/>g_resources.CommonBindGroup,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>blend<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUColor<sp/>blend_color<sp/>=<sp/>{<sp/>0.f,<sp/>0.f,<sp/>0.f,<sp/>0.f<sp/>};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetBlendConstant(ctx,<sp/>&amp;blend_color);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Render<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(this<sp/>used<sp/>to<sp/>be<sp/>set<sp/>in<sp/>io.RenderDrawListsFn<sp/>and<sp/>called<sp/>by<sp/>ImGui::Render(),<sp/>but<sp/>you<sp/>can<sp/>now<sp/>call<sp/>this<sp/>directly<sp/>from<sp/>your<sp/>main<sp/>loop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_RenderDrawData(<ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref>*<sp/>draw_data,<sp/>WGPURenderPassEncoder<sp/>pass_encoder)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>rendering<sp/>when<sp/>minimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(draw_data-&gt;DisplaySize.x<sp/>&lt;=<sp/>0.0f<sp/>||<sp/>draw_data-&gt;DisplaySize.y<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Assuming<sp/>that<sp/>this<sp/>only<sp/>gets<sp/>called<sp/>once<sp/>per<sp/>frame!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not,<sp/>we<sp/>can&apos;t<sp/>just<sp/>re-allocate<sp/>the<sp/>IB<sp/>or<sp/>VB,<sp/>we&apos;ll<sp/>have<sp/>to<sp/>do<sp/>a<sp/>proper<sp/>allocator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>g_frameIndex<sp/>=<sp/>g_frameIndex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref>*<sp/>fr<sp/>=<sp/>&amp;g_pFrameResources[g_frameIndex<sp/>%<sp/>g_numFramesInFlight];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>and<sp/>grow<sp/>vertex/index<sp/>buffers<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;VertexBuffer<sp/>==<sp/>NULL<sp/>||<sp/>fr-&gt;VertexBufferSize<sp/>&lt;<sp/>draw_data-&gt;TotalVtxCount)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;VertexBuffer)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuBufferDestroy(fr-&gt;VertexBuffer);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuBufferRelease(fr-&gt;VertexBuffer);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(fr-&gt;VertexBufferHost);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;VertexBufferSize<sp/>=<sp/>draw_data-&gt;TotalVtxCount<sp/>+<sp/>5000;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUBufferDescriptor<sp/>vb_desc<sp/>=</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dear<sp/>ImGui<sp/>Vertex<sp/>buffer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUBufferUsage_CopyDst<sp/>|<sp/>WGPUBufferUsage_Vertex,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;VertexBufferSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;VertexBuffer<sp/>=<sp/>wgpuDeviceCreateBuffer(g_wgpuDevice,<sp/>&amp;vb_desc);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fr-&gt;VertexBuffer)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;VertexBufferHost<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>[fr-&gt;VertexBufferSize];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;IndexBuffer<sp/>==<sp/>NULL<sp/>||<sp/>fr-&gt;IndexBufferSize<sp/>&lt;<sp/>draw_data-&gt;TotalIdxCount)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;IndexBuffer)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuBufferDestroy(fr-&gt;IndexBuffer);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuBufferRelease(fr-&gt;IndexBuffer);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(fr-&gt;IndexBufferHost);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;IndexBufferSize<sp/>=<sp/>draw_data-&gt;TotalIdxCount<sp/>+<sp/>10000;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUBufferDescriptor<sp/>ib_desc<sp/>=</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dear<sp/>ImGui<sp/>Index<sp/>buffer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUBufferUsage_CopyDst<sp/>|<sp/>WGPUBufferUsage_Index,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;IndexBufferSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImDrawIdx),</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;IndexBuffer<sp/>=<sp/>wgpuDeviceCreateBuffer(g_wgpuDevice,<sp/>&amp;ib_desc);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fr-&gt;IndexBuffer)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;IndexBufferHost<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ImDrawIdx[fr-&gt;IndexBufferSize];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>vertex/index<sp/>data<sp/>into<sp/>a<sp/>single<sp/>contiguous<sp/>GPU<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vtx_dst<sp/>=<sp/>(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*)fr-&gt;VertexBufferHost;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawIdx*<sp/>idx_dst<sp/>=<sp/>(ImDrawIdx*)fr-&gt;IndexBufferHost;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>draw_data-&gt;CmdListsCount;<sp/>n++)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>cmd_list<sp/>=<sp/>draw_data-&gt;CmdLists[n];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(vtx_dst,<sp/>cmd_list-&gt;VtxBuffer.Data,<sp/>cmd_list-&gt;VtxBuffer.Size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(idx_dst,<sp/>cmd_list-&gt;IdxBuffer.Data,<sp/>cmd_list-&gt;IdxBuffer.Size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImDrawIdx));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_dst<sp/>+=<sp/>cmd_list-&gt;VtxBuffer.Size;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_dst<sp/>+=<sp/>cmd_list-&gt;IdxBuffer.Size;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>vb_write_size<sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)vtx_dst<sp/>-<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)fr-&gt;VertexBufferHost<sp/>+<sp/>3)<sp/>&amp;<sp/>~3;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>ib_write_size<sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)idx_dst<sp/>-<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)fr-&gt;IndexBufferHost<sp/><sp/>+<sp/>3)<sp/>&amp;<sp/>~3;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuQueueWriteBuffer(g_defaultQueue,<sp/>fr-&gt;VertexBuffer,<sp/>0,<sp/>fr-&gt;VertexBufferHost,<sp/>vb_write_size);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuQueueWriteBuffer(g_defaultQueue,<sp/>fr-&gt;IndexBuffer,<sp/><sp/>0,<sp/>fr-&gt;IndexBufferHost,<sp/><sp/>ib_write_size);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>desired<sp/>render<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWGPU_SetupRenderState(draw_data,<sp/>pass_encoder,<sp/>fr);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>command<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Because<sp/>we<sp/>merged<sp/>all<sp/>buffers<sp/>into<sp/>a<sp/>single<sp/>one,<sp/>we<sp/>maintain<sp/>our<sp/>own<sp/>offset<sp/>into<sp/>them)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_vtx_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_idx_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>clip_scale<sp/>=<sp/>draw_data-&gt;FramebufferScale;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>clip_off<sp/>=<sp/>draw_data-&gt;DisplayPos;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>draw_data-&gt;CmdListsCount;<sp/>n++)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>cmd_list<sp/>=<sp/>draw_data-&gt;CmdLists[n];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_i<sp/>=<sp/>0;<sp/>cmd_i<sp/>&lt;<sp/>cmd_list-&gt;CmdBuffer.Size;<sp/>cmd_i++)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_cmd" kindref="compound">ImDrawCmd</ref>*<sp/>pcmd<sp/>=<sp/>&amp;cmd_list-&gt;CmdBuffer[cmd_i];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcmd-&gt;UserCallback<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>callback,<sp/>registered<sp/>via<sp/>ImDrawList::AddCallback()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(ImDrawCallback_ResetRenderState<sp/>is<sp/>a<sp/>special<sp/>callback<sp/>value<sp/>used<sp/>by<sp/>the<sp/>user<sp/>to<sp/>request<sp/>the<sp/>renderer<sp/>to<sp/>reset<sp/>render<sp/>state.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcmd-&gt;UserCallback<sp/>==<sp/>ImDrawCallback_ResetRenderState)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWGPU_SetupRenderState(draw_data,<sp/>pass_encoder,<sp/>fr);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcmd-&gt;UserCallback(cmd_list,<sp/>pcmd);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>custom<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextureID<sp/>tex_id<sp/>=<sp/>pcmd-&gt;GetTexID();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiID<sp/>tex_id_hash<sp/>=<sp/>ImHashData(&amp;tex_id,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tex_id));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bind_group<sp/>=<sp/>g_resources.ImageBindGroups.GetVoidPtr(tex_id_hash);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind_group)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetBindGroup(pass_encoder,<sp/>1,<sp/>(WGPUBindGroup)bind_group,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUBindGroup<sp/>image_bind_group<sp/>=<sp/>ImGui_ImplWGPU_CreateImageBindGroup(g_resources.ImageBindGroupLayout,<sp/>(WGPUTextureView)tex_id);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_resources.ImageBindGroups.SetVoidPtr(tex_id_hash,<sp/>image_bind_group);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetBindGroup(pass_encoder,<sp/>1,<sp/>image_bind_group,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>scissor/clipping<sp/>rectangles<sp/>into<sp/>framebuffer<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>clip_min((pcmd-&gt;ClipRect.x<sp/>-<sp/>clip_off.x)<sp/>*<sp/>clip_scale.x,<sp/>(pcmd-&gt;ClipRect.y<sp/>-<sp/>clip_off.y)<sp/>*<sp/>clip_scale.y);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>clip_max((pcmd-&gt;ClipRect.z<sp/>-<sp/>clip_off.x)<sp/>*<sp/>clip_scale.x,<sp/>(pcmd-&gt;ClipRect.w<sp/>-<sp/>clip_off.y)<sp/>*<sp/>clip_scale.y);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip_max.x<sp/>&lt;=<sp/>clip_min.x<sp/>||<sp/>clip_max.y<sp/>&lt;=<sp/>clip_min.y)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>scissor/clipping<sp/>rectangle,<sp/>Draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderSetScissorRect(pass_encoder,<sp/>(uint32_t)clip_min.x,<sp/>(uint32_t)clip_min.y,<sp/>(uint32_t)(clip_max.x<sp/>-<sp/>clip_min.x),<sp/>(uint32_t)(clip_max.y<sp/>-<sp/>clip_min.y));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuRenderPassEncoderDrawIndexed(pass_encoder,<sp/>pcmd-&gt;ElemCount,<sp/>1,<sp/>pcmd-&gt;IdxOffset<sp/>+<sp/>global_idx_offset,<sp/>pcmd-&gt;VtxOffset<sp/>+<sp/>global_vtx_offset,<sp/>0);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_idx_offset<sp/>+=<sp/>cmd_list-&gt;IdxBuffer.Size;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_vtx_offset<sp/>+=<sp/>cmd_list-&gt;VtxBuffer.Size;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_CreateFontsTexture()</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>texture<sp/>atlas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pixels;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height,<sp/>size_pp;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>io.Fonts-&gt;GetTexDataAsRGBA32(&amp;pixels,<sp/>&amp;width,<sp/>&amp;height,<sp/>&amp;size_pp);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>texture<sp/>to<sp/>graphics<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUTextureDescriptor<sp/>tex_desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Dear<sp/>ImGui<sp/>Font<sp/>Texture&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.dimension<sp/>=<sp/>WGPUTextureDimension_2D;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.size.width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.size.height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.size.depthOrArrayLayers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.sampleCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.format<sp/>=<sp/>WGPUTextureFormat_RGBA8Unorm;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.mipLevelCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_desc.usage<sp/>=<sp/>WGPUTextureUsage_CopyDst<sp/>|<sp/>WGPUTextureUsage_TextureBinding;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_resources.FontTexture<sp/>=<sp/>wgpuDeviceCreateTexture(g_wgpuDevice,<sp/>&amp;tex_desc);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUTextureViewDescriptor<sp/>tex_view_desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_view_desc.format<sp/>=<sp/>WGPUTextureFormat_RGBA8Unorm;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_view_desc.dimension<sp/>=<sp/>WGPUTextureViewDimension_2D;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_view_desc.baseMipLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_view_desc.mipLevelCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_view_desc.baseArrayLayer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_view_desc.arrayLayerCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_view_desc.aspect<sp/>=<sp/>WGPUTextureAspect_All;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_resources.FontTextureView<sp/>=<sp/>wgpuTextureCreateView(g_resources.FontTexture,<sp/>&amp;tex_view_desc);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>texture<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUImageCopyTexture<sp/>dst_view<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_view.texture<sp/>=<sp/>g_resources.FontTexture;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_view.mipLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_view.origin<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_view.aspect<sp/>=<sp/>WGPUTextureAspect_All;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUTextureDataLayout<sp/>layout<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.bytesPerRow<sp/>=<sp/>width<sp/>*<sp/>size_pp;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.rowsPerImage<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUExtent3D<sp/>size<sp/>=<sp/>{<sp/>(<ref refid="group__gtc__type__precision_1ga822ca53a9ad412504532838906276a99" kindref="member">uint32_t</ref>)width,<sp/>(uint32_t)height,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgpuQueueWriteTexture(g_defaultQueue,<sp/>&amp;dst_view,<sp/>pixels,<sp/>(uint32_t)(width<sp/>*<sp/>size_pp<sp/>*<sp/>height),<sp/>&amp;layout,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>associated<sp/>sampler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUSamplerDescriptor<sp/>sampler_desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampler_desc.minFilter<sp/>=<sp/>WGPUFilterMode_Linear;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampler_desc.magFilter<sp/>=<sp/>WGPUFilterMode_Linear;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampler_desc.mipmapFilter<sp/>=<sp/>WGPUFilterMode_Linear;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampler_desc.addressModeU<sp/>=<sp/>WGPUAddressMode_Repeat;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampler_desc.addressModeV<sp/>=<sp/>WGPUAddressMode_Repeat;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampler_desc.addressModeW<sp/>=<sp/>WGPUAddressMode_Repeat;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampler_desc.maxAnisotropy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_resources.Sampler<sp/>=<sp/>wgpuDeviceCreateSampler(g_wgpuDevice,<sp/>&amp;sampler_desc);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>our<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImTextureID)<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(g_resources.FontTexture),<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>pack<sp/>descriptor<sp/>handle<sp/>into<sp/>TexID,<sp/>32-bit<sp/>not<sp/>supported<sp/>yet.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>io.Fonts-&gt;SetTexID((ImTextureID)g_resources.FontTextureView);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_CreateUniformBuffer()</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBufferDescriptor<sp/>ub_desc<sp/>=</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dear<sp/>ImGui<sp/>Uniform<sp/>buffer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGPUBufferUsage_CopyDst<sp/>|<sp/>WGPUBufferUsage_Uniform,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_uniforms" kindref="compound">Uniforms</ref>),</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.Uniforms<sp/>=<sp/>wgpuDeviceCreateBuffer(g_wgpuDevice,<sp/>&amp;ub_desc);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_CreateDeviceObjects()</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g_wgpuDevice)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_pipelineState)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWGPU_InvalidateDeviceObjects();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>render<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPURenderPipelineDescriptor<sp/>graphics_pipeline_desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.primitive.topology<sp/>=<sp/>WGPUPrimitiveTopology_TriangleList;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.primitive.stripIndexFormat<sp/>=<sp/>WGPUIndexFormat_Undefined;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.primitive.frontFace<sp/>=<sp/>WGPUFrontFace_CW;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.primitive.cullMode<sp/>=<sp/>WGPUCullMode_None;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.multisample.count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.multisample.mask<sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.multisample.alphaToCoverageEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.layout<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>automatic<sp/>layout<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>vertex<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUProgrammableStageDescriptor<sp/>vertex_shader_desc<sp/>=<sp/>ImGui_ImplWGPU_CreateShaderModule(__glsl_shader_vert_spv,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__glsl_shader_vert_spv)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.vertex.module<sp/>=<sp/>vertex_shader_desc.module;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.vertex.entryPoint<sp/>=<sp/>vertex_shader_desc.entryPoint;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>input<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUVertexAttribute<sp/>attribute_desc[]<sp/>=</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>WGPUVertexFormat_Float32x2,<sp/>(<ref refid="group__gtc__type__precision_1ga058f57c19e1befdcf12498944bd73e69" kindref="member">uint64_t</ref>)IM_OFFSETOF(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>,<sp/>pos),<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>WGPUVertexFormat_Float32x2,<sp/>(<ref refid="group__gtc__type__precision_1ga058f57c19e1befdcf12498944bd73e69" kindref="member">uint64_t</ref>)IM_OFFSETOF(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>,<sp/>uv),<sp/><sp/>1<sp/>},</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>WGPUVertexFormat_Unorm8x4,<sp/><sp/>(<ref refid="group__gtc__type__precision_1ga058f57c19e1befdcf12498944bd73e69" kindref="member">uint64_t</ref>)IM_OFFSETOF(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>,<sp/>col),<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUVertexBufferLayout<sp/>buffer_layouts[1];</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_layouts[0].arrayStride<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_layouts[0].stepMode<sp/>=<sp/>WGPUVertexStepMode_Vertex;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_layouts[0].attributeCount<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_layouts[0].attributes<sp/>=<sp/>attribute_desc;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.vertex.bufferCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.vertex.buffers<sp/>=<sp/>buffer_layouts;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>pixel<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUProgrammableStageDescriptor<sp/>pixel_shader_desc<sp/>=<sp/>ImGui_ImplWGPU_CreateShaderModule(__glsl_shader_frag_spv,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__glsl_shader_frag_spv)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>blending<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBlendState<sp/>blend_state<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>blend_state.alpha.operation<sp/>=<sp/>WGPUBlendOperation_Add;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>blend_state.alpha.srcFactor<sp/>=<sp/>WGPUBlendFactor_One;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>blend_state.alpha.dstFactor<sp/>=<sp/>WGPUBlendFactor_OneMinusSrcAlpha;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>blend_state.color.operation<sp/>=<sp/>WGPUBlendOperation_Add;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>blend_state.color.srcFactor<sp/>=<sp/>WGPUBlendFactor_SrcAlpha;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>blend_state.color.dstFactor<sp/>=<sp/>WGPUBlendFactor_OneMinusSrcAlpha;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUColorTargetState<sp/>color_state<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>color_state.format<sp/>=<sp/>g_renderTargetFormat;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>color_state.blend<sp/>=<sp/>&amp;blend_state;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>color_state.writeMask<sp/>=<sp/>WGPUColorWriteMask_All;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUFragmentState<sp/>fragment_state<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>fragment_state.module<sp/>=<sp/>pixel_shader_desc.module;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>fragment_state.entryPoint<sp/>=<sp/>pixel_shader_desc.entryPoint;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>fragment_state.targetCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>fragment_state.targets<sp/>=<sp/>&amp;color_state;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.fragment<sp/>=<sp/>&amp;fragment_state;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>depth-stencil<sp/>State</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUDepthStencilState<sp/>depth_stencil_state<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>depth_stencil_state.depthBias<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>depth_stencil_state.depthBiasClamp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>depth_stencil_state.depthBiasSlopeScale<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>disabled<sp/>depth-stencil<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>graphics_pipeline_desc.depthStencil<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pipelineState<sp/>=<sp/>wgpuDeviceCreateRenderPipeline(g_wgpuDevice,<sp/>&amp;graphics_pipeline_desc);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWGPU_CreateFontsTexture();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWGPU_CreateUniformBuffer();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>resource<sp/>bind<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroupLayout<sp/>bg_layouts[2];</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>bg_layouts[0]<sp/>=<sp/>wgpuRenderPipelineGetBindGroupLayout(g_pipelineState,<sp/>0);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>bg_layouts[1]<sp/>=<sp/>wgpuRenderPipelineGetBindGroupLayout(g_pipelineState,<sp/>1);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroupEntry<sp/>common_bg_entries[]<sp/>=</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0,<sp/>g_resources.Uniforms,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_uniforms" kindref="compound">Uniforms</ref>),<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/>g_resources.Sampler,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroupDescriptor<sp/>common_bg_descriptor<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>common_bg_descriptor.layout<sp/>=<sp/>bg_layouts[0];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>common_bg_descriptor.entryCount<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(common_bg_entries)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(WGPUBindGroupEntry);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>common_bg_descriptor.entries<sp/>=<sp/>common_bg_entries;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.CommonBindGroup<sp/>=<sp/>wgpuDeviceCreateBindGroup(g_wgpuDevice,<sp/>&amp;common_bg_descriptor);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>WGPUBindGroup<sp/>image_bind_group<sp/>=<sp/>ImGui_ImplWGPU_CreateImageBindGroup(bg_layouts[1],<sp/>g_resources.FontTextureView);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.ImageBindGroup<sp/>=<sp/>image_bind_group;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.ImageBindGroupLayout<sp/>=<sp/>bg_layouts[1];</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.ImageBindGroups.SetVoidPtr(ImHashData(&amp;g_resources.FontTextureView,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImTextureID)),<sp/>image_bind_group);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(vertex_shader_desc.module);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(pixel_shader_desc.module);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(bg_layouts[0]);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_InvalidateDeviceObjects()</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g_wgpuDevice)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(g_pipelineState);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(g_resources);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>io.Fonts-&gt;SetTexID(NULL);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>copied<sp/>g_pFontTextureView<sp/>to<sp/>io.Fonts-&gt;TexID<sp/>so<sp/>let&apos;s<sp/>clear<sp/>that<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_numFramesInFlight;<sp/>i++)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(g_pFrameResources[i]);</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_Init(WGPUDevice<sp/>device,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_frames_in_flight,<sp/>WGPUTextureFormat<sp/>rt_format)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>backend<sp/>capabilities<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendRendererName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;imgui_impl_webgpu&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_RendererHasVtxOffset;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>the<sp/>ImDrawCmd::VtxOffset<sp/>field,<sp/>allowing<sp/>for<sp/>large<sp/>meshes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>g_wgpuDevice<sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>g_defaultQueue<sp/>=<sp/>wgpuDeviceGetQueue(g_wgpuDevice);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>g_renderTargetFormat<sp/>=<sp/>rt_format;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pFrameResources<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref>[num_frames_in_flight];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>g_numFramesInFlight<sp/>=<sp/>num_frames_in_flight;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>g_frameIndex<sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.FontTexture<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.FontTextureView<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.Sampler<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.Uniforms<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.CommonBindGroup<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.ImageBindGroups.Data.reserve(100);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.ImageBindGroup<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>g_resources.ImageBindGroupLayout<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>buffers<sp/>with<sp/>a<sp/>default<sp/>size<sp/>(they<sp/>will<sp/>later<sp/>be<sp/>grown<sp/>as<sp/>needed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_frames_in_flight;<sp/>i++)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_frame_resources" kindref="compound">FrameResources</ref>*<sp/>fr<sp/>=<sp/>&amp;g_pFrameResources[i];</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;IndexBuffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;VertexBuffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;IndexBufferHost<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;VertexBufferHost<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;IndexBufferSize<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;VertexBufferSize<sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_Shutdown()</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWGPU_InvalidateDeviceObjects();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>g_pFrameResources;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pFrameResources<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>wgpuQueueRelease(g_defaultQueue);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>g_wgpuDevice<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>g_numFramesInFlight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>g_frameIndex<sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWGPU_NewFrame()</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g_pipelineState)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWGPU_CreateDeviceObjects();</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/backends/imgui_impl_wgpu.cpp"/>
  </compounddef>
</doxygen>
