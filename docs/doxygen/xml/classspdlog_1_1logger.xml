<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classspdlog_1_1logger" kind="class" language="C++" prot="public">
    <compoundname>spdlog::logger</compoundname>
    <derivedcompoundref refid="classspdlog_1_1async__logger" prot="public" virt="non-virtual">spdlog::async_logger</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classspdlog_1_1logger_1a75c1f8d46f532e221eb0ace35fdd0513" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string spdlog::logger::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="347" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1logger_1a24a3b3250f3fe52fa7c3053e77076f07" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; sink_ptr &gt;</type>
        <definition>std::vector&lt;sink_ptr&gt; spdlog::logger::sinks_</definition>
        <argsstring></argsstring>
        <name>sinks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="348" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1logger_1af167b5b45a369b3cef019b40a87ed71d" prot="protected" static="no" mutable="no">
        <type>spdlog::level_t</type>
        <definition>spdlog::level_t spdlog::logger::level_</definition>
        <argsstring></argsstring>
        <name>level_</name>
        <initializer>{level::info}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="349" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1logger_1a69f7cbb7e1b2d5204a409906a62c1e94" prot="protected" static="no" mutable="no">
        <type>spdlog::level_t</type>
        <definition>spdlog::level_t spdlog::logger::flush_level_</definition>
        <argsstring></argsstring>
        <name>flush_level_</name>
        <initializer>{level::off}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="350" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1logger_1a30967665909689412dfdfc856fd6a291" prot="protected" static="no" mutable="no">
        <type>err_handler</type>
        <definition>err_handler spdlog::logger::custom_err_handler_</definition>
        <argsstring></argsstring>
        <name>custom_err_handler_</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="351" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspdlog_1_1logger_1aa1e98497db9dadb18f7f1b5ac22570d1" prot="protected" static="no" mutable="no">
        <type><ref refid="classspdlog_1_1details_1_1backtracer" kindref="compound">details::backtracer</ref></type>
        <definition>details::backtracer spdlog::logger::tracer_</definition>
        <argsstring></argsstring>
        <name>tracer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="352" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspdlog_1_1logger_1a441b6358c8df8fdc2367c9977b3c6fc2" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spdlog::logger::logger</definition>
        <argsstring>(std::string name)</argsstring>
        <name>logger</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="58" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a414da79baaad89ba6ffe0e738027d234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>spdlog::logger::logger</definition>
        <argsstring>(std::string name, It begin, It end)</argsstring>
        <name>logger</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>It</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>It</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="65" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a5d3b321a0319e9b8b27bf04f206a9900" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spdlog::logger::logger</definition>
        <argsstring>(std::string name, sink_ptr single_sink)</argsstring>
        <name>logger</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>sink_ptr</type>
          <declname>single_sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="71" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1af1f2f69f6bbbe9eb23cf428d66d20f70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spdlog::logger::logger</definition>
        <argsstring>(std::string name, sinks_init_list sinks)</argsstring>
        <name>logger</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>sinks_init_list</type>
          <declname>sinks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="76" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a5dee08a3f5a645fc579ff0ff4341e826" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual spdlog::logger::~logger</definition>
        <argsstring>()=default</argsstring>
        <name>~logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="80" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a67d32122668fb28ae79ef8bbc37d4762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPDLOG_INLINE spdlog::logger::logger</definition>
        <argsstring>(const logger &amp;other)</argsstring>
        <name>logger</name>
        <param>
          <type>const <ref refid="classspdlog_1_1logger" kindref="compound">logger</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="82" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="19" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a6570c456c96f3898fb890336853c110b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPDLOG_INLINE spdlog::logger::logger</definition>
        <argsstring>(logger &amp;&amp;other) SPDLOG_NOEXCEPT</argsstring>
        <name>logger</name>
        <param>
          <type><ref refid="classspdlog_1_1logger" kindref="compound">logger</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="83" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ac600636cb690d41f6652ad1c9cc957cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspdlog_1_1logger" kindref="compound">logger</ref> &amp;</type>
        <definition>SPDLOG_INLINE logger &amp; spdlog::logger::operator=</definition>
        <argsstring>(logger other) SPDLOG_NOEXCEPT</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classspdlog_1_1logger" kindref="compound">logger</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="84" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ae051dea63dc86dd5bb30106ee3b32404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::swap</definition>
        <argsstring>(spdlog::logger &amp;other) SPDLOG_NOEXCEPT</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classspdlog_1_1logger" kindref="compound">spdlog::logger</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="85" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="43" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1aa42720b5beb621a6bf3dad59c30f4bcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::log</definition>
        <argsstring>(source_loc loc, level::level_enum lvl, format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="structspdlog_1_1source__loc" kindref="compound">source_loc</ref></type>
          <declname>loc</declname>
        </param>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="88" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a20ce31430d3ac669aea7e5c5c6c9d551" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::log</definition>
        <argsstring>(level::level_enum lvl, format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>log</name>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="94" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a1c9edb4ac399c6167c1a9c6ccef9dd74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::log</definition>
        <argsstring>(level::level_enum lvl, const T &amp;msg)</argsstring>
        <name>log</name>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="100" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a044247975b854cb3812f245ffb08c818" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structspdlog_1_1is__convertible__to__any__format__string" kindref="compound">is_convertible_to_any_format_string</ref>&lt; const T &amp; &gt;::<ref refid="classvalue" kindref="compound">value</ref>, int &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::log</definition>
        <argsstring>(source_loc loc, level::level_enum lvl, const T &amp;msg)</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="structspdlog_1_1source__loc" kindref="compound">source_loc</ref></type>
          <declname>loc</declname>
        </param>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="107" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a247918cc345ba5133523d177c96eac33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spdlog::logger::log</definition>
        <argsstring>(log_clock::time_point log_time, source_loc loc, level::level_enum lvl, string_view_t msg)</argsstring>
        <name>log</name>
        <param>
          <type>log_clock::time_point</type>
          <declname>log_time</declname>
        </param>
        <param>
          <type><ref refid="structspdlog_1_1source__loc" kindref="compound">source_loc</ref></type>
          <declname>loc</declname>
        </param>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>string_view_t</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="112" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="112" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ae25e7b37fd89b1c1dce80abc1c388469" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spdlog::logger::log</definition>
        <argsstring>(source_loc loc, level::level_enum lvl, string_view_t msg)</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="structspdlog_1_1source__loc" kindref="compound">source_loc</ref></type>
          <declname>loc</declname>
        </param>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>string_view_t</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="125" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ad7532e31ce265eb79a8c2957eba7ec95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spdlog::logger::log</definition>
        <argsstring>(level::level_enum lvl, string_view_t msg)</argsstring>
        <name>log</name>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>string_view_t</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="138" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a328cff019939d2e1ba2545a2bdcd1cb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::trace</definition>
        <argsstring>(format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>trace</name>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="144" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1acfce06adba3320e14fa1ec3a601b5698" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::debug</definition>
        <argsstring>(format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>debug</name>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="150" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1aae08b1297464e3eb5ea8801862b005f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::info</definition>
        <argsstring>(format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>info</name>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="156" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a1a48e00ae7eef7d07c77e4812c1fe007" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::warn</definition>
        <argsstring>(format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>warn</name>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="162" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a7da7e1c975dc988d4700da46cfae0d52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::error</definition>
        <argsstring>(format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>error</name>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="168" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a991506a6a08cb5706fef78d39dae537e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::critical</definition>
        <argsstring>(format_string_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>critical</name>
        <param>
          <type>format_string_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="174" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a66e008d30a46c33283c4546f3851a80a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::trace</definition>
        <argsstring>(const T &amp;msg)</argsstring>
        <name>trace</name>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="265" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1aca96637e71ab459738ccc7287be28c2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::debug</definition>
        <argsstring>(const T &amp;msg)</argsstring>
        <name>debug</name>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="271" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a1e1dff0caa0d1bf072739dfcc1e331d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::info</definition>
        <argsstring>(const T &amp;msg)</argsstring>
        <name>info</name>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="277" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1af9153fa3a0735a535ea56f684dc53256" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::warn</definition>
        <argsstring>(const T &amp;msg)</argsstring>
        <name>warn</name>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="283" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a9ce73acaa12b7dbbecde6ac3bc7353e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::error</definition>
        <argsstring>(const T &amp;msg)</argsstring>
        <name>error</name>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="289" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a3c5140393ec153b2b8478361aac80eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::critical</definition>
        <argsstring>(const T &amp;msg)</argsstring>
        <name>critical</name>
        <param>
          <type>const T &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="295" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a94c77395570c462953ded4188aaaf655" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool spdlog::logger::should_log</definition>
        <argsstring>(level::level_enum msg_level) const</argsstring>
        <name>should_log</name>
        <param>
          <type>level::level_enum</type>
          <declname>msg_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="301" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="301" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a1a1bcc96a0ca719475685800a8802379" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool spdlog::logger::should_backtrace</definition>
        <argsstring>() const</argsstring>
        <name>should_backtrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="307" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1aeaf7078135688ea4df96ea8c8e11e0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::set_level</definition>
        <argsstring>(level::level_enum log_level)</argsstring>
        <name>set_level</name>
        <param>
          <type>level::level_enum</type>
          <declname>log_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="312" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a07de3c012b7f11d19ff1007e8aff6a31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>level::level_enum</type>
        <definition>SPDLOG_INLINE level::level_enum spdlog::logger::level</definition>
        <argsstring>() const</argsstring>
        <name>level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="314" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ab1f5f63fcc8517b1105b4f640c1143ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>SPDLOG_INLINE const std::string &amp; spdlog::logger::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="316" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a109da2030da643440092613cb100b5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::set_formatter</definition>
        <argsstring>(std::unique_ptr&lt; formatter &gt; f)</argsstring>
        <name>set_formatter</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classspdlog_1_1formatter" kindref="compound">formatter</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="320" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="84" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a12cd69af480fb8b4059821000a9afd20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::set_pattern</definition>
        <argsstring>(std::string pattern, pattern_time_type time_type=pattern_time_type::local)</argsstring>
        <name>set_pattern</name>
        <param>
          <type>std::string</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>pattern_time_type</type>
          <declname>time_type</declname>
          <defval>pattern_time_type::local</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="322" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a815292ea2223b77b86c39bb2e0a98462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::enable_backtrace</definition>
        <argsstring>(size_t n_messages)</argsstring>
        <name>enable_backtrace</name>
        <param>
          <type>size_t</type>
          <declname>n_messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="326" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1af3803316079e8e814a2f8460aee0dc63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::disable_backtrace</definition>
        <argsstring>()</argsstring>
        <name>disable_backtrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="327" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1adc83cee10165291cd75b100c51e20f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::dump_backtrace</definition>
        <argsstring>()</argsstring>
        <name>dump_backtrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="328" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ae7dacca7ca1d6383d910d2a1c483b6da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="331" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a57179a06ab8a21e4f16e7497302c47db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::flush_on</definition>
        <argsstring>(level::level_enum log_level)</argsstring>
        <name>flush_on</name>
        <param>
          <type>level::level_enum</type>
          <declname>log_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="332" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a531a5fdd8cc96405858bf64a272614d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>level::level_enum</type>
        <definition>SPDLOG_INLINE level::level_enum spdlog::logger::flush_level</definition>
        <argsstring>() const</argsstring>
        <name>flush_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="333" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a6d64051f87d3c1c9d01693e1f4d4982b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; sink_ptr &gt; &amp;</type>
        <definition>SPDLOG_INLINE const std::vector&lt; sink_ptr &gt; &amp; spdlog::logger::sinks</definition>
        <argsstring>() const</argsstring>
        <name>sinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="336" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1af119a1643b29610f0db52fb11ba713ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; sink_ptr &gt; &amp;</type>
        <definition>SPDLOG_INLINE std::vector&lt; sink_ptr &gt; &amp; spdlog::logger::sinks</definition>
        <argsstring>()</argsstring>
        <name>sinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="338" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ab855ed44bf4807a0441a5e053b5c1ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::set_error_handler</definition>
        <argsstring>(err_handler)</argsstring>
        <name>set_error_handler</name>
        <param>
          <type>err_handler</type>
          <defname>handler</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="341" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a953200cbe04c2e694d53781c2066a834" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classspdlog_1_1logger" kindref="compound">logger</ref> &gt;</type>
        <definition>SPDLOG_INLINE std::shared_ptr&lt; logger &gt; spdlog::logger::clone</definition>
        <argsstring>(std::string logger_name)</argsstring>
        <name>clone</name>
        <reimplementedby refid="classspdlog_1_1async__logger_1a1ba06033da941175e6c3adf6cab0aeb9">clone</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>logger_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="344" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="158" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classspdlog_1_1logger_1ac04cfda09ada4084f65c52805ffb36ca" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void spdlog::logger::log_</definition>
        <argsstring>(source_loc loc, level::level_enum lvl, string_view_t fmt, Args &amp;&amp;... args)</argsstring>
        <name>log_</name>
        <param>
          <type><ref refid="structspdlog_1_1source__loc" kindref="compound">source_loc</ref></type>
          <declname>loc</declname>
        </param>
        <param>
          <type>level::level_enum</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>string_view_t</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="356" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="356" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1af4f4e7fef776a4443e8e691dca560aec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::log_it_</definition>
        <argsstring>(const details::log_msg &amp;log_msg, bool log_enabled, bool traceback_enabled)</argsstring>
        <name>log_it_</name>
        <param>
          <type>const <ref refid="structspdlog_1_1details_1_1log__msg" kindref="compound">details::log_msg</ref> &amp;</type>
          <declname>log_msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>log_enabled</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>traceback_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="430" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="166" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a903938d3018e32dedcbd090e624ab5ee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::sink_it_</definition>
        <argsstring>(const details::log_msg &amp;msg)</argsstring>
        <name>sink_it_</name>
        <reimplementedby refid="classspdlog_1_1async__logger_1ac28dab7d752dc73832bb08c408362cec">sink_it_</reimplementedby>
        <param>
          <type>const <ref refid="structspdlog_1_1details_1_1log__msg" kindref="compound">details::log_msg</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="431" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="178" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a4410446ddde8880655f00729521e9718" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::flush_</definition>
        <argsstring>()</argsstring>
        <name>flush_</name>
        <reimplementedby refid="classspdlog_1_1async__logger_1a945adeb3652f3ffafa4532924a214773">flush_</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="432" column="18" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="198" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1aec0da766a100f05af1926404d1ce975f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::dump_backtrace_</definition>
        <argsstring>()</argsstring>
        <name>dump_backtrace_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="433" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="210" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1ad39bf7f0608d13e335dd19dfce484b36" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>SPDLOG_INLINE bool spdlog::logger::should_flush_</definition>
        <argsstring>(const details::log_msg &amp;msg)</argsstring>
        <name>should_flush_</name>
        <param>
          <type>const <ref refid="structspdlog_1_1details_1_1log__msg" kindref="compound">details::log_msg</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="434" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="221" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classspdlog_1_1logger_1a6bd679195d6f128bc60750113608f65c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SPDLOG_INLINE void spdlog::logger::err_handler_</definition>
        <argsstring>(const std::string &amp;msg)</argsstring>
        <name>err_handler_</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="438" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger-inl.h" bodystart="227" bodyend="256"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>spdlog::async_logger</label>
        <link refid="classspdlog_1_1async__logger"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>spdlog::logger</label>
        <link refid="classspdlog_1_1logger"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>spdlog::details::backtracer</label>
        <link refid="classspdlog_1_1details_1_1backtracer"/>
      </node>
      <node id="1">
        <label>spdlog::logger</label>
        <link refid="classspdlog_1_1logger"/>
        <childnode refid="2" relation="usage">
          <edgelabel>tracer_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" line="54" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/logger.h" bodystart="55" bodyend="439"/>
    <listofallmembers>
      <member refid="classspdlog_1_1logger_1a953200cbe04c2e694d53781c2066a834" prot="public" virt="virtual"><scope>spdlog::logger</scope><name>clone</name></member>
      <member refid="classspdlog_1_1logger_1a991506a6a08cb5706fef78d39dae537e" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>critical</name></member>
      <member refid="classspdlog_1_1logger_1a3c5140393ec153b2b8478361aac80eb6" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>critical</name></member>
      <member refid="classspdlog_1_1logger_1a30967665909689412dfdfc856fd6a291" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>custom_err_handler_</name></member>
      <member refid="classspdlog_1_1logger_1acfce06adba3320e14fa1ec3a601b5698" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>debug</name></member>
      <member refid="classspdlog_1_1logger_1aca96637e71ab459738ccc7287be28c2e" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>debug</name></member>
      <member refid="classspdlog_1_1logger_1af3803316079e8e814a2f8460aee0dc63" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>disable_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1adc83cee10165291cd75b100c51e20f3f" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>dump_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1aec0da766a100f05af1926404d1ce975f" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>dump_backtrace_</name></member>
      <member refid="classspdlog_1_1logger_1a815292ea2223b77b86c39bb2e0a98462" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>enable_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1a6bd679195d6f128bc60750113608f65c" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>err_handler_</name></member>
      <member refid="classspdlog_1_1logger_1a7da7e1c975dc988d4700da46cfae0d52" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>error</name></member>
      <member refid="classspdlog_1_1logger_1a9ce73acaa12b7dbbecde6ac3bc7353e5" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>error</name></member>
      <member refid="classspdlog_1_1logger_1ae7dacca7ca1d6383d910d2a1c483b6da" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>flush</name></member>
      <member refid="classspdlog_1_1logger_1a4410446ddde8880655f00729521e9718" prot="protected" virt="virtual"><scope>spdlog::logger</scope><name>flush_</name></member>
      <member refid="classspdlog_1_1logger_1a531a5fdd8cc96405858bf64a272614d3" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>flush_level</name></member>
      <member refid="classspdlog_1_1logger_1a69f7cbb7e1b2d5204a409906a62c1e94" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>flush_level_</name></member>
      <member refid="classspdlog_1_1logger_1a57179a06ab8a21e4f16e7497302c47db" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>flush_on</name></member>
      <member refid="classspdlog_1_1logger_1aae08b1297464e3eb5ea8801862b005f0" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>info</name></member>
      <member refid="classspdlog_1_1logger_1a1e1dff0caa0d1bf072739dfcc1e331d8" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>info</name></member>
      <member refid="classspdlog_1_1logger_1a07de3c012b7f11d19ff1007e8aff6a31" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>level</name></member>
      <member refid="classspdlog_1_1logger_1af167b5b45a369b3cef019b40a87ed71d" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>level_</name></member>
      <member refid="classspdlog_1_1logger_1aa42720b5beb621a6bf3dad59c30f4bcc" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a20ce31430d3ac669aea7e5c5c6c9d551" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a1c9edb4ac399c6167c1a9c6ccef9dd74" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a044247975b854cb3812f245ffb08c818" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1a247918cc345ba5133523d177c96eac33" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1ae25e7b37fd89b1c1dce80abc1c388469" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1ad7532e31ce265eb79a8c2957eba7ec95" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>log</name></member>
      <member refid="classspdlog_1_1logger_1ac04cfda09ada4084f65c52805ffb36ca" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>log_</name></member>
      <member refid="classspdlog_1_1logger_1af4f4e7fef776a4443e8e691dca560aec" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>log_it_</name></member>
      <member refid="classspdlog_1_1logger_1a441b6358c8df8fdc2367c9977b3c6fc2" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a414da79baaad89ba6ffe0e738027d234" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a5d3b321a0319e9b8b27bf04f206a9900" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1af1f2f69f6bbbe9eb23cf428d66d20f70" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a67d32122668fb28ae79ef8bbc37d4762" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1a6570c456c96f3898fb890336853c110b" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>logger</name></member>
      <member refid="classspdlog_1_1logger_1ab1f5f63fcc8517b1105b4f640c1143ad" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>name</name></member>
      <member refid="classspdlog_1_1logger_1a75c1f8d46f532e221eb0ace35fdd0513" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>name_</name></member>
      <member refid="classspdlog_1_1logger_1ac600636cb690d41f6652ad1c9cc957cf" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>operator=</name></member>
      <member refid="classspdlog_1_1logger_1ab855ed44bf4807a0441a5e053b5c1ac1" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>set_error_handler</name></member>
      <member refid="classspdlog_1_1logger_1a109da2030da643440092613cb100b5f0" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>set_formatter</name></member>
      <member refid="classspdlog_1_1logger_1aeaf7078135688ea4df96ea8c8e11e0e7" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>set_level</name></member>
      <member refid="classspdlog_1_1logger_1a12cd69af480fb8b4059821000a9afd20" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>set_pattern</name></member>
      <member refid="classspdlog_1_1logger_1a1a1bcc96a0ca719475685800a8802379" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>should_backtrace</name></member>
      <member refid="classspdlog_1_1logger_1ad39bf7f0608d13e335dd19dfce484b36" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>should_flush_</name></member>
      <member refid="classspdlog_1_1logger_1a94c77395570c462953ded4188aaaf655" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>should_log</name></member>
      <member refid="classspdlog_1_1logger_1a903938d3018e32dedcbd090e624ab5ee" prot="protected" virt="virtual"><scope>spdlog::logger</scope><name>sink_it_</name></member>
      <member refid="classspdlog_1_1logger_1a6d64051f87d3c1c9d01693e1f4d4982b" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>sinks</name></member>
      <member refid="classspdlog_1_1logger_1af119a1643b29610f0db52fb11ba713ba" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>sinks</name></member>
      <member refid="classspdlog_1_1logger_1a24a3b3250f3fe52fa7c3053e77076f07" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>sinks_</name></member>
      <member refid="classspdlog_1_1logger_1ae051dea63dc86dd5bb30106ee3b32404" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>swap</name></member>
      <member refid="classspdlog_1_1logger_1a328cff019939d2e1ba2545a2bdcd1cb2" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>trace</name></member>
      <member refid="classspdlog_1_1logger_1a66e008d30a46c33283c4546f3851a80a" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>trace</name></member>
      <member refid="classspdlog_1_1logger_1aa1e98497db9dadb18f7f1b5ac22570d1" prot="protected" virt="non-virtual"><scope>spdlog::logger</scope><name>tracer_</name></member>
      <member refid="classspdlog_1_1logger_1a1a48e00ae7eef7d07c77e4812c1fe007" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>warn</name></member>
      <member refid="classspdlog_1_1logger_1af9153fa3a0735a535ea56f684dc53256" prot="public" virt="non-virtual"><scope>spdlog::logger</scope><name>warn</name></member>
      <member refid="classspdlog_1_1logger_1a5dee08a3f5a645fc579ff0ff4341e826" prot="public" virt="virtual"><scope>spdlog::logger</scope><name>~logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
