<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="core__func__common_8cpp" kind="file" language="C++">
    <compoundname>core_func_common.cpp</compoundname>
    <includes refid="common_8hpp" local="no">glm/common.hpp</includes>
    <includes refid="constants_8hpp" local="no">glm/gtc/constants.hpp</includes>
    <includes refid="epsilon_8hpp" local="no">glm/gtc/epsilon.hpp</includes>
    <includes refid="gtc_2vec1_8hpp" local="no">glm/gtc/vec1.hpp</includes>
    <includes refid="random_8hpp" local="no">glm/gtc/random.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cmath</includes>
    <includes local="no">ctime</includes>
    <incdepgraph>
      <node id="2">
        <label>glm/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>detail/_fixes.hpp</label>
        <link refid="__fixes_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>_vectorize.hpp</label>
        <link refid="__vectorize_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>compute_vector_relational.hpp</label>
        <link refid="compute__vector__relational_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>detail/func_common.inl</label>
        <link refid="func__common_8inl"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>detail/func_exponential.inl</label>
        <link refid="func__exponential_8inl"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>detail/func_geometric.inl</label>
        <link refid="func__geometric_8inl"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>detail/func_matrix.inl</label>
        <link refid="func__matrix_8inl"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>detail/func_trigonometric.inl</label>
        <link refid="func__trigonometric_8inl"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>detail/func_vector_relational.inl</label>
        <link refid="func__vector__relational_8inl"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>detail/qualifier.hpp</label>
        <link refid="qualifier_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>detail/setup.hpp</label>
        <link refid="setup_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>detail/type_float.hpp</label>
        <link refid="type__float_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>detail/type_int.hpp</label>
        <link refid="type__int_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>detail/type_mat.hpp</label>
        <link refid="type__mat_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>detail/type_mat2x2.hpp</label>
        <link refid="type__mat2x2_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>type_mat2x2.inl</label>
        <link refid="type__mat2x2_8inl"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>detail/type_mat2x3.hpp</label>
        <link refid="type__mat2x3_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>type_mat2x3.inl</label>
        <link refid="type__mat2x3_8inl"/>
      </node>
      <node id="48">
        <label>detail/type_mat2x4.hpp</label>
        <link refid="type__mat2x4_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>type_mat2x4.inl</label>
        <link refid="type__mat2x4_8inl"/>
      </node>
      <node id="51">
        <label>detail/type_mat3x2.hpp</label>
        <link refid="type__mat3x2_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>type_mat3x2.inl</label>
        <link refid="type__mat3x2_8inl"/>
      </node>
      <node id="32">
        <label>detail/type_mat3x3.hpp</label>
        <link refid="type__mat3x3_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>type_mat3x3.inl</label>
        <link refid="type__mat3x3_8inl"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>detail/type_mat3x4.hpp</label>
        <link refid="type__mat3x4_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>type_mat3x4.inl</label>
        <link refid="type__mat3x4_8inl"/>
      </node>
      <node id="57">
        <label>detail/type_mat4x2.hpp</label>
        <link refid="type__mat4x2_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>type_mat4x2.inl</label>
        <link refid="type__mat4x2_8inl"/>
      </node>
      <node id="60">
        <label>detail/type_mat4x3.hpp</label>
        <link refid="type__mat4x3_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>type_mat4x3.inl</label>
        <link refid="type__mat4x3_8inl"/>
      </node>
      <node id="63">
        <label>detail/type_mat4x4.hpp</label>
        <link refid="type__mat4x4_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>type_mat4x4.inl</label>
        <link refid="type__mat4x4_8inl"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_vec.hpp</label>
        <link refid="type__vec_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>type_vec1.hpp</label>
        <link refid="type__vec1_8hpp_source"/>
      </node>
      <node id="75">
        <label>../detail/type_vec1.inl</label>
        <link refid="type__vec1_8inl"/>
      </node>
      <node id="17">
        <label>type_vec2.hpp</label>
        <link refid="type__vec2_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>type_vec2.inl</label>
        <link refid="type__vec2_8inl_source"/>
      </node>
      <node id="20">
        <label>type_vec3.hpp</label>
        <link refid="type__vec3_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>type_vec3.inl</label>
        <link refid="type__vec3_8inl_source"/>
      </node>
      <node id="22">
        <label>type_vec4.hpp</label>
        <link refid="type__vec4_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>type_vec4.inl</label>
        <link refid="type__vec4_8inl_source"/>
      </node>
      <node id="68">
        <label>../exponential.hpp</label>
        <link refid="exponential_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>../ext/vec1.hpp</label>
        <link refid="ext_2vec1_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>../fwd.hpp</label>
        <link refid="fwd_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>../geometric.hpp</label>
        <link refid="geometric_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>glm/gtc/constants.hpp</label>
        <link refid="constants_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>constants.inl</label>
        <link refid="constants_8inl"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>glm/gtc/epsilon.hpp</label>
        <link refid="epsilon_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>epsilon.inl</label>
        <link refid="epsilon_8inl"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>quaternion.hpp</label>
        <link refid="gtc_2quaternion_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>quaternion.inl</label>
        <link refid="gtc_2quaternion_8inl"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>glm/gtc/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>random.inl</label>
        <link refid="random_8inl"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>glm/gtc/vec1.hpp</label>
        <link refid="gtc_2vec1_8hpp"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>vec1.inl</label>
        <link refid="gtc_2vec1_8inl"/>
      </node>
      <node id="41">
        <label>mat2x2.hpp</label>
        <link refid="mat2x2_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>mat2x3.hpp</label>
        <link refid="mat2x3_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>mat2x4.hpp</label>
        <link refid="mat2x4_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>mat3x2.hpp</label>
        <link refid="mat3x2_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>../mat3x3.hpp</label>
        <link refid="mat3x3_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>mat3x4.hpp</label>
        <link refid="mat3x4_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>mat4x2.hpp</label>
        <link refid="mat4x2_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>mat4x3.hpp</label>
        <link refid="mat4x3_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>mat4x4.hpp</label>
        <link refid="mat4x4_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>../matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../simd/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="71">
        <label>../trigonometric.hpp</label>
        <link refid="trigonometric_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>vec2.hpp</label>
        <link refid="vec2_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>vec3.hpp</label>
        <link refid="vec3_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>vec4.hpp</label>
        <link refid="vec4_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../vector_relational.hpp</label>
        <link refid="vector__relational_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_common.cpp</label>
        <link refid="core__func__common_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="82">
        <label>cstdio</label>
      </node>
      <node id="79">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="80">
        <label>ctime</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="81">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmix___1_1entry" prot="public">mix_::entry</innerclass>
    <innerclass refid="structstep___1_1entry" prot="public">step_::entry</innerclass>
    <innerclass refid="structsign_1_1type" prot="public">sign::type</innerclass>
    <innernamespace refid="namespacefloor__">floor_</innernamespace>
    <innernamespace refid="namespacemodf__">modf_</innernamespace>
    <innernamespace refid="namespacemod__">mod_</innernamespace>
    <innernamespace refid="namespacefloat_bits_to_int">floatBitsToInt</innernamespace>
    <innernamespace refid="namespacefloat_bits_to_uint">floatBitsToUint</innernamespace>
    <innernamespace refid="namespacemin__">min_</innernamespace>
    <innernamespace refid="namespacemax__">max_</innernamespace>
    <innernamespace refid="namespaceclamp__">clamp_</innernamespace>
    <innernamespace refid="namespacemix__">mix_</innernamespace>
    <innernamespace refid="namespacestep__">step_</innernamespace>
    <innernamespace refid="namespaceround__">round_</innernamespace>
    <innernamespace refid="namespaceround_even">roundEven</innernamespace>
    <innernamespace refid="namespaceisnan__">isnan_</innernamespace>
    <innernamespace refid="namespaceisinf__">isinf_</innernamespace>
    <innernamespace refid="namespacesign">sign</innernamespace>
    <innernamespace refid="namespacefrexp__">frexp_</innernamespace>
    <innernamespace refid="namespaceldexp__">ldexp_</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="core__func__common_8cpp_1a7f588cba464c7124722331e8017a3493" prot="public" static="no">
        <name>GLM_FORCE_EXPLICIT_CTOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_common.cpp" line="1" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_common.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="core__func__common_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_common.cpp" line="1236" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_common.cpp" bodystart="1236" bodyend="1266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>GLM_FORCE_EXPLICIT_CTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="common_8hpp" kindref="compound">glm/common.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="constants_8hpp" kindref="compound">glm/gtc/constants.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="epsilon_8hpp" kindref="compound">glm/gtc/epsilon.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gtc_2vec1_8hpp" kindref="compound">glm/gtc/vec1.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random_8hpp" kindref="compound">glm/gtc/random.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>has<sp/>divisions<sp/>by<sp/>zero<sp/>to<sp/>test<sp/>isnan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>pragma<sp/>warning(disable<sp/>:<sp/>4723)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">floor_</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>1.1f;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>1.f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>1.1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>1.0,<sp/>0.0001)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>A(1.1f);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref>(1.0),<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec1</ref><sp/>A(1.1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec1</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec1</ref>(1.0),<sp/>0.0001))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>A(1.1f);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1.0),<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec2</ref><sp/>A(1.1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec2</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec2</ref>(1.0),<sp/>0.0001))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>A(1.1f);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1.0),<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref><sp/>A(1.1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref>(1.0),<sp/>0.0001))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A(1.1f);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0),<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref><sp/>A(1.1);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" kindref="member">glm::floor</ref>(A);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref>(1.0),<sp/>0.0001))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>floor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">modf_</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>X(1.5f);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>I(0.0f);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga85e33f139b8db1b39b590a5713b9e679" kindref="member">glm::modf</ref>(X,<sp/>I);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>I<sp/>==<sp/>1.0f<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>A<sp/>==<sp/>0.5f<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>X(1.1f,<sp/>1.2f,<sp/>1.5f,<sp/>1.7f);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>I(0.0f);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga85e33f139b8db1b39b590a5713b9e679" kindref="member">glm::modf</ref>(X,<sp/>I);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>I<sp/>==<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0.1f,<sp/>0.2f,<sp/>0.5f,<sp/>0.7f),<sp/>0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref><sp/>X(1.1,<sp/>1.2,<sp/>1.5,<sp/>1.7);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref><sp/>I(0.0);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga85e33f139b8db1b39b590a5713b9e679" kindref="member">glm::modf</ref>(X,<sp/>I);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>I<sp/>==<sp/><ref refid="group__core__types_1ga0824ceed7ec3b2fba89765501c1540b5" kindref="member">glm::dvec4</ref>(1.0)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref>(0.1,<sp/>0.2,<sp/>0.5,<sp/>0.7),<sp/>0.000000001))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>X(1.5);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I(0.0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga85e33f139b8db1b39b590a5713b9e679" kindref="member">glm::modf</ref>(X,<sp/>I);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>I<sp/>==<sp/>1.0<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>A<sp/>==<sp/>0.5<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>modf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mod_</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A(1.5f);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B(1.0f);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>glm::mod(A,<sp/>B);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">glm::abs</ref>(C<sp/>-<sp/>0.5f)<sp/>&lt;<sp/>0.00001f<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A(-0.2f);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B(1.0f);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>glm::mod(A,<sp/>B);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">glm::abs</ref>(C<sp/>-<sp/>0.8f)<sp/>&lt;<sp/>0.00001f<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A(3.0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B(2.0f);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>glm::mod(A,<sp/>B);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">glm::abs</ref>(C<sp/>-<sp/>1.0f)<sp/>&lt;<sp/>0.00001f<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A(3.0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B(2.0f);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>C<sp/>=<sp/>glm::mod(A,<sp/>B);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f),<sp/>0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A(3.0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>B(2.0f);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>C<sp/>=<sp/>glm::mod(A,<sp/>B);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1.0f),<sp/>0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>mod_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="group__core__func__common_1gadc6a536a7bef046c3293d2ccad6d9ca2" kindref="member">floatBitsToInt</ref></highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gadc6a536a7bef046c3293d2ccad6d9ca2" kindref="member">glm::floatBitsToInt</ref>(A);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga2650dc57b2148a6ffbce20944fb4d97a" kindref="member">glm::intBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>A(1.0f,<sp/>2.0f);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec2</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gadc6a536a7bef046c3293d2ccad6d9ca2" kindref="member">glm::floatBitsToInt</ref>(A);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga2650dc57b2148a6ffbce20944fb4d97a" kindref="member">glm::intBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>A(1.0f,<sp/>2.0f,<sp/>3.0f);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec3</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gadc6a536a7bef046c3293d2ccad6d9ca2" kindref="member">glm::floatBitsToInt</ref>(A);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga2650dc57b2148a6ffbce20944fb4d97a" kindref="member">glm::intBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A(1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec4</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gadc6a536a7bef046c3293d2ccad6d9ca2" kindref="member">glm::floatBitsToInt</ref>(A);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga2650dc57b2148a6ffbce20944fb4d97a" kindref="member">glm::intBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>floatBitsToInt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="group__core__func__common_1ga748b4d2819b48d28ca09dc8733488873" kindref="member">floatBitsToUint</ref></highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__precision_1ga4fd29415871152bfb5abd588334147c8" kindref="member">glm::uint</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga748b4d2819b48d28ca09dc8733488873" kindref="member">glm::floatBitsToUint</ref>(A);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga97464ca9ff4267de30ea408f700d4ca8" kindref="member">glm::uintBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>A(1.0f,<sp/>2.0f);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::uvec2</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga748b4d2819b48d28ca09dc8733488873" kindref="member">glm::floatBitsToUint</ref>(A);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga97464ca9ff4267de30ea408f700d4ca8" kindref="member">glm::uintBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>A(1.0f,<sp/>2.0f,<sp/>3.0f);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::uvec3</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga748b4d2819b48d28ca09dc8733488873" kindref="member">glm::floatBitsToUint</ref>(A);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga97464ca9ff4267de30ea408f700d4ca8" kindref="member">glm::uintBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A(1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::uvec4</ref><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga748b4d2819b48d28ca09dc8733488873" kindref="member">glm::floatBitsToUint</ref>(A);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga97464ca9ff4267de30ea408f700d4ca8" kindref="member">glm::uintBitsToFloat</ref>(B);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>C,<sp/>0.0001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>floatBitsToUint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">min_</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>A0<sp/>=<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">glm::min</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref>(1));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>B0<sp/>=<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">glm::min</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>B1<sp/>=<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">glm::min</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1),<sp/>1.0f);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B2<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(B0,<sp/>B1));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>B2<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>C0<sp/>=<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">glm::min</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>C1<sp/>=<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">glm::min</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1),<sp/>1.0f);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C2<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(C0,<sp/>C1));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>C2<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>D0<sp/>=<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">glm::min</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>D1<sp/>=<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">glm::min</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1),<sp/>1.0f);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>D2<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(D0,<sp/>D1));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>D2<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>min_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">max_</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>A0<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref>(1));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>B0<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>B1<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1),<sp/>1.0f);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B2<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(B0,<sp/>B1));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>B2<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>C0<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>C1<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1),<sp/>1.0f);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C2<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(C0,<sp/>C1));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>C2<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>D0<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1),<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>D1<sp/>=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">glm::max</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1),<sp/>1.0f);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>D2<sp/>=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(D0,<sp/>D1));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>D2<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>max_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">clamp_</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>clamp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mix_</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="334" refid="structmix___1_1entry" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmix___1_1entry" kindref="compound">entry</ref></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>a;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>Result;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmix___1_1entry" kindref="compound">entry&lt;float, bool&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestBool[]<sp/>=</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.0f,<sp/>1.0f,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0f},</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.0f,<sp/>1.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1.0f},</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-1.0f,<sp/>1.0f,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1.0f},</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-1.0f,<sp/>1.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1.0f}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;float,<sp/>float&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestFloat[]<sp/>=</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f},</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.0f,<sp/>1.0f,<sp/>1.0f,<sp/>1.0f},</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-1.0f,<sp/>1.0f,<sp/>0.0f,<sp/>-1.0f},</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-1.0f,<sp/>1.0f,<sp/>1.0f,<sp/>1.0f}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;glm::vec2,<sp/>bool&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestVec2Bool[]<sp/>=</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(0.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(0.0f)},</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(0.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f)},</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(-1.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(-1.0f)},</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(-1.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f)}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;glm::vec2,<sp/>glm::bvec2&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestBVec2[]<sp/>=</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(0.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/><ref refid="group__core__types_1ga7523cf292181cf7daef3aa0a3267d8e3" kindref="member">glm::bvec2</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(0.0f)},</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(0.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/><ref refid="group__core__types_1ga7523cf292181cf7daef3aa0a3267d8e3" kindref="member">glm::bvec2</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f)},</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(-1.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/><ref refid="group__core__types_1ga7523cf292181cf7daef3aa0a3267d8e3" kindref="member">glm::bvec2</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(-1.0f)},</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(-1.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/><ref refid="group__core__types_1ga7523cf292181cf7daef3aa0a3267d8e3" kindref="member">glm::bvec2</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f)},</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(-1.0f),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f),<sp/><ref refid="group__core__types_1ga7523cf292181cf7daef3aa0a3267d8e3" kindref="member">glm::bvec2</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(1.0f,<sp/>-1.0f)}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;glm::vec3,<sp/>bool&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestVec3Bool[]<sp/>=</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(0.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(0.0f)},</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(0.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f)},</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(-1.0f)},</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f)}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;glm::vec3,<sp/>glm::bvec3&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestBVec3[]<sp/>=</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(0.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/><ref refid="group__core__types_1ga3f07d6d37fc6fe875170fd5799685bcf" kindref="member">glm::bvec3</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(0.0f)},</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(0.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/><ref refid="group__core__types_1ga3f07d6d37fc6fe875170fd5799685bcf" kindref="member">glm::bvec3</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f)},</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/><ref refid="group__core__types_1ga3f07d6d37fc6fe875170fd5799685bcf" kindref="member">glm::bvec3</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(-1.0f)},</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f),<sp/><ref refid="group__core__types_1ga3f07d6d37fc6fe875170fd5799685bcf" kindref="member">glm::bvec3</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f)},</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(1.0f,<sp/>2.0f,<sp/>3.0f),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(4.0f,<sp/>5.0f,<sp/>6.0f),<sp/><ref refid="group__core__types_1ga3f07d6d37fc6fe875170fd5799685bcf" kindref="member">glm::bvec3</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(4.0f,<sp/>2.0f,<sp/>6.0f)}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;glm::vec4,<sp/>bool&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestVec4Bool[]<sp/>=<sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f)},</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)},</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f)},</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;glm::vec4,<sp/>glm::bvec4&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestBVec4[]<sp/>=<sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(2.0f,<sp/>2.0f,<sp/>3.0f,<sp/>3.0f),<sp/><ref refid="group__core__types_1ga6bb211b3d3bebae3867548d5673ca5cd" kindref="member">glm::bvec4</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f,<sp/>2.0f,<sp/>1.0f,<sp/>3.0f)},</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f),<sp/><ref refid="group__core__types_1ga6bb211b3d3bebae3867548d5673ca5cd" kindref="member">glm::bvec4</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)},</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f),<sp/><ref refid="group__core__types_1ga6bb211b3d3bebae3867548d5673ca5cd" kindref="member">glm::bvec4</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f)},</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f),<sp/><ref refid="group__core__types_1ga6bb211b3d3bebae3867548d5673ca5cd" kindref="member">glm::bvec4</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)},</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(5.0f,<sp/>6.0f,<sp/>7.0f,<sp/>8.0f),<sp/><ref refid="group__core__types_1ga6bb211b3d3bebae3867548d5673ca5cd" kindref="member">glm::bvec4</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(5.0f,<sp/>2.0f,<sp/>7.0f,<sp/>4.0f)}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Float<sp/>with<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestBool)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;float,<sp/>bool&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestBool[i].x,<sp/>TestBool[i].y,<sp/>TestBool[i].a);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result,<sp/>TestBool[i].Result,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Float<sp/>with<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestFloat)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;float,<sp/>float&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestFloat[i].x,<sp/>TestFloat[i].y,<sp/>TestFloat[i].a);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result,<sp/>TestFloat[i].Result,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec2<sp/>with<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestVec2Bool)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;glm::vec2,<sp/>bool&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestVec2Bool[i].x,<sp/>TestVec2Bool[i].y,<sp/>TestVec2Bool[i].a);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.x,<sp/>TestVec2Bool[i].Result.x,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.y,<sp/>TestVec2Bool[i].Result.y,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec2<sp/>with<sp/>bvec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestBVec2)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;glm::vec2,<sp/>glm::bvec2&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestBVec2[i].x,<sp/>TestBVec2[i].y,<sp/>TestBVec2[i].a);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.x,<sp/>TestBVec2[i].Result.x,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.y,<sp/>TestBVec2[i].Result.y,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec3<sp/>with<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestVec3Bool)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;glm::vec3,<sp/>bool&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestVec3Bool[i].x,<sp/>TestVec3Bool[i].y,<sp/>TestVec3Bool[i].a);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.x,<sp/>TestVec3Bool[i].Result.x,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.y,<sp/>TestVec3Bool[i].Result.y,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.z,<sp/>TestVec3Bool[i].Result.z,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec3<sp/>with<sp/>bvec3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestBVec3)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;glm::vec3,<sp/>glm::bvec3&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestBVec3[i].x,<sp/>TestBVec3[i].y,<sp/>TestBVec3[i].a);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.x,<sp/>TestBVec3[i].Result.x,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.y,<sp/>TestBVec3[i].Result.y,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.z,<sp/>TestBVec3[i].Result.z,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec4<sp/>with<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestVec4Bool)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;glm::vec4,<sp/>bool&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestVec4Bool[i].x,<sp/>TestVec4Bool[i].y,<sp/>TestVec4Bool[i].a);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.x,<sp/>TestVec4Bool[i].Result.x,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.y,<sp/>TestVec4Bool[i].Result.y,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.z,<sp/>TestVec4Bool[i].Result.z,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.w,<sp/>TestVec4Bool[i].Result.w,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec4<sp/>with<sp/>bvec4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestBVec4)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;glm::vec4,<sp/>glm::bvec4&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(TestBVec4[i].x,<sp/>TestBVec4[i].y,<sp/>TestBVec4[i].a);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.x,<sp/>TestBVec4[i].Result.x,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.y,<sp/>TestBVec4[i].Result.y,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.z,<sp/>TestBVec4[i].Result.z,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result.w,<sp/>TestBVec4[i].Result.w,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>mix_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">step_</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EDGE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VEC&gt;</highlight></codeline>
<codeline lineno="504" refid="structstep___1_1entry" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstep___1_1entry" kindref="compound">entry</ref></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EDGE<sp/>edge;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VEC<sp/>x;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VEC<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstep___1_1entry" kindref="compound">entry&lt;float, glm::vec4&gt;</ref><sp/>TestVec4Scalar<sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>1.0f,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)<sp/>},</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.0f,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)<sp/>},</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.0f,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f,<sp/>-2.0f,<sp/>-3.0f,<sp/>-4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f)<sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>entry&lt;glm::vec4,<sp/>glm::vec4&gt;<sp/>TestVec4Vector<sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f,<sp/>-2.0f,<sp/>-3.0f,<sp/>-4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-2.0f,<sp/>-3.0f,<sp/>-4.0f,<sp/>-5.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f)<sp/>},</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(1.0f)<sp/>},</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>2.0f,<sp/>3.0f,<sp/>4.0f,<sp/>5.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f)<sp/>},</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1.0f,-2.0f,-3.0f,-4.0f),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.0f)<sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Edge<sp/>=<sp/>2.0f;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">glm::step</ref>(Edge,<sp/>1.0f);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">glm::step</ref>(Edge,<sp/>3.0f);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">glm::step</ref>(Edge,<sp/>2.0f);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/>1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec4<sp/>and<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestVec4Scalar)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;float,<sp/>glm::vec4&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">glm::step</ref>(TestVec4Scalar[i].edge,<sp/>TestVec4Scalar[i].x);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result,<sp/>TestVec4Scalar[i].<ref refid="structresult" kindref="compound">result</ref>,<sp/>glm::epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vec4<sp/>and<sp/>vec4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TestVec4Vector)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(entry&lt;glm::vec4,<sp/>glm::vec4&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">glm::step</ref>(TestVec4Vector[i].edge,<sp/>TestVec4Vector[i].x);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(Result,<sp/>TestVec4Vector[i].<ref refid="structresult" kindref="compound">result</ref>,<sp/>glm::epsilon&lt;float&gt;()))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>step_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">round_</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(0.0f);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(0.5f);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(1.0f);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/>1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>D<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(0.1f);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(D,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(0.9f);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(E,<sp/>1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(1.5f);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(F,<sp/>2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>G<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(1.9f);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(G,<sp/>2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(-0.0f);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(-0.5f);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>-1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(-1.0f);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/>-1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>D<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(-0.1f);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(D,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(-0.9f);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(E,<sp/>-1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(-1.5f);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(F,<sp/>-2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>G<sp/>=<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">glm::round</ref>(-1.9f);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(G,<sp/>-2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>round_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">roundEven</ref></highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A1<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-1.5f);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A1,<sp/>-2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A2<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(1.5f);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A2,<sp/>2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A5<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-2.5f);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A5,<sp/>-2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A6<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(2.5f);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A6,<sp/>2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A3<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-3.5f);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A3,<sp/>-4.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A4<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(3.5f);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A4,<sp/>4.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C7<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-4.5f);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C7,<sp/>-4.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C8<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(4.5f);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C8,<sp/>4.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C1<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-5.5f);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C1,<sp/>-6.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C2<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(5.5f);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C2,<sp/>6.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C3<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-6.5f);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C3,<sp/>-6.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C4<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(6.5f);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C4,<sp/>6.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C5<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-7.5f);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C5,<sp/>-8.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C6<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(7.5f);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C6,<sp/>8.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>0;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A7<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-2.4f);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A7,<sp/>-2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A8<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(2.4f);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A8,<sp/>2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B1<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-2.6f);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B1,<sp/>-3.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B2<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(2.6f);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B2,<sp/>3.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B3<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-2.0f);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B3,<sp/>-2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B4<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(2.0f);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B4,<sp/>2.0f,<sp/>0.0001f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(0.0f);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(0.5f);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(1.0f);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/>1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>D<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(0.1f);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(D,<sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(0.9f);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(E,<sp/>1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(1.5f);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(F,<sp/>2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>G<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(1.9f);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(G,<sp/>2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-0.0f);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/><sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-0.5f);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>-0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-1.0f);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/>-1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>D<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-0.1f);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(D,<sp/><sp/>0.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-0.9f);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(E,<sp/>-1.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-1.5f);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(F,<sp/>-2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>G<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-1.9f);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(G,<sp/>-2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(1.5f);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(2.5f);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(3.5f);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/>4.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>D<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(4.5f);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(D,<sp/>4.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(5.5f);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(E,<sp/>6.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(6.5f);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(F,<sp/>6.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>G<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(7.5f);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(G,<sp/>8.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-1.5f);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/>-2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-2.5f);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(B,<sp/>-2.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-3.5f);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(C,<sp/>-4.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>D<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-4.5f);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(D,<sp/>-4.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-5.5f);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(E,<sp/>-6.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-6.5f);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(F,<sp/>-6.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>G<sp/>=<sp/><ref refid="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" kindref="member">glm::roundEven</ref>(-7.5f);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(G,<sp/>-8.0f,<sp/>glm::epsilon&lt;float&gt;())<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>roundEven</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">isnan_</highlight></codeline>
<codeline lineno="757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Zero_f<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Zero_d<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(0.0/Zero_d)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec2</ref>(0.0<sp/>/<sp/>Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref>(0.0<sp/>/<sp/>Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref>(0.0<sp/>/<sp/>Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(0.0f/Zero_f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(0.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(0.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" kindref="member">glm::isnan</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>isnan_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">isinf_</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Zero_f<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Zero_d<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<sp/>1.0/Zero_d)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(-1.0/Zero_d)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec2</ref>(<sp/>1.0/Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec2</ref>(-1.0/Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref>(<sp/>1.0/Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref>(-1.0/Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref>(<sp/>1.0/Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::dvec4</ref>(-1.0/Zero_d)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<sp/>1.0f/Zero_f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(-1.0f/Zero_f)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(<sp/>1.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(-1.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(<sp/>1.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(-1.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(<sp/>1.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__core__func__vector__relational_1gadcc289349a96ef7642b14bc151ee4ae8" kindref="member">glm::any</ref>(<ref refid="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" kindref="member">glm::isinf</ref>(<ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(-1.0f/Zero_f)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>isinf_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">sign</ref></highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genFIType&gt;<sp/></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genFIType<sp/>sign_if(genFIType<sp/>x)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;genFIType&gt;::is_iec559<sp/>||</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::numeric_limits&lt;genFIType&gt;::is_signed<sp/>&amp;&amp;<sp/>std::numeric_limits&lt;genFIType&gt;::is_integer),<sp/></highlight><highlight class="stringliteral">&quot;&apos;sign&apos;<sp/>only<sp/>accept<sp/>signed<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genFIType<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;<sp/>genFIType(0))</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>genFIType(1);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&lt;<sp/>genFIType(0))</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>genFIType(-1);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>genFIType(0);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genFIType&gt;<sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genFIType<sp/>sign_alu1(genFIType<sp/>x)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;genFIType&gt;::is_signed<sp/>&amp;&amp;<sp/>std::numeric_limits&lt;genFIType&gt;::is_integer,<sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;sign&apos;<sp/>only<sp/>accept<sp/>integer<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&gt;&gt;<sp/>31)<sp/>|<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-x)<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign_alu2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;int&gt;::is_signed<sp/>&amp;&amp;<sp/>std::numeric_limits&lt;int&gt;::is_integer,<sp/></highlight><highlight class="stringliteral">&quot;&apos;sign&apos;<sp/>only<sp/>accept<sp/>integer<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(disable<sp/>:<sp/>4146)<sp/></highlight><highlight class="comment">//cast<sp/>truncates<sp/>constant<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>&gt;&gt;<sp/>31)<sp/>|<sp/>(-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>GLM_COMPILER<sp/>&amp;<sp/>GLM_COMPILER_VC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genFIType&gt;<sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genFIType<sp/>sign_sub(genFIType<sp/>x)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;genFIType&gt;::is_signed<sp/>&amp;&amp;<sp/>std::numeric_limits&lt;genFIType&gt;::is_integer,<sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;sign&apos;<sp/>only<sp/>accept<sp/>integer<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-x)<sp/>&gt;&gt;<sp/>31)<sp/>-<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>&gt;&gt;<sp/>31);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genFIType&gt;<sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genFIType<sp/>sign_cmp(genFIType<sp/>x)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;genFIType&gt;::is_signed<sp/>&amp;&amp;<sp/>std::numeric_limits&lt;genFIType&gt;::is_integer,<sp/></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;sign&apos;<sp/>only<sp/>accept<sp/>integer<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>0)<sp/>-<sp/>(x<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genType&gt;</highlight></codeline>
<codeline lineno="884" refid="structsign_1_1type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsign_1_1type" kindref="compound">type</ref></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genType<sp/><sp/><sp/><sp/><sp/>Value;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genType<sp/><sp/><sp/><sp/><sp/>Return;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_int32()</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsign_1_1type" kindref="compound">type&lt;glm::int32&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Data[]<sp/>=</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">std::numeric_limits&lt;glm::int32&gt;::max</ref>(),<sp/><sp/>1},</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">std::numeric_limits&lt;glm::int32&gt;::min</ref>(),<sp/>-1},</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>2,<sp/>1},</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>3,<sp/>1},</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-1,-1},</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2,-1},</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-3,-1}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Data)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type&lt;glm::int32&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">glm::sign</ref>(Data[i].Value);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>Data[i].Return<sp/>==<sp/>Result<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Data)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type&lt;glm::int32&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>Result<sp/>=<sp/>sign_cmp(Data[i].Value);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>Data[i].Return<sp/>==<sp/>Result<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Data)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type&lt;glm::int32&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>Result<sp/>=<sp/>sign_if(Data[i].Value);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>Data[i].Return<sp/>==<sp/>Result<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Data)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type&lt;glm::int32&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>Result<sp/>=<sp/>sign_alu1(Data[i].Value);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>Data[i].Return<sp/>==<sp/>Result<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Data)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type&lt;glm::int32&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>Result<sp/>=<sp/>sign_alu2(Data[i].Value);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>Data[i].Return<sp/>==<sp/>Result<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_i32vec4()</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type&lt;glm::i32vec4&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Data[]<sp/>=</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>1),<sp/><ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>1)},</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>0),<sp/><ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>0)},</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>2),<sp/><ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>1)},</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>3),<sp/><ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(<sp/>1)},</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(-1),<sp/><ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(-1)},</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(-2),<sp/><ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(-1)},</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(-3),<sp/><ref refid="group__gtc__type__precision_1ga78c16dde5527264e8085b375efba6f28" kindref="member">glm::i32vec4</ref>(-1)}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Data)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type&lt;glm::i32vec4&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::i32vec4</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">glm::sign</ref>(Data[i].Value);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(Data[i].Return,<sp/>Result))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_f32vec4()</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type&lt;glm::vec4&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Data[]<sp/>=</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>1),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>1)},</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>0),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>0)},</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>2),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>1)},</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>3),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(<sp/>1)},</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1)},</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-2),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1)},</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-3),<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(-1)}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Data)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type&lt;glm::vec4&gt;);<sp/>++i)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>Result<sp/>=<sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">glm::sign</ref>(Data[i].Value);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(Data[i].Return,<sp/>Result))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_int32();</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_i32vec4();</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>test_f32vec4();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perf_rand(std::size_t<sp/>Samples)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Count<sp/>=<sp/>Samples;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;glm::int32&gt;<sp/>Input,<sp/>Output;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Input.resize(Count);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output.resize(Count);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Input[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d" kindref="member">glm::linearRand</ref>(-65536.f,<sp/>65536.f));</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp0<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_cmp(Input[i]);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp1<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_if(Input[i]);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp2<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_alu1(Input[i]);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp3<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_alu2(Input[i]);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp4<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_sub(Input[i]);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp5<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/><ref refid="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" kindref="member">glm::sign</ref>(Input[i]);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp6<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_cmp(rand)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp1<sp/>-<sp/>Timestamp0));</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_if(rand)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp2<sp/>-<sp/>Timestamp1));</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_alu1(rand)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp3<sp/>-<sp/>Timestamp2));</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_alu2(rand)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp4<sp/>-<sp/>Timestamp3));</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_sub(rand)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp5<sp/>-<sp/>Timestamp4));</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;glm::sign(rand)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp6<sp/>-<sp/>Timestamp5));</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perf_linear(std::size_t<sp/>Samples)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Count<sp/>=<sp/>Samples;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;glm::int32&gt;<sp/>Input,<sp/>Output;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Input.resize(Count);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output.resize(Count);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Input[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp0<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_cmp(Input[i]);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp1<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_if(Input[i]);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp2<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_alu1(Input[i]);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp3<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_alu2(Input[i]);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp4<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output[i]<sp/>=<sp/>sign_sub(Input[i]);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp5<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_cmp(linear)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp1<sp/>-<sp/>Timestamp0));</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_if(linear)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp2<sp/>-<sp/>Timestamp1));</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_alu1(linear)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp3<sp/>-<sp/>Timestamp2));</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_alu2(linear)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp4<sp/>-<sp/>Timestamp3));</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_sub(linear)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp5<sp/>-<sp/>Timestamp4));</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perf_linear_cal(std::size_t<sp/>Samples)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Count<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Samples);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp0<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>Sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum<sp/>+=<sp/>sign_cmp(i);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp1<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum<sp/>+=<sp/>sign_if(i);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp2<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum<sp/>+=<sp/>sign_alu1(i);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp3<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum<sp/>+=<sp/>sign_alu2(i);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp4<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="group__gtc__type__precision_1ga632d8b25f6b61659f39ea4321fab92a4" kindref="member">glm::int32</ref><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum<sp/>+=<sp/>sign_sub(i);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::clock_t<sp/>Timestamp5<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;Sum<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Sum));</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_cmp(linear_cal)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp1<sp/>-<sp/>Timestamp0));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_if(linear_cal)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp2<sp/>-<sp/>Timestamp1));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_alu1(linear_cal)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp3<sp/>-<sp/>Timestamp2));</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_alu2(linear_cal)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp4<sp/>-<sp/>Timestamp3));</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(</highlight><highlight class="stringliteral">&quot;sign_sub(linear_cal)<sp/>Time<sp/>%d<sp/>clocks\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Timestamp5<sp/>-<sp/>Timestamp4));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perf(std::size_t<sp/>Samples)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>perf_linear_cal(Samples);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>perf_linear(Samples);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>perf_rand(Samples);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">frexp_</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>x(1024);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga20620e83544d1a988857a3bc4ebe0e1d" kindref="member">glm::frexp</ref>(x,<sp/>exp);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref>(0.5),<sp/>0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(exp,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref>(11)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>x(1024,<sp/>0.24);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec2</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga20620e83544d1a988857a3bc4ebe0e1d" kindref="member">glm::frexp</ref>(x,<sp/>exp);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(0.5,<sp/>0.96),<sp/>0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(exp,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec2</ref>(11,<sp/>-2)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>x(1024,<sp/>0.24,<sp/>0);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec3</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga20620e83544d1a988857a3bc4ebe0e1d" kindref="member">glm::frexp</ref>(x,<sp/>exp);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(0.5,<sp/>0.96,<sp/>0.0),<sp/>0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(exp,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec3</ref>(11,<sp/>-2,<sp/>0)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>x(1024,<sp/>0.24,<sp/>0,<sp/>-1.33);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec4</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A<sp/>=<sp/><ref refid="group__core__func__common_1ga20620e83544d1a988857a3bc4ebe0e1d" kindref="member">glm::frexp</ref>(x,<sp/>exp);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(A,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(0.5,<sp/>0.96,<sp/>0.0,<sp/>-0.665),<sp/>0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__core__func__vector__relational_1gab560b9b9d01040d082e40edae40edfd1" kindref="member">glm::equal</ref>(exp,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec4</ref>(11,<sp/>-2,<sp/>0,<sp/>1)))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>frexp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ldexp_</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test()</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error(0);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>A<sp/>=<sp/><ref refid="group__ext__vec1_1ga16030dae9029ed1eab1553a2183bbb79" kindref="member">glm::vec1</ref>(0.5);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec1</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref><sp/>=<sp/><ref refid="group__ext__vec1_1ga946031cea0c22745848ebd873e6facb0" kindref="member">glm::ivec1</ref>(11);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref><sp/>x<sp/>=<sp/><ref refid="group__core__func__common_1ga52e319d7289b849ec92055abd4830533" kindref="member">glm::ldexp</ref>(A,<sp/>exp);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(x,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec1</ref>(1024),0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>A<sp/>=<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">glm::vec2</ref>(0.5,<sp/>0.96);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec2</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref><sp/>=<sp/><ref refid="group__core__types_1ga9e6ce9cfc7919976b318197e18d8a065" kindref="member">glm::ivec2</ref>(11,<sp/>-2);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref><sp/>x<sp/>=<sp/><ref refid="group__core__func__common_1ga52e319d7289b849ec92055abd4830533" kindref="member">glm::ldexp</ref>(A,<sp/>exp);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(x,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec2</ref>(1024,<sp/>.24),0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>A<sp/>=<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">glm::vec3</ref>(0.5,<sp/>0.96,<sp/>0.0);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec3</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref><sp/>=<sp/><ref refid="group__core__types_1ga6e12a4ca00d696f07da1df4eb73e0fe8" kindref="member">glm::ivec3</ref>(11,<sp/>-2,<sp/>0);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref><sp/>x<sp/>=<sp/><ref refid="group__core__func__common_1ga52e319d7289b849ec92055abd4830533" kindref="member">glm::ldexp</ref>(A,<sp/>exp);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(x,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec3</ref>(1024,<sp/>.24,<sp/>0),0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>A<sp/>=<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref>(0.5,<sp/>0.96,<sp/>0.0,<sp/>-0.665);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::ivec4</ref><sp/><ref refid="group__core__func__exponential_1gaf6342f49d902286a599ceb86036236ce" kindref="member">exp</ref><sp/>=<sp/><ref refid="group__core__types_1gaa4560ddc50320ea8f8a70d5c9c249fea" kindref="member">glm::ivec4</ref>(11,<sp/>-2,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>x<sp/>=<sp/><ref refid="group__core__func__common_1ga52e319d7289b849ec92055abd4830533" kindref="member">glm::ldexp</ref>(A,<sp/>exp);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/><ref refid="group__core__func__vector__relational_1gab5af106b2d5675d51af84815d937384d" kindref="member">glm::all</ref>(<ref refid="group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798" kindref="member">glm::epsilonEqual</ref>(x,<sp/><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref>(1024,<sp/>.24,<sp/>0,<sp/>-1.33),0.00001f))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>ldexp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>sign::test();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>floor_::test();</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>mod_::test();</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>modf_::test();</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>floatBitsToInt::test();</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>floatBitsToUint::test();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>mix_::test();</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>step_::test();</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>max_::test();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>min_::test();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>clamp_::test();</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>round_::test();</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>roundEven::test();</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>isnan_::test();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>isinf_::test();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>frexp_::test();</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>ldexp_::test();</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>Samples<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>Samples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>+=<sp/>sign::perf(Samples);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/core/core_func_common.cpp"/>
  </compounddef>
</doxygen>
