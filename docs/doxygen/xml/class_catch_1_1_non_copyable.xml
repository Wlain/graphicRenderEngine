<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_catch_1_1_non_copyable" kind="class" language="C++" prot="public">
    <compoundname>Catch::NonCopyable</compoundname>
    <derivedcompoundref refid="struct_catch_1_1_auto_reg" prot="public" virt="non-virtual">Catch::AutoReg</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_i_config" prot="public" virt="non-virtual">Catch::IConfig</derivedcompoundref>
    <derivedcompoundref refid="class_catch_1_1_reusable_string_stream" prot="private" virt="non-virtual">Catch::ReusableStringStream</derivedcompoundref>
    <derivedcompoundref refid="class_catch_1_1_section" prot="private" virt="non-virtual">Catch::Section</derivedcompoundref>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_catch_1_1_non_copyable_1a74cf3e4aa051c284941e39b436b2f693" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::NonCopyable::NonCopyable</definition>
        <argsstring>(NonCopyable const &amp;)=delete</argsstring>
        <name>NonCopyable</name>
        <param>
          <type><ref refid="class_catch_1_1_non_copyable" kindref="compound">NonCopyable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="490" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_non_copyable_1a09d1d8775db8c495fa40c285b034faa3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::NonCopyable::NonCopyable</definition>
        <argsstring>(NonCopyable &amp;&amp;)=delete</argsstring>
        <name>NonCopyable</name>
        <param>
          <type><ref refid="class_catch_1_1_non_copyable" kindref="compound">NonCopyable</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="491" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_non_copyable_1ac8be822f5ed1abc8e31e17d09200c493" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_catch_1_1_non_copyable" kindref="compound">NonCopyable</ref> &amp;</type>
        <definition>NonCopyable &amp; Catch::NonCopyable::operator=</definition>
        <argsstring>(NonCopyable const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_catch_1_1_non_copyable" kindref="compound">NonCopyable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="492" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_non_copyable_1ae70adfd1bdbaa8d2207a290ffdb70578" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_catch_1_1_non_copyable" kindref="compound">NonCopyable</ref> &amp;</type>
        <definition>NonCopyable &amp; Catch::NonCopyable::operator=</definition>
        <argsstring>(NonCopyable &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_catch_1_1_non_copyable" kindref="compound">NonCopyable</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="493" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_catch_1_1_non_copyable_1a4b492dd5753f9952350fb64dc6cb9fe2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::NonCopyable::NonCopyable</definition>
        <argsstring>()</argsstring>
        <name>NonCopyable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="496" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_non_copyable_1a81254677280fef337eb4a676e91e3293" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Catch::NonCopyable::~NonCopyable</definition>
        <argsstring>()</argsstring>
        <name>~NonCopyable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="497" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Catch::AutoReg</label>
        <link refid="struct_catch_1_1_auto_reg"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Catch::IConfig</label>
        <link refid="struct_catch_1_1_i_config"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Catch::NonCopyable</label>
        <link refid="class_catch_1_1_non_copyable"/>
      </node>
      <node id="4">
        <label>Catch::ReusableStringStream</label>
        <link refid="class_catch_1_1_reusable_string_stream"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Catch::Section</label>
        <link refid="class_catch_1_1_section"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="489" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="489" bodyend="498"/>
    <listofallmembers>
      <member refid="class_catch_1_1_non_copyable_1a74cf3e4aa051c284941e39b436b2f693" prot="private" virt="non-virtual"><scope>Catch::NonCopyable</scope><name>NonCopyable</name></member>
      <member refid="class_catch_1_1_non_copyable_1a09d1d8775db8c495fa40c285b034faa3" prot="private" virt="non-virtual"><scope>Catch::NonCopyable</scope><name>NonCopyable</name></member>
      <member refid="class_catch_1_1_non_copyable_1a4b492dd5753f9952350fb64dc6cb9fe2" prot="protected" virt="non-virtual"><scope>Catch::NonCopyable</scope><name>NonCopyable</name></member>
      <member refid="class_catch_1_1_non_copyable_1ac8be822f5ed1abc8e31e17d09200c493" prot="private" virt="non-virtual"><scope>Catch::NonCopyable</scope><name>operator=</name></member>
      <member refid="class_catch_1_1_non_copyable_1ae70adfd1bdbaa8d2207a290ffdb70578" prot="private" virt="non-virtual"><scope>Catch::NonCopyable</scope><name>operator=</name></member>
      <member refid="class_catch_1_1_non_copyable_1a81254677280fef337eb4a676e91e3293" prot="protected" virt="virtual"><scope>Catch::NonCopyable</scope><name>~NonCopyable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
