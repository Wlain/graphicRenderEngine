<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__euler__angles" kind="group">
    <compoundname>gtx_euler_angles</compoundname>
    <title>GLM_GTX_euler_angles</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__euler__angles_1ga6ddd62c69c42f6e0fb22260c59e11764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleX</definition>
        <argsstring>(T const &amp;angleX)</argsstring>
        <name>eulerAngleX</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from an euler angle X. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="37" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="10" bodyend="22" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="37" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga0a88d64e714bb232fd6a3722f17751a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleY</definition>
        <argsstring>(T const &amp;angleY)</argsstring>
        <name>eulerAngleY</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from an euler angle Y. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="43" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="26" bodyend="38" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="43" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga8466b03295c03fe68d012b19373e1935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleZ</definition>
        <argsstring>(T const &amp;angleZ)</argsstring>
        <name>eulerAngleZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from an euler angle Z. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="49" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="42" bodyend="54" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="49" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gadd3e9cdc380b20bc36ec98ac3c56e9e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::derivedEulerAngleX</definition>
        <argsstring>(T const &amp;angleX, T const &amp;angularVelocityX)</argsstring>
        <name>derivedEulerAngleX</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleX</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angularVelocityX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous derived matrix from the rotation matrix about X-axis. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="55" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="58" bodyend="71" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="55" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga3b075c479274a16e2614eef3c550e8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::derivedEulerAngleY</definition>
        <argsstring>(T const &amp;angleY, T const &amp;angularVelocityY)</argsstring>
        <name>derivedEulerAngleY</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleY</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angularVelocityY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous derived matrix from the rotation matrix about Y-axis. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="61" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="75" bodyend="88" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="61" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gadeaadd11e26da6de2cdf60b967bf86d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::derivedEulerAngleZ</definition>
        <argsstring>(T const &amp;angleZ, T const &amp;angularVelocityZ)</argsstring>
        <name>derivedEulerAngleZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleZ</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angularVelocityZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous derived matrix from the rotation matrix about Z-axis. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="67" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="92" bodyend="105" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="67" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga215b970822b20b63611e0ad4f61e4afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleXY</definition>
        <argsstring>(T const &amp;angleX, T const &amp;angleY)</argsstring>
        <name>eulerAngleXY</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleX</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angleY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Y). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="73" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="109" bodyend="124" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="73" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaebd29b1894276d6632fc299bbe7f081e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleYX</definition>
        <argsstring>(T const &amp;angleY, T const &amp;angleX)</argsstring>
        <name>eulerAngleYX</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleY</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angleX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="80" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="128" bodyend="143" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="80" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaae63ce27584867e3f9d8889631060846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleXZ</definition>
        <argsstring>(T const &amp;angleX, T const &amp;angleZ)</argsstring>
        <name>eulerAngleXZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleX</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angleZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="87" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="147" bodyend="153" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="87" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaf7edd0bc96e86e0cf78a5369dbad1514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleZX</definition>
        <argsstring>(T const &amp;angle, T const &amp;angleX)</argsstring>
        <name>eulerAngleZX</name>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angleX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * X). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="94" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="157" bodyend="163" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="94" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga3d58cfed58182afcf60a1bb54e9adb8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleYZ</definition>
        <argsstring>(T const &amp;angleY, T const &amp;angleZ)</argsstring>
        <name>eulerAngleYZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleY</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angleZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="101" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="167" bodyend="173" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="101" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gad9660d363649bd15ae8b24e04bea8a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleZY</definition>
        <argsstring>(T const &amp;angleZ, T const &amp;angleY)</argsstring>
        <name>eulerAngleZY</name>
        <param>
          <type>T const &amp;</type>
          <declname>angleZ</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>angleY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * Y). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="108" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="177" bodyend="183" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="108" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga45b31c18b6459f6f0946f3fdd6af41af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleXYZ</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleXYZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Y * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="115" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="187" bodyend="218" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="115" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga3f6cc50ed7cea176ec4ef73a88d19b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleYXZ</definition>
        <argsstring>(T const &amp;yaw, T const &amp;pitch, T const &amp;roll)</argsstring>
        <name>eulerAngleYXZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>yaw</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>roll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="123" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="222" bodyend="253" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="123" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gae938f6896c15f5df1c2f042f60dd0337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleXZX</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleXZX</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Z * X). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="131" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="257" bodyend="288" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="131" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga539cca54c48ac87c1d47da4ef708bb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleXYX</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleXYX</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Y * X). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="139" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="292" bodyend="323" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="139" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga44844028683298b23f65c82501c171c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleYXY</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleYXY</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Y). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="147" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="327" bodyend="358" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="147" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga5c0cb5d7b3c0ea1b908b63682b6b58d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleYZY</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleYZY</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * Z * Y). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="155" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="362" bodyend="393" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="155" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga5824c8c72d7092aec88d3ab741802bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleZYZ</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleZYZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * Y * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="163" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="397" bodyend="428" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="163" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gab72fd85973e419db4230e14fcc64e4a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleZXZ</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleZXZ</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * X * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="171" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="432" bodyend="463" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="171" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga6150d65975f440c7027f19c255884d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleXZY</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleXZY</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Z * Y). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="179" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="467" bodyend="498" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="179" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gac85e15f08046feefcf2c609e453c32a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleYZX</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleYZX</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * Z * X). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="187" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="502" bodyend="533" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="187" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gab1fdbd50b5477074bc04fac99728ac9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleZYX</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleZYX</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * Y * X). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="195" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="537" bodyend="568" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="195" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gac2a9506c526671e93f3c01c437f20c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::eulerAngleZXY</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2, T const &amp;t3)</argsstring>
        <name>eulerAngleZXY</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * X * Y). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="203" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="572" bodyend="603" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="203" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaf9483e883509aad2888188699f9c63ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, defaultp &gt; glm::yawPitchRoll</definition>
        <argsstring>(T const &amp;yaw, T const &amp;pitch, T const &amp;roll)</argsstring>
        <name>yawPitchRoll</name>
        <param>
          <type>T const &amp;</type>
          <declname>yaw</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>roll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="211" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="607" bodyend="638" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="211" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gad7884bdb6fc591ad8c7080c112121b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 2, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 2, T, defaultp &gt; glm::orientate2</definition>
        <argsstring>(T const &amp;angle)</argsstring>
        <name>orientate2</name>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 2D 2 * 2 rotation matrix from an euler angle. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="219" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="642" bodyend="655" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="219" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gad93945eb388f8647269adc60b7a9731c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 3, T, defaultp &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 3, T, defaultp &gt; glm::orientate3</definition>
        <argsstring>(T const &amp;angle)</argsstring>
        <name>orientate3</name>
        <param>
          <type>T const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 2D 4 * 4 homogeneous rotation matrix from an euler angle. <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="224" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="659" bodyend="677" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="224" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga51f0ff190eac49b24be115b5bf18ef54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 3, T, Q &gt; glm::orientate3</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;angles)</argsstring>
        <name>orientate3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 3 * 3 rotation matrix from euler angles (Y * X * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="229" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="681" bodyend="686" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="229" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaf833e7060d90ba20ae9b54e9d8cd7aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::orientate4</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;angles)</argsstring>
        <name>orientate4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Z). <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="234" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="690" bodyend="695" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="234" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gacea701562f778c1da4d3a0a1cf091000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleXYZ</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleXYZ</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (X * Y * Z) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" line="698" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="698" bodyend="712" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="239" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaf0937518e63037335a0e8358b6f053c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleYXZ</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleYXZ</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Y * X * Z) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="247" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="715" bodyend="729" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="247" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gacf0bc6c031f25fa3ee0055b62c8260d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleXZX</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleXZX</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (X * Z * X) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="255" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="732" bodyend="746" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="255" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaf1077a72171d0f3b08f022ab5ff88af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleXYX</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleXYX</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (X * Y * X) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="263" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="749" bodyend="763" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="263" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gaab8868556361a190db94374e9983ed39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleYXY</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleYXY</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Y * X * Y) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="271" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="766" bodyend="780" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="271" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga11dad972c109e4bf8694c915017c44a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleYZY</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleYZY</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Y * Z * Y) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="279" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="783" bodyend="797" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="279" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gafdfa880a64b565223550c2d3938b1aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleZYZ</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleZYZ</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Z * Y * Z) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="287" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="800" bodyend="814" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="287" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga59359fef9bad92afaca55e193f91e702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleZXZ</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleZXZ</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Z * X * Z) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="295" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="817" bodyend="831" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="295" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1gabe5a65d8eb1cd873c8de121cce1a15ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleXZY</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleXZY</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (X * Z * Y) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="303" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="834" bodyend="848" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="303" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga9049b78466796c0de2971756e25b93d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleYZX</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleYZX</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Y * Z * X) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="311" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="851" bodyend="865" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="311" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga2d6c11a4abfa60c565483cee2d3f7665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleZYX</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleZYX</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Z * Y * X) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="319" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="868" bodyend="882" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="319" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__euler__angles_1ga81fbbca2ba0c778b9662d5355b4e2363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL void</type>
        <definition>GLM_FUNC_DECL void glm::extractEulerAngleZXY</definition>
        <argsstring>(mat&lt; 4, 4, T, defaultp &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</argsstring>
        <name>extractEulerAngleZXY</name>
        <param>
          <type>mat&lt; 4, 4, T, defaultp &gt; const &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the (Z * X * Y) Euler angles from the rotation matrix M <simplesect kind="see"><para><ref refid="group__gtx__euler__angles" kindref="compound">GLM_GTX_euler_angles</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" line="327" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.inl" bodystart="885" bodyend="899" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/euler_angles.hpp" declline="327" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="euler__angles_8hpp" kindref="compound">glm/gtx/euler_angles.hpp</ref>&gt; to use the features of this extension.</para>
<para>Build matrices from Euler angles.</para>
<para>Extraction of Euler angles from rotation matrix. Based on the original paper 2014 Mike Day - Extracting Euler Angles from a Rotation Matrix. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
