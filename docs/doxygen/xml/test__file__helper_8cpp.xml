<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__file__helper_8cpp" kind="file" language="C++">
    <compoundname>test_file_helper.cpp</compoundname>
    <includes refid="includes_8h" local="yes">includes.h</includes>
    <incdepgraph>
      <node id="52">
        <label>spdlog/async.h</label>
        <link refid="async_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>spdlog/async_logger.h</label>
        <link refid="async__logger_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>common-inl.h</label>
        <link refid="common-inl_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>spdlog/common.h</label>
        <link refid="spdlog_2include_2spdlog_2common_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>spdlog/details/backtracer.h</label>
        <link refid="backtracer_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>spdlog/details/circular_q.h</label>
        <link refid="circular__q_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spdlog/details/console_globals.h</label>
        <link refid="console__globals_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>spdlog/details/file_helper.h</label>
        <link refid="file__helper_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>spdlog/details/log_msg.h</label>
        <link refid="log__msg_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>spdlog/details/log_msg_buffer.h</label>
        <link refid="log__msg__buffer_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>spdlog/details/mpmc_blocking_q.h</label>
        <link refid="mpmc__blocking__q_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>spdlog/details/null_mutex.h</label>
        <link refid="null__mutex_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>spdlog/details/os.h</label>
        <link refid="details_2os_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>spdlog/details/registry.h</label>
        <link refid="registry_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>spdlog/details/synchronous_factory.h</label>
        <link refid="synchronous__factory_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>spdlog/details/thread_pool.h</label>
        <link refid="thread__pool_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>spdlog/fmt/bundled/chrono.h</label>
        <link refid="bundled_2chrono_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>spdlog/fmt/bundled/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>spdlog/fmt/bundled/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>spdlog/fmt/chrono.h</label>
        <link refid="chrono_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>spdlog/fmt/fmt.h</label>
        <link refid="fmt_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>spdlog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>spdlog/logger.h</label>
        <link refid="3rdparty_2spdlog_2include_2spdlog_2logger_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>spdlog/pattern_formatter.h</label>
        <link refid="pattern__formatter_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spdlog/sinks/ansicolor_sink.h</label>
        <link refid="ansicolor__sink_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>spdlog/sinks/base_sink.h</label>
        <link refid="base__sink_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>spdlog/sinks/basic_file_sink.h</label>
        <link refid="basic__file__sink_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>spdlog/sinks/daily_file_sink.h</label>
        <link refid="daily__file__sink_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>spdlog/sinks/null_sink.h</label>
        <link refid="null__sink_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>spdlog/sinks/ostream_sink.h</label>
        <link refid="ostream__sink_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>spdlog/sinks/rotating_file_sink.h</label>
        <link refid="rotating__file__sink_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>spdlog/sinks/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
        <link refid="stdout__color__sinks_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>spdlog/spdlog.h</label>
        <link refid="spdlog_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>spdlog/tweakme.h</label>
        <link refid="tweakme_8h_source"/>
      </node>
      <node id="50">
        <label>spdlog/version.h</label>
        <link refid="version_8h_source"/>
      </node>
      <node id="3">
        <label>catch.hpp</label>
        <link refid="catch_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>includes.h</label>
        <link refid="includes_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp</label>
        <link refid="test__file__helper_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>utils.h</label>
        <link refid="3rdparty_2spdlog_2tests_2utils_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="76">
        <label>array</label>
      </node>
      <node id="30">
        <label>atomic</label>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="38">
        <label>cmath</label>
      </node>
      <node id="56">
        <label>condition_variable</label>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="20">
        <label>cstdio</label>
      </node>
      <node id="34">
        <label>cstring</label>
      </node>
      <node id="58">
        <label>ctime</label>
      </node>
      <node id="14">
        <label>exception</label>
      </node>
      <node id="21">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>functional</label>
      </node>
      <node id="31">
        <label>initializer_list</label>
      </node>
      <node id="24">
        <label>iomanip</label>
      </node>
      <node id="4">
        <label>iosfwd</label>
      </node>
      <node id="22">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>iterator</label>
      </node>
      <node id="36">
        <label>limits</label>
      </node>
      <node id="69">
        <label>locale</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="44">
        <label>mutex</label>
      </node>
      <node id="11">
        <label>ostream</label>
      </node>
      <node id="18">
        <label>random</label>
      </node>
      <node id="23">
        <label>sstream</label>
      </node>
      <node id="39">
        <label>stdexcept</label>
      </node>
      <node id="25">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="40">
        <label>system_error</label>
      </node>
      <node id="59">
        <label>thread</label>
      </node>
      <node id="62">
        <label>tuple</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="43">
        <label>unordered_map</label>
      </node>
      <node id="17">
        <label>utility</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__file__helper_8cpp_1a0016584446222bb7d76b1f76db680625" prot="public" static="no">
        <name>TEST_FILENAME</name>
        <initializer>&quot;test_logs/file_helper_test.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="6" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__file__helper_8cpp_1afde2f49917a3f38a85fd27e19d63fd53" prot="public" static="no" mutable="no">
        <type><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref></type>
        <definition>file_helper helper</definition>
        <argsstring></argsstring>
        <name>helper</name>
        <initializer>{
    prepare_logdir()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="22" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__file__helper_8cpp_1aaa708637998f020d561728d734a21f1b" prot="public" static="no" mutable="no">
        <type>spdlog::filename_t</type>
        <definition>spdlog::filename_t target_filename</definition>
        <argsstring></argsstring>
        <name>target_filename</name>
        <initializer>= SPDLOG_FILENAME_T(TEST_FILENAME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="23" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__file__helper_8cpp_1a4a937f48d6557da1feb644659f2a19c1" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t expected_size</definition>
        <argsstring></argsstring>
        <name>expected_size</name>
        <initializer>= 123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="32" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__file__helper_8cpp_1a30daebf6ed7345ba8f3f8dd19b387174" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void write_with_helper</definition>
        <argsstring>(file_helper &amp;helper, size_t howmany)</argsstring>
        <name>write_with_helper</name>
        <param>
          <type><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref> &amp;</type>
          <declname>helper</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>howmany</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="10" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="10" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1aee9c44f51cb0e24220a1655a6d0824aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>helper</type>
        <definition>helper open</definition>
        <argsstring>(target_filename)</argsstring>
        <name>open</name>
        <param>
          <type>target_filename</type>
        </param>
        <initializer>{
        <ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref> helper</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="24" column="11" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="24" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1ad16467203e9c642422f4c35a3af87f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE</definition>
        <argsstring>(helper.filename()==target_filename)</argsstring>
        <name>REQUIRE</name>
        <param>
          <type>helper.</type>
          <declname>filename</declname>
          <array>()</array>
          <defval>=target_filename</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="25" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="25" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a4b53f417c66e0b2014989a40506034f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>write_with_helper</definition>
        <argsstring>(helper, expected_size)</argsstring>
        <name>write_with_helper</name>
        <param>
          <type>helper</type>
        </param>
        <param>
          <type>expected_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="36" column="9" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="36" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1ab16e2763803d231bbc22c895feb47075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE</definition>
        <argsstring>(static_cast&lt; size_t &gt;(helper.size())==expected_size)</argsstring>
        <name>REQUIRE</name>
        <param>
          <type>static_cast&lt; size_t &gt;</type>
          <array>helper.size()</array>
          <defval>=expected_size</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="37" column="9" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="37" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a5f0e9b5e5e44b3c03a8c115c8c5a3ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE</definition>
        <argsstring>(get_filesize(TEST_FILENAME)==expected_size)</argsstring>
        <name>REQUIRE</name>
        <param>
          <type>get_filesize(TEST_FILENAME)</type>
          <defval>=expected_size</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="39" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="39" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1addfcf9ed2e6d64bc9760d67db3ab3c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>write_with_helper</definition>
        <argsstring>(helper, 12)</argsstring>
        <name>write_with_helper</name>
        <param>
          <type>helper</type>
        </param>
        <param>
          <type>12</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="48" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a9270a0476abf1c6bf4a6859b1511a0c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>helper</type>
        <definition>helper reopen</definition>
        <argsstring>(true)</argsstring>
        <name>reopen</name>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="50" column="11" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="50" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a289b2fc526b66f25455cca8059317a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>helper</type>
        <definition>helper reopen</definition>
        <argsstring>(false)</argsstring>
        <name>reopen</name>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="63" column="11" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="63" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1aedbf72cff6b66ba07d126fc30f048f02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_split_ext</definition>
        <argsstring>(const spdlog::filename_t::value_type *fname, const spdlog::filename_t::value_type *expect_base, const spdlog::filename_t::value_type *expect_ext)</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>const spdlog::filename_t::value_type *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>const spdlog::filename_t::value_type *</type>
          <declname>expect_base</declname>
        </param>
        <param>
          <type>const spdlog::filename_t::value_type *</type>
          <declname>expect_ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="67" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="67" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a5aa16bd46c24cc0f5ea215a9161e8e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;.mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;.mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="84" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="84" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a1fc54cc65392d5a5d6382db1b8f2edbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;.mylog&quot;), SPDLOG_FILENAME_T(&quot;.mylog&quot;), SPDLOG_FILENAME_T(&quot;&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="85" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="85" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a9da428a95ab4567e6fbc234755f15fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog&quot;), SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog&quot;), SPDLOG_FILENAME_T(&quot;&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="86" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="86" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1ab2385b0b00d1a5b8a7ac1796bb83e57b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bb.d/mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="87" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="87" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a2ae0cccffcfec2c9fe91d578a528c555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="88" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a14e8a0f28a9f81676daf39b21af8a697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog.&quot;), SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog.&quot;), SPDLOG_FILENAME_T(&quot;&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog.&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/mylog.&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="89" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="89" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1ae9535d8f8478c50367aef1054690dbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/.mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/.mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/.mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;aaa/bbb/ccc/.mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="90" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="90" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1ae4c667518314b390fe88f061710585a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="91" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="91" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a2499286e1d43d90b5f14bab702a68515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/.mylog&quot;), SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/.mylog&quot;), SPDLOG_FILENAME_T(&quot;&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/.mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/aaa/bbb/ccc/.mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="92" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="92" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a4165f10872771a9fd3e69f1f2229be0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;../mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;../mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;../mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;../mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="93" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="93" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1af5f3d557f110c265255a673cb836c073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;.././mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;.././mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.././mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.././mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="94" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="94" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a70cba8324a2bbf8959c22ae71ae3d8fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;.././mylog.txt/xxx&quot;), SPDLOG_FILENAME_T(&quot;.././mylog.txt/xxx&quot;), SPDLOG_FILENAME_T(&quot;&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.././mylog.txt/xxx&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.././mylog.txt/xxx&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="95" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="95" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1afb4bc7811c616705fda970c0c1d297fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;/mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;/mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;/mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="96" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="96" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1aed1ea5d44b98b3eaa1297347b324b789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;//mylog.txt&quot;), SPDLOG_FILENAME_T(&quot;//mylog&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;//mylog.txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;//mylog&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="97" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="97" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1ab2f630def922b116c1db780c1147365c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;&quot;), SPDLOG_FILENAME_T(&quot;&quot;), SPDLOG_FILENAME_T(&quot;&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="98" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="98" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a5c8812cde72fb273ee68893bdc5b03db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;.&quot;), SPDLOG_FILENAME_T(&quot;.&quot;), SPDLOG_FILENAME_T(&quot;&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="99" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="99" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a16a0bc954f0eba35659942d7aa918f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_split_ext</definition>
        <argsstring>(SPDLOG_FILENAME_T(&quot;..txt&quot;), SPDLOG_FILENAME_T(&quot;.&quot;), SPDLOG_FILENAME_T(&quot;.txt&quot;))</argsstring>
        <name>test_split_ext</name>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;..txt&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.&quot;)</type>
        </param>
        <param>
          <type>SPDLOG_FILENAME_T(&quot;.txt&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="100" column="5" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a4563b630f681511a2ccd11d91cbc662e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;file_event_handlers&quot;, &quot;[file_helper]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;file_event_handlers&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[file_helper]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="103" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="103" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="test__file__helper_8cpp_1a4b9672ad3225018b167c29d678180609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;file_helper_open&quot;, &quot;[file_helper]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;file_helper_open&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[file_helper]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" line="158" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp" bodystart="158" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>content<sp/>is<sp/>released<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>as<sp/>specified<sp/>in<sp/>https://raw.githubusercontent.com/gabime/spdlog/master/LICENSE</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;includes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_FILENAME<sp/>&quot;test_logs/file_helper_test.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">spdlog::details::file_helper</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_with_helper(<ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref><sp/>&amp;helper,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>howmany)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::memory_buf_t<sp/>formatted;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::fmt_lib::format_to(std::back_inserter(formatted),<sp/></highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>std::string(howmany,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.write(formatted);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.flush();</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;file_helper_filename&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[file_helper::filename()]]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_logdir();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref><sp/>helper;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>target_filename<sp/>=<sp/>SPDLOG_FILENAME_T(TEST_FILENAME);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.open(target_filename);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(helper.filename()<sp/>==<sp/>target_filename);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;file_helper_size&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[file_helper::size()]]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_logdir();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>target_filename<sp/>=<sp/>SPDLOG_FILENAME_T(TEST_FILENAME);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>expected_size<sp/>=<sp/>123;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref><sp/>helper;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.open(target_filename);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_with_helper(helper,<sp/>expected_size);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(helper.size())<sp/>==<sp/>expected_size);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(get_filesize(TEST_FILENAME)<sp/>==<sp/>expected_size);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;file_helper_reopen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[file_helper::reopen()]]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_logdir();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>target_filename<sp/>=<sp/>SPDLOG_FILENAME_T(TEST_FILENAME);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref><sp/>helper;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.open(target_filename);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>write_with_helper(helper,<sp/>12);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(helper.size()<sp/>==<sp/>12);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.reopen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(helper.size()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;file_helper_reopen2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[file_helper::reopen(false)]]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_logdir();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>target_filename<sp/>=<sp/>SPDLOG_FILENAME_T(TEST_FILENAME);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>expected_size<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref><sp/>helper;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.open(target_filename);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>write_with_helper(helper,<sp/>expected_size);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(helper.size()<sp/>==<sp/>expected_size);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.reopen(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(helper.size()<sp/>==<sp/>expected_size);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_split_ext(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>spdlog::filename_t::value_type<sp/>*fname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>spdlog::filename_t::value_type<sp/>*expect_base,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>spdlog::filename_t::value_type<sp/>*expect_ext)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>filename(fname);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>expected_base(expect_base);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>expected_ext(expect_ext);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>basename;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>ext;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(basename,<sp/>ext)<sp/>=<sp/>file_helper::split_by_extension(filename);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(basename<sp/>==<sp/>expected_base);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(ext<sp/>==<sp/>expected_ext);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;file_helper_split_by_extension&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[file_helper::split_by_extension()]]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bb.d/mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bb.d/mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bb.d/mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bb.d/mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;aaa/bbb/ccc/mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;aaa/bbb/ccc/mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;aaa/bbb/ccc/mylog.&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;aaa/bbb/ccc/mylog.&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;aaa/bbb/ccc/.mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;aaa/bbb/ccc/.mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bbb/ccc/mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bbb/ccc/mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bbb/ccc/.mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/aaa/bbb/ccc/.mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;../mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;../mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.././mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.././mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.././mylog.txt/xxx&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.././mylog.txt/xxx&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;//mylog.txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;//mylog&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>test_split_ext(SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;..txt&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">),<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;file_event_handlers&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[file_helper]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>flags</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_open,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after_open,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before_close,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after_close</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_logdir();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>test_filename<sp/>=<sp/>SPDLOG_FILENAME_T(TEST_FILENAME);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>event<sp/>handles<sp/>that<sp/>update<sp/>vector<sp/>of<sp/>flags<sp/>when<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;flags&gt;<sp/>events;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspdlog_1_1file__event__handlers" kindref="compound">spdlog::file_event_handlers</ref><sp/>handlers;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>handlers.before_open<sp/>=<sp/>[&amp;](spdlog::filename_t<sp/>filename)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(filename<sp/>==<sp/>test_filename);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.push_back(flags::before_open);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>handlers.after_open<sp/>=<sp/>[&amp;](spdlog::filename_t<sp/>filename,<sp/>std::FILE<sp/>*fstream)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(filename<sp/>==<sp/>test_filename);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(fstream);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;after_open\n&quot;</highlight><highlight class="normal">,<sp/>fstream);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.push_back(flags::after_open);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>handlers.before_close<sp/>=<sp/>[&amp;](spdlog::filename_t<sp/>filename,<sp/>std::FILE<sp/>*fstream)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(filename<sp/>==<sp/>test_filename);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(fstream);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;before_close\n&quot;</highlight><highlight class="normal">,<sp/>fstream);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.push_back(flags::before_close);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>handlers.after_close<sp/>=<sp/>[&amp;](spdlog::filename_t<sp/>filename)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(filename<sp/>==<sp/>test_filename);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.push_back(flags::after_close);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">spdlog::details::file_helper</ref><sp/>helper{handlers};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(events.empty());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.open(test_filename);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(events<sp/>==<sp/>std::vector&lt;flags&gt;{flags::before_open,<sp/>flags::after_open});</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.clear();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.close();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(events<sp/>==<sp/>std::vector&lt;flags&gt;{flags::before_close,<sp/>flags::after_close});</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(file_contents(TEST_FILENAME)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;after_open\nbefore_close\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.reopen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.clear();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>file_helper<sp/>destrcutor<sp/>calls<sp/>the<sp/>close<sp/>callbacks<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(events<sp/>==<sp/>std::vector&lt;flags&gt;{flags::before_close,<sp/>flags::after_close});</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(file_contents(TEST_FILENAME)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;after_open\nbefore_close\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;file_helper_open&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[file_helper]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_logdir();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::filename_t<sp/>target_filename<sp/>=<sp/>SPDLOG_FILENAME_T(TEST_FILENAME);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classspdlog_1_1details_1_1file__helper" kindref="compound">file_helper</ref><sp/>helper;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.open(target_filename);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>helper.close();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>target_filename<sp/>+=<sp/>SPDLOG_FILENAME_T(</highlight><highlight class="stringliteral">&quot;/invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE_THROWS_AS(helper.open(target_filename),<sp/><ref refid="classspdlog_1_1spdlog__ex" kindref="compound">spdlog::spdlog_ex</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/test_file_helper.cpp"/>
  </compounddef>
</doxygen>
