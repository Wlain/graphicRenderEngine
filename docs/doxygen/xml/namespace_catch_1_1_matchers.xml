<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespace_catch_1_1_matchers" kind="namespace" language="C++">
    <compoundname>Catch::Matchers</compoundname>
    <innernamespace refid="namespace_catch_1_1_matchers_1_1_exception">Catch::Matchers::Exception</innernamespace>
    <innernamespace refid="namespace_catch_1_1_matchers_1_1_floating">Catch::Matchers::Floating</innernamespace>
    <innernamespace refid="namespace_catch_1_1_matchers_1_1_generic">Catch::Matchers::Generic</innernamespace>
    <innernamespace refid="namespace_catch_1_1_matchers_1_1_impl">Catch::Matchers::Impl</innernamespace>
    <innernamespace refid="namespace_catch_1_1_matchers_1_1_std_string">Catch::Matchers::StdString</innernamespace>
    <innernamespace refid="namespace_catch_1_1_matchers_1_1_vector">Catch::Matchers::Vector</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="catch_8hpp_1a0fcd8bd126bb510a6bb99e6360aa270a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher" kindref="compound">Exception::ExceptionMessageMatcher</ref></type>
        <definition>Exception::ExceptionMessageMatcher Catch::Matchers::Message</definition>
        <argsstring>(std::string const &amp;message)</argsstring>
        <name>Message</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3412" column="36" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3412" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1ae77e233c3ed735ea12b7c726153798d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_ulps_matcher" kindref="compound">Floating::WithinUlpsMatcher</ref></type>
        <definition>Floating::WithinUlpsMatcher Catch::Matchers::WithinULP</definition>
        <argsstring>(double target, uint64_t maxUlpDiff)</argsstring>
        <name>WithinULP</name>
        <param>
          <type>double</type>
          <declname>target</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>maxUlpDiff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3465" column="33" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3465" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a5d108ff6aaeac40f20f4978dfb3f51fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_ulps_matcher" kindref="compound">Floating::WithinUlpsMatcher</ref></type>
        <definition>Floating::WithinUlpsMatcher Catch::Matchers::WithinULP</definition>
        <argsstring>(float target, uint64_t maxUlpDiff)</argsstring>
        <name>WithinULP</name>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>maxUlpDiff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3466" column="33" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3466" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a4c9ea76d47d02de0cf2d354c87c26e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_abs_matcher" kindref="compound">Floating::WithinAbsMatcher</ref></type>
        <definition>Floating::WithinAbsMatcher Catch::Matchers::WithinAbs</definition>
        <argsstring>(double target, double margin)</argsstring>
        <name>WithinAbs</name>
        <param>
          <type>double</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3467" column="32" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3467" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a0c559d9cfda02a81941ad6933f4ca450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_rel_matcher" kindref="compound">Floating::WithinRelMatcher</ref></type>
        <definition>Floating::WithinRelMatcher Catch::Matchers::WithinRel</definition>
        <argsstring>(double target, double eps)</argsstring>
        <name>WithinRel</name>
        <param>
          <type>double</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3468" column="32" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3468" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a46e2f1efab13b85e2cbe36958a27d518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_rel_matcher" kindref="compound">Floating::WithinRelMatcher</ref></type>
        <definition>Floating::WithinRelMatcher Catch::Matchers::WithinRel</definition>
        <argsstring>(double target)</argsstring>
        <name>WithinRel</name>
        <param>
          <type>double</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3470" column="32" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3470" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a494b4c8c68ac883e29dc35da71a4cd72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_rel_matcher" kindref="compound">Floating::WithinRelMatcher</ref></type>
        <definition>Floating::WithinRelMatcher Catch::Matchers::WithinRel</definition>
        <argsstring>(float target, float eps)</argsstring>
        <name>WithinRel</name>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>float</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3471" column="32" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3471" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a18cfb571dd191377674bad0cbb50078e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_rel_matcher" kindref="compound">Floating::WithinRelMatcher</ref></type>
        <definition>Floating::WithinRelMatcher Catch::Matchers::WithinRel</definition>
        <argsstring>(float target)</argsstring>
        <name>WithinRel</name>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3473" column="32" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3473" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a70a7c65c44f6ea7f739402c0b6f28657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_catch_1_1_matchers_1_1_generic_1_1_predicate_matcher" kindref="compound">Generic::PredicateMatcher</ref>&lt; T &gt;</type>
        <definition>Generic::PredicateMatcher&lt; T &gt; Catch::Matchers::Predicate</definition>
        <argsstring>(std::function&lt; bool(T const &amp;)&gt; const &amp;predicate, std::string const &amp;description=&quot;&quot;)</argsstring>
        <name>Predicate</name>
        <param>
          <type>std::function&lt; bool(T const &amp;)&gt; const &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3519" column="31" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3519" bodyend="3521"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1af8af7dfc338335ed4c788cb1b37fc59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher" kindref="compound">StdString::EqualsMatcher</ref></type>
        <definition>StdString::EqualsMatcher Catch::Matchers::Equals</definition>
        <argsstring>(std::string const &amp;str, CaseSensitive::Choice caseSensitivity=CaseSensitive::Yes)</argsstring>
        <name>Equals</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>CaseSensitive::Choice</type>
          <declname>caseSensitivity</declname>
          <defval>CaseSensitive::Yes</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3586" column="30" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3586" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a1f6c2accdc6cd75a84d7112dcad647b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_contains_matcher" kindref="compound">StdString::ContainsMatcher</ref></type>
        <definition>StdString::ContainsMatcher Catch::Matchers::Contains</definition>
        <argsstring>(std::string const &amp;str, CaseSensitive::Choice caseSensitivity=CaseSensitive::Yes)</argsstring>
        <name>Contains</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>CaseSensitive::Choice</type>
          <declname>caseSensitivity</declname>
          <defval>CaseSensitive::Yes</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3587" column="32" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3587" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1ae5a45efb4538c57c43e04f3f9043ad6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_ends_with_matcher" kindref="compound">StdString::EndsWithMatcher</ref></type>
        <definition>StdString::EndsWithMatcher Catch::Matchers::EndsWith</definition>
        <argsstring>(std::string const &amp;str, CaseSensitive::Choice caseSensitivity=CaseSensitive::Yes)</argsstring>
        <name>EndsWith</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>CaseSensitive::Choice</type>
          <declname>caseSensitivity</declname>
          <defval>CaseSensitive::Yes</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3588" column="32" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3588" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a97c9ee09a70378ca7e8c6f9f01b0d6d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_starts_with_matcher" kindref="compound">StdString::StartsWithMatcher</ref></type>
        <definition>StdString::StartsWithMatcher Catch::Matchers::StartsWith</definition>
        <argsstring>(std::string const &amp;str, CaseSensitive::Choice caseSensitivity=CaseSensitive::Yes)</argsstring>
        <name>StartsWith</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>CaseSensitive::Choice</type>
          <declname>caseSensitivity</declname>
          <defval>CaseSensitive::Yes</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3589" column="34" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3589" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a82f1893cf50ae4c14b9b3e0980bf22b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_regex_matcher" kindref="compound">StdString::RegexMatcher</ref></type>
        <definition>StdString::RegexMatcher Catch::Matchers::Matches</definition>
        <argsstring>(std::string const &amp;regex, CaseSensitive::Choice caseSensitivity=CaseSensitive::Yes)</argsstring>
        <name>Matches</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>regex</declname>
        </param>
        <param>
          <type>CaseSensitive::Choice</type>
          <declname>caseSensitivity</declname>
          <defval>CaseSensitive::Yes</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3590" column="29" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" declline="3590" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a0eacc3d8729e9a1dcf76387ec60195ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AllocComp</type>
            <defval>std::allocator&lt;T&gt;</defval>
          </param>
          <param>
            <type>typename AllocMatch</type>
            <defval>AllocComp</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_catch_1_1_matchers_1_1_vector_1_1_contains_matcher" kindref="compound">Vector::ContainsMatcher</ref>&lt; T, AllocComp, AllocMatch &gt;</type>
        <definition>Vector::ContainsMatcher&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::Contains</definition>
        <argsstring>(std::vector&lt; T, AllocComp &gt; const &amp;comparator)</argsstring>
        <name>Contains</name>
        <param>
          <type>std::vector&lt; T, AllocComp &gt; const &amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3737" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3737" bodyend="3739"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1ad8092d8b34128390dbff20b87f2f6f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Alloc</type>
            <defval>std::allocator&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_catch_1_1_matchers_1_1_vector_1_1_contains_element_matcher" kindref="compound">Vector::ContainsElementMatcher</ref>&lt; T, Alloc &gt;</type>
        <definition>Vector::ContainsElementMatcher&lt; T, Alloc &gt; Catch::Matchers::VectorContains</definition>
        <argsstring>(T const &amp;comparator)</argsstring>
        <name>VectorContains</name>
        <param>
          <type>T const &amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3742" column="36" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3742" bodyend="3744"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a5b76944eeb2b65329fabbac487a31d66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AllocComp</type>
            <defval>std::allocator&lt;T&gt;</defval>
          </param>
          <param>
            <type>typename AllocMatch</type>
            <defval>AllocComp</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_catch_1_1_matchers_1_1_vector_1_1_equals_matcher" kindref="compound">Vector::EqualsMatcher</ref>&lt; T, AllocComp, AllocMatch &gt;</type>
        <definition>Vector::EqualsMatcher&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::Equals</definition>
        <argsstring>(std::vector&lt; T, AllocComp &gt; const &amp;comparator)</argsstring>
        <name>Equals</name>
        <param>
          <type>std::vector&lt; T, AllocComp &gt; const &amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3747" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3747" bodyend="3749"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a02bf172177011d09780a98635dc5a124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AllocComp</type>
            <defval>std::allocator&lt;T&gt;</defval>
          </param>
          <param>
            <type>typename AllocMatch</type>
            <defval>AllocComp</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_catch_1_1_matchers_1_1_vector_1_1_approx_matcher" kindref="compound">Vector::ApproxMatcher</ref>&lt; T, AllocComp, AllocMatch &gt;</type>
        <definition>Vector::ApproxMatcher&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::Approx</definition>
        <argsstring>(std::vector&lt; T, AllocComp &gt; const &amp;comparator)</argsstring>
        <name>Approx</name>
        <param>
          <type>std::vector&lt; T, AllocComp &gt; const &amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3752" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3752" bodyend="3754"/>
      </memberdef>
      <memberdef kind="function" id="catch_8hpp_1a3b1784cd26bd7e3fea38505eb138b186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AllocComp</type>
            <defval>std::allocator&lt;T&gt;</defval>
          </param>
          <param>
            <type>typename AllocMatch</type>
            <defval>AllocComp</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_catch_1_1_matchers_1_1_vector_1_1_unordered_equals_matcher" kindref="compound">Vector::UnorderedEqualsMatcher</ref>&lt; T, AllocComp, AllocMatch &gt;</type>
        <definition>Vector::UnorderedEqualsMatcher&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::UnorderedEquals</definition>
        <argsstring>(std::vector&lt; T, AllocComp &gt; const &amp;target)</argsstring>
        <name>UnorderedEquals</name>
        <param>
          <type>std::vector&lt; T, AllocComp &gt; const &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3757" column="36" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" bodystart="3757" bodyend="3759"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/tests/catch.hpp" line="3234" column="1"/>
  </compounddef>
</doxygen>
