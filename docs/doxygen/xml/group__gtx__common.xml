<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__common" kind="group">
    <compoundname>gtx_common</compoundname>
    <title>GLM_GTX_common</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType::bool_type</type>
        <definition>GLM_FUNC_DECL genType::bool_type glm::isdenormal</definition>
        <argsstring>(genType const &amp;x)</argsstring>
        <name>isdenormal</name>
        <param>
          <type>genType const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if x is a denormalized number Numbers whose absolute value is too small to be represented in the normal format are represented in an alternate, denormalized format. This format is less precise but can represent values closer to zero.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/isnan.xml">GLSL isnan man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" line="43" column="43" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" declline="43" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__common_1ga22feecd4248d9ef34b079a091f273281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::fmod</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;v)</argsstring>
        <name>fmod</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to &apos;mod&apos; but with a different rounding and integer support. Returns &apos;x - y * trunc(x/y)&apos; instead of &apos;x - y * floor(x/y)&apos;</para>
<para><simplesect kind="see"><para><ulink url="http://stackoverflow.com/questions/7610631/glsl-mod-vs-hlsl-fmod">GLSL mod vs HLSL fmod</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/mod.xml">GLSL mod man page</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" line="51" column="19" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" declline="51" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__common_1ga57a2d78fae57ab5483d49060044340f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::openBounded</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;Value, vec&lt; L, T, Q &gt; const &amp;Min, vec&lt; L, T, Q &gt; const &amp;Max)</argsstring>
        <name>openBounded</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Min</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether vector components values are within an interval. A open interval excludes its endpoints, and is denoted with square brackets.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" line="61" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.inl" bodystart="116" bodyend="119" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" declline="61" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__common_1ga90a5085f6b83d4a519b80cf977ed952a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::closeBounded</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;Value, vec&lt; L, T, Q &gt; const &amp;Min, vec&lt; L, T, Q &gt; const &amp;Max)</argsstring>
        <name>closeBounded</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Min</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>Max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether vector components values are within an interval. A closed interval includes its endpoints, and is denoted with square brackets.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__ext__vector__relational" kindref="compound">GLM_EXT_vector_relational</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" line="71" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.inl" bodystart="122" bodyend="125" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp" declline="71" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provide functions to increase the compatibility with Cg and HLSL languages. </para>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="gtx_2common_8hpp" kindref="compound">glm/gtx/common.hpp</ref>&gt; to use the features of this extension. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
