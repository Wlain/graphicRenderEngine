<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="common_8inl" kind="file" language="C++">
    <compoundname>common.inl</compoundname>
    <includes local="no">cmath</includes>
    <includes refid="epsilon_8hpp" local="yes">../gtc/epsilon.hpp</includes>
    <includes refid="constants_8hpp" local="yes">../gtc/constants.hpp</includes>
    <includedby refid="gtx_2common_8hpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp</includedby>
    <incdepgraph>
      <node id="65">
        <label>../common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>detail/_fixes.hpp</label>
        <link refid="__fixes_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>_vectorize.hpp</label>
        <link refid="__vectorize_8hpp"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>compute_vector_relational.hpp</label>
        <link refid="compute__vector__relational_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>detail/func_common.inl</label>
        <link refid="func__common_8inl"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>detail/func_exponential.inl</label>
        <link refid="func__exponential_8inl"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>detail/func_geometric.inl</label>
        <link refid="func__geometric_8inl"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>detail/func_matrix.inl</label>
        <link refid="func__matrix_8inl"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>detail/func_trigonometric.inl</label>
        <link refid="func__trigonometric_8inl"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>detail/func_vector_relational.inl</label>
        <link refid="func__vector__relational_8inl"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../detail/qualifier.hpp</label>
        <link refid="qualifier_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../detail/setup.hpp</label>
        <link refid="setup_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>detail/type_float.hpp</label>
        <link refid="type__float_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>detail/type_int.hpp</label>
        <link refid="type__int_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>detail/type_mat.hpp</label>
        <link refid="type__mat_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>detail/type_mat2x2.hpp</label>
        <link refid="type__mat2x2_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>type_mat2x2.inl</label>
        <link refid="type__mat2x2_8inl"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>detail/type_mat2x3.hpp</label>
        <link refid="type__mat2x3_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>type_mat2x3.inl</label>
        <link refid="type__mat2x3_8inl"/>
      </node>
      <node id="39">
        <label>detail/type_mat2x4.hpp</label>
        <link refid="type__mat2x4_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>type_mat2x4.inl</label>
        <link refid="type__mat2x4_8inl"/>
      </node>
      <node id="42">
        <label>detail/type_mat3x2.hpp</label>
        <link refid="type__mat3x2_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>type_mat3x2.inl</label>
        <link refid="type__mat3x2_8inl"/>
      </node>
      <node id="12">
        <label>detail/type_mat3x3.hpp</label>
        <link refid="type__mat3x3_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>type_mat3x3.inl</label>
        <link refid="type__mat3x3_8inl"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>detail/type_mat3x4.hpp</label>
        <link refid="type__mat3x4_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>type_mat3x4.inl</label>
        <link refid="type__mat3x4_8inl"/>
      </node>
      <node id="48">
        <label>detail/type_mat4x2.hpp</label>
        <link refid="type__mat4x2_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>type_mat4x2.inl</label>
        <link refid="type__mat4x2_8inl"/>
      </node>
      <node id="51">
        <label>detail/type_mat4x3.hpp</label>
        <link refid="type__mat4x3_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>type_mat4x3.inl</label>
        <link refid="type__mat4x3_8inl"/>
      </node>
      <node id="54">
        <label>detail/type_mat4x4.hpp</label>
        <link refid="type__mat4x4_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>type_mat4x4.inl</label>
        <link refid="type__mat4x4_8inl"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>detail/type_vec.hpp</label>
        <link refid="type__vec_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>detail/type_vec1.hpp</label>
        <link refid="type__vec1_8hpp_source"/>
      </node>
      <node id="26">
        <label>detail/type_vec2.hpp</label>
        <link refid="type__vec2_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>type_vec2.inl</label>
        <link refid="type__vec2_8inl_source"/>
      </node>
      <node id="21">
        <label>type_vec3.hpp</label>
        <link refid="type__vec3_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>type_vec3.inl</label>
        <link refid="type__vec3_8inl_source"/>
      </node>
      <node id="30">
        <label>detail/type_vec4.hpp</label>
        <link refid="type__vec4_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>type_vec4.inl</label>
        <link refid="type__vec4_8inl_source"/>
      </node>
      <node id="59">
        <label>../exponential.hpp</label>
        <link refid="exponential_8hpp"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../fwd.hpp</label>
        <link refid="fwd_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>../geometric.hpp</label>
        <link refid="geometric_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>../gtc/constants.hpp</label>
        <link refid="constants_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>constants.inl</label>
        <link refid="constants_8inl"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../gtc/epsilon.hpp</label>
        <link refid="epsilon_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>epsilon.inl</label>
        <link refid="epsilon_8inl"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>quaternion.hpp</label>
        <link refid="gtc_2quaternion_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>quaternion.inl</label>
        <link refid="gtc_2quaternion_8inl"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.inl</label>
        <link refid="common_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>mat2x2.hpp</label>
        <link refid="mat2x2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>mat2x3.hpp</label>
        <link refid="mat2x3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>mat2x4.hpp</label>
        <link refid="mat2x4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>mat3x2.hpp</label>
        <link refid="mat3x2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../mat3x3.hpp</label>
        <link refid="mat3x3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>mat3x4.hpp</label>
        <link refid="mat3x4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>mat4x2.hpp</label>
        <link refid="mat4x2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>mat4x3.hpp</label>
        <link refid="mat4x3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>mat4x4.hpp</label>
        <link refid="mat4x4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>../matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../simd/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="71">
        <label>../trigonometric.hpp</label>
        <link refid="trigonometric_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>vec2.hpp</label>
        <link refid="vec2_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>vec3.hpp</label>
        <link refid="vec3_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>vec4.hpp</label>
        <link refid="vec4_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>../vector_relational.hpp</label>
        <link refid="vector__relational_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="19">
        <label>limits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.hpp</label>
        <link refid="gtx_2common_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.inl</label>
        <link refid="common_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_common.cpp</label>
        <link refid="gtx__common_8cpp_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_fast_trigonometry.cpp</label>
        <link refid="gtx__fast__trigonometry_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structglm_1_1detail_1_1compute__fmod" prot="public">glm::detail::compute_fmod</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__fmod_3_01_l_00_01_t_00_01_q_00_01false_01_4" prot="public">glm::detail::compute_fmod&lt; L, T, Q, false &gt;</innerclass>
    <innernamespace refid="namespaceglm">glm</innernamespace>
    <innernamespace refid="namespaceglm_1_1detail">glm::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="group__gtx__common" kindref="compound">GLM_GTX_common</ref> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gtc/epsilon.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gtc/constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">glm{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFloat<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="12" refid="structglm_1_1detail_1_1compute__fmod" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__fmod" kindref="compound">compute_fmod</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1functor2" kindref="compound">detail::functor2&lt;L, T, Q&gt;::call</ref>(std::fmod,<sp/>a,<sp/>b);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="21" refid="structglm_1_1detail_1_1compute__fmod_3_01_l_00_01_t_00_01_q_00_01false_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__fmod" kindref="compound">compute_fmod</ref>&lt;L,<sp/>T,<sp/>Q,<sp/>false&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>%<sp/>b;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isdenormal&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>GLM_HAS_CXX11_STL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fpclassify(x)<sp/>==<sp/>FP_SUBNORMAL;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gtc__epsilon_1ga5a19d270e1912843d95f476fe2d3882d" kindref="member">epsilonNotEqual</ref>(x,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0),<sp/>epsilon&lt;T&gt;())<sp/>&amp;&amp;<sp/>std::fabs(x)<sp/>&lt;<sp/><ref refid="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" kindref="member">std::numeric_limits&lt;T&gt;::min</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;1, T, Q&gt;::bool_type</ref><sp/>isdenormal</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvec" kindref="compound">vec&lt;1, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isdenormal&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;1, T, Q&gt;::bool_type</ref>(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isdenormal(x.x));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;2, T, Q&gt;::bool_type</ref><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvec" kindref="compound">vec&lt;2, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isdenormal&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;2, T, Q&gt;::bool_type</ref>(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.x),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.y));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;3, T, Q&gt;::bool_type</ref><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvec" kindref="compound">vec&lt;3, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isdenormal&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;3, T, Q&gt;::bool_type</ref>(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.x),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.y),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.z));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;4, T, Q&gt;::bool_type</ref><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvec" kindref="compound">vec&lt;4, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isdenormal&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;4, T, Q&gt;::bool_type</ref>(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.x),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.y),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.z),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gtx__common_1ga74aa7c7462245d83bd5a9edf9c6c2d91" kindref="member">isdenormal</ref>(x.w));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fmod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>genType&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/>genType<sp/><ref refid="group__gtx__common_1ga22feecd4248d9ef34b079a091f273281" kindref="member">fmod</ref>(genType<sp/>x,<sp/>genType<sp/>y)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gtx__common_1ga22feecd4248d9ef34b079a091f273281" kindref="member">fmod</ref>(<ref refid="structvec" kindref="compound">vec&lt;1, genType&gt;</ref>(x),<sp/>y).x;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structvec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__gtx__common_1ga22feecd4248d9ef34b079a091f273281" kindref="member">fmod</ref>(<ref refid="structvec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/>T<sp/>y)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::compute_fmod&lt;L,<sp/>T,<sp/>Q,<sp/>std::numeric_limits&lt;T&gt;::is_iec559&gt;::call(x,<sp/><ref refid="structvec" kindref="compound">vec&lt;L, T, Q&gt;</ref>(y));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structvec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/><ref refid="group__gtx__common_1ga22feecd4248d9ef34b079a091f273281" kindref="member">fmod</ref>(<ref refid="structvec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/><ref refid="structvec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>y)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::compute_fmod&lt;L,<sp/>T,<sp/>Q,<sp/>std::numeric_limits&lt;T&gt;::is_iec559&gt;::call(x,<sp/>y);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="116" refid="group__gtx__common_1ga57a2d78fae57ab5483d49060044340f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, bool, Q&gt;</ref><sp/><ref refid="group__gtx__common_1ga57a2d78fae57ab5483d49060044340f2" kindref="member">openBounded</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Value,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Min,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Max)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__vector__relational_1ga53c3d9755c8fbde7ba807db23908a7d6" kindref="member">greaterThan</ref>(Value,<sp/>Min)<sp/>&amp;&amp;<sp/><ref refid="group__core__func__vector__relational_1ga05330957811343f48c49073aebe202f2" kindref="member">lessThan</ref>(Value,<sp/>Max);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="122" refid="group__gtx__common_1ga90a5085f6b83d4a519b80cf977ed952a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, bool, Q&gt;</ref><sp/><ref refid="group__gtx__common_1ga90a5085f6b83d4a519b80cf977ed952a" kindref="member">closeBounded</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Value,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Min,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Max)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__vector__relational_1ga41e37f89010e15923ad714c830355684" kindref="member">greaterThanEqual</ref>(Value,<sp/>Min)<sp/>&amp;&amp;<sp/><ref refid="group__core__func__vector__relational_1ga1ca08aae65e3638afc387b1489e53bc2" kindref="member">lessThanEqual</ref>(Value,<sp/>Max);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>glm</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/common.inl"/>
  </compounddef>
</doxygen>
