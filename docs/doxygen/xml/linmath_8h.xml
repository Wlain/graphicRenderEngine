<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="linmath_8h" kind="file" language="C++">
    <compoundname>linmath.h</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includedby refid="boing_8c" local="no">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c</includedby>
    <includedby refid="offscreen_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c</includedby>
    <includedby refid="particles_8c" local="no">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/particles.c</includedby>
    <includedby refid="sharing_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/sharing.c</includedby>
    <includedby refid="splitview_8c" local="no">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/splitview.c</includedby>
    <includedby refid="triangle-opengl_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/triangle-opengl.c</includedby>
    <includedby refid="wave_8c" local="no">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/wave.c</includedby>
    <includedby refid="cursor_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/cursor.c</includedby>
    <includedby refid="msaa_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/msaa.c</includedby>
    <includedby refid="reopen_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/reopen.c</includedby>
    <includedby refid="tearing_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/tearing.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h</label>
        <link refid="linmath_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h</label>
        <link refid="linmath_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/boing.c</label>
        <link refid="boing_8c_source"/>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/offscreen.c</label>
        <link refid="offscreen_8c_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/particles.c</label>
        <link refid="particles_8c_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/sharing.c</label>
        <link refid="sharing_8c_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/splitview.c</label>
        <link refid="splitview_8c_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/triangle-opengl.c</label>
        <link refid="triangle-opengl_8c_source"/>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/examples/wave.c</label>
        <link refid="wave_8c_source"/>
      </node>
      <node id="9">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/cursor.c</label>
        <link refid="cursor_8c_source"/>
      </node>
      <node id="10">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/msaa.c</label>
        <link refid="msaa_8c_source"/>
      </node>
      <node id="11">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/reopen.c</label>
        <link refid="reopen_8c_source"/>
      </node>
      <node id="12">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/tests/tearing.c</label>
        <link refid="tearing_8c_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="linmath_8h_1a4ebda4dd54615e1cac0ff1fde2725542" prot="public" static="no">
        <name>LINMATH_H_FUNC</name>
        <initializer>static inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="11" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linmath_8h_1ad7ae6ff6612bd489d7f6a5b6a9fdc775" prot="public" static="no">
        <name>LINMATH_H_DEFINE_VEC</name>
        <param><defname>n</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="14" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linmath_8h_1a91d0dea76999b8527cface69c7f77931" prot="public" static="no">
        <name>quat_add</name>
        <initializer>vec4_add</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="443" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linmath_8h_1afbabaaf89254c467e28e2a002308eee9" prot="public" static="no">
        <name>quat_sub</name>
        <initializer>vec4_sub</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="444" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linmath_8h_1a21821adb8fabe3f18cc3c7bc0effdf69" prot="public" static="no">
        <name>quat_norm</name>
        <initializer>vec4_norm</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="445" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linmath_8h_1acb9bf907ed11651d989d237f38b46294" prot="public" static="no">
        <name>quat_scale</name>
        <initializer>vec4_scale</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="446" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linmath_8h_1a682fe39e56b46a240dab311f45700b4e" prot="public" static="no">
        <name>quat_mul_inner</name>
        <initializer>vec4_mul_inner</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="447" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="linmath_8h_1aea448460b62175f89ed5760877496434" prot="public" static="no">
        <type>vec4</type>
        <definition>typedef vec4 mat4x4[4]</definition>
        <argsstring>[4]</argsstring>
        <name>mat4x4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="105" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="linmath_8h_1ae0543f2eba665379de2ca111c187ce65" prot="public" static="no">
        <type>float</type>
        <definition>typedef float quat[4]</definition>
        <argsstring>[4]</argsstring>
        <name>quat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="442" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="linmath_8h_1afd95d1931b51103bc155e67756e1ef29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void vec3_mul_cross</definition>
        <argsstring>(vec3 r, vec3 const a, vec3 const b)</argsstring>
        <name>vec3_mul_cross</name>
        <param>
          <type>vec3</type>
          <declname>r</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="74" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a43e6aab778685cdb8512d4003a39d02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void vec3_reflect</definition>
        <argsstring>(vec3 r, vec3 const v, vec3 const n)</argsstring>
        <name>vec3_reflect</name>
        <param>
          <type>vec3</type>
          <declname>r</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>v</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="81" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1af3d3a5c4e2f91b1e42d0265b56047389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void vec4_mul_cross</definition>
        <argsstring>(vec4 r, vec4 const a, vec4 const b)</argsstring>
        <name>vec4_mul_cross</name>
        <param>
          <type>vec4</type>
          <declname>r</declname>
        </param>
        <param>
          <type>vec4 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>vec4 const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="89" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1accff7310b38c9e47fc632acbb3be0bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void vec4_reflect</definition>
        <argsstring>(vec4 r, vec4 const v, vec4 const n)</argsstring>
        <name>vec4_reflect</name>
        <param>
          <type>vec4</type>
          <declname>r</declname>
        </param>
        <param>
          <type>vec4 const</type>
          <declname>v</declname>
        </param>
        <param>
          <type>vec4 const</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="97" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1aad0e22fd1665595210c79fb825273381" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_identity</definition>
        <argsstring>(mat4x4 M)</argsstring>
        <name>mat4x4_identity</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="106" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a61fdfe9ec0ea6783e549a9c98e86e75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_dup</definition>
        <argsstring>(mat4x4 M, mat4x4 const N)</argsstring>
        <name>mat4x4_dup</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="113" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a2266fae5e790b073bd4323f8c421ba67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_row</definition>
        <argsstring>(vec4 r, mat4x4 const M, int i)</argsstring>
        <name>mat4x4_row</name>
        <param>
          <type>vec4</type>
          <declname>r</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="119" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1ae80dd6e807428d93214a4300f8ef8322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_col</definition>
        <argsstring>(vec4 r, mat4x4 const M, int i)</argsstring>
        <name>mat4x4_col</name>
        <param>
          <type>vec4</type>
          <declname>r</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="125" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1ade6936711c1f9f0150f6428c42612ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_transpose</definition>
        <argsstring>(mat4x4 M, mat4x4 const N)</argsstring>
        <name>mat4x4_transpose</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="131" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="131" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1ac37333aa8702d1458341ea784c5189be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_add</definition>
        <argsstring>(mat4x4 M, mat4x4 const a, mat4x4 const b)</argsstring>
        <name>mat4x4_add</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="140" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a96a717dba6fc7097c5f6483dd80be9ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_sub</definition>
        <argsstring>(mat4x4 M, mat4x4 const a, mat4x4 const b)</argsstring>
        <name>mat4x4_sub</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="146" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="146" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a06e3c8273a1d907a5431bc908302a199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_scale</definition>
        <argsstring>(mat4x4 M, mat4x4 const a, float k)</argsstring>
        <name>mat4x4_scale</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="152" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a380c2917f007e807949091b8ea6805c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_scale_aniso</definition>
        <argsstring>(mat4x4 M, mat4x4 const a, float x, float y, float z)</argsstring>
        <name>mat4x4_scale_aniso</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="158" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a62186c7d2461116c23967d35cf437e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_mul</definition>
        <argsstring>(mat4x4 M, mat4x4 const a, mat4x4 const b)</argsstring>
        <name>mat4x4_mul</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="165" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1ab19343c1e9a327998b8ab4bcf3c773fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_mul_vec4</definition>
        <argsstring>(vec4 r, mat4x4 const M, vec4 const v)</argsstring>
        <name>mat4x4_mul_vec4</name>
        <param>
          <type>vec4</type>
          <declname>r</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>vec4 const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="176" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="176" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1ab15e9b6c0e6e2a093794634985f11d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_translate</definition>
        <argsstring>(mat4x4 T, float x, float y, float z)</argsstring>
        <name>mat4x4_translate</name>
        <param>
          <type>mat4x4</type>
          <declname>T</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="185" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="185" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1aeee92b2bb754bab7d7cfecb086c39f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_translate_in_place</definition>
        <argsstring>(mat4x4 M, float x, float y, float z)</argsstring>
        <name>mat4x4_translate_in_place</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="192" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="192" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1ab0d245df6150cca082a2f085741ba782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_from_vec3_mul_outer</definition>
        <argsstring>(mat4x4 M, vec3 const a, vec3 const b)</argsstring>
        <name>mat4x4_from_vec3_mul_outer</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>a</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="202" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="202" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1aa8f51485d3a02adbc1b19d8f57c70182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_rotate</definition>
        <argsstring>(mat4x4 R, mat4x4 const M, float x, float y, float z, float angle)</argsstring>
        <name>mat4x4_rotate</name>
        <param>
          <type>mat4x4</type>
          <declname>R</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="208" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="208" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a397b6fb85e8187d914401b0aae456d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_rotate_X</definition>
        <argsstring>(mat4x4 Q, mat4x4 const M, float angle)</argsstring>
        <name>mat4x4_rotate_X</name>
        <param>
          <type>mat4x4</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="242" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="242" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a5a9007e3ee92515ab3ded697ab912db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_rotate_Y</definition>
        <argsstring>(mat4x4 Q, mat4x4 const M, float angle)</argsstring>
        <name>mat4x4_rotate_Y</name>
        <param>
          <type>mat4x4</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="254" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="254" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1aac10514a034a5e6dc90ae5911141fb78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_rotate_Z</definition>
        <argsstring>(mat4x4 Q, mat4x4 const M, float angle)</argsstring>
        <name>mat4x4_rotate_Z</name>
        <param>
          <type>mat4x4</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="266" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="266" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1ac141e4c0f18f60891cfafb472d6fb3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_invert</definition>
        <argsstring>(mat4x4 T, mat4x4 const M)</argsstring>
        <name>mat4x4_invert</name>
        <param>
          <type>mat4x4</type>
          <declname>T</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="278" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="278" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a56129a6ccb43590de0d29f92817d5449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_orthonormalize</definition>
        <argsstring>(mat4x4 R, mat4x4 const M)</argsstring>
        <name>mat4x4_orthonormalize</name>
        <param>
          <type>mat4x4</type>
          <declname>R</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="319" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="319" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a3f0fbe8a6757044636cc1446a3f72955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_frustum</definition>
        <argsstring>(mat4x4 M, float l, float r, float b, float t, float n, float f)</argsstring>
        <name>mat4x4_frustum</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>float</type>
          <declname>l</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>float</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="342" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="342" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a9d5fe21cb49e77776d3100a0d2e0ce31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_ortho</definition>
        <argsstring>(mat4x4 M, float l, float r, float b, float t, float n, float f)</argsstring>
        <name>mat4x4_ortho</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>float</type>
          <declname>l</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>float</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="358" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="358" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a94145cd87abb64ac311b7937f5b822b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_perspective</definition>
        <argsstring>(mat4x4 m, float y_fov, float aspect, float n, float f)</argsstring>
        <name>mat4x4_perspective</name>
        <param>
          <type>mat4x4</type>
          <declname>m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y_fov</declname>
        </param>
        <param>
          <type>float</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="374" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="374" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a730f784f4cba86a5bacb673ed937acc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_look_at</definition>
        <argsstring>(mat4x4 m, vec3 const eye, vec3 const center, vec3 const up)</argsstring>
        <name>mat4x4_look_at</name>
        <param>
          <type>mat4x4</type>
          <declname>m</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>eye</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>center</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="400" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="400" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a1c49cb959a3967c47c167dc7b65658af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void quat_identity</definition>
        <argsstring>(quat q)</argsstring>
        <name>quat_identity</name>
        <param>
          <type>quat</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="449" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="449" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a31b4a72cd5933b0bdc98b2832d6394ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void quat_mul</definition>
        <argsstring>(quat r, quat const p, quat const q)</argsstring>
        <name>quat_mul</name>
        <param>
          <type>quat</type>
          <declname>r</declname>
        </param>
        <param>
          <type>quat const</type>
          <declname>p</declname>
        </param>
        <param>
          <type>quat const</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="454" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="454" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1aa2cb011f5a077c66f91c23d0f530550f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void quat_conj</definition>
        <argsstring>(quat r, quat const q)</argsstring>
        <name>quat_conj</name>
        <param>
          <type>quat</type>
          <declname>r</declname>
        </param>
        <param>
          <type>quat const</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="464" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="464" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1af0d00fd932d4541debf0180eef81c26e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void quat_rotate</definition>
        <argsstring>(quat r, float angle, vec3 const axis)</argsstring>
        <name>quat_rotate</name>
        <param>
          <type>quat</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="471" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="471" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a7746b1768a8e1b07585e553dba435747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void quat_mul_vec3</definition>
        <argsstring>(vec3 r, quat const q, vec3 const v)</argsstring>
        <name>quat_mul_vec3</name>
        <param>
          <type>vec3</type>
          <declname>r</declname>
        </param>
        <param>
          <type>quat const</type>
          <declname>q</declname>
        </param>
        <param>
          <type>vec3 const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="479" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="479" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1a407ec1d966239da2f07beeddd40aeba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_from_quat</definition>
        <argsstring>(mat4x4 M, quat const q)</argsstring>
        <name>mat4x4_from_quat</name>
        <param>
          <type>mat4x4</type>
          <declname>M</declname>
        </param>
        <param>
          <type>quat const</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="499" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="499" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1aacd53a501358eeb31d375bc78730ddf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4o_mul_quat</definition>
        <argsstring>(mat4x4 R, mat4x4 const M, quat const q)</argsstring>
        <name>mat4x4o_mul_quat</name>
        <param>
          <type>mat4x4</type>
          <declname>R</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>quat const</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="529" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="529" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1afcdc8bb96badc95f15b352e182f135dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void quat_from_mat4x4</definition>
        <argsstring>(quat q, mat4x4 const M)</argsstring>
        <name>quat_from_mat4x4</name>
        <param>
          <type>quat</type>
          <declname>q</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="543" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="543" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="linmath_8h_1aefcb0a03c5926d1c439fe88a0436237b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LINMATH_H_FUNC void</type>
        <definition>LINMATH_H_FUNC void mat4x4_arcball</definition>
        <argsstring>(mat4x4 R, mat4x4 const M, vec2 const _a, vec2 const _b, float s)</argsstring>
        <name>mat4x4_arcball</name>
        <param>
          <type>mat4x4</type>
          <declname>R</declname>
        </param>
        <param>
          <type>mat4x4 const</type>
          <declname>M</declname>
        </param>
        <param>
          <type>vec2 const</type>
          <declname>_a</declname>
        </param>
        <param>
          <type>vec2 const</type>
          <declname>_b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" line="573" column="21" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h" bodystart="573" bodyend="601"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LINMATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINMATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LINMATH_NO_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINMATH_H_FUNC<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINMATH_H_FUNC<sp/>static<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINMATH_H_DEFINE_VEC(n)<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">typedef<sp/>float<sp/>vec##n[n];<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>void<sp/>vec##n##_add(vec##n<sp/>r,<sp/>vec##n<sp/>const<sp/>a,<sp/>vec##n<sp/>const<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;n;<sp/>++i)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>a[i]<sp/>+<sp/>b[i];<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>void<sp/>vec##n##_sub(vec##n<sp/>r,<sp/>vec##n<sp/>const<sp/>a,<sp/>vec##n<sp/>const<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;n;<sp/>++i)<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>a[i]<sp/>-<sp/>b[i];<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>void<sp/>vec##n##_scale(vec##n<sp/>r,<sp/>vec##n<sp/>const<sp/>v,<sp/>float<sp/>const<sp/>s)<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;n;<sp/>++i)<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>v[i]<sp/>*<sp/>s;<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>float<sp/>vec##n##_mul_inner(vec##n<sp/>const<sp/>a,<sp/>vec##n<sp/>const<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float<sp/>p<sp/>=<sp/>0.f;<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;n;<sp/>++i)<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>b[i]*a[i];<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>p;<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>float<sp/>vec##n##_len(vec##n<sp/>const<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>sqrtf(vec##n##_mul_inner(v,v));<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>void<sp/>vec##n##_norm(vec##n<sp/>r,<sp/>vec##n<sp/>const<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float<sp/>k<sp/>=<sp/>1.f<sp/>/<sp/>vec##n##_len(v);<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vec##n##_scale(r,<sp/>v,<sp/>k);<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>void<sp/>vec##n##_min(vec##n<sp/>r,<sp/>vec##n<sp/>const<sp/>a,<sp/>vec##n<sp/>const<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;n;<sp/>++i)<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>a[i]&lt;b[i]<sp/>?<sp/>a[i]<sp/>:<sp/>b[i];<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>void<sp/>vec##n##_max(vec##n<sp/>r,<sp/>vec##n<sp/>const<sp/>a,<sp/>vec##n<sp/>const<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;n;<sp/>++i)<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>a[i]&gt;b[i]<sp/>?<sp/>a[i]<sp/>:<sp/>b[i];<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor">LINMATH_H_FUNC<sp/>void<sp/>vec##n##_dup(vec##n<sp/>r,<sp/>vec##n<sp/>const<sp/>src)<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;n;<sp/>++i)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>src[i];<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">LINMATH_H_DEFINE_VEC(2)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">LINMATH_H_DEFINE_VEC(3)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">LINMATH_H_DEFINE_VEC(4)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vec3_mul_cross(<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>r,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>const<sp/>a,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>const<sp/>b)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>r[0]<sp/>=<sp/>a[1]*b[2]<sp/>-<sp/>a[2]*b[1];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>r[1]<sp/>=<sp/>a[2]*b[0]<sp/>-<sp/>a[0]*b[2];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>r[2]<sp/>=<sp/>a[0]*b[1]<sp/>-<sp/>a[1]*b[0];</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vec3_reflect(<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>r,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>v,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>2.f<sp/>*<sp/>vec3_mul_inner(v,<sp/>n);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;3;++i)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>v[i]<sp/>-<sp/>p*n[i];</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vec4_mul_cross(<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/>r,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>r[0]<sp/>=<sp/>a[1]*b[2]<sp/>-<sp/>a[2]*b[1];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>r[1]<sp/>=<sp/>a[2]*b[0]<sp/>-<sp/>a[0]*b[2];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>r[2]<sp/>=<sp/>a[0]*b[1]<sp/>-<sp/>a[1]*b[0];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>r[3]<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vec4_reflect(<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/>r,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>v,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p<sp/><sp/>=<sp/>2.f*vec4_mul_inner(v,<sp/>n);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;4;++i)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>v[i]<sp/>-<sp/>p*n[i];</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref>[4];</highlight></codeline>
<codeline lineno="106"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_identity(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;4;<sp/>++j)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M[i][j]<sp/>=<sp/>i==j<sp/>?<sp/>1.f<sp/>:<sp/>0.f;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_dup(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec4_dup(M[i],<sp/>N[i]);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_row(<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/>r,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;<sp/>k&lt;4;<sp/>++k)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[k]<sp/>=<sp/>M[k][i];</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_col(<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/>r,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;<sp/>k&lt;4;<sp/>++k)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[k]<sp/>=<sp/>M[i][k];</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_transpose(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>if<sp/>M<sp/>and<sp/>N<sp/>are<sp/>the<sp/>same,<sp/>the<sp/>user<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explicitly<sp/>make<sp/>a<sp/>copy<sp/>of<sp/>M<sp/>and<sp/>set<sp/>it<sp/>to<sp/>N.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;4;<sp/>++j)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M[i][j]<sp/>=<sp/>N[j][i];</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_add(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec4_add(M[i],<sp/>a[i],<sp/>b[i]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_sub(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec4_sub(M[i],<sp/>a[i],<sp/>b[i]);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_scale(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec4_scale(M[i],<sp/>a[i],<sp/>k);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_scale_aniso(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>vec4_scale(M[0],<sp/>a[0],<sp/>x);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>vec4_scale(M[1],<sp/>a[1],<sp/>y);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>vec4_scale(M[2],<sp/>a[2],<sp/>z);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>vec4_dup(M[3],<sp/>a[3]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_mul(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>temp;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>r,<sp/>c;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(c=0;<sp/>c&lt;4;<sp/>++c)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(r=0;<sp/>r&lt;4;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[c][r]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;<sp/>k&lt;4;<sp/>++k)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[c][r]<sp/>+=<sp/>a[k][r]<sp/>*<sp/>b[c][k];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_dup(M,<sp/>temp);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_mul_vec4(<ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/>r,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[j]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[j]<sp/>+=<sp/>M[i][j]<sp/>*<sp/>v[i];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_translate(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>T,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_identity(T);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>T[3][0]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>T[3][1]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>T[3][2]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_translate_in_place(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/>t<sp/>=<sp/>{x,<sp/>y,<sp/>z,<sp/>0};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">vec4</ref><sp/>r;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_row(r,<sp/>M,<sp/>i);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M[3][i]<sp/>+=<sp/>vec4_mul_inner(r,<sp/>t);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_from_vec3_mul_outer(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;4;<sp/>++i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;4;<sp/>++j)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M[i][j]<sp/>=<sp/>i&lt;3<sp/>&amp;&amp;<sp/>j&lt;3<sp/>?<sp/>a[i]<sp/>*<sp/>b[j]<sp/>:<sp/>0.f;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_rotate(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>R,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sinf(angle);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>cosf(angle);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>u<sp/>=<sp/>{x,<sp/>y,<sp/>z};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec3_len(u)<sp/>&gt;<sp/>1<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-4)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3_norm(u,<sp/>u);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>T;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_from_vec3_mul_outer(T,<sp/>u,<sp/>u);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>S<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/>0,<sp/><sp/>u[2],<sp/>-u[1],<sp/>0},</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-u[2],<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>u[0],<sp/>0},</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>u[1],<sp/>-u[0],<sp/><sp/><sp/><sp/><sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_scale(S,<sp/>S,<sp/>s);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>C;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_identity(C);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_sub(C,<sp/>C,<sp/>T);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_scale(C,<sp/>C,<sp/>c);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_add(T,<sp/>T,<sp/>C);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_add(T,<sp/>T,<sp/>S);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[3][3]<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_mul(R,<sp/>M,<sp/>T);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat4x4_dup(R,<sp/>M);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_rotate_X(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>Q,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sinf(angle);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>cosf(angle);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>R<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1.f,<sp/>0.f,<sp/>0.f,<sp/>0.f},</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.f,<sp/><sp/><sp/>c,<sp/><sp/><sp/>s,<sp/>0.f},</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.f,<sp/><sp/>-s,<sp/><sp/><sp/>c,<sp/>0.f},</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.f,<sp/>0.f,<sp/>0.f,<sp/>1.f}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_mul(Q,<sp/>M,<sp/>R);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_rotate_Y(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>Q,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sinf(angle);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>cosf(angle);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>R<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>c,<sp/>0.f,<sp/><sp/>-s,<sp/>0.f},</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.f,<sp/>1.f,<sp/>0.f,<sp/>0.f},</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>s,<sp/>0.f,<sp/><sp/><sp/>c,<sp/>0.f},</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.f,<sp/>0.f,<sp/>0.f,<sp/>1.f}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_mul(Q,<sp/>M,<sp/>R);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_rotate_Z(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>Q,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sinf(angle);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>cosf(angle);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>R<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>c,<sp/><sp/><sp/>s,<sp/>0.f,<sp/>0.f},</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>-s,<sp/><sp/><sp/>c,<sp/>0.f,<sp/>0.f},</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.f,<sp/>0.f,<sp/>1.f,<sp/>0.f},</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.f,<sp/>0.f,<sp/>0.f,<sp/>1.f}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_mul(Q,<sp/>M,<sp/>R);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_invert(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>T,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s[6];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c[6];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>M[0][0]*M[1][1]<sp/>-<sp/>M[1][0]*M[0][1];</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>M[0][0]*M[1][2]<sp/>-<sp/>M[1][0]*M[0][2];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>M[0][0]*M[1][3]<sp/>-<sp/>M[1][0]*M[0][3];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>M[0][1]*M[1][2]<sp/>-<sp/>M[1][1]*M[0][2];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>s[4]<sp/>=<sp/>M[0][1]*M[1][3]<sp/>-<sp/>M[1][1]*M[0][3];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>s[5]<sp/>=<sp/>M[0][2]*M[1][3]<sp/>-<sp/>M[1][2]*M[0][3];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>M[2][0]*M[3][1]<sp/>-<sp/>M[3][0]*M[2][1];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>c[1]<sp/>=<sp/>M[2][0]*M[3][2]<sp/>-<sp/>M[3][0]*M[2][2];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>c[2]<sp/>=<sp/>M[2][0]*M[3][3]<sp/>-<sp/>M[3][0]*M[2][3];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>c[3]<sp/>=<sp/>M[2][1]*M[3][2]<sp/>-<sp/>M[3][1]*M[2][2];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>c[4]<sp/>=<sp/>M[2][1]*M[3][3]<sp/>-<sp/>M[3][1]*M[2][3];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>c[5]<sp/>=<sp/>M[2][2]*M[3][3]<sp/>-<sp/>M[3][2]*M[2][3];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assumes<sp/>it<sp/>is<sp/>invertible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>idet<sp/>=<sp/>1.0f/(<sp/>s[0]*c[5]-s[1]*c[4]+s[2]*c[3]+s[3]*c[2]-s[4]*c[1]+s[5]*c[0]<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>T[0][0]<sp/>=<sp/>(<sp/>M[1][1]<sp/>*<sp/>c[5]<sp/>-<sp/>M[1][2]<sp/>*<sp/>c[4]<sp/>+<sp/>M[1][3]<sp/>*<sp/>c[3])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>T[0][1]<sp/>=<sp/>(-M[0][1]<sp/>*<sp/>c[5]<sp/>+<sp/>M[0][2]<sp/>*<sp/>c[4]<sp/>-<sp/>M[0][3]<sp/>*<sp/>c[3])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>T[0][2]<sp/>=<sp/>(<sp/>M[3][1]<sp/>*<sp/>s[5]<sp/>-<sp/>M[3][2]<sp/>*<sp/>s[4]<sp/>+<sp/>M[3][3]<sp/>*<sp/>s[3])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>T[0][3]<sp/>=<sp/>(-M[2][1]<sp/>*<sp/>s[5]<sp/>+<sp/>M[2][2]<sp/>*<sp/>s[4]<sp/>-<sp/>M[2][3]<sp/>*<sp/>s[3])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>T[1][0]<sp/>=<sp/>(-M[1][0]<sp/>*<sp/>c[5]<sp/>+<sp/>M[1][2]<sp/>*<sp/>c[2]<sp/>-<sp/>M[1][3]<sp/>*<sp/>c[1])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>T[1][1]<sp/>=<sp/>(<sp/>M[0][0]<sp/>*<sp/>c[5]<sp/>-<sp/>M[0][2]<sp/>*<sp/>c[2]<sp/>+<sp/>M[0][3]<sp/>*<sp/>c[1])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>T[1][2]<sp/>=<sp/>(-M[3][0]<sp/>*<sp/>s[5]<sp/>+<sp/>M[3][2]<sp/>*<sp/>s[2]<sp/>-<sp/>M[3][3]<sp/>*<sp/>s[1])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>T[1][3]<sp/>=<sp/>(<sp/>M[2][0]<sp/>*<sp/>s[5]<sp/>-<sp/>M[2][2]<sp/>*<sp/>s[2]<sp/>+<sp/>M[2][3]<sp/>*<sp/>s[1])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>T[2][0]<sp/>=<sp/>(<sp/>M[1][0]<sp/>*<sp/>c[4]<sp/>-<sp/>M[1][1]<sp/>*<sp/>c[2]<sp/>+<sp/>M[1][3]<sp/>*<sp/>c[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>T[2][1]<sp/>=<sp/>(-M[0][0]<sp/>*<sp/>c[4]<sp/>+<sp/>M[0][1]<sp/>*<sp/>c[2]<sp/>-<sp/>M[0][3]<sp/>*<sp/>c[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>T[2][2]<sp/>=<sp/>(<sp/>M[3][0]<sp/>*<sp/>s[4]<sp/>-<sp/>M[3][1]<sp/>*<sp/>s[2]<sp/>+<sp/>M[3][3]<sp/>*<sp/>s[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>T[2][3]<sp/>=<sp/>(-M[2][0]<sp/>*<sp/>s[4]<sp/>+<sp/>M[2][1]<sp/>*<sp/>s[2]<sp/>-<sp/>M[2][3]<sp/>*<sp/>s[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>T[3][0]<sp/>=<sp/>(-M[1][0]<sp/>*<sp/>c[3]<sp/>+<sp/>M[1][1]<sp/>*<sp/>c[1]<sp/>-<sp/>M[1][2]<sp/>*<sp/>c[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>T[3][1]<sp/>=<sp/>(<sp/>M[0][0]<sp/>*<sp/>c[3]<sp/>-<sp/>M[0][1]<sp/>*<sp/>c[1]<sp/>+<sp/>M[0][2]<sp/>*<sp/>c[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>T[3][2]<sp/>=<sp/>(-M[3][0]<sp/>*<sp/>s[3]<sp/>+<sp/>M[3][1]<sp/>*<sp/>s[1]<sp/>-<sp/>M[3][2]<sp/>*<sp/>s[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>T[3][3]<sp/>=<sp/>(<sp/>M[2][0]<sp/>*<sp/>s[3]<sp/>-<sp/>M[2][1]<sp/>*<sp/>s[1]<sp/>+<sp/>M[2][2]<sp/>*<sp/>s[0])<sp/>*<sp/>idet;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_orthonormalize(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>R,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_dup(R,<sp/>M);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>h;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_norm(R[2],<sp/>R[2]);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>vec3_mul_inner(R[1],<sp/>R[2]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(h,<sp/>R[2],<sp/>s);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_sub(R[1],<sp/>R[1],<sp/>h);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_norm(R[1],<sp/>R[1]);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>vec3_mul_inner(R[0],<sp/>R[2]);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(h,<sp/>R[2],<sp/>s);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_sub(R[0],<sp/>R[0],<sp/>h);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>vec3_mul_inner(R[0],<sp/>R[1]);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(h,<sp/>R[1],<sp/>s);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_sub(R[0],<sp/>R[0],<sp/>h);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_norm(R[0],<sp/>R[0]);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_frustum(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>l,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][0]<sp/>=<sp/>2.f*n/(r-l);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][1]<sp/>=<sp/>M[0][2]<sp/>=<sp/>M[0][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][1]<sp/>=<sp/>2.f*n/(t-b);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][0]<sp/>=<sp/>M[1][2]<sp/>=<sp/>M[1][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][0]<sp/>=<sp/>(r+l)/(r-l);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][1]<sp/>=<sp/>(t+b)/(t-b);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][2]<sp/>=<sp/>-(f+n)/(f-n);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][3]<sp/>=<sp/>-1.f;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][2]<sp/>=<sp/>-2.f*(f*n)/(f-n);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][0]<sp/>=<sp/>M[3][1]<sp/>=<sp/>M[3][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_ortho(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>l,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][0]<sp/>=<sp/>2.f/(r-l);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][1]<sp/>=<sp/>M[0][2]<sp/>=<sp/>M[0][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][1]<sp/>=<sp/>2.f/(t-b);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][0]<sp/>=<sp/>M[1][2]<sp/>=<sp/>M[1][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][2]<sp/>=<sp/>-2.f/(f-n);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][0]<sp/>=<sp/>M[2][1]<sp/>=<sp/>M[2][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][0]<sp/>=<sp/>-(r+l)/(r-l);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][1]<sp/>=<sp/>-(t+b)/(t-b);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][2]<sp/>=<sp/>-(f+n)/(f-n);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][3]<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_perspective(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>m,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_fov,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aspect,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>Degrees<sp/>are<sp/>an<sp/>unhandy<sp/>unit<sp/>to<sp/>work<sp/>with.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>linmath.h<sp/>uses<sp/>radians<sp/>for<sp/>everything!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>1.f<sp/>/<sp/>tanf(y_fov<sp/>/<sp/>2.f);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][0]<sp/>=<sp/>a<sp/>/<sp/>aspect;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][1]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][2]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][0]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][1]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][2]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][0]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][1]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][2]<sp/>=<sp/>-((f<sp/>+<sp/>n)<sp/>/<sp/>(f<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][3]<sp/>=<sp/>-1.f;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][0]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][1]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][2]<sp/>=<sp/>-((2.f<sp/>*<sp/>f<sp/>*<sp/>n)<sp/>/<sp/>(f<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_look_at(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>m,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eye,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>center,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>up)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adapted<sp/>from<sp/>Android&apos;s<sp/>OpenGL<sp/>Matrix.java.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>the<sp/>OpenGL<sp/>GLUT<sp/>documentation<sp/>for<sp/>gluLookAt<sp/>for<sp/>a<sp/>description<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>of<sp/>the<sp/>algorithm.<sp/>We<sp/>implement<sp/>it<sp/>in<sp/>a<sp/>straightforward<sp/>way:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>The<sp/>negation<sp/>of<sp/>of<sp/>can<sp/>be<sp/>spared<sp/>by<sp/>swapping<sp/>the<sp/>order<sp/>of</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>operands<sp/>in<sp/>the<sp/>following<sp/>cross<sp/>products<sp/>in<sp/>the<sp/>right<sp/>way.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>f;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_sub(f,<sp/>center,<sp/>eye);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_norm(f,<sp/>f);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>s;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_mul_cross(s,<sp/>f,<sp/>up);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_norm(s,<sp/>s);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>t;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_mul_cross(t,<sp/>s,<sp/>f);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][0]<sp/>=<sp/><sp/>s[0];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][1]<sp/>=<sp/><sp/>t[0];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][2]<sp/>=<sp/>-f[0];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][3]<sp/>=<sp/><sp/><sp/>0.f;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][0]<sp/>=<sp/><sp/>s[1];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][1]<sp/>=<sp/><sp/>t[1];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][2]<sp/>=<sp/>-f[1];</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][3]<sp/>=<sp/><sp/><sp/>0.f;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][0]<sp/>=<sp/><sp/>s[2];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][1]<sp/>=<sp/><sp/>t[2];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][2]<sp/>=<sp/>-f[2];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][3]<sp/>=<sp/><sp/><sp/>0.f;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][0]<sp/>=<sp/><sp/>0.f;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][1]<sp/>=<sp/><sp/>0.f;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][2]<sp/>=<sp/><sp/>0.f;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][3]<sp/>=<sp/><sp/>1.f;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_translate_in_place(m,<sp/>-eye[0],<sp/>-eye[1],<sp/>-eye[2]);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quat[4];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quat_add<sp/>vec4_add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quat_sub<sp/>vec4_sub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quat_norm<sp/>vec4_norm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quat_scale<sp/>vec4_scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quat_mul_inner<sp/>vec4_mul_inner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gtx__quaternion_1ga5c59409c5d9965f75f3ff90da7ac8e38" kindref="member">quat_identity</ref>(quat<sp/>q)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q[1]<sp/>=<sp/>q[2]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quat_mul(quat<sp/>r,<sp/>quat<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p,<sp/>quat<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>w;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_mul_cross(r,<sp/>p,<sp/>q);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(w,<sp/>p,<sp/>q[3]);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_add(r,<sp/>r,<sp/>w);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(w,<sp/>q,<sp/>p[3]);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_add(r,<sp/>r,<sp/>w);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>r[3]<sp/>=<sp/>p[3]*q[3]<sp/>-<sp/>vec3_mul_inner(p,<sp/>q);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quat_conj(quat<sp/>r,<sp/>quat<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>++i)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>-q[i];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>r[3]<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quat_rotate(quat<sp/>r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>axis_norm;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_norm(axis_norm,<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sinf(angle<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>cosf(angle<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(r,<sp/>axis_norm,<sp/>s);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>r[3]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quat_mul_vec3(<ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>r,<sp/>quat<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q,<sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>Method<sp/>by<sp/>Fabian<sp/>&apos;ryg&apos;<sp/>Giessen<sp/>(of<sp/>Farbrausch)</highlight></codeline>
<codeline lineno="483"><highlight class="comment">t<sp/>=<sp/>2<sp/>*<sp/>cross(q.xyz,<sp/>v)</highlight></codeline>
<codeline lineno="484"><highlight class="comment">v&apos;<sp/>=<sp/>v<sp/>+<sp/>q.w<sp/>*<sp/>t<sp/>+<sp/>cross(q.xyz,<sp/>t)</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>t;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>q_xyz<sp/>=<sp/>{q[0],<sp/>q[1],<sp/>q[2]};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>u<sp/>=<sp/>{q[0],<sp/>q[1],<sp/>q[2]};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_mul_cross(t,<sp/>q_xyz,<sp/>v);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(t,<sp/>t,<sp/>2);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_mul_cross(u,<sp/>q_xyz,<sp/>t);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_scale(t,<sp/>t,<sp/>q[3]);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_add(r,<sp/>v,<sp/>t);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_add(r,<sp/>r,<sp/>u);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_from_quat(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>M,<sp/>quat<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>a*a;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b2<sp/>=<sp/>b*b;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>c*c;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/>d*d;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][0]<sp/>=<sp/>a2<sp/>+<sp/>b2<sp/>-<sp/>c2<sp/>-<sp/>d2;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][1]<sp/>=<sp/>2.f*(b*c<sp/>+<sp/>a*d);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][2]<sp/>=<sp/>2.f*(b*d<sp/>-<sp/>a*c);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>M[0][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][0]<sp/>=<sp/>2*(b*c<sp/>-<sp/>a*d);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][1]<sp/>=<sp/>a2<sp/>-<sp/>b2<sp/>+<sp/>c2<sp/>-<sp/>d2;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][2]<sp/>=<sp/>2.f*(c*d<sp/>+<sp/>a*b);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>M[1][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][0]<sp/>=<sp/>2.f*(b*d<sp/>+<sp/>a*c);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][1]<sp/>=<sp/>2.f*(c*d<sp/>-<sp/>a*b);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][2]<sp/>=<sp/>a2<sp/>-<sp/>b2<sp/>-<sp/>c2<sp/>+<sp/>d2;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>M[2][3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][0]<sp/>=<sp/>M[3][1]<sp/>=<sp/>M[3][2]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>M[3][3]<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4o_mul_quat(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>R,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/>quat<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>XXX:<sp/>The<sp/>way<sp/>this<sp/>is<sp/>written<sp/>only<sp/>works<sp/>for<sp/>orthogonal<sp/>matrices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>Take<sp/>care<sp/>of<sp/>non-orthogonal<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>quat_mul_vec3(R[0],<sp/>q,<sp/>M[0]);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>quat_mul_vec3(R[1],<sp/>q,<sp/>M[1]);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>quat_mul_vec3(R[2],<sp/>q,<sp/>M[2]);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>R[3][0]<sp/>=<sp/>R[3][1]<sp/>=<sp/>R[3][2]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>R[0][3]<sp/>=<sp/>M[0][3];</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>R[1][3]<sp/>=<sp/>M[1][3];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>R[2][3]<sp/>=<sp/>M[2][3];</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>R[3][3]<sp/>=<sp/>M[3][3];<sp/><sp/></highlight><highlight class="comment">//<sp/>typically<sp/>1.0,<sp/>but<sp/>here<sp/>we<sp/>make<sp/>it<sp/>general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quat_from_mat4x4(quat<sp/>q,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r=0.f;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perm[]<sp/>=<sp/>{<sp/>0,<sp/>1,<sp/>2,<sp/>0,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>perm;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i&lt;3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>M[i][i];</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m<sp/>&lt;<sp/>r<sp/>)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;perm[i];</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>sqrtf(1.f<sp/>+<sp/>M[p[0]][p[0]]<sp/>-<sp/>M[p[1]][p[1]]<sp/>-<sp/>M[p[2]][p[2]]<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>&lt;<sp/>1<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>-6)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q[2]<sp/>=<sp/>q[3]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>r/2.f;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>(M[p[0]][p[1]]<sp/>-<sp/>M[p[1]][p[0]])/(2.f*r);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>(M[p[2]][p[0]]<sp/>-<sp/>M[p[0]][p[2]])/(2.f*r);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>(M[p[2]][p[1]]<sp/>-<sp/>M[p[1]][p[2]])/(2.f*r);</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">LINMATH_H_FUNC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mat4x4_arcball(<ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/>R,<sp/><ref refid="group__core__types_1ga63e3ee9447ed593484140a9368e738ec" kindref="member">mat4x4</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>M,<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">vec2</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_a,<sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">vec2</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">vec2</ref><sp/>a;<sp/>memcpy(a,<sp/>_a,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1gaa1618f51db67eaa145db101d8c8431d8" kindref="member">vec2</ref><sp/>b;<sp/>memcpy(b,<sp/>_b,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_a<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_b<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec2_len(a)<sp/>&lt;<sp/>1.)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_a<sp/>=<sp/>sqrtf(1.<sp/>-<sp/>vec2_mul_inner(a,<sp/>a));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2_norm(a,<sp/>a);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec2_len(b)<sp/>&lt;<sp/>1.)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_b<sp/>=<sp/>sqrtf(1.<sp/>-<sp/>vec2_mul_inner(b,<sp/>b));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2_norm(b,<sp/>b);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>a_<sp/>=<sp/>{a[0],<sp/>a[1],<sp/>z_a};</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>b_<sp/>=<sp/>{b[0],<sp/>b[1],<sp/>z_b};</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__types_1ga1c47e8b3386109bc992b6c48e91b0be7" kindref="member">vec3</ref><sp/>c_;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3_mul_cross(c_,<sp/>a_,<sp/>b_);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/><ref refid="group__core__func__trigonometric_1gaf621a212fa21c1009344895a52e9c82c" kindref="member">acos</ref>(vec3_mul_inner(a_,<sp/>b_))<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_rotate(R,<sp/>M,<sp/>c_[0],<sp/>c_[1],<sp/>c_[2],<sp/>angle);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/deps/linmath.h"/>
  </compounddef>
</doxygen>
