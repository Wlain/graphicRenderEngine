<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__core__func__common" kind="group">
    <compoundname>core_func_common</compoundname>
    <title>Common functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::abs</definition>
        <argsstring>(genType x)</argsstring>
        <name>abs</name>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns x if x &gt;= 0; otherwise, it returns -x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>floating-point or signed integer; scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/abs.xml">GLSL abs man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
<simplesect kind="see"><para>qualifier </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="33" column="23" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="33" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gac83dcfd3d57055bcd5c9e19a91fe5e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::abs</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>abs</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns x if x &gt;= 0; otherwise, it returns -x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or signed integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/abs.xml">GLSL abs man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="44" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="315" bodyend="318" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="44" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gaf749e7f029eb88580a45493e41002629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::sign</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>sign</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 1.0 if x &gt; 0, 0.0 if x == 0, or -1.0 if x &lt; 0.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/sign.xml">GLSL sign man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="55" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="333" bodyend="340" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="55" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gac433646923ab80af6d9964f1570855d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::floor</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>floor</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value equal to the nearest integer that is less then or equal to x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/floor.xml">GLSL floor man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="66" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="345" bodyend="349" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="66" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga3147679b4cd5f249c74f03906c2eb4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::trunc</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>trunc</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value equal to the nearest integer to x whose absolute value is not larger than the absolute value of x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/trunc.xml">GLSL trunc man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="78" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="352" bodyend="356" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="78" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::round</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>round</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value equal to the nearest integer to x. The fraction 0.5 will round in a direction chosen by the implementation, presumably the direction that is fastest. This includes the possibility that round(x) returns the same value as roundEven(x) for all values of x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/round.xml">GLSL round man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="93" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="359" bodyend="363" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="93" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga5e8e73db4ae54bae5292dbd8bd14e75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::roundEven</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>roundEven</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value equal to the nearest integer to x. A fractional part of 0.5 will round toward the nearest even integer. (Both 3.5 and 4.5 for x will return 4.0.)</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/roundEven.xml">GLSL roundEven man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://developer.amd.com/documentation/articles/pages/New-Round-to-Even-Technique.aspx">New round to even technique</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="107" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="409" bodyend="413" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="107" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga7a508730e49e5cec65af435d92ee4baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::ceil</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>ceil</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value equal to the nearest integer that is greater than or equal to x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/ceil.xml">GLSL ceil man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="119" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="418" bodyend="422" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="119" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga8ba89e40e55ae5cdf228548f9b7639c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::fract</definition>
        <argsstring>(genType x)</argsstring>
        <name>fract</name>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return x - floor(x).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/fract.xml">GLSL fract man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="128" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="426" bodyend="429" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="128" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga261320a51f40aead0306cebf900a1fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::fract</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>fract</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return x - floor(x).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/fract.xml">GLSL fract man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="139" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="432" bodyend="436" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="139" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga12201563ef902e3b07e0d1d7656efdb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::mod</definition>
        <argsstring>(genType x, genType y)</argsstring>
        <name>mod</name>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="142" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="440" bodyend="449" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="142" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gab5ce4e101fcf635ae460982bd94d16bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::mod</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, T y)</argsstring>
        <name>mod</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="145" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="452" bodyend="455" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="145" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gac5fb3505455b456fa6154bcc67ede654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::mod</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y)</argsstring>
        <name>mod</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modulus. Returns x - y * floor(x / y) for each component in x using the floating point value y.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types, include glm/gtc/integer for integer scalar types support </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/mod.xml">GLSL mod man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="157" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="458" bodyend="461" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="157" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga85e33f139b8db1b39b590a5713b9e679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::modf</definition>
        <argsstring>(genType x, genType &amp;i)</argsstring>
        <name>modf</name>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genType &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the fractional part of x and sets i to the integer part (as a whole number floating point value). Both the return value and the output parameter will have the same sign as x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/modf.xml">GLSL modf man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="169" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="465" bodyend="469" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="169" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga2c2bde1cec025b7ddff83c74a1113719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::min</definition>
        <argsstring>(genType x, genType y)</argsstring>
        <name>min</name>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns y if y &lt; x; otherwise, it returns x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer; scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/min.xml">GLSL min man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="178" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="15" bodyend="19" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="178" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga47a7b87259c2ce80869e468f4f473353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::min</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, T y)</argsstring>
        <name>min</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns y if y &lt; x; otherwise, it returns x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/min.xml">GLSL min man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="189" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="515" bodyend="519" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="189" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga367fb69e4c2c6d7e70ff80089e88585c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::min</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y)</argsstring>
        <name>min</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns y if y &lt; x; otherwise, it returns x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/min.xml">GLSL min man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="200" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="522" bodyend="525" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="200" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::max</definition>
        <argsstring>(genType x, genType y)</argsstring>
        <name>max</name>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns y if x &lt; y; otherwise, it returns x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer; scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/max.xml">GLSL max man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="209" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="23" bodyend="28" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="209" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gacbec1def83e02f626c4f85b1778b6628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::max</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, T y)</argsstring>
        <name>max</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns y if x &lt; y; otherwise, it returns x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/max.xml">GLSL max man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="220" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="529" bodyend="533" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="220" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gad3ff1bc8441eb9f8bbf8b1626a80abff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::max</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y)</argsstring>
        <name>max</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns y if x &lt; y; otherwise, it returns x.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/max.xml">GLSL max man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="231" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="536" bodyend="539" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="231" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga93bce26c7d80d30a62f5c508f8498a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::clamp</definition>
        <argsstring>(genType x, genType minVal, genType maxVal)</argsstring>
        <name>clamp</name>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>minVal</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>maxVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns min(max(x, minVal), maxVal) for each component in x using the floating-point values minVal and maxVal.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer; scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/clamp.xml">GLSL clamp man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="241" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="543" bodyend="547" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="241" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga8abca57268db1453db7f61e59ecb9a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::clamp</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, T minVal, T maxVal)</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>minVal</declname>
        </param>
        <param>
          <type>T</type>
          <declname>maxVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns min(max(x, minVal), maxVal) for each component in x using the floating-point values minVal and maxVal.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/clamp.xml">GLSL clamp man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="253" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="550" bodyend="554" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="253" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gabe85608c11e93dcb8202d0fd81dd0519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::clamp</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;minVal, vec&lt; L, T, Q &gt; const &amp;maxVal)</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>minVal</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>maxVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns min(max(x, minVal), maxVal) for each component in x using the floating-point values minVal and maxVal.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point or integer scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/clamp.xml">GLSL clamp man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="265" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="557" bodyend="561" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="265" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genTypeT</type>
          </param>
          <param>
            <type>typename genTypeU</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genTypeT</type>
        <definition>GLM_FUNC_DECL genTypeT glm::mix</definition>
        <argsstring>(genTypeT x, genTypeT y, genTypeU a)</argsstring>
        <name>mix</name>
        <param>
          <type>genTypeT</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genTypeT</type>
          <declname>y</declname>
        </param>
        <param>
          <type>genTypeU</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If genTypeU is a floating scalar or vector: Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1].</para>
<para>If genTypeU is a boolean scalar or vector: Selects which vector each returned component comes from. For a component of &apos;a&apos; that is false, the corresponding component of &apos;x&apos; is returned. For a component of &apos;a&apos; that is true, the corresponding component of &apos;y&apos; is returned. Components of &apos;x&apos; and &apos;y&apos; that are not selected are allowed to be invalid floating point values and will have no effect on the results. Thus, this provides different functionality than genType mix(genType x, genType y, genType(a)) where a is a Boolean vector.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/mix.xml">GLSL mix man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to interpolate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to interpolate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>Interpolant.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genTypeT</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point scalar or vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>genTypeU</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point or boolean scalar or vector. It can&apos;t be a vector if it is the length of genTypeT.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="glm_8hpp" kindref="compound">glm/glm.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">float<sp/>a;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref><sp/><ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref><sp/>f;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>g;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>h;</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">glm::vec4<sp/>r<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(g,<sp/>h,<sp/>a);<sp/></highlight><highlight class="comment">//<sp/>Interpolate<sp/>with<sp/>a<sp/>floating-point<sp/>scalar<sp/>two<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>s<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(g,<sp/>h,<sp/>b);<sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>g<sp/>or<sp/>h;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::dvec3</ref><sp/>t<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(<ref refid="group__gtc__constants_1ga4b7956eb6e2fbedfc7cf2e46e85c5139" kindref="member">e</ref>,<sp/>f,<sp/>a);<sp/></highlight><highlight class="comment">//<sp/>Types<sp/>of<sp/>the<sp/>third<sp/>parameter<sp/>is<sp/>not<sp/>required<sp/>to<sp/>match<sp/>with<sp/>the<sp/>first<sp/>and<sp/>the<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="structglm_1_1vec" kindref="compound">glm::vec4</ref><sp/>u<sp/>=<sp/><ref refid="group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4" kindref="member">glm::mix</ref>(g,<sp/>h,<sp/>r);<sp/></highlight><highlight class="comment">//<sp/>Interpolations<sp/>can<sp/>be<sp/>perform<sp/>per<sp/>component<sp/>with<sp/>a<sp/>vector<sp/>for<sp/>the<sp/>last<sp/>parameter.</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="310" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="564" bodyend="567" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="310" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga7fa199857f8209b4f3977e43121db927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::mix</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y, vec&lt; L, U, Q &gt; const &amp;a)</argsstring>
        <name>mix</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, U, Q &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="313" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="576" bodyend="579" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="313" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga1a3be2255208aaf52d8d01a2b35522a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::mix</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x, vec&lt; L, T, Q &gt; const &amp;y, U a)</argsstring>
        <name>mix</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>U</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="316" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="570" bodyend="573" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="316" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::step</definition>
        <argsstring>(genType edge, genType x)</argsstring>
        <name>step</name>
        <param>
          <type>genType</type>
          <declname>edge</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 0.0 if x &lt; edge, otherwise it returns 1.0 for each component of a genType.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/step.xml">GLSL step man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="323" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="583" bodyend="586" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="323" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga56023bea8c5d278ec392d76399944902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::step</definition>
        <argsstring>(T edge, vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>step</name>
        <param>
          <type>T</type>
          <declname>edge</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 0.0 if x &lt; edge, otherwise it returns 1.0.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/step.xml">GLSL step man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="334" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="589" bodyend="592" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="334" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gaf0eae7ec735c1d5656b656a51bd96c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::step</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;edge, vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>step</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>edge</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 0.0 if x &lt; edge, otherwise it returns 1.0.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/step.xml">GLSL step man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="345" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="595" bodyend="598" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="345" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga562edf7eca082cc5b7a0aaf180436daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::smoothstep</definition>
        <argsstring>(genType edge0, genType edge1, genType x)</argsstring>
        <name>smoothstep</name>
        <param>
          <type>genType</type>
          <declname>edge0</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>edge1</declname>
        </param>
        <param>
          <type>genType</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 0.0 if x &lt;= edge0 and 1.0 if x &gt;= edge1 and performs smooth Hermite interpolation between 0 and 1 when edge0 &lt; x &lt; edge1. This is useful in cases where you would want a threshold function with a smooth transition. This is equivalent to: genType t; t = clamp ((x - edge0) / (edge1 - edge0), 0, 1); return t * t * (3 - 2 * t); Results are undefined if edge0 &gt;= edge1.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/smoothstep.xml">GLSL smoothstep man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="362" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="602" bodyend="608" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="362" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga5b14247252b203d6922bcf01e3f98462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::smoothstep</definition>
        <argsstring>(T edge0, T edge1, vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>smoothstep</name>
        <param>
          <type>T</type>
          <declname>edge0</declname>
        </param>
        <param>
          <type>T</type>
          <declname>edge1</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="365" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="611" bodyend="614" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="365" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga35ee22171124aaf6a5b9800e19fe6c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, T, Q &gt; glm::smoothstep</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;edge0, vec&lt; L, T, Q &gt; const &amp;edge1, vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>smoothstep</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>edge0</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>edge1</declname>
        </param>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="368" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="617" bodyend="620" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="368" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga81f85e3c56f1f559034422b357c37e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::isnan</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>isnan</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if x holds a NaN (not a number) representation in the underlying implementation&apos;s set of floating point representations. Returns false otherwise, including for implementations with no NaN representations.</para>
<para>/!\ When using compiler fast math, this function may fail.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/isnan.xml">GLSL isnan man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="385" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="651" bodyend="659" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="385" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga6dfda49bcedffb43ffe5d85307d732fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, bool, Q &gt; glm::isinf</definition>
        <argsstring>(vec&lt; L, T, Q &gt; const &amp;x)</argsstring>
        <name>isinf</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, T, Q &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if x holds a positive infinity or negative infinity representation in the underlying implementation&apos;s set of floating point representations. Returns false otherwise, including for implementations with no infinity representations.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/isinf.xml">GLSL isinf man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="400" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="693" bodyend="701" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="400" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gadc6a536a7bef046c3293d2ccad6d9ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL int</type>
        <definition>GLM_FUNC_QUALIFIER int glm::floatBitsToInt</definition>
        <argsstring>(float const &amp;v)</argsstring>
        <name>floatBitsToInt</name>
        <param>
          <type>float const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a signed integer value representing the encoding of a floating-point value. The floating-point value&apos;s bit-level representation is preserved.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/floatBitsToInt.xml">GLSL floatBitsToInt man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" line="703" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="703" bodyend="714" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="408" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga364f5957b97616256506f02eb5239a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, int, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, int, Q &gt; glm::floatBitsToInt</definition>
        <argsstring>(vec&lt; L, float, Q &gt; const &amp;v)</argsstring>
        <name>floatBitsToInt</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, float, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a signed integer value representing the encoding of a floating-point value. The floatingpoint value&apos;s bit-level representation is preserved.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/floatBitsToInt.xml">GLSL floatBitsToInt man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="420" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="717" bodyend="720" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="420" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga748b4d2819b48d28ca09dc8733488873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL uint</type>
        <definition>GLM_FUNC_QUALIFIER uint glm::floatBitsToUint</definition>
        <argsstring>(float const &amp;v)</argsstring>
        <name>floatBitsToUint</name>
        <param>
          <type>float const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a unsigned integer value representing the encoding of a floating-point value. The floatingpoint value&apos;s bit-level representation is preserved.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/floatBitsToUint.xml">GLSL floatBitsToUint man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" line="722" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="722" bodyend="733" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="428" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga2598f2f024a207bed5fc887d2a81094b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, uint, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, uint, Q &gt; glm::floatBitsToUint</definition>
        <argsstring>(vec&lt; L, float, Q &gt; const &amp;v)</argsstring>
        <name>floatBitsToUint</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, float, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a unsigned integer value representing the encoding of a floating-point value. The floatingpoint value&apos;s bit-level representation is preserved.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/floatBitsToUint.xml">GLSL floatBitsToUint man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="440" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="736" bodyend="739" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="440" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga2650dc57b2148a6ffbce20944fb4d97a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL float</type>
        <definition>GLM_FUNC_QUALIFIER float glm::intBitsToFloat</definition>
        <argsstring>(int const &amp;v)</argsstring>
        <name>intBitsToFloat</name>
        <param>
          <type>int const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a floating-point value corresponding to a signed integer encoding of a floating-point value. If an inf or NaN is passed in, it will not signal, and the resulting floating point value is unspecified. Otherwise, the bit-level representation is preserved.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/intBitsToFloat.xml">GLSL intBitsToFloat man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" line="741" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="741" bodyend="752" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="450" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga6c1e68bb8664424468959c79c98d00d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, float, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, float, Q &gt; glm::intBitsToFloat</definition>
        <argsstring>(vec&lt; L, int, Q &gt; const &amp;v)</argsstring>
        <name>intBitsToFloat</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, int, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a floating-point value corresponding to a signed integer encoding of a floating-point value. If an inf or NaN is passed in, it will not signal, and the resulting floating point value is unspecified. Otherwise, the bit-level representation is preserved.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/intBitsToFloat.xml">GLSL intBitsToFloat man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="464" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="755" bodyend="758" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="464" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga97464ca9ff4267de30ea408f700d4ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_DECL float</type>
        <definition>GLM_FUNC_QUALIFIER float glm::uintBitsToFloat</definition>
        <argsstring>(uint const &amp;v)</argsstring>
        <name>uintBitsToFloat</name>
        <param>
          <type>uint const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a floating-point value corresponding to a unsigned integer encoding of a floating-point value. If an inf or NaN is passed in, it will not signal, and the resulting floating point value is unspecified. Otherwise, the bit-level representation is preserved.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/uintBitsToFloat.xml">GLSL uintBitsToFloat man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" line="760" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="760" bodyend="771" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="474" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gaad4864e1de46077bd71597c742735716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>length_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; L, float, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; L, float, Q &gt; glm::uintBitsToFloat</definition>
        <argsstring>(vec&lt; L, uint, Q &gt; const &amp;v)</argsstring>
        <name>uintBitsToFloat</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; L, uint, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a floating-point value corresponding to a unsigned integer encoding of a floating-point value. If an inf or NaN is passed in, it will not signal, and the resulting floating point value is unspecified. Otherwise, the bit-level representation is preserved.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer between 1 and 4 included that qualify the dimension of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>Value from qualifier enum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/uintBitsToFloat.xml">GLSL uintBitsToFloat man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="488" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="774" bodyend="777" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="488" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1gad0f444d4b81cc53c3b6edf5aa25078c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::fma</definition>
        <argsstring>(genType const &amp;a, genType const &amp;b, genType const &amp;c)</argsstring>
        <name>fma</name>
        <param>
          <type>genType const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>genType const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>genType const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes and returns a * b + c.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/fma.xml">GLSL fma man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="497" column="23" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_common.inl" bodystart="780" bodyend="783" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="497" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga20620e83544d1a988857a3bc4ebe0e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
          <param>
            <type>typename genIType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::frexp</definition>
        <argsstring>(genType const &amp;x, genIType &amp;exp)</argsstring>
        <name>frexp</name>
        <param>
          <type>genType const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genIType &amp;</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Splits x into a floating-point significand in the range [0.5, 1.0) and an integral exponent of two, such that: x = significand * exp(2, exponent)</para>
<para>The significand is returned by the function and the exponent is returned in the parameter exp. For a floating-point value of zero, the significant and exponent are both zero. For a floating-point value that is an infinity or is not a number, the results are undefined.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/frexp.xml">GLSL frexp man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="514" column="23" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="514" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__common_1ga52e319d7289b849ec92055abd4830533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
          <param>
            <type>typename genIType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL genType</type>
        <definition>GLM_FUNC_DECL genType glm::ldexp</definition>
        <argsstring>(genType const &amp;x, genIType const &amp;exp)</argsstring>
        <name>ldexp</name>
        <param>
          <type>genType const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>genIType const &amp;</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a floating-point number from x and the corresponding integral exponent of two in exp, returning: significand * exp(2, exponent)</para>
<para>If this product is too large to be represented in the floating-point type, the result is undefined.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>genType</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating-point scalar or vector types.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/ldexp.xml">GLSL ldexp man page</ulink>; </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" line="528" column="23" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/common.hpp" declline="528" declcolumn="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="common_8hpp" kindref="compound">glm/common.hpp</ref>&gt; to use these core features.</para>
<para>These all operate component-wise. The description is per component. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
