<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="sprite_atlas_8h" kind="file" language="C++">
    <compoundname>spriteAtlas.h</compoundname>
    <includes refid="sprite_8h" local="yes">sprite.h</includes>
    <includes local="no">map</includes>
    <includes local="no">string_view</includes>
    <includedby refid="_inspector_8cpp" local="yes">/Users/cwb/developer/learning/simpleRenderEngine/re/core/Inspector.cpp</includedby>
    <includedby refid="sprite_atlas_8cpp" local="yes">/Users/cwb/developer/learning/simpleRenderEngine/re/core/spriteAtlas.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>sprite.h</label>
        <link refid="sprite_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/spriteAtlas.h</label>
        <link refid="sprite_atlas_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>commonMacro.h</label>
        <link refid="common_macro_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>singleton.h</label>
        <link refid="singleton_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="10">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>cstdio</label>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>glm/glm.hpp</label>
      </node>
      <node id="15">
        <label>map</label>
      </node>
      <node id="9">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="16">
        <label>string_view</label>
      </node>
      <node id="12">
        <label>thread</label>
      </node>
      <node id="6">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/Inspector.cpp</label>
        <link refid="_inspector_8cpp_source"/>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/spriteAtlas.cpp</label>
        <link refid="sprite_atlas_8cpp_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/simpleRenderEngine/re/core/spriteAtlas.h</label>
        <link refid="sprite_atlas_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classre_1_1_sprite_atlas" prot="public">re::SpriteAtlas</innerclass>
    <innernamespace refid="namespacere">re</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>william<sp/>on<sp/>2022/6/1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIMPLERENDERENGINE_SPRITEATLAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLERENDERENGINE_SPRITEATLAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sprite.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacere" kindref="compound">re</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="classre_1_1_sprite_atlas" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classre_1_1_sprite_atlas" kindref="compound">SpriteAtlas</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classre_1_1_sprite_atlas" kindref="compound">~SpriteAtlas</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>sprite<sp/>atlas<sp/>based<sp/>on<sp/>JSON<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;SpriteAtlas&gt;<sp/>create(std::string_view<sp/>jsonFile,<sp/>std::string_view<sp/>imageFile,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipAnchorY<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;SpriteAtlas&gt;<sp/>create(std::string_view<sp/>jsonFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Texture&gt;&amp;<sp/>texture,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipAnchorY<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>sprite<sp/>atlas<sp/>(with<sp/>single<sp/>sprite)<sp/>using<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;SpriteAtlas&gt;<sp/>createSingleSprite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Texture&gt;&amp;<sp/>texture,<sp/>std::string_view<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sprite&quot;</highlight><highlight class="normal">,<sp/>glm::vec2<sp/>pivot<sp/>=<sp/>{<sp/>0.5f,<sp/>0.5f<sp/>},<sp/>glm::ivec2<sp/>pos<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>},<sp/>glm::ivec2<sp/>size<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>});</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classre_1_1_sprite" kindref="compound">Sprite</ref><sp/>get(std::string_view<sp/>name);<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>copy<sp/>of<sp/>a<sp/>Sprite<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>getNames();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>getAtlasName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_atlasName;<sp/>};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Texture&gt;&amp;<sp/>getTexture()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_texture;<sp/>};<sp/></highlight><highlight class="comment">//<sp/>return<sp/>sprite<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classre_1_1_sprite_atlas" kindref="compound">SpriteAtlas</ref>(std::map&lt;std::string,<sp/>Sprite&gt;&amp;&amp;<sp/>sprites,<sp/>std::shared_ptr&lt;Texture&gt;<sp/>texture,<sp/>std::string_view<sp/>Atlas);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_atlasName;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Sprite&gt;<sp/>m_sprites;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Texture&gt;<sp/>m_texture;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SIMPLERENDERENGINE_SPRITEATLAS_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/simpleRenderEngine/re/core/spriteAtlas.h"/>
  </compounddef>
</doxygen>
