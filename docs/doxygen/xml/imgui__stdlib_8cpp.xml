<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__stdlib_8cpp" kind="file" language="C++">
    <compoundname>imgui_stdlib.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__stdlib_8h" local="yes">imgui_stdlib.h</includes>
    <incdepgraph>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/misc/cpp/imgui_stdlib.cpp</label>
        <link refid="imgui__stdlib_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_stdlib.h</label>
        <link refid="imgui__stdlib_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_input_text_callback___user_data" prot="public">InputTextCallback_UserData</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__stdlib_8cpp_1aec3aaff9db65c4f2e344cbbc42fe05fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int InputTextCallback</definition>
        <argsstring>(ImGuiInputTextCallbackData *data)</argsstring>
        <name>InputTextCallback</name>
        <param>
          <type><ref refid="struct_im_gui_input_text_callback_data" kindref="compound">ImGuiInputTextCallbackData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/misc/cpp/imgui_stdlib.cpp" line="21" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/misc/cpp/imgui_stdlib.cpp" bodystart="21" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>wrappers<sp/>for<sp/>C++<sp/>standard<sp/>library<sp/>(STL)<sp/>types<sp/>(std::string,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>also<sp/>an<sp/>example<sp/>of<sp/>how<sp/>you<sp/>may<sp/>wrap<sp/>your<sp/>own<sp/>similar<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compatibility:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>std::string<sp/>support<sp/>is<sp/>only<sp/>guaranteed<sp/>to<sp/>work<sp/>from<sp/>C++11.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>you<sp/>try<sp/>to<sp/>use<sp/>it<sp/>pre-C++11,<sp/>please<sp/>share<sp/>your<sp/>findings<sp/>(w/<sp/>info<sp/>about<sp/>compiler/architecture)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changelog:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>v0.10:<sp/>Initial<sp/>version.<sp/>Added<sp/>InputText()<sp/>/<sp/>InputTextMultiline()<sp/>calls<sp/>with<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="struct_input_text_callback___user_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_input_text_callback___user_data" kindref="compound">InputTextCallback_UserData</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Str;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputTextCallback<sp/><sp/>ChainCallback;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChainCallbackUserData;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>InputTextCallback(<ref refid="struct_im_gui_input_text_callback_data" kindref="compound">ImGuiInputTextCallbackData</ref>*<sp/>data)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_input_text_callback___user_data" kindref="compound">InputTextCallback_UserData</ref>*<sp/>user_data<sp/>=<sp/>(<ref refid="struct_input_text_callback___user_data" kindref="compound">InputTextCallback_UserData</ref>*)data-&gt;UserData;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(data-&gt;EventFlag<sp/>==<sp/>ImGuiInputTextFlags_CallbackResize)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resize<sp/>string<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>for<sp/>some<sp/>reason<sp/>we<sp/>refuse<sp/>the<sp/>new<sp/>length<sp/>(BufTextLen)<sp/>and/or<sp/>capacity<sp/>(BufSize)<sp/>we<sp/>need<sp/>to<sp/>set<sp/>them<sp/>back<sp/>to<sp/>what<sp/>we<sp/>want.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>str<sp/>=<sp/>user_data-&gt;Str;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(data-&gt;Buf<sp/>==<sp/>str-&gt;c_str());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str-&gt;resize(data-&gt;BufTextLen);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;Buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)str-&gt;c_str();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_data-&gt;ChainCallback)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>to<sp/>user<sp/>callback,<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;UserData<sp/>=<sp/>user_data-&gt;ChainCallbackUserData;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user_data-&gt;ChainCallback(data);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>std::string*<sp/>str,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackResize)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_CallbackResize;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_input_text_callback___user_data" kindref="compound">InputTextCallback_UserData</ref><sp/>cb_user_data;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.Str<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.ChainCallback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.ChainCallbackUserData<sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputText(label,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)str-&gt;c_str(),<sp/>str-&gt;capacity()<sp/>+<sp/>1,<sp/>flags,<sp/>InputTextCallback,<sp/>&amp;cb_user_data);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputTextMultiline(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>std::string*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackResize)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_CallbackResize;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_input_text_callback___user_data" kindref="compound">InputTextCallback_UserData</ref><sp/>cb_user_data;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.Str<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.ChainCallback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.ChainCallbackUserData<sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputTextMultiline(label,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)str-&gt;c_str(),<sp/>str-&gt;capacity()<sp/>+<sp/>1,<sp/>size,<sp/>flags,<sp/>InputTextCallback,<sp/>&amp;cb_user_data);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputTextWithHint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hint,<sp/>std::string*<sp/>str,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackResize)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_CallbackResize;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_input_text_callback___user_data" kindref="compound">InputTextCallback_UserData</ref><sp/>cb_user_data;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.Str<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.ChainCallback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>cb_user_data.ChainCallbackUserData<sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputTextWithHint(label,<sp/>hint,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)str-&gt;c_str(),<sp/>str-&gt;capacity()<sp/>+<sp/>1,<sp/>flags,<sp/>InputTextCallback,<sp/>&amp;cb_user_data);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/misc/cpp/imgui_stdlib.cpp"/>
  </compounddef>
</doxygen>
